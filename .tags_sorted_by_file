Bootstrap	application\Bootstrap.php	/^class Bootstrap extends Zend_Application_Bootstrap_Bootstrap$/;"	c
ErrorController	application\controllers\ErrorController.php	/^class ErrorController extends Zend_Controller_Action$/;"	c
bootstrap	application\controllers\ErrorController.php	/^        $bootstrap = $this->getInvokeArg('bootstrap');$/;"	v
errors	application\controllers\ErrorController.php	/^        $errors = $this->_getParam('error_handler');$/;"	v
log	application\controllers\ErrorController.php	/^        $log = $bootstrap->getResource('Log');$/;"	v
priority	application\controllers\ErrorController.php	/^                $priority = Zend_Log::CRIT;$/;"	v
priority	application\controllers\ErrorController.php	/^                $priority = Zend_Log::NOTICE;$/;"	v
IndexController	application\controllers\IndexController.php	/^class IndexController extends Zend_Controller_Action$/;"	c
Zend_Acl	library\Zend\Acl.php	/^class Zend_Acl$/;"	c
allResources	library\Zend\Acl.php	/^            $allResources = array(); \/\/ this might be used later if resource iteration is required$/;"	v
assertion	library\Zend\Acl.php	/^            $assertion = $rule['assert'];$/;"	v
assertionValue	library\Zend\Acl.php	/^            $assertionValue = $assertion->assert($/;"	v
create	library\Zend\Acl.php	/^                                  $create = false)$/;"	v
dfs	library\Zend\Acl.php	/^        $dfs = array($/;"	v
inheritId	library\Zend\Acl.php	/^            $inheritId = $this->get($inherit)->getResourceId();$/;"	v
null	library\Zend\Acl.php	/^        $null = null;$/;"	v
nullRef	library\Zend\Acl.php	/^        $nullRef =& $null;$/;"	v
parentId	library\Zend\Acl.php	/^            $parentId = $this->_resources[$parentId]['parent']->getResourceId();$/;"	v
parentId	library\Zend\Acl.php	/^            $parentId = $this->_resources[$resourceId]['parent']->getResourceId();$/;"	v
privilege	library\Zend\Acl.php	/^                                                $privilege = null, &$dfs = null)$/;"	v
privilege	library\Zend\Acl.php	/^                                            $privilege = null)$/;"	v
privilege	library\Zend\Acl.php	/^                                    $privilege = null)$/;"	v
privileges	library\Zend\Acl.php	/^            $privileges = array($privileges);$/;"	v
privileges	library\Zend\Acl.php	/^            $privileges = array();$/;"	v
resource	library\Zend\Acl.php	/^                $resource = $this->_resources[$resource->getResourceId()]['parent'];$/;"	v
resource	library\Zend\Acl.php	/^            $resource = $this->get($resource);$/;"	v
resource	library\Zend\Acl.php	/^            $resource = new Zend_Acl_Resource($resource);$/;"	v
resourceId	library\Zend\Acl.php	/^            $resourceId     = $this->get($resource)->getResourceId();$/;"	v
resourceId	library\Zend\Acl.php	/^            $resourceId = $resource->getResourceId();$/;"	v
resourceId	library\Zend\Acl.php	/^            $resourceId = $this->get($resource)->getResourceId();$/;"	v
resourceId	library\Zend\Acl.php	/^            $resourceId = (string) $resource;$/;"	v
resourceId	library\Zend\Acl.php	/^        $resourceId = $resource->getResourceId();$/;"	v
resourceParent	library\Zend\Acl.php	/^                $resourceParent = $this->get($resourceParentId);$/;"	v
resourceParent	library\Zend\Acl.php	/^        $resourceParent = null;$/;"	v
resourceParentId	library\Zend\Acl.php	/^                    $resourceParentId = $parent->getResourceId();$/;"	v
resourceParentId	library\Zend\Acl.php	/^                    $resourceParentId = $parent;$/;"	v
resources	library\Zend\Acl.php	/^                $resources = array($resources);$/;"	v
resources	library\Zend\Acl.php	/^                $resources = array(null);$/;"	v
resources	library\Zend\Acl.php	/^            $resources = array();$/;"	v
resourcesRemoved	library\Zend\Acl.php	/^        $resourcesRemoved = array($resourceId);$/;"	v
resourcesTemp	library\Zend\Acl.php	/^            $resourcesTemp = $resources;$/;"	v
role	library\Zend\Acl.php	/^            $role = $this->_getRoleRegistry()->get($role);$/;"	v
role	library\Zend\Acl.php	/^            $role = new Zend_Acl_Role($role);$/;"	v
roleId	library\Zend\Acl.php	/^            $roleId = $role->getRoleId();$/;"	v
roleId	library\Zend\Acl.php	/^            $roleId = $role;$/;"	v
roleId	library\Zend\Acl.php	/^        $roleId = $role->getRoleId();$/;"	v
roles	library\Zend\Acl.php	/^            $roles = array($roles);$/;"	v
roles	library\Zend\Acl.php	/^            $roles = array(null);$/;"	v
roles	library\Zend\Acl.php	/^        $roles = array();$/;"	v
rolesTemp	library\Zend\Acl.php	/^        $rolesTemp = $roles;$/;"	v
rule	library\Zend\Acl.php	/^                $rule = $rules['allPrivileges'];$/;"	v
rule	library\Zend\Acl.php	/^            $rule = $rules['byPrivilegeId'][$privilege];$/;"	v
rules	library\Zend\Acl.php	/^                                        $rules = array($/;"	v
rules	library\Zend\Acl.php	/^                            $rules =& $this->_getRules($resource, $role);$/;"	v
rules	library\Zend\Acl.php	/^                            $rules =& $this->_getRules($resource, $role, true);$/;"	v
rules	library\Zend\Acl.php	/^                        $rules =& $this->_getRules(null, $role, true);$/;"	v
type	library\Zend\Acl.php	/^                                        $type === $rules['byPrivilegeId'][$privilege]['type'])$/;"	v
type	library\Zend\Acl.php	/^                                    $type === $rules['allPrivileges']['type'])$/;"	v
type	library\Zend\Acl.php	/^        $type = strtoupper($type);$/;"	v
visitor	library\Zend\Acl.php	/^                $visitor =& $this->_rules['allResources'];$/;"	v
visitor	library\Zend\Acl.php	/^            $visitor =& $this->_rules['byResourceId'][$resourceId];$/;"	v
privilege	library\Zend\Acl\Assert\Interface.php	/^                           $privilege = null);$/;"	v
Zend_Acl_Exception	library\Zend\Acl\Exception.php	/^class Zend_Acl_Exception extends Zend_Exception$/;"	c
Zend_Acl_Resource	library\Zend\Acl\Resource.php	/^class Zend_Acl_Resource implements Zend_Acl_Resource_Interface$/;"	c
Zend_Acl_Role	library\Zend\Acl\Role.php	/^class Zend_Acl_Role implements Zend_Acl_Role_Interface$/;"	c
Zend_Acl_Role_Registry	library\Zend\Acl\Role\Registry.php	/^class Zend_Acl_Role_Registry$/;"	c
inheritId	library\Zend\Acl\Role\Registry.php	/^            $inheritId = $this->get($inherit)->getRoleId();$/;"	v
inherits	library\Zend\Acl\Role\Registry.php	/^        $inherits = isset($this->_roles[$roleId]['parents'][$inheritId]);$/;"	v
parents	library\Zend\Acl\Role\Registry.php	/^                $parents = array($parents);$/;"	v
roleId	library\Zend\Acl\Role\Registry.php	/^            $roleId     = $this->get($role)->getRoleId();$/;"	v
roleId	library\Zend\Acl\Role\Registry.php	/^            $roleId = $role->getRoleId();$/;"	v
roleId	library\Zend\Acl\Role\Registry.php	/^            $roleId = $this->get($role)->getRoleId();$/;"	v
roleId	library\Zend\Acl\Role\Registry.php	/^            $roleId = (string) $role;$/;"	v
roleId	library\Zend\Acl\Role\Registry.php	/^        $roleId = $role->getRoleId();$/;"	v
roleId	library\Zend\Acl\Role\Registry.php	/^        $roleId = $this->get($role)->getRoleId();$/;"	v
roleParent	library\Zend\Acl\Role\Registry.php	/^                    $roleParent = $this->get($roleParentId);$/;"	v
roleParentId	library\Zend\Acl\Role\Registry.php	/^                        $roleParentId = $parent->getRoleId();$/;"	v
roleParentId	library\Zend\Acl\Role\Registry.php	/^                        $roleParentId = $parent;$/;"	v
roleParents	library\Zend\Acl\Role\Registry.php	/^        $roleParents = array();$/;"	v
Zend_Acl_Role_Registry_Exception	library\Zend\Acl\Role\Registry\Exception.php	/^class Zend_Acl_Role_Registry_Exception extends Zend_Acl_Exception$/;"	c
Zend_Amf_Adobe_Auth	library\Zend\Amf\Adobe\Auth.php	/^class Zend_Amf_Adobe_Auth extends Zend_Amf_Auth_Abstract$/;"	c
id	library\Zend\Amf\Adobe\Auth.php	/^        $id = new stdClass();$/;"	v
user	library\Zend\Amf\Adobe\Auth.php	/^        $user = $this->_users[$this->_username];$/;"	v
xml	library\Zend\Amf\Adobe\Auth.php	/^        $xml = simplexml_load_file($rolefile);$/;"	v
Zend_Amf_Adobe_DbInspector	library\Zend\Amf\Adobe\DbInspector.php	/^class Zend_Amf_Adobe_DbInspector$/;"	c
db	library\Zend\Amf\Adobe\DbInspector.php	/^        $db = $this->_connect($dbType, $dbDescription);$/;"	v
dbDescription	library\Zend\Amf\Adobe\DbInspector.php	/^            $dbDescription = get_object_vars($dbDescription);$/;"	v
Zend_Amf_Adobe_Introspector	library\Zend\Amf\Adobe\Introspector.php	/^class Zend_Amf_Adobe_Introspector$/;"	c
arg	library\Zend\Amf\Adobe\Introspector.php	/^                    $arg = $this->_xml->createElement('argument');$/;"	v
asTypeName	library\Zend\Amf\Adobe\Introspector.php	/^        $asTypeName = $this->_phpTypeToAS($typename);$/;"	v
docBlock	library\Zend\Amf\Adobe\Introspector.php	/^        $docBlock = $prop->getDocComment();$/;"	v
op	library\Zend\Amf\Adobe\Introspector.php	/^                $op = $this->_xml->createElement('operation');$/;"	v
propxml	library\Zend\Amf\Adobe\Introspector.php	/^            $propxml = $this->_xml->createElement('property');$/;"	v
ptype	library\Zend\Amf\Adobe\Introspector.php	/^                    $ptype = $this->_registerType($type);$/;"	v
r	library\Zend\Amf\Adobe\Introspector.php	/^        $r = Zend_Server_Reflection::reflectClass($serviceClass);$/;"	v
rc	library\Zend\Amf\Adobe\Introspector.php	/^        $rc = new Zend_Reflection_Class($typename);$/;"	v
rettype	library\Zend\Amf\Adobe\Introspector.php	/^                $rettype = $this->_registerType($proto->getReturnType());$/;"	v
serv	library\Zend\Amf\Adobe\Introspector.php	/^        $serv = $this->_xml->createElement('service-description');$/;"	v
serviceClass	library\Zend\Amf\Adobe\Introspector.php	/^        $serviceClass = str_replace('.' , '_', $serviceClass);$/;"	v
tag	library\Zend\Amf\Adobe\Introspector.php	/^        $tag = $docBlock->getTag('var');$/;"	v
type	library\Zend\Amf\Adobe\Introspector.php	/^                        $type = $pclass->getName();$/;"	v
type	library\Zend\Amf\Adobe\Introspector.php	/^                    $type = $param->getType();$/;"	v
type	library\Zend\Amf\Adobe\Introspector.php	/^            $type = $this->_registerType($this->_getPropertyType($prop));$/;"	v
typeEl	library\Zend\Amf\Adobe\Introspector.php	/^        $typeEl = $this->_xml->createElement('type');$/;"	v
vars	library\Zend\Amf\Adobe\Introspector.php	/^            $vars = get_class_vars($typename);$/;"	v
Zend_Amf_Exception	library\Zend\Amf\Exception.php	/^class Zend_Amf_Exception extends Zend_Exception$/;"	c
Zend_Amf_Parse_Amf0_Deserializer	library\Zend\Amf\Parse\Amf0\Deserializer.php	/^class Zend_Amf_Parse_Amf0_Deserializer extends Zend_Amf_Parse_Deserializer$/;"	c
array	library\Zend\Amf\Parse\Amf0\Deserializer.php	/^        $array = array();$/;"	v
className	library\Zend\Amf\Parse\Amf0\Deserializer.php	/^        $className = $this->_stream->readUTF();$/;"	v
date	library\Zend\Amf\Parse\Amf0\Deserializer.php	/^        $date   = new Zend_Date($timestamp);$/;"	v
deserializer	library\Zend\Amf\Parse\Amf0\Deserializer.php	/^        $deserializer = new Zend_Amf_Parse_Amf3_Deserializer($this->_stream);$/;"	v
key	library\Zend\Amf\Parse\Amf0\Deserializer.php	/^            $key        = $this->_stream->readUTF();$/;"	v
key	library\Zend\Amf\Parse\Amf0\Deserializer.php	/^        $key = $this->_stream->readInt();$/;"	v
length	library\Zend\Amf\Parse\Amf0\Deserializer.php	/^        $length = $this->_stream->readLong();$/;"	v
loader	library\Zend\Amf\Parse\Amf0\Deserializer.php	/^        $loader = Zend_Amf_Parse_TypeLoader::loadType($className);$/;"	v
object	library\Zend\Amf\Parse\Amf0\Deserializer.php	/^            $object = array();$/;"	v
offset	library\Zend\Amf\Parse\Amf0\Deserializer.php	/^        $offset = $this->_stream->readInt();$/;"	v
properties	library\Zend\Amf\Parse\Amf0\Deserializer.php	/^        $properties = get_object_vars($this->readObject());$/;"	v
returnObject	library\Zend\Amf\Parse\Amf0\Deserializer.php	/^            $returnObject = get_object_vars($returnObject);$/;"	v
returnObject	library\Zend\Amf\Parse\Amf0\Deserializer.php	/^        $returnObject = new $loader();$/;"	v
string	library\Zend\Amf\Parse\Amf0\Deserializer.php	/^        $string = $this->_stream->readLongUTF();$/;"	v
timestamp	library\Zend\Amf\Parse\Amf0\Deserializer.php	/^        $timestamp = floor($this->_stream->readDouble() \/ 1000);$/;"	v
typeMarker	library\Zend\Amf\Parse\Amf0\Deserializer.php	/^            $typeMarker = $this->_stream->readByte();$/;"	v
Zend_Amf_Parse_Amf0_Serializer	library\Zend\Amf\Parse\Amf0\Serializer.php	/^class Zend_Amf_Parse_Amf0_Serializer extends Zend_Amf_Parse_Serializer$/;"	c
className	library\Zend\Amf\Parse\Amf0\Serializer.php	/^                $className = $object->_explicitType;$/;"	v
className	library\Zend\Amf\Parse\Amf0\Serializer.php	/^                $className = $object->getASClassName();$/;"	v
className	library\Zend\Amf\Parse\Amf0\Serializer.php	/^                $className = '';$/;"	v
className	library\Zend\Amf\Parse\Amf0\Serializer.php	/^                $className = Zend_Amf_Parse_TypeLoader::getMappedClassName(get_class($object));$/;"	v
className	library\Zend\Amf\Parse\Amf0\Serializer.php	/^        $className = '';$/;"	v
className	library\Zend\Amf\Parse\Amf0\Serializer.php	/^        $className = get_class($object);$/;"	v
data	library\Zend\Amf\Parse\Amf0\Serializer.php	/^                $data = Zend_Amf_Parse_TypeLoader::handleResource($data);$/;"	v
data	library\Zend\Amf\Parse\Amf0\Serializer.php	/^            $data = &$dataByVal;$/;"	v
dateString	library\Zend\Amf\Parse\Amf0\Serializer.php	/^            $dateString = $data->format('U');$/;"	v
dateString	library\Zend\Amf\Parse\Amf0\Serializer.php	/^            $dateString = $data->toString('U');$/;"	v
i	library\Zend\Amf\Parse\Amf0\Serializer.php	/^                    $i = 0;$/;"	v
length	library\Zend\Amf\Parse\Amf0\Serializer.php	/^        $length = count($array);$/;"	v
markerType	library\Zend\Amf\Parse\Amf0\Serializer.php	/^                             $markerType = Zend_Amf_Constants::AMF0_MIXEDARRAY;$/;"	v
markerType	library\Zend\Amf\Parse\Amf0\Serializer.php	/^                            $markerType = Zend_Amf_Constants::AMF0_OBJECT;$/;"	v
markerType	library\Zend\Amf\Parse\Amf0\Serializer.php	/^                            $markerType = Zend_Amf_Constants::AMF0_TYPEDOBJECT;$/;"	v
markerType	library\Zend\Amf\Parse\Amf0\Serializer.php	/^                        $markerType = Zend_Amf_Constants::AMF0_ARRAY;$/;"	v
markerType	library\Zend\Amf\Parse\Amf0\Serializer.php	/^                        $markerType = Zend_Amf_Constants::AMF0_DATE;$/;"	v
markerType	library\Zend\Amf\Parse\Amf0\Serializer.php	/^                    $markerType = Zend_Amf_Constants::AMF0_BOOLEAN;$/;"	v
markerType	library\Zend\Amf\Parse\Amf0\Serializer.php	/^                    $markerType = Zend_Amf_Constants::AMF0_LONGSTRING;$/;"	v
markerType	library\Zend\Amf\Parse\Amf0\Serializer.php	/^                    $markerType = Zend_Amf_Constants::AMF0_NULL;$/;"	v
markerType	library\Zend\Amf\Parse\Amf0\Serializer.php	/^                    $markerType = Zend_Amf_Constants::AMF0_NUMBER;$/;"	v
markerType	library\Zend\Amf\Parse\Amf0\Serializer.php	/^                    $markerType = Zend_Amf_Constants::AMF0_STRING;$/;"	v
object	library\Zend\Amf\Parse\Amf0\Serializer.php	/^            $object = &$objectByVal;$/;"	v
ref	library\Zend\Amf\Parse\Amf0\Serializer.php	/^            $ref = array_search($object, $this->_referenceObjects, true);$/;"	v
serializer	library\Zend\Amf\Parse\Amf0\Serializer.php	/^        $serializer = new Zend_Amf_Parse_Amf3_Serializer($this->_stream);$/;"	v
value	library\Zend\Amf\Parse\Amf0\Serializer.php	/^                $value = isset($array[$i]) ? $array[$i] : null;$/;"	v
Zend_Amf_Parse_Amf3_Deserializer	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^class Zend_Amf_Parse_Amf3_Deserializer extends Zend_Amf_Parse_Deserializer$/;"	c
arrayReference	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^            $arrayReference = $arrayReference >> 1;$/;"	v
arrayReference	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^        $arrayReference = $arrayReference >>1;$/;"	v
arrayReference	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^        $arrayReference = $this->readInteger();$/;"	v
className	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^                $className     = $this->_referenceDefinitions[$ref]['className'];$/;"	v
className	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^                $className     = $this->readString();$/;"	v
count	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^                        $count = $traitsInfo; \/\/ Number of properties in the list$/;"	v
count	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^        $count        = 1;$/;"	v
data	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^        $data = array();$/;"	v
dateReference	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^            $dateReference = $dateReference >> 1;$/;"	v
dateReference	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^        $dateReference = $this->readInteger();$/;"	v
dateTime	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^        $dateTime  = new Zend_Date($timestamp);$/;"	v
encoding	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^                $encoding      = $this->_referenceDefinitions[$ref]['encoding'];$/;"	v
encoding	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^                $encoding      = $traitsInfo & 0x03;$/;"	v
intReference	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^            $intReference   = $this->_stream->readByte();$/;"	v
intReference	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^        $intReference = $this->_stream->readByte();$/;"	v
key	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^            $key = $this->readString();$/;"	v
key	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^        $key = $this->readString();$/;"	v
length	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^        $length = $stringReference >> 1;$/;"	v
length	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^        $length = $xmlReference >> 1;$/;"	v
properties	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^            $properties = array(); \/\/ clear value$/;"	v
property	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^                        $property = $this->readString();$/;"	v
propertyNames	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^                $propertyNames = $this->_referenceDefinitions[$ref]['propertyNames'];$/;"	v
propertyNames	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^                $propertyNames = array();$/;"	v
ref	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^                $ref = $traitsInfo;$/;"	v
ref	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^            $ref = $traitsInfo;$/;"	v
result	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^        $result       = 0;$/;"	v
returnObject	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^                    $returnObject = new $loader();$/;"	v
returnObject	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^                $returnObject = $returnObject->externalizedData;$/;"	v
returnObject	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^                $returnObject = get_object_vars($returnObject);$/;"	v
returnObject	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^                $returnObject = new stdClass();$/;"	v
returnObject	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^            $returnObject = $this->_referenceObjects[$ref];$/;"	v
storedClass	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^            $storedClass = ($traitsInfo & 0x01) == 0;$/;"	v
storedObject	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^        $storedObject = ($traitsInfo & 0x01)==0;$/;"	v
string	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^            $string = "";$/;"	v
string	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^            $string = $this->_stream->readBytes($length);$/;"	v
string	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^        $string = $this->_stream->readBytes($length);$/;"	v
stringReference	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^            $stringReference = $stringReference >> 1;$/;"	v
stringReference	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^        $stringReference = $this->readInteger();$/;"	v
timestamp	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^        $timestamp = floor($this->_stream->readDouble() \/ 1000);$/;"	v
traitsInfo	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^                $traitsInfo    = $traitsInfo >> 2;$/;"	v
traitsInfo	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^            $traitsInfo  = $traitsInfo >> 1;$/;"	v
traitsInfo	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^        $traitsInfo   = $this->readInteger();$/;"	v
traitsInfo	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^        $traitsInfo   = $traitsInfo >> 1;$/;"	v
typeMarker	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^            $typeMarker = $this->_stream->readByte();$/;"	v
xmlReference	library\Zend\Amf\Parse\Amf3\Deserializer.php	/^        $xmlReference = $this->readInteger();$/;"	v
Zend_Amf_Parse_Amf3_Serializer	library\Zend\Amf\Parse\Amf3\Serializer.php	/^class Zend_Amf_Parse_Amf3_Serializer extends Zend_Amf_Parse_Serializer$/;"	c
className	library\Zend\Amf\Parse\Amf3\Serializer.php	/^                $className = $object->_explicitType;$/;"	v
className	library\Zend\Amf\Parse\Amf3\Serializer.php	/^                $className = $object->getASClassName();$/;"	v
className	library\Zend\Amf\Parse\Amf3\Serializer.php	/^                $className = '';$/;"	v
className	library\Zend\Amf\Parse\Amf3\Serializer.php	/^                $className = get_class($object);$/;"	v
className	library\Zend\Amf\Parse\Amf3\Serializer.php	/^        $className = '';$/;"	v
data	library\Zend\Amf\Parse\Amf3\Serializer.php	/^                $data = Zend_Amf_Parse_TypeLoader::handleResource($data);$/;"	v
data	library\Zend\Amf\Parse\Amf3\Serializer.php	/^            $data = $data->getData();$/;"	v
data	library\Zend\Amf\Parse\Amf3\Serializer.php	/^            $data = &$dataByVal;$/;"	v
dateString	library\Zend\Amf\Parse\Amf3\Serializer.php	/^            $dateString = $date->format('U') * 1000;$/;"	v
dateString	library\Zend\Amf\Parse\Amf3\Serializer.php	/^            $dateString = $date->toString('U') * 1000;$/;"	v
encoding	library\Zend\Amf\Parse\Amf3\Serializer.php	/^                $encoding = Zend_Amf_Constants::ET_DYNAMIC;$/;"	v
encoding	library\Zend\Amf\Parse\Amf3\Serializer.php	/^                $encoding = Zend_Amf_Constants::ET_PROPLIST;$/;"	v
encoding	library\Zend\Amf\Parse\Amf3\Serializer.php	/^            $encoding      = $this->_referenceDefinitions[$className]['encoding'];$/;"	v
hash	library\Zend\Amf\Parse\Amf3\Serializer.php	/^        $hash = spl_object_hash($object);$/;"	v
id	library\Zend\Amf\Parse\Amf3\Serializer.php	/^        $id     = ($length << 1) | 0x01;$/;"	v
len	library\Zend\Amf\Parse\Amf3\Serializer.php	/^        $len = strlen($string);$/;"	v
length	library\Zend\Amf\Parse\Amf3\Serializer.php	/^        $length = count($numeric);$/;"	v
markerType	library\Zend\Amf\Parse\Amf3\Serializer.php	/^                        $markerType = Zend_Amf_Constants::AMF3_BOOLEAN_FALSE;$/;"	v
markerType	library\Zend\Amf\Parse\Amf3\Serializer.php	/^                        $markerType = Zend_Amf_Constants::AMF3_BOOLEAN_TRUE;$/;"	v
markerType	library\Zend\Amf\Parse\Amf3\Serializer.php	/^                        $markerType = Zend_Amf_Constants::AMF3_BYTEARRAY;$/;"	v
markerType	library\Zend\Amf\Parse\Amf3\Serializer.php	/^                        $markerType = Zend_Amf_Constants::AMF3_DATE;$/;"	v
markerType	library\Zend\Amf\Parse\Amf3\Serializer.php	/^                        $markerType = Zend_Amf_Constants::AMF3_INTEGER;$/;"	v
markerType	library\Zend\Amf\Parse\Amf3\Serializer.php	/^                        $markerType = Zend_Amf_Constants::AMF3_NUMBER;$/;"	v
markerType	library\Zend\Amf\Parse\Amf3\Serializer.php	/^                        $markerType = Zend_Amf_Constants::AMF3_OBJECT;$/;"	v
markerType	library\Zend\Amf\Parse\Amf3\Serializer.php	/^                        $markerType = Zend_Amf_Constants::AMF3_XMLSTRING;$/;"	v
markerType	library\Zend\Amf\Parse\Amf3\Serializer.php	/^                    $markerType = Zend_Amf_Constants::AMF3_ARRAY;$/;"	v
markerType	library\Zend\Amf\Parse\Amf3\Serializer.php	/^                    $markerType = Zend_Amf_Constants::AMF3_NULL;$/;"	v
markerType	library\Zend\Amf\Parse\Amf3\Serializer.php	/^                    $markerType = Zend_Amf_Constants::AMF3_NUMBER;$/;"	v
markerType	library\Zend\Amf\Parse\Amf3\Serializer.php	/^                    $markerType = Zend_Amf_Constants::AMF3_STRING;$/;"	v
numeric	library\Zend\Amf\Parse\Amf3\Serializer.php	/^        $numeric = array();$/;"	v
object	library\Zend\Amf\Parse\Amf3\Serializer.php	/^            $object = &$objectByVal;$/;"	v
propertyNames	library\Zend\Amf\Parse\Amf3\Serializer.php	/^            $propertyNames = $this->_referenceDefinitions[$className]['propertyNames'];$/;"	v
propertyNames	library\Zend\Amf\Parse\Amf3\Serializer.php	/^            $propertyNames = array();$/;"	v
ref	library\Zend\Amf\Parse\Amf3\Serializer.php	/^        $ref = array_key_exists($hash, $this->_referenceObjects) $/;"	v
ref	library\Zend\Amf\Parse\Amf3\Serializer.php	/^        $ref = array_key_exists($string, $this->_referenceStrings) $/;"	v
ref	library\Zend\Amf\Parse\Amf3\Serializer.php	/^        $ref = strlen($string) << 1 | 0x01;$/;"	v
string	library\Zend\Amf\Parse\Amf3\Serializer.php	/^        $string  = array();$/;"	v
traitsInfo	library\Zend\Amf\Parse\Amf3\Serializer.php	/^            $traitsInfo    = $this->_referenceDefinitions[$className]['id'];$/;"	v
traitsInfo	library\Zend\Amf\Parse\Amf3\Serializer.php	/^            $traitsInfo = ($traitsInfo << 2) | 0x01;$/;"	v
traitsInfo	library\Zend\Amf\Parse\Amf3\Serializer.php	/^            $traitsInfo = Zend_Amf_Constants::AMF3_OBJECT_ENCODING;$/;"	v
writeTraits	library\Zend\Amf\Parse\Amf3\Serializer.php	/^            $writeTraits = false;$/;"	v
writeTraits	library\Zend\Amf\Parse\Amf3\Serializer.php	/^        $writeTraits = true;$/;"	v
xml	library\Zend\Amf\Parse\Amf3\Serializer.php	/^            $xml = $xml->asXML();$/;"	v
xml	library\Zend\Amf\Parse\Amf3\Serializer.php	/^            $xml = $xml->saveXml();$/;"	v
Zend_Amf_Parse_InputStream	library\Zend\Amf\Parse\InputStream.php	/^class Zend_Amf_Parse_InputStream extends Zend_Amf_Util_BinaryStream$/;"	c
Zend_Amf_Parse_OutputStream	library\Zend\Amf\Parse\OutputStream.php	/^class Zend_Amf_Parse_OutputStream extends Zend_Amf_Util_BinaryStream$/;"	c
Zend_Amf_Parse_Resource_MysqlResult	library\Zend\Amf\Parse\Resource\MysqlResult.php	/^class Zend_Amf_Parse_Resource_MysqlResult$/;"	c
fieldcnt	library\Zend\Amf\Parse\Resource\MysqlResult.php	/^        $fieldcnt = mysql_num_fields($resource);$/;"	v
fields_transform	library\Zend\Amf\Parse\Resource\MysqlResult.php	/^        $fields_transform = array();$/;"	v
result	library\Zend\Amf\Parse\Resource\MysqlResult.php	/^        $result = array();$/;"	v
type	library\Zend\Amf\Parse\Resource\MysqlResult.php	/^            $type = mysql_field_type($resource, $i);$/;"	v
Zend_Amf_Parse_Resource_MysqliResult	library\Zend\Amf\Parse\Resource\MysqliResult.php	/^class Zend_Amf_Parse_Resource_MysqliResult$/;"	c
fieldcnt	library\Zend\Amf\Parse\Resource\MysqliResult.php	/^        $fieldcnt = mysqli_num_fields($resource);$/;"	v
fields_transform	library\Zend\Amf\Parse\Resource\MysqliResult.php	/^        $fields_transform = array();$/;"	v
finfo	library\Zend\Amf\Parse\Resource\MysqliResult.php	/^            $finfo = mysqli_fetch_field_direct($resource, $i);$/;"	v
result	library\Zend\Amf\Parse\Resource\MysqliResult.php	/^        $result = array();$/;"	v
Zend_Amf_Parse_Resource_Stream	library\Zend\Amf\Parse\Resource\Stream.php	/^class Zend_Amf_Parse_Resource_Stream$/;"	c
class	library\Zend\Amf\Parse\TypeLoader.php	/^            $class = str_replace('.', '_', $className);$/;"	v
class	library\Zend\Amf\Parse\TypeLoader.php	/^        $class    = self::getMappedClassName($className);$/;"	v
mappedName	library\Zend\Amf\Parse\TypeLoader.php	/^        $mappedName = array_search($className, array_flip(self::$classMap));$/;"	v
mappedName	library\Zend\Amf\Parse\TypeLoader.php	/^        $mappedName = array_search($className, self::$classMap);$/;"	v
parser	library\Zend\Amf\Parse\TypeLoader.php	/^                $parser = new $resclass();$/;"	v
resclass	library\Zend\Amf\Parse\TypeLoader.php	/^                $resclass = self::getResourceParser($resource);$/;"	v
resource	library\Zend\Amf\Parse\TypeLoader.php	/^                    $resource = $parser->parse($resource);$/;"	v
type	library\Zend\Amf\Parse\TypeLoader.php	/^            $type = preg_replace("\/[^A-Za-z0-9_]\/", " ", get_resource_type($resource));$/;"	v
type	library\Zend\Amf\Parse\TypeLoader.php	/^            $type = str_replace(" ","", ucwords($type));$/;"	v
Zend_Amf_Request	library\Zend\Amf\Request.php	/^class Zend_Amf_Request$/;"	c
body	library\Zend\Amf\Request.php	/^        $body = new Zend_Amf_Value_MessageBody($targetURI, $responseURI, $data);$/;"	v
bodyCount	library\Zend\Amf\Request.php	/^        $bodyCount = $stream->readInt();$/;"	v
clientVersion	library\Zend\Amf\Request.php	/^        $clientVersion = $stream->readUnsignedShort();$/;"	v
data	library\Zend\Amf\Request.php	/^                $data = $data[0];$/;"	v
data	library\Zend\Amf\Request.php	/^            $data = $this->_deserializer->readTypeMarker();$/;"	v
header	library\Zend\Amf\Request.php	/^        $header = new Zend_Amf_Value_MessageHeader($name, $mustRead, $data, $length);$/;"	v
headerCount	library\Zend\Amf\Request.php	/^        $headerCount    = $stream->readInt();$/;"	v
length	library\Zend\Amf\Request.php	/^        $length      = $this->_inputStream->readLong();$/;"	v
length	library\Zend\Amf\Request.php	/^        $length   = $this->_inputStream->readLong();$/;"	v
mustRead	library\Zend\Amf\Request.php	/^        $mustRead = (bool)$this->_inputStream->readByte();$/;"	v
name	library\Zend\Amf\Request.php	/^        $name     = $this->_inputStream->readUTF();$/;"	v
responseURI	library\Zend\Amf\Request.php	/^        $responseURI = $this->_inputStream->readUTF();$/;"	v
targetURI	library\Zend\Amf\Request.php	/^        $targetURI   = $this->_inputStream->readUTF();$/;"	v
Zend_Amf_Request_Http	library\Zend\Amf\Request\Http.php	/^class Zend_Amf_Request_Http extends Zend_Amf_Request$/;"	c
amfRequest	library\Zend\Amf\Request\Http.php	/^        $amfRequest = file_get_contents('php:\/\/input');$/;"	v
Zend_Amf_Response	library\Zend\Amf\Response.php	/^class Zend_Amf_Response$/;"	c
bodyCount	library\Zend\Amf\Response.php	/^        $bodyCount = count($this->_bodies);$/;"	v
bodyData	library\Zend\Amf\Response.php	/^            $bodyData = $body->getData();$/;"	v
headerCount	library\Zend\Amf\Response.php	/^        $headerCount = count($this->_headers);$/;"	v
markerType	library\Zend\Amf\Response.php	/^            $markerType = ($this->_objectEncoding == Zend_Amf_Constants::AMF0_OBJECT_ENCODING) ? null : Zend_Amf_Constants::AMF0_AMF3;$/;"	v
objectEncoding	library\Zend\Amf\Response.php	/^        $objectEncoding = $this->_objectEncoding;$/;"	v
placeholder	library\Zend\Amf\Response.php	/^                $placeholder = null;$/;"	v
serializer	library\Zend\Amf\Response.php	/^            $serializer = new Zend_Amf_Parse_Amf0_Serializer($stream);$/;"	v
Zend_Amf_Response_Http	library\Zend\Amf\Response\Http.php	/^class Zend_Amf_Response_Http extends Zend_Amf_Response$/;"	c
Zend_Amf_Server	library\Zend\Amf\Server.php	/^class Zend_Amf_Server implements Zend_Server_Interface$/;"	c
argv	library\Zend\Amf\Server.php	/^            $argv = array_slice(func_get_args(), 2);$/;"	v
argv	library\Zend\Amf\Server.php	/^        $argv = $info->getInvokeArguments();$/;"	v
argv	library\Zend\Amf\Server.php	/^        $argv = null;$/;"	v
auth	library\Zend\Amf\Server.php	/^        $auth = Zend_Auth::getInstance();$/;"	v
call	library\Zend\Amf\Server.php	/^            $call = array($object, "initAcl");$/;"	v
class	library\Zend\Amf\Server.php	/^            $class = $info->getDeclaringClass()->getName();$/;"	v
class	library\Zend\Amf\Server.php	/^            $class = is_object($object)?get_class($object):$object;$/;"	v
class	library\Zend\Amf\Server.php	/^            $class = null;$/;"	v
className	library\Zend\Amf\Server.php	/^                $className = str_replace('.', '_', $source);$/;"	v
currentID	library\Zend\Amf\Server.php	/^           $currentID = session_id();$/;"	v
data	library\Zend\Amf\Server.php	/^                $data = explode(':', base64_decode($message->body));$/;"	v
error	library\Zend\Amf\Server.php	/^                $error = $this->_errorMessage($/;"	v
error	library\Zend\Amf\Server.php	/^        $error   = false;$/;"	v
func	library\Zend\Amf\Server.php	/^            $func = $info->getName();$/;"	v
function	library\Zend\Amf\Server.php	/^        $function = (array) $function;$/;"	v
headers	library\Zend\Amf\Server.php	/^        $headers = $request->getAmfHeaders();$/;"	v
info	library\Zend\Amf\Server.php	/^        $info = $this->_table[$qualifiedName];$/;"	v
joint	library\Zend\Amf\Server.php	/^                       $joint = "&";$/;"	v
joint	library\Zend\Amf\Server.php	/^           $joint = "?";$/;"	v
message	library\Zend\Amf\Server.php	/^                        $message = $body->getData();$/;"	v
message	library\Zend\Amf\Server.php	/^                        $message = '';$/;"	v
method	library\Zend\Amf\Server.php	/^                                $method = substr(strrchr($targetURI, '.'), 1);$/;"	v
method	library\Zend\Amf\Server.php	/^                            $method = substr(strrchr($targetURI, '.'), 1);$/;"	v
name	library\Zend\Amf\Server.php	/^                    $name = $method->getName();$/;"	v
name	library\Zend\Amf\Server.php	/^                    $name = empty($ns) ? $name : $ns . '.' . $name;$/;"	v
name	library\Zend\Amf\Server.php	/^                $name = $dispatchable->getName();$/;"	v
name	library\Zend\Amf\Server.php	/^                $name = empty($ns) ? $name : $ns . '.' . $name;$/;"	v
namespace	library\Zend\Amf\Server.php	/^            $namespace = is_object($class) ? get_class($class) : $class;$/;"	v
newBody	library\Zend\Amf\Server.php	/^                $newBody     = new Zend_Amf_Value_MessageBody($responseURI, null, $error);$/;"	v
newBody	library\Zend\Amf\Server.php	/^            $newBody     = new Zend_Amf_Value_MessageBody($responseURI, null, $return);$/;"	v
ns	library\Zend\Amf\Server.php	/^                    $ns   = $method->getNamespace();$/;"	v
ns	library\Zend\Amf\Server.php	/^                $ns   = $dispatchable->getNamespace();$/;"	v
object	library\Zend\Amf\Server.php	/^                    $object = $info->getDeclaringClass()->newInstance();$/;"	v
objectEncoding	library\Zend\Amf\Server.php	/^        $objectEncoding = $request->getObjectEncoding();$/;"	v
params	library\Zend\Amf\Server.php	/^            $params = array_merge($params, $argv);$/;"	v
password	library\Zend\Amf\Server.php	/^                $password = isset($data[1])?$data[1]:"";$/;"	v
qualifiedName	library\Zend\Amf\Server.php	/^        $qualifiedName = empty($source) ? $method : $source . '.' . $method;$/;"	v
request	library\Zend\Amf\Server.php	/^            $request = $this->getRequest();$/;"	v
request	library\Zend\Amf\Server.php	/^            $request = new $request();$/;"	v
response	library\Zend\Amf\Server.php	/^            $response = $this->getResponse();$/;"	v
response	library\Zend\Amf\Server.php	/^            $response = new $response();$/;"	v
response	library\Zend\Amf\Server.php	/^        $response = $this->getResponse();$/;"	v
responseType	library\Zend\Amf\Server.php	/^                $responseType = Zend_AMF_Constants::RESULT_METHOD;$/;"	v
responseType	library\Zend\Amf\Server.php	/^                $responseType = Zend_AMF_Constants::STATUS_METHOD;$/;"	v
responseURI	library\Zend\Amf\Server.php	/^                $responseURI = $body->getResponseURI() . $responseType;$/;"	v
responseURI	library\Zend\Amf\Server.php	/^            $responseURI = $body->getResponseURI() . $responseType;$/;"	v
result	library\Zend\Amf\Server.php	/^        $result = $auth->authenticate($this->_auth);$/;"	v
return	library\Zend\Amf\Server.php	/^                                $return = $this->_dispatch($method, $body->getData(), $source);$/;"	v
return	library\Zend\Amf\Server.php	/^                                $return = $this->_dispatch($targetURI, $body->getData());$/;"	v
return	library\Zend\Amf\Server.php	/^                            $return = $this->_dispatch($method, $body->getData(), $source);$/;"	v
return	library\Zend\Amf\Server.php	/^                            $return = $this->_dispatch($targetURI, $body->getData());$/;"	v
return	library\Zend\Amf\Server.php	/^                            $return = $this->_loadCommandMessage($message);$/;"	v
return	library\Zend\Amf\Server.php	/^                            $return = new Zend_Amf_Value_Messaging_AcknowledgeMessage($message);$/;"	v
return	library\Zend\Amf\Server.php	/^                $return = $info->invokeArgs($object, $params);$/;"	v
return	library\Zend\Amf\Server.php	/^                $return = $this->_errorMessage($objectEncoding, $message,$/;"	v
return	library\Zend\Amf\Server.php	/^                $return = call_user_func_array(array($class, $info->getName()), $params);$/;"	v
return	library\Zend\Amf\Server.php	/^                $return = new Zend_Amf_Value_Messaging_AcknowledgeMessage($message);$/;"	v
return	library\Zend\Amf\Server.php	/^                $return = new Zend_Amf_Value_Messaging_ErrorMessage ( $message );$/;"	v
return	library\Zend\Amf\Server.php	/^            $return = call_user_func_array($func, $params);$/;"	v
return	library\Zend\Amf\Server.php	/^        $return = null;$/;"	v
role	library\Zend\Amf\Server.php	/^                $role = Zend_Amf_Constants::GUEST_ROLE;$/;"	v
role	library\Zend\Amf\Server.php	/^            $role = $auth->getIdentity()->role;$/;"	v
sessionHeader	library\Zend\Amf\Server.php	/^            $sessionHeader = new Zend_Amf_Value_MessageHeader(Zend_Amf_Constants::URL_APPEND_HEADER, false, $sessionValue);$/;"	v
sessionValue	library\Zend\Amf\Server.php	/^            $sessionValue = $joint . $this->_sessionName . "=" . $currentID;$/;"	v
source	library\Zend\Amf\Server.php	/^                            $source = substr($targetURI, 0, strrpos($targetURI, '.'));$/;"	v
source	library\Zend\Amf\Server.php	/^                        $source = substr($targetURI, 0, strrpos($targetURI, '.'));$/;"	v
source	library\Zend\Amf\Server.php	/^                $source = $mapped;$/;"	v
table	library\Zend\Amf\Server.php	/^        $table = array();$/;"	v
targetURI	library\Zend\Amf\Server.php	/^                            $targetURI = $body->getTargetURI();$/;"	v
targetURI	library\Zend\Amf\Server.php	/^                        $targetURI = $body->getTargetURI();$/;"	v
userid	library\Zend\Amf\Server.php	/^                $userid = $data[0];$/;"	v
Zend_Amf_Server_Exception	library\Zend\Amf\Server\Exception.php	/^class Zend_Amf_Server_Exception extends Zend_Amf_Exception$/;"	c
Zend_Amf_Util_BinaryStream	library\Zend\Amf\Util\BinaryStream.php	/^class Zend_Amf_Util_BinaryStream$/;"	c
byte1	library\Zend\Amf\Util\BinaryStream.php	/^        $byte1 = $this->readByte();$/;"	v
byte2	library\Zend\Amf\Util\BinaryStream.php	/^        $byte2 = $this->readByte();$/;"	v
bytes	library\Zend\Amf\Util\BinaryStream.php	/^            $bytes = strrev($bytes);$/;"	v
bytes	library\Zend\Amf\Util\BinaryStream.php	/^        $bytes = substr($this->_stream, $this->_needle, $length);$/;"	v
bytes	library\Zend\Amf\Util\BinaryStream.php	/^        $bytes = substr($this->_stream, $this->_needle, 8);$/;"	v
double	library\Zend\Amf\Util\BinaryStream.php	/^        $double = unpack('dflt', $bytes);$/;"	v
length	library\Zend\Amf\Util\BinaryStream.php	/^        $length = $this->readInt();$/;"	v
length	library\Zend\Amf\Util\BinaryStream.php	/^        $length = $this->readLong();$/;"	v
stream	library\Zend\Amf\Util\BinaryStream.php	/^            $stream = strrev($stream);$/;"	v
stream	library\Zend\Amf\Util\BinaryStream.php	/^        $stream = pack('d', $stream);$/;"	v
Zend_Amf_Value_ByteArray	library\Zend\Amf\Value\ByteArray.php	/^class Zend_Amf_Value_ByteArray$/;"	c
Zend_Amf_Value_MessageBody	library\Zend\Amf\Value\MessageBody.php	/^class Zend_Amf_Value_MessageBody$/;"	c
responseUri	library\Zend\Amf\Value\MessageBody.php	/^            $responseUri = '';$/;"	v
targetUri	library\Zend\Amf\Value\MessageBody.php	/^            $targetUri = '';$/;"	v
Zend_Amf_Value_MessageHeader	library\Zend\Amf\Value\MessageHeader.php	/^class Zend_Amf_Value_MessageHeader$/;"	c
Zend_Amf_Value_Messaging_AbstractMessage	library\Zend\Amf\Value\Messaging\AbstractMessage.php	/^class Zend_Amf_Value_Messaging_AbstractMessage$/;"	c
Zend_Amf_Value_Messaging_AcknowledgeMessage	library\Zend\Amf\Value\Messaging\AcknowledgeMessage.php	/^class Zend_Amf_Value_Messaging_AcknowledgeMessage extends Zend_Amf_Value_Messaging_AsyncMessage$/;"	c
Zend_Amf_Value_Messaging_ArrayCollection	library\Zend\Amf\Value\Messaging\ArrayCollection.php	/^class Zend_Amf_Value_Messaging_ArrayCollection$/;"	c
Zend_Amf_Value_Messaging_AsyncMessage	library\Zend\Amf\Value\Messaging\AsyncMessage.php	/^class Zend_Amf_Value_Messaging_AsyncMessage extends Zend_Amf_Value_Messaging_AbstractMessage$/;"	c
Zend_Amf_Value_Messaging_CommandMessage	library\Zend\Amf\Value\Messaging\CommandMessage.php	/^class Zend_Amf_Value_Messaging_CommandMessage extends Zend_Amf_Value_Messaging_AsyncMessage$/;"	c
Zend_Amf_Value_Messaging_ErrorMessage	library\Zend\Amf\Value\Messaging\ErrorMessage.php	/^class Zend_Amf_Value_Messaging_ErrorMessage extends Zend_Amf_Value_Messaging_AcknowledgeMessage$/;"	c
Zend_Amf_Value_Messaging_RemotingMessage	library\Zend\Amf\Value\Messaging\RemotingMessage.php	/^class Zend_Amf_Value_Messaging_RemotingMessage extends Zend_Amf_Value_Messaging_AbstractMessage$/;"	c
Zend_Amf_Value_TraitsInfo	library\Zend\Amf\Value\TraitsInfo.php	/^class Zend_Amf_Value_TraitsInfo$/;"	c
Zend_Application	library\Zend\Application.php	/^class Zend_Application$/;"	c
_options	library\Zend\Application.php	/^                    $_options = $this->mergeOptions($_options, $this->_loadConfig($tmp));$/;"	v
_options	library\Zend\Application.php	/^                $_options = array();$/;"	v
autoloader	library\Zend\Application.php	/^            $autoloader = $this->getAutoloader();$/;"	v
autoloader	library\Zend\Application.php	/^        $autoloader = $this->getAutoloader();$/;"	v
bootstrap	library\Zend\Application.php	/^            $bootstrap = $options['bootstrap'];$/;"	v
class	library\Zend\Application.php	/^                    $class = $bootstrap['class'];$/;"	v
class	library\Zend\Application.php	/^                $class = null;$/;"	v
class	library\Zend\Application.php	/^            $class = 'Bootstrap';$/;"	v
config	library\Zend\Application.php	/^                $config = include $file;$/;"	v
config	library\Zend\Application.php	/^                $config = new Zend_Config_Ini($file, $environment);$/;"	v
config	library\Zend\Application.php	/^                $config = new Zend_Config_Json($file, $environment);$/;"	v
config	library\Zend\Application.php	/^                $config = new Zend_Config_Xml($file, $environment);$/;"	v
config	library\Zend\Application.php	/^                $config = new Zend_Config_Yaml($file, $environment);$/;"	v
environment	library\Zend\Application.php	/^        $environment = $this->getEnvironment();$/;"	v
key	library\Zend\Application.php	/^            $key = empty($prefix) ? $key : $prefix . $key;$/;"	v
options	library\Zend\Application.php	/^                $options = $options->toArray();$/;"	v
options	library\Zend\Application.php	/^                $options = $this->_loadConfig($options);$/;"	v
options	library\Zend\Application.php	/^                $options = $this->mergeOptions($_options, $options);$/;"	v
options	library\Zend\Application.php	/^                $options = $this->mergeOptions($this->_loadConfig($options['config']), $options);$/;"	v
options	library\Zend\Application.php	/^            $options = $this->getOptions();$/;"	v
options	library\Zend\Application.php	/^            $options = array_change_key_case($options, CASE_LOWER);$/;"	v
options	library\Zend\Application.php	/^        $options = array_change_key_case($options, CASE_LOWER);$/;"	v
path	library\Zend\Application.php	/^                $path  = $bootstrap['path'];$/;"	v
path	library\Zend\Application.php	/^        $path = implode(PATH_SEPARATOR, $paths);$/;"	v
suffix	library\Zend\Application.php	/^        $suffix      = ($suffix === 'dist')$/;"	v
suffix	library\Zend\Application.php	/^        $suffix      = pathinfo($file, PATHINFO_EXTENSION);$/;"	v
zfPath	library\Zend\Application.php	/^                $zfPath    = $options['autoloaderzfpath'];$/;"	v
zfVersion	library\Zend\Application.php	/^                $zfVersion = !empty($options['autoloaderzfversion'])$/;"	v
Zend_Application_Bootstrap_Bootstrap	library\Zend\Application\Bootstrap\Bootstrap.php	/^class Zend_Application_Bootstrap_Bootstrap$/;"	c
default	library\Zend\Application\Bootstrap\Bootstrap.php	/^        $default = $front->getDefaultModule();$/;"	v
front	library\Zend\Application\Bootstrap\Bootstrap.php	/^        $front   = $this->getResource('FrontController');$/;"	v
path	library\Zend\Application\Bootstrap\Bootstrap.php	/^            $path = $r->getFileName();$/;"	v
r	library\Zend\Application\Bootstrap\Bootstrap.php	/^            $r    = new ReflectionClass($this);$/;"	v
response	library\Zend\Application\Bootstrap\Bootstrap.php	/^        $response = $front->dispatch();$/;"	v
class	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^                $class        = new ReflectionObject($this);$/;"	v
classMethods	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^                $classMethods = $class->getMethods();$/;"	v
className	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^            $className  = get_class($resource);$/;"	v
className	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^        $className = $this->getPluginLoader()->load(strtolower($resource), false);$/;"	v
classResources	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^        $classResources = $this->getClassResources();$/;"	v
container	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^        $container = $this->getContainer();$/;"	v
instance	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^                $instance = new $plugin($spec);$/;"	v
instance	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^        $instance = new $className($options);$/;"	v
loader	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^            $loader     = $this->getPluginLoader();$/;"	v
method	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^            $method = $classResources[$resourceName];$/;"	v
method	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^            $method = 'set' . strtolower($key);$/;"	v
methodNames	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^                $methodNames  = array();$/;"	v
methodNames	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^                $methodNames = get_class_methods($this);$/;"	v
methods	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^        $methods = get_class_methods($this);$/;"	v
options	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^            $options = $this->getOptions();$/;"	v
options	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^            $options = array($/;"	v
options	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^            $options = array_change_key_case($options, CASE_LOWER);$/;"	v
options	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^        $options   = (array) $options;$/;"	v
options	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^        $options = $application->getOptions();$/;"	v
options	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^        $options = array_change_key_case($options, CASE_LOWER);$/;"	v
plugin	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^            $plugin = $this->getPluginResource($resource);$/;"	v
pluginLoader	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^            $pluginLoader = $this->getPluginLoader();$/;"	v
pluginName	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^                    $pluginName = substr($className, strlen($prefix));$/;"	v
pluginName	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^                    $pluginName = trim($pluginName, '_');$/;"	v
pluginName	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^                $pluginName = $this->_resolvePluginResourceName($instance);$/;"	v
pluginName	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^                $pluginName = $this->_resolvePluginResourceName($spec);$/;"	v
pluginName	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^            $pluginName = $className;$/;"	v
pluginName	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^            $pluginName = $resource->_explicitType;$/;"	v
pluginName	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^            $pluginName = $this->_resolvePluginResourceName($resource);$/;"	v
pluginName	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^        $pluginName = strtolower($pluginName);$/;"	v
resource	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^                $resource = $resourceName;$/;"	v
resource	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^            $resource = $instance->_explicitType;$/;"	v
resource	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^            $resource = strtolower($resource);$/;"	v
resource	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^            $resource = substr($method, 9);$/;"	v
resource	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^        $resource  = strtolower($name);$/;"	v
resource	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^        $resource = strtolower($resource);$/;"	v
resourceName	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^                $resourceName = $this->_loadPluginResource($resource, $this->_pluginResources[$resource]);$/;"	v
resourceName	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^        $resourceName = strtolower($resource);$/;"	v
resources	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^        $resources = $this->getClassResources();$/;"	v
return	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^            $return = $plugin->init();$/;"	v
return	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^            $return = $this->$method();$/;"	v
spec	library\Zend\Application\Bootstrap\BootstrapAbstract.php	/^                $spec = (array) $spec;$/;"	v
Zend_Application_Bootstrap_Exception	library\Zend\Application\Bootstrap\Exception.php	/^class Zend_Application_Bootstrap_Exception extends Zend_Application_Exception$/;"	c
Zend_Application_Exception	library\Zend\Application\Exception.php	/^class Zend_Application_Exception extends Zend_Exception$/;"	c
Zend_Application_Module_Autoloader	library\Zend\Application\Module\Autoloader.php	/^class Zend_Application_Module_Autoloader extends Zend_Loader_Autoloader_Resource$/;"	c
basePath	library\Zend\Application\Module\Autoloader.php	/^        $basePath = $this->getBasePath();$/;"	v
class	library\Zend\Application\Module\Bootstrap.php	/^            $class = get_class($this);$/;"	v
key	library\Zend\Application\Module\Bootstrap.php	/^        $key = strtolower($this->getModuleName());$/;"	v
prefix	library\Zend\Application\Module\Bootstrap.php	/^                $prefix = $class;$/;"	v
prefix	library\Zend\Application\Module\Bootstrap.php	/^                $prefix = $matches[1];$/;"	v
Zend_Application_Resource_Cachemanager	library\Zend\Application\Resource\Cachemanager.php	/^class Zend_Application_Resource_Cachemanager extends Zend_Application_Resource_ResourceAbstract$/;"	c
options	library\Zend\Application\Resource\Cachemanager.php	/^            $options = $this->getOptions();$/;"	v
Zend_Application_Resource_Db	library\Zend\Application\Resource\Db.php	/^class Zend_Application_Resource_Db extends Zend_Application_Resource_ResourceAbstract$/;"	c
bootstrap	library\Zend\Application\Resource\Db.php	/^            $bootstrap = $this->getBootstrap();$/;"	v
cacheManager	library\Zend\Application\Resource\Db.php	/^                $cacheManager = $bootstrap->bootstrap('CacheManager')$/;"	v
metadataCache	library\Zend\Application\Resource\Db.php	/^                    $metadataCache = $cacheManager->getCache($cache);$/;"	v
metadataCache	library\Zend\Application\Resource\Db.php	/^            $metadataCache = $cache;$/;"	v
metadataCache	library\Zend\Application\Resource\Db.php	/^        $metadataCache = null;$/;"	v
Zend_Application_Resource_Dojo	library\Zend\Application\Resource\Dojo.php	/^class Zend_Application_Resource_Dojo$/;"	c
view	library\Zend\Application\Resource\Dojo.php	/^            $view = $this->getBootstrap()->view;$/;"	v
Zend_Application_Resource_Exception	library\Zend\Application\Resource\Exception.php	/^class Zend_Application_Resource_Exception extends Zend_Application_Exception$/;"	c
Zend_Application_Resource_Frontcontroller	library\Zend\Application\Resource\Frontcontroller.php	/^class Zend_Application_Resource_Frontcontroller extends Zend_Application_Resource_ResourceAbstract$/;"	c
front	library\Zend\Application\Resource\Frontcontroller.php	/^        $front = $this->getFrontController();$/;"	v
plugin	library\Zend\Application\Resource\Frontcontroller.php	/^                        $plugin = new $pluginClass();$/;"	v
pluginClass	library\Zend\Application\Resource\Frontcontroller.php	/^                                $pluginClass = $pluginClass['class'];$/;"	v
pluginClass	library\Zend\Application\Resource\Frontcontroller.php	/^                            $pluginClass = array_change_key_case($pluginClass, CASE_LOWER);$/;"	v
stackIndex	library\Zend\Application\Resource\Frontcontroller.php	/^                                    $stackIndex = $pluginClass['stackindex'];$/;"	v
stackIndex	library\Zend\Application\Resource\Frontcontroller.php	/^                        $stackIndex = null;$/;"	v
Zend_Application_Resource_Layout	library\Zend\Application\Resource\Layout.php	/^class Zend_Application_Resource_Layout$/;"	c
Zend_Application_Resource_Locale	library\Zend\Application\Resource\Locale.php	/^class Zend_Application_Resource_Locale$/;"	c
bootstrap	library\Zend\Application\Resource\Locale.php	/^            $bootstrap = $this->getBootstrap();$/;"	v
cache	library\Zend\Application\Resource\Locale.php	/^                    $cache = $cacheManager->getCache($cache);$/;"	v
cacheManager	library\Zend\Application\Resource\Locale.php	/^                $cacheManager = $bootstrap->bootstrap('CacheManager')$/;"	v
key	library\Zend\Application\Resource\Locale.php	/^            $key = (isset($options['registry_key']) && !is_numeric($options['registry_key']))$/;"	v
options	library\Zend\Application\Resource\Locale.php	/^            $options = $this->getOptions();$/;"	v
Zend_Application_Resource_Log	library\Zend\Application\Resource\Log.php	/^class Zend_Application_Resource_Log$/;"	c
log	library\Zend\Application\Resource\Log.php	/^            $log = Zend_Log::factory($options);$/;"	v
options	library\Zend\Application\Resource\Log.php	/^            $options = $this->getOptions();$/;"	v
Zend_Application_Resource_Mail	library\Zend\Application\Resource\Mail.php	/^class Zend_Application_Resource_Mail extends Zend_Application_Resource_ResourceAbstract$/;"	c
key	library\Zend\Application\Resource\Mail.php	/^        $key = strtolower('default' . $type);$/;"	v
method	library\Zend\Application\Resource\Mail.php	/^            $method = array('Zend_Mail', 'setDefault' . ucfirst($type));$/;"	v
options	library\Zend\Application\Resource\Mail.php	/^            $options = $this->getOptions();$/;"	v
options	library\Zend\Application\Resource\Mail.php	/^        $options = $this->getOptions();$/;"	v
transport	library\Zend\Application\Resource\Mail.php	/^                $transport = new $transportName($options);$/;"	v
transport	library\Zend\Application\Resource\Mail.php	/^                $transport = new $transportName($options['host'], $options);$/;"	v
transportName	library\Zend\Application\Resource\Mail.php	/^                $transportName = 'Zend_Mail_Transport_' . $transportName;$/;"	v
transportName	library\Zend\Application\Resource\Mail.php	/^            $transportName = ucfirst(strtolower($transportName));$/;"	v
transportName	library\Zend\Application\Resource\Mail.php	/^        $transportName = $options['type'];$/;"	v
Zend_Application_Resource_Modules	library\Zend\Application\Resource\Modules.php	/^class Zend_Application_Resource_Modules extends Zend_Application_Resource_ResourceAbstract$/;"	c
bootstrap	library\Zend\Application\Resource\Modules.php	/^        $bootstrap = $this->getBootstrap();$/;"	v
bootstrapClass	library\Zend\Application\Resource\Modules.php	/^                            $bootstrapClass = 'Bootstrap';$/;"	v
bootstrapClass	library\Zend\Application\Resource\Modules.php	/^            $bootstrapClass = $this->_formatModuleName($module) . '_Bootstrap';$/;"	v
bootstrapPath	library\Zend\Application\Resource\Modules.php	/^                $bootstrapPath  = dirname($moduleDirectory) . '\/Bootstrap.php';$/;"	v
bootstraps	library\Zend\Application\Resource\Modules.php	/^        $bootstraps = array();$/;"	v
curBootstrapClass	library\Zend\Application\Resource\Modules.php	/^        $curBootstrapClass = get_class($bootstrap);$/;"	v
default	library\Zend\Application\Resource\Modules.php	/^        $default = $front->getDefaultModule();$/;"	v
eMsgTpl	library\Zend\Application\Resource\Modules.php	/^                    $eMsgTpl = 'Bootstrap file found for module "%s" but bootstrap class "%s" not found';$/;"	v
front	library\Zend\Application\Resource\Modules.php	/^        $front = $bootstrap->getResource('FrontController');$/;"	v
moduleBootstrap	library\Zend\Application\Resource\Modules.php	/^            $moduleBootstrap = new $bootstrapClass($bootstrap);$/;"	v
modules	library\Zend\Application\Resource\Modules.php	/^        $modules = $front->getControllerDirectory();$/;"	v
name	library\Zend\Application\Resource\Modules.php	/^        $name = str_replace(' ', '', $name);$/;"	v
name	library\Zend\Application\Resource\Modules.php	/^        $name = str_replace(array('-', '.'), ' ', $name);$/;"	v
name	library\Zend\Application\Resource\Modules.php	/^        $name = strtolower($name);$/;"	v
name	library\Zend\Application\Resource\Modules.php	/^        $name = ucwords($name);$/;"	v
out	library\Zend\Application\Resource\Modules.php	/^        $out = new ArrayObject(array(), ArrayObject::ARRAY_AS_PROPS);$/;"	v
Zend_Application_Resource_Multidb	library\Zend\Application\Resource\Multidb.php	/^class Zend_Application_Resource_Multidb extends Zend_Application_Resource_ResourceAbstract$/;"	c
adapter	library\Zend\Application\Resource\Multidb.php	/^            $adapter = $params['adapter'];$/;"	v
bootstrap	library\Zend\Application\Resource\Multidb.php	/^            $bootstrap = $this->getBootstrap();$/;"	v
cacheManager	library\Zend\Application\Resource\Multidb.php	/^                $cacheManager = $bootstrap->bootstrap('CacheManager')$/;"	v
db	library\Zend\Application\Resource\Multidb.php	/^            $db = $this->getDb($db);$/;"	v
default	library\Zend\Application\Resource\Multidb.php	/^            $default = (int) ($/;"	v
metadataCache	library\Zend\Application\Resource\Multidb.php	/^                    $metadataCache = $cacheManager->getCache($cache);$/;"	v
metadataCache	library\Zend\Application\Resource\Multidb.php	/^            $metadataCache = $cache;$/;"	v
metadataCache	library\Zend\Application\Resource\Multidb.php	/^        $metadataCache = null;$/;"	v
options	library\Zend\Application\Resource\Multidb.php	/^        $options = $this->getOptions();$/;"	v
Zend_Application_Resource_Navigation	library\Zend\Application\Resource\Navigation.php	/^class Zend_Application_Resource_Navigation$/;"	c
key	library\Zend\Application\Resource\Navigation.php	/^            $key = self::DEFAULT_REGISTRY_KEY;$/;"	v
key	library\Zend\Application\Resource\Navigation.php	/^           $key = $options['storage']['registry']['key'];$/;"	v
options	library\Zend\Application\Resource\Navigation.php	/^            $options = $this->getOptions();$/;"	v
options	library\Zend\Application\Resource\Navigation.php	/^        $options = $this->getOptions();$/;"	v
pages	library\Zend\Application\Resource\Navigation.php	/^            $pages = isset($options['pages']) ? $options['pages'] : array();$/;"	v
view	library\Zend\Application\Resource\Navigation.php	/^        $view = $this->getBootstrap()->view;$/;"	v
method	library\Zend\Application\Resource\ResourceAbstract.php	/^            $method = 'set' . strtolower($key);$/;"	v
Zend_Application_Resource_Router	library\Zend\Application\Resource\Router.php	/^class Zend_Application_Resource_Router$/;"	c
bootstrap	library\Zend\Application\Resource\Router.php	/^            $bootstrap = $this->getBootstrap();$/;"	v
options	library\Zend\Application\Resource\Router.php	/^            $options = $this->getOptions();$/;"	v
Zend_Application_Resource_Session	library\Zend\Application\Resource\Session.php	/^class Zend_Application_Resource_Session extends Zend_Application_Resource_ResourceAbstract$/;"	c
options	library\Zend\Application\Resource\Session.php	/^                    $options = $this->_saveHandler['options'];$/;"	v
options	library\Zend\Application\Resource\Session.php	/^                $options = array();$/;"	v
options	library\Zend\Application\Resource\Session.php	/^        $options = array_change_key_case($this->getOptions(), CASE_LOWER);$/;"	v
Zend_Application_Resource_Translate	library\Zend\Application\Resource\Translate.php	/^class Zend_Application_Resource_Translate extends Zend_Application_Resource_ResourceAbstract$/;"	c
bootstrap	library\Zend\Application\Resource\Translate.php	/^                $bootstrap = $this->getBootstrap();$/;"	v
cacheManager	library\Zend\Application\Resource\Translate.php	/^                    $cacheManager = $bootstrap->bootstrap('CacheManager')$/;"	v
key	library\Zend\Application\Resource\Translate.php	/^            $key = (isset($options['registry_key']) && !is_numeric($options['registry_key']))$/;"	v
options	library\Zend\Application\Resource\Translate.php	/^            $options = $this->getOptions();$/;"	v
translate	library\Zend\Application\Resource\Translate.php	/^                $translate = Zend_Registry::get($key);$/;"	v
Zend_Application_Resource_UserAgent	library\Zend\Application\Resource\Useragent.php	/^class Zend_Application_Resource_UserAgent extends Zend_Application_Resource_ResourceAbstract$/;"	c
bootstrap	library\Zend\Application\Resource\Useragent.php	/^        $bootstrap = $this->getBootstrap();$/;"	v
options	library\Zend\Application\Resource\Useragent.php	/^			$options = $this->getOptions();$/;"	v
userAgent	library\Zend\Application\Resource\Useragent.php	/^		$userAgent = $this->getUserAgent();$/;"	v
view	library\Zend\Application\Resource\Useragent.php	/^            $view = $bootstrap->getResource('view');$/;"	v
Zend_Application_Resource_View	library\Zend\Application\Resource\View.php	/^class Zend_Application_Resource_View extends Zend_Application_Resource_ResourceAbstract$/;"	c
options	library\Zend\Application\Resource\View.php	/^            $options = $this->getOptions();$/;"	v
view	library\Zend\Application\Resource\View.php	/^        $view = $this->getView();$/;"	v
viewRenderer	library\Zend\Application\Resource\View.php	/^        $viewRenderer = Zend_Controller_Action_HelperBroker::getStaticHelper('viewRenderer');$/;"	v
Zend_Auth	library\Zend\Auth.php	/^class Zend_Auth$/;"	c
result	library\Zend\Auth.php	/^        $result = $adapter->authenticate();$/;"	v
storage	library\Zend\Auth.php	/^        $storage = $this->getStorage();$/;"	v
Zend_Auth_Adapter_DbTable	library\Zend\Auth\Adapter\DbTable.php	/^class Zend_Auth_Adapter_DbTable implements Zend_Auth_Adapter_Interface$/;"	c
authResult	library\Zend\Auth\Adapter\DbTable.php	/^        $authResult = $this->_authenticateValidateResult(array_shift($resultIdentities));$/;"	v
availableColumns	library\Zend\Auth\Adapter\DbTable.php	/^            $availableColumns = array_keys($this->_resultRow);$/;"	v
credentialColumn	library\Zend\Auth\Adapter\DbTable.php	/^                                $credentialColumn = null, $credentialTreatment = null)$/;"	v
credentialExpression	library\Zend\Auth\Adapter\DbTable.php	/^        $credentialExpression = new Zend_Db_Expr($/;"	v
dbSelect	library\Zend\Auth\Adapter\DbTable.php	/^        $dbSelect = $this->_authenticateCreateSelect();$/;"	v
dbSelect	library\Zend\Auth\Adapter\DbTable.php	/^        $dbSelect = clone $this->getDbSelect();$/;"	v
exception	library\Zend\Auth\Adapter\DbTable.php	/^            $exception = 'A credential column must be supplied for the Zend_Auth_Adapter_DbTable authentication adapter.';$/;"	v
exception	library\Zend\Auth\Adapter\DbTable.php	/^            $exception = 'A credential value was not provided prior to authentication with Zend_Auth_Adapter_DbTable.';$/;"	v
exception	library\Zend\Auth\Adapter\DbTable.php	/^            $exception = 'A table must be supplied for the Zend_Auth_Adapter_DbTable authentication adapter.';$/;"	v
exception	library\Zend\Auth\Adapter\DbTable.php	/^            $exception = 'A value for the identity was not provided prior to authentication with Zend_Auth_Adapter_DbTable.';$/;"	v
exception	library\Zend\Auth\Adapter\DbTable.php	/^            $exception = 'An identity column must be supplied for the Zend_Auth_Adapter_DbTable authentication adapter.';$/;"	v
exception	library\Zend\Auth\Adapter\DbTable.php	/^        $exception = null;$/;"	v
omitColumns	library\Zend\Auth\Adapter\DbTable.php	/^            $omitColumns = (array) $omitColumns;$/;"	v
origDbFetchMode	library\Zend\Auth\Adapter\DbTable.php	/^                $origDbFetchMode = $this->_zendDb->getFetchMode();$/;"	v
resultIdentities	library\Zend\Auth\Adapter\DbTable.php	/^            $resultIdentities = $this->_zendDb->fetchAll($dbSelect);$/;"	v
resultIdentities	library\Zend\Auth\Adapter\DbTable.php	/^            $resultIdentities = $validIdentities;$/;"	v
resultIdentities	library\Zend\Auth\Adapter\DbTable.php	/^        $resultIdentities = $this->_authenticateQuerySelect($dbSelect);$/;"	v
returnObject	library\Zend\Auth\Adapter\DbTable.php	/^        $returnObject = new stdClass();$/;"	v
validIdentities	library\Zend\Auth\Adapter\DbTable.php	/^            $validIdentities = array ();$/;"	v
zendAuthCredentialMatchColumn	library\Zend\Auth\Adapter\DbTable.php	/^            $zendAuthCredentialMatchColumn = $this->_zendDb->foldCase('zend_auth_credential_match');$/;"	v
zendAuthCredentialMatchColumn	library\Zend\Auth\Adapter\DbTable.php	/^        $zendAuthCredentialMatchColumn = $this->_zendDb->foldCase('zend_auth_credential_match');$/;"	v
Zend_Auth_Adapter_Digest	library\Zend\Auth\Adapter\Digest.php	/^class Zend_Auth_Adapter_Digest implements Zend_Auth_Adapter_Interface$/;"	c
id	library\Zend\Auth\Adapter\Digest.php	/^        $id       = "$this->_username:$this->_realm";$/;"	v
idLength	library\Zend\Auth\Adapter\Digest.php	/^        $idLength = strlen($id);$/;"	v
methodName	library\Zend\Auth\Adapter\Digest.php	/^                $methodName = 'set' . ucfirst($option);$/;"	v
options	library\Zend\Auth\Adapter\Digest.php	/^        $options = array('filename', 'realm', 'username', 'password');$/;"	v
optionsRequired	library\Zend\Auth\Adapter\Digest.php	/^        $optionsRequired = array('filename', 'realm', 'username', 'password');$/;"	v
result	library\Zend\Auth\Adapter\Digest.php	/^        $result = 0;$/;"	v
result	library\Zend\Auth\Adapter\Digest.php	/^        $result = array($/;"	v
Zend_Auth_Adapter_Exception	library\Zend\Auth\Adapter\Exception.php	/^class Zend_Auth_Adapter_Exception extends Zend_Auth_Exception$/;"	c
Zend_Auth_Adapter_Http	library\Zend\Auth\Adapter\Http.php	/^class Zend_Auth_Adapter_Http implements Zend_Auth_Adapter_Interface$/;"	c
a2	library\Zend\Auth\Adapter\Http.php	/^                $a2 = $this->_request->getMethod() . ':' . $data['uri'];$/;"	v
auth	library\Zend\Auth\Adapter\Http.php	/^        $auth = base64_decode($auth);$/;"	v
auth	library\Zend\Auth\Adapter\Http.php	/^        $auth = substr($header, strlen('Basic '));$/;"	v
authHeader	library\Zend\Auth\Adapter\Http.php	/^        $authHeader = $this->_request->getHeader($getHeader);$/;"	v
cUri	library\Zend\Auth\Adapter\Http.php	/^        $cUri = @parse_url($temp[1]);$/;"	v
clientScheme	library\Zend\Auth\Adapter\Http.php	/^        $clientScheme = strtolower($clientScheme);$/;"	v
creds	library\Zend\Auth\Adapter\Http.php	/^        $creds = array_filter(explode(':', $auth));$/;"	v
data	library\Zend\Auth\Adapter\Http.php	/^        $data = $this->_parseDigestAuth($header);$/;"	v
data	library\Zend\Auth\Adapter\Http.php	/^        $data = array();$/;"	v
digest	library\Zend\Auth\Adapter\Http.php	/^        $digest  = hash('md5', $ha1 . ':' . $message);$/;"	v
getHeader	library\Zend\Auth\Adapter\Http.php	/^            $getHeader = 'Authorization';$/;"	v
getHeader	library\Zend\Auth\Adapter\Http.php	/^            $getHeader = 'Proxy-Authorization';$/;"	v
ha1	library\Zend\Auth\Adapter\Http.php	/^            $ha1 = hash('md5', $ha1 . ':' . $data['nonce'] . ':' . $data['cnonce']);$/;"	v
ha1	library\Zend\Auth\Adapter\Http.php	/^        $ha1 = $this->_digestResolver->resolve($data['username'], $data['realm']);$/;"	v
ha2	library\Zend\Auth\Adapter\Http.php	/^        $ha2 = hash('md5', $a2);$/;"	v
headerName	library\Zend\Auth\Adapter\Http.php	/^            $headerName = 'Proxy-Authenticate';$/;"	v
headerName	library\Zend\Auth\Adapter\Http.php	/^            $headerName = 'WWW-Authenticate';$/;"	v
identity	library\Zend\Auth\Adapter\Http.php	/^            $identity = array('username'=>$creds[0], 'realm'=>$this->_realm);$/;"	v
identity	library\Zend\Auth\Adapter\Http.php	/^            $identity = array('username'=>$data['username'], 'realm'=>$data['realm']);$/;"	v
message	library\Zend\Auth\Adapter\Http.php	/^        $message = $data['nonce'] . ':' . $data['nc'] . ':' . $data['cnonce'] . ':' . $data['qop'] . ':' . $ha2;$/;"	v
nonce	library\Zend\Auth\Adapter\Http.php	/^        $nonce = hash('md5', $timeout . ':' . $this->_request->getServer('HTTP_USER_AGENT') . ':' . __CLASS__);$/;"	v
password	library\Zend\Auth\Adapter\Http.php	/^        $password = $this->_basicResolver->resolve($creds[0], $this->_realm);$/;"	v
rUri	library\Zend\Auth\Adapter\Http.php	/^        $rUri = @parse_url($this->_request->getRequestUri());$/;"	v
result	library\Zend\Auth\Adapter\Http.php	/^                $result = $this->_basicAuth($authHeader);$/;"	v
result	library\Zend\Auth\Adapter\Http.php	/^                $result = $this->_digestAuth($authHeader);$/;"	v
result	library\Zend\Auth\Adapter\Http.php	/^        $result = 0;$/;"	v
ret	library\Zend\Auth\Adapter\Http.php	/^            $ret = preg_match('\/opaque="([^"]+)"\/', $header, $temp);$/;"	v
ret	library\Zend\Auth\Adapter\Http.php	/^        $ret = preg_match('\/algorithm="?(' . $this->_algo . ')"?\/', $header, $temp);$/;"	v
ret	library\Zend\Auth\Adapter\Http.php	/^        $ret = preg_match('\/cnonce="([^"]+)"\/', $header, $temp);$/;"	v
ret	library\Zend\Auth\Adapter\Http.php	/^        $ret = preg_match('\/nc="?([0-9A-Fa-f]{8})"?\/', $header, $temp);$/;"	v
ret	library\Zend\Auth\Adapter\Http.php	/^        $ret = preg_match('\/nonce="([^"]+)"\/', $header, $temp);$/;"	v
ret	library\Zend\Auth\Adapter\Http.php	/^        $ret = preg_match('\/qop="?(' . implode('|', $this->_supportedQops) . ')"?\/', $header, $temp);$/;"	v
ret	library\Zend\Auth\Adapter\Http.php	/^        $ret = preg_match('\/realm="([^"]+)"\/', $header, $temp);$/;"	v
ret	library\Zend\Auth\Adapter\Http.php	/^        $ret = preg_match('\/response="([^"]+)"\/', $header, $temp);$/;"	v
ret	library\Zend\Auth\Adapter\Http.php	/^        $ret = preg_match('\/uri="([^"]+)"\/', $header, $temp);$/;"	v
ret	library\Zend\Auth\Adapter\Http.php	/^        $ret = preg_match('\/username="([^"]+)"\/', $header, $temp);$/;"	v
schemes	library\Zend\Auth\Adapter\Http.php	/^        $schemes = explode(' ', $config['accept_schemes']);$/;"	v
statusCode	library\Zend\Auth\Adapter\Http.php	/^            $statusCode = 401;$/;"	v
statusCode	library\Zend\Auth\Adapter\Http.php	/^            $statusCode = 407;$/;"	v
temp	library\Zend\Auth\Adapter\Http.php	/^            $temp = null;$/;"	v
temp	library\Zend\Auth\Adapter\Http.php	/^        $temp = null;$/;"	v
timeout	library\Zend\Auth\Adapter\Http.php	/^        $timeout = ceil(time() \/ $this->_nonceTimeout) * $this->_nonceTimeout;$/;"	v
wwwauth	library\Zend\Auth\Adapter\Http.php	/^        $wwwauth = 'Digest realm="' . $this->_realm . '", '$/;"	v
Zend_Auth_Adapter_Http_Resolver_Exception	library\Zend\Auth\Adapter\Http\Resolver\Exception.php	/^class Zend_Auth_Adapter_Http_Resolver_Exception extends Zend_Auth_Exception$/;"	c
Zend_Auth_Adapter_Http_Resolver_File	library\Zend\Auth\Adapter\Http\Resolver\File.php	/^class Zend_Auth_Adapter_Http_Resolver_File implements Zend_Auth_Adapter_Http_Resolver_Interface$/;"	c
fp	library\Zend\Auth\Adapter\Http\Resolver\File.php	/^        $fp = @fopen($this->_file, 'r');$/;"	v
password	library\Zend\Auth\Adapter\Http\Resolver\File.php	/^                $password = $line[2];$/;"	v
Zend_Auth_Adapter_InfoCard	library\Zend\Auth\Adapter\InfoCard.php	/^class Zend_Auth_Adapter_InfoCard implements Zend_Auth_Adapter_Interface$/;"	c
claims	library\Zend\Auth\Adapter\InfoCard.php	/^            $claims = $this->_infoCard->process($this->getXmlToken());$/;"	v
Zend_Auth_Adapter_Ldap	library\Zend\Auth\Adapter\Ldap.php	/^class Zend_Auth_Adapter_Ldap implements Zend_Auth_Adapter_Interface$/;"	c
adapterOptions	library\Zend\Auth\Adapter\Ldap.php	/^            $adapterOptions = $this->_prepareOptions($ldap, $options);$/;"	v
adapterOptions	library\Zend\Auth\Adapter\Ldap.php	/^        $adapterOptions = array($/;"	v
canonicalName	library\Zend\Auth\Adapter\Ldap.php	/^                $canonicalName = $ldap->getCanonicalAccountName($username);$/;"	v
code	library\Zend\Auth\Adapter\Ldap.php	/^                    $code = Zend_Auth_Result::FAILURE_CREDENTIAL_INVALID;$/;"	v
code	library\Zend\Auth\Adapter\Ldap.php	/^                    $code = Zend_Auth_Result::FAILURE_IDENTITY_NOT_FOUND;$/;"	v
code	library\Zend\Auth\Adapter\Ldap.php	/^            $code = Zend_Auth_Result::FAILURE_CREDENTIAL_INVALID;$/;"	v
code	library\Zend\Auth\Adapter\Ldap.php	/^            $code = Zend_Auth_Result::FAILURE_IDENTITY_NOT_FOUND;$/;"	v
code	library\Zend\Auth\Adapter\Ldap.php	/^        $code = Zend_Auth_Result::FAILURE;$/;"	v
dn	library\Zend\Auth\Adapter\Ldap.php	/^                $dn = $ldap->getCanonicalAccountName($canonicalName, Zend_Ldap::ACCTNAME_FORM_DN);$/;"	v
dname	library\Zend\Auth\Adapter\Ldap.php	/^                $dname = $this->_getAuthorityName();$/;"	v
dname	library\Zend\Auth\Adapter\Ldap.php	/^            $dname = '';$/;"	v
entry	library\Zend\Auth\Adapter\Ldap.php	/^        $entry = $this->getLdap()->getEntry($this->_authenticatedDn, $returnAttribs, true);$/;"	v
err	library\Zend\Auth\Adapter\Ldap.php	/^                $err = $zle->getCode();$/;"	v
failedAuthorities	library\Zend\Auth\Adapter\Ldap.php	/^        $failedAuthorities = array();$/;"	v
group	library\Zend\Auth\Adapter\Ldap.php	/^            $group = $group->addAnd($groupFilter);$/;"	v
group	library\Zend\Auth\Adapter\Ldap.php	/^        $group = Zend_Ldap_Filter::andFilter($groupName, $membership);$/;"	v
groupFilter	library\Zend\Auth\Adapter\Ldap.php	/^        $groupFilter = $adapterOptions['groupFilter'];$/;"	v
groupName	library\Zend\Auth\Adapter\Ldap.php	/^        $groupName = Zend_Ldap_Filter::equals($adapterOptions['groupAttr'], $adapterOptions['group']);$/;"	v
groupResult	library\Zend\Auth\Adapter\Ldap.php	/^                $groupResult = $this->_checkGroupMembership($ldap, $canonicalName, $dn, $adapterOptions);$/;"	v
ldap	library\Zend\Auth\Adapter\Ldap.php	/^        $ldap = $this->getLdap();$/;"	v
line	library\Zend\Auth\Adapter\Ldap.php	/^                    $line = $zle->getLine();$/;"	v
membership	library\Zend\Auth\Adapter\Ldap.php	/^        $membership = Zend_Ldap_Filter::equals($adapterOptions['memberAttr'], $user);$/;"	v
messages	library\Zend\Auth\Adapter\Ldap.php	/^        $messages = array();$/;"	v
msg	library\Zend\Auth\Adapter\Ldap.php	/^        $msg = isset($messages[1]) ? $messages[1] : $messages[0];$/;"	v
name	library\Zend\Auth\Adapter\Ldap.php	/^            $name = $options['accountDomainNameShort'];$/;"	v
name	library\Zend\Auth\Adapter\Ldap.php	/^        $name = $options['accountDomainName'];$/;"	v
omitAttribs	library\Zend\Auth\Adapter\Ldap.php	/^        $omitAttribs   = array_map('strtolower', $omitAttribs);$/;"	v
options	library\Zend\Auth\Adapter\Ldap.php	/^        $options = $this->getLdap()->getOptions();$/;"	v
password	library\Zend\Auth\Adapter\Ldap.php	/^        $password = $this->_password;$/;"	v
requireRebind	library\Zend\Auth\Adapter\Ldap.php	/^                    $requireRebind = true;$/;"	v
requireRebind	library\Zend\Auth\Adapter\Ldap.php	/^                $requireRebind = false;$/;"	v
result	library\Zend\Auth\Adapter\Ldap.php	/^        $result = $ldap->count($group, $adapterOptions['groupDn'], $adapterOptions['groupScope']);$/;"	v
returnAttribs	library\Zend\Auth\Adapter\Ldap.php	/^        $returnAttribs = array_diff($returnAttribs, $omitAttribs);$/;"	v
returnAttribs	library\Zend\Auth\Adapter\Ldap.php	/^        $returnAttribs = array_map('strtolower', $returnAttribs);$/;"	v
returnObject	library\Zend\Auth\Adapter\Ldap.php	/^        $returnObject = new stdClass();$/;"	v
str	library\Zend\Auth\Adapter\Ldap.php	/^        $str = '';$/;"	v
user	library\Zend\Auth\Adapter\Ldap.php	/^            $user = $canonicalName;$/;"	v
user	library\Zend\Auth\Adapter\Ldap.php	/^            $user = $dn;$/;"	v
username	library\Zend\Auth\Adapter\Ldap.php	/^        $username = $this->_username;$/;"	v
val	library\Zend\Auth\Adapter\Ldap.php	/^                $val = '*****';$/;"	v
value	library\Zend\Auth\Adapter\Ldap.php	/^                                $value === '1' || strcasecmp($value, 'true') == 0);$/;"	v
value	library\Zend\Auth\Adapter\Ldap.php	/^                        $value = (int)$value;$/;"	v
value	library\Zend\Auth\Adapter\Ldap.php	/^                $value = $options[$key];$/;"	v
Zend_Auth_Adapter_OpenId	library\Zend\Auth\Adapter\OpenId.php	/^class Zend_Auth_Adapter_OpenId implements Zend_Auth_Adapter_Interface$/;"	c
consumer	library\Zend\Auth\Adapter\OpenId.php	/^            $consumer = new Zend_OpenId_Consumer($this->_storage);$/;"	v
extensions	library\Zend\Auth\Adapter\OpenId.php	/^                                $extensions = null,$/;"	v
id	library\Zend\Auth\Adapter\OpenId.php	/^        $id = $this->_id;$/;"	v
params	library\Zend\Auth\Adapter\OpenId.php	/^            $params = (isset($_SERVER['REQUEST_METHOD']) &&$/;"	v
returnTo	library\Zend\Auth\Adapter\OpenId.php	/^                                $returnTo = null,$/;"	v
root	library\Zend\Auth\Adapter\OpenId.php	/^                                $root = null,$/;"	v
Zend_Auth_Exception	library\Zend\Auth\Exception.php	/^class Zend_Auth_Exception extends Zend_Exception$/;"	c
Zend_Auth_Result	library\Zend\Auth\Result.php	/^class Zend_Auth_Result$/;"	c
code	library\Zend\Auth\Result.php	/^            $code = 1;$/;"	v
code	library\Zend\Auth\Result.php	/^            $code = self::FAILURE;$/;"	v
code	library\Zend\Auth\Result.php	/^        $code = (int) $code;$/;"	v
Zend_Auth_Storage_Exception	library\Zend\Auth\Storage\Exception.php	/^class Zend_Auth_Storage_Exception extends Zend_Auth_Exception$/;"	c
Zend_Auth_Storage_NonPersistent	library\Zend\Auth\Storage\NonPersistent.php	/^class Zend_Auth_Storage_NonPersistent implements Zend_Auth_Storage_Interface$/;"	c
Zend_Auth_Storage_Session	library\Zend\Auth\Storage\Session.php	/^class Zend_Auth_Storage_Session implements Zend_Auth_Storage_Interface$/;"	c
Zend_Barcode	library\Zend\Barcode.php	/^class Zend_Barcode$/;"	c
automaticRenderError	library\Zend\Barcode.php	/^        $automaticRenderError = true$/;"	v
barcode	library\Zend\Barcode.php	/^                $barcode = (string) $barcode->barcode;$/;"	v
barcode	library\Zend\Barcode.php	/^                $barcode = null;$/;"	v
barcode	library\Zend\Barcode.php	/^                $barcode = self::makeBarcode('error', array($/;"	v
barcode	library\Zend\Barcode.php	/^            $barcode  = self::makeBarcode($barcode, $barcodeConfig);$/;"	v
barcodeConfig	library\Zend\Barcode.php	/^                $barcodeConfig = $barcode->barcodeParams->toArray();$/;"	v
barcodeConfig	library\Zend\Barcode.php	/^            $barcodeConfig = $barcodeConfig->toArray();$/;"	v
barcodeConfig	library\Zend\Barcode.php	/^        $barcodeConfig = array(),$/;"	v
barcodeName	library\Zend\Barcode.php	/^        $barcodeName = str_replace(' ', '_', ucwords($/;"	v
barcodeName	library\Zend\Barcode.php	/^        $barcodeName = strtolower($barcodeNamespace . '_' . $barcode);$/;"	v
barcodeNamespace	library\Zend\Barcode.php	/^            $barcodeNamespace = $barcodeConfig['barcodeNamespace'];$/;"	v
barcodeNamespace	library\Zend\Barcode.php	/^        $barcodeNamespace = 'Zend_Barcode_Object';$/;"	v
bcAdapter	library\Zend\Barcode.php	/^        $bcAdapter = new $barcodeName($barcodeConfig);$/;"	v
e	library\Zend\Barcode.php	/^            $e = new Zend_Barcode_Exception($/;"	v
rdrAdapter	library\Zend\Barcode.php	/^        $rdrAdapter = new $rendererName($rendererConfig);$/;"	v
renderable	library\Zend\Barcode.php	/^            $renderable = ($e instanceof Zend_Barcode_Exception) ? $e->isRenderable() : false;$/;"	v
renderer	library\Zend\Barcode.php	/^                $renderer = (string) $barcode->renderer;$/;"	v
renderer	library\Zend\Barcode.php	/^                $renderer = (string) $renderer->renderer;$/;"	v
renderer	library\Zend\Barcode.php	/^                $renderer = self::makeRenderer($renderer, array());$/;"	v
renderer	library\Zend\Barcode.php	/^            $renderer = self::makeRenderer($renderer, $rendererConfig);$/;"	v
renderer	library\Zend\Barcode.php	/^        $renderer = 'image',$/;"	v
rendererConfig	library\Zend\Barcode.php	/^                $rendererConfig = $barcode->rendererParams->toArray();$/;"	v
rendererConfig	library\Zend\Barcode.php	/^                $rendererConfig = $renderer->rendererParams->toArray();$/;"	v
rendererConfig	library\Zend\Barcode.php	/^            $rendererConfig = $rendererConfig->toArray();$/;"	v
rendererConfig	library\Zend\Barcode.php	/^        $rendererConfig = array()$/;"	v
rendererConfig	library\Zend\Barcode.php	/^        $rendererConfig = array(),$/;"	v
rendererName	library\Zend\Barcode.php	/^        $rendererName = str_replace(' ', '_', ucwords($/;"	v
rendererName	library\Zend\Barcode.php	/^        $rendererName = strtolower($rendererNamespace . '_' . $renderer);$/;"	v
rendererNamespace	library\Zend\Barcode.php	/^            $rendererNamespace = $rendererConfig['rendererNamespace'];$/;"	v
rendererNamespace	library\Zend\Barcode.php	/^        $rendererNamespace = 'Zend_Barcode_Renderer';$/;"	v
Zend_Barcode_Exception	library\Zend\Barcode\Exception.php	/^class Zend_Barcode_Exception extends Zend_Exception$/;"	c
Zend_Barcode_Object_Code128	library\Zend\Barcode\Object\Code128.php	/^class Zend_Barcode_Object_Code128 extends Zend_Barcode_Object_ObjectAbstract$/;"	c
barcodePattern	library\Zend\Barcode\Object\Code128.php	/^            $barcodePattern = $this->_codingMap[$barcodeChar];$/;"	v
barcodeTable	library\Zend\Barcode\Object\Code128.php	/^        $barcodeTable = array();$/;"	v
char	library\Zend\Barcode\Object\Code128.php	/^            $char = $string[$pos];$/;"	v
characterLength	library\Zend\Barcode\Object\Code128.php	/^        $characterLength = 11 * $this->_barThinWidth * $this->_factor;$/;"	v
checksum	library\Zend\Barcode\Object\Code128.php	/^        $checksum = $sum % 103;$/;"	v
code	library\Zend\Barcode\Object\Code128.php	/^                        $code = array_search("Code C", $this->_charSets[$currentCharset]);$/;"	v
code	library\Zend\Barcode\Object\Code128.php	/^                        $code = array_search("START C", $this->_charSets['C']);$/;"	v
code	library\Zend\Barcode\Object\Code128.php	/^                    $code = array_search("Code B", $this->_charSets[$currentCharset]);$/;"	v
code	library\Zend\Barcode\Object\Code128.php	/^                    $code = array_search("START A", $this->_charSets['A']);$/;"	v
code	library\Zend\Barcode\Object\Code128.php	/^                    $code = array_search("START B", $this->_charSets['B']);$/;"	v
code	library\Zend\Barcode\Object\Code128.php	/^                    $code =array_search("Code A", $this->_charSets[$currentCharset]);$/;"	v
code	library\Zend\Barcode\Object\Code128.php	/^                $code = array_search($string[$pos], $this->_charSets[$currentCharset]);$/;"	v
code	library\Zend\Barcode\Object\Code128.php	/^                $code = array_search(substr($string, $pos, 2), $this->_charSets['C']);$/;"	v
code	library\Zend\Barcode\Object\Code128.php	/^            $code = null;$/;"	v
convertedChars	library\Zend\Barcode\Object\Code128.php	/^        $convertedChars = $this->_convertToBarcodeChars($this->getText());$/;"	v
convertedChars	library\Zend\Barcode\Object\Code128.php	/^        $convertedChars = count($this->_convertToBarcodeChars($this->getText()));$/;"	v
currentCharset	library\Zend\Barcode\Object\Code128.php	/^                    $currentCharset = 'C';$/;"	v
currentCharset	library\Zend\Barcode\Object\Code128.php	/^                $currentCharset = 'A';$/;"	v
currentCharset	library\Zend\Barcode\Object\Code128.php	/^                $currentCharset = 'B';$/;"	v
currentCharset	library\Zend\Barcode\Object\Code128.php	/^        $currentCharset = null;$/;"	v
encodedData	library\Zend\Barcode\Object\Code128.php	/^        $encodedData = $convertedChars * $characterLength;$/;"	v
fak	library\Zend\Barcode\Object\Code128.php	/^        $fak = 0;$/;"	v
k	library\Zend\Barcode\Object\Code128.php	/^        $k = 1;$/;"	v
quietZone	library\Zend\Barcode\Object\Code128.php	/^        $quietZone = $this->getQuietZone();$/;"	v
result	library\Zend\Barcode\Object\Code128.php	/^        $result = array();$/;"	v
string	library\Zend\Barcode\Object\Code128.php	/^        $string = (string) $string;$/;"	v
sum	library\Zend\Barcode\Object\Code128.php	/^        $sum = $tableOfChars[0];$/;"	v
sum	library\Zend\Barcode\Object\Code128.php	/^        $sum = 0;$/;"	v
tableOfChars	library\Zend\Barcode\Object\Code128.php	/^        $tableOfChars = $this->_convertToBarcodeChars($text);$/;"	v
width	library\Zend\Barcode\Object\Code128.php	/^        $width = $quietZone + $encodedData + $quietZone;$/;"	v
Zend_Barcode_Object_Code25	library\Zend\Barcode\Object\Code25.php	/^class Zend_Barcode_Object_Code25 extends Zend_Barcode_Object_ObjectAbstract$/;"	c
barcodeChar	library\Zend\Barcode\Object\Code25.php	/^            $barcodeChar = str_split($this->_codingMap[$char]);$/;"	v
barcodeTable	library\Zend\Barcode\Object\Code25.php	/^        $barcodeTable = array();$/;"	v
characterLength	library\Zend\Barcode\Object\Code25.php	/^        $characterLength = (3 * $this->_barThinWidth + 2 * $this->_barThickWidth + 5 * $this->_barThinWidth)$/;"	v
checksum	library\Zend\Barcode\Object\Code25.php	/^        $checksum = (10 - ($checksum % 10)) % 10;$/;"	v
checksum	library\Zend\Barcode\Object\Code25.php	/^        $checksum = 0;$/;"	v
encodedData	library\Zend\Barcode\Object\Code25.php	/^        $encodedData     = strlen($this->getText()) * $characterLength;$/;"	v
factor	library\Zend\Barcode\Object\Code25.php	/^            $factor    = 4 - $factor;$/;"	v
factor	library\Zend\Barcode\Object\Code25.php	/^        $factor   = 3;$/;"	v
quietZone	library\Zend\Barcode\Object\Code25.php	/^        $quietZone       = $this->getQuietZone();$/;"	v
startCharacter	library\Zend\Barcode\Object\Code25.php	/^        $startCharacter  = (2 * $this->_barThickWidth + 4 * $this->_barThinWidth) * $this->_factor;$/;"	v
stopCharacter	library\Zend\Barcode\Object\Code25.php	/^        $stopCharacter   = (2 * $this->_barThickWidth + 4 * $this->_barThinWidth) * $this->_factor;$/;"	v
text	library\Zend\Barcode\Object\Code25.php	/^        $text = str_split($this->getText());$/;"	v
width	library\Zend\Barcode\Object\Code25.php	/^                $width = $c ? $this->_barThickWidth : $this->_barThinWidth;$/;"	v
Zend_Barcode_Object_Code25interleaved	library\Zend\Barcode\Object\Code25interleaved.php	/^class Zend_Barcode_Object_Code25interleaved extends Zend_Barcode_Object_Code25$/;"	c
barWidth	library\Zend\Barcode\Object\Code25interleaved.php	/^                $barWidth = (substr($this->_codingMap[$char1], $ibar, 1))$/;"	v
barWidth	library\Zend\Barcode\Object\Code25interleaved.php	/^                $barWidth = (substr($this->_codingMap[$char2], $ibar, 1))$/;"	v
char1	library\Zend\Barcode\Object\Code25interleaved.php	/^            $char1 = substr($text, $i, 1);$/;"	v
char2	library\Zend\Barcode\Object\Code25interleaved.php	/^            $char2 = substr($text, $i + 1, 1);$/;"	v
characterLength	library\Zend\Barcode\Object\Code25interleaved.php	/^        $characterLength = (3 * $this->_barThinWidth + 2 * $this->_barThickWidth) * $this->_factor;$/;"	v
encodedData	library\Zend\Barcode\Object\Code25interleaved.php	/^        $encodedData     = strlen($this->getText()) * $characterLength;$/;"	v
point1	library\Zend\Barcode\Object\Code25interleaved.php	/^        $point1 = $this->_rotate($/;"	v
point1	library\Zend\Barcode\Object\Code25interleaved.php	/^        $point1 = $this->_rotate(-1, -1);$/;"	v
point2	library\Zend\Barcode\Object\Code25interleaved.php	/^        $point2 = $this->_rotate($/;"	v
point2	library\Zend\Barcode\Object\Code25interleaved.php	/^        $point2 = $this->_rotate($this->_calculateWidth() - 1, -1);$/;"	v
point3	library\Zend\Barcode\Object\Code25interleaved.php	/^        $point3 = $this->_rotate($/;"	v
point3	library\Zend\Barcode\Object\Code25interleaved.php	/^        $point3 = $this->_rotate($this->_calculateWidth() - 1, $width - 1);$/;"	v
point4	library\Zend\Barcode\Object\Code25interleaved.php	/^        $point4 = $this->_rotate($/;"	v
point4	library\Zend\Barcode\Object\Code25interleaved.php	/^        $point4 = $this->_rotate(-1, $width - 1);$/;"	v
quietZone	library\Zend\Barcode\Object\Code25interleaved.php	/^        $quietZone       = $this->getQuietZone();$/;"	v
startCharacter	library\Zend\Barcode\Object\Code25interleaved.php	/^        $startCharacter  = (4 * $this->_barThinWidth) * $this->_factor;$/;"	v
stopCharacter	library\Zend\Barcode\Object\Code25interleaved.php	/^        $stopCharacter   = ($this->_barThickWidth + 2 * $this->_barThinWidth) * $this->_factor;$/;"	v
text	library\Zend\Barcode\Object\Code25interleaved.php	/^        $text = $this->getText();$/;"	v
width	library\Zend\Barcode\Object\Code25interleaved.php	/^        $width  = $this->_barThickWidth * $this->_factor;$/;"	v
Zend_Barcode_Object_Code39	library\Zend\Barcode\Object\Code39.php	/^class Zend_Barcode_Object_Code39 extends Zend_Barcode_Object_ObjectAbstract$/;"	c
barcodeChar	library\Zend\Barcode\Object\Code39.php	/^            $barcodeChar = str_split($this->_codingMap[$char]);$/;"	v
barcodeTable	library\Zend\Barcode\Object\Code39.php	/^        $barcodeTable = array();$/;"	v
characterLength	library\Zend\Barcode\Object\Code39.php	/^        $characterLength = (6 * $this->_barThinWidth + 3 * $this->_barThickWidth + 1) * $this->_factor;$/;"	v
charset	library\Zend\Barcode\Object\Code39.php	/^        $charset  = array_flip(array_keys($this->_codingMap));$/;"	v
checksum	library\Zend\Barcode\Object\Code39.php	/^        $checksum = 0;$/;"	v
encodedData	library\Zend\Barcode\Object\Code39.php	/^        $encodedData     = strlen($this->getText()) * $characterLength - $this->_factor;$/;"	v
quietZone	library\Zend\Barcode\Object\Code39.php	/^        $quietZone       = $this->getQuietZone();$/;"	v
text	library\Zend\Barcode\Object\Code39.php	/^        $text         = str_split($this->getText());$/;"	v
text	library\Zend\Barcode\Object\Code39.php	/^        $text     = str_split($text);$/;"	v
text	library\Zend\Barcode\Object\Code39.php	/^        $text = parent::getTextToDisplay();$/;"	v
visible	library\Zend\Barcode\Object\Code39.php	/^                $visible = ! $visible;$/;"	v
visible	library\Zend\Barcode\Object\Code39.php	/^            $visible     = true;$/;"	v
width	library\Zend\Barcode\Object\Code39.php	/^                $width          = $c ? $this->_barThickWidth : $this->_barThinWidth;$/;"	v
Zend_Barcode_Object_Ean13	library\Zend\Barcode\Object\Ean13.php	/^class Zend_Barcode_Object_Ean13 extends Zend_Barcode_Object_ObjectAbstract$/;"	c
barcodeTable	library\Zend\Barcode\Object\Ean13.php	/^        $barcodeTable = array();$/;"	v
bars	library\Zend\Barcode\Object\Ean13.php	/^            $bars = str_split($this->_codingMap[$parity[$i - 1]][$textTable[$i]]);$/;"	v
bars	library\Zend\Barcode\Object\Ean13.php	/^            $bars = str_split($this->_codingMap['C'][$textTable[$i]]);$/;"	v
characterWidth	library\Zend\Barcode\Object\Ean13.php	/^            $characterWidth = (7 * $this->_barThinWidth) * $this->_factor;$/;"	v
checksum	library\Zend\Barcode\Object\Ean13.php	/^        $checksum = (10 - ($checksum % 10)) % 10;$/;"	v
checksum	library\Zend\Barcode\Object\Ean13.php	/^        $checksum = 0;$/;"	v
encodedData	library\Zend\Barcode\Object\Ean13.php	/^        $encodedData     = (7 * $this->_barThinWidth) * $this->_factor * 12;$/;"	v
factor	library\Zend\Barcode\Object\Ean13.php	/^                        $factor = 0;$/;"	v
factor	library\Zend\Barcode\Object\Ean13.php	/^                        $factor = 3;$/;"	v
factor	library\Zend\Barcode\Object\Ean13.php	/^                        $factor = 4;$/;"	v
factor	library\Zend\Barcode\Object\Ean13.php	/^            $factor    = 4 - $factor;$/;"	v
factor	library\Zend\Barcode\Object\Ean13.php	/^        $factor   = 3;$/;"	v
height	library\Zend\Barcode\Object\Ean13.php	/^        $height = ($this->_drawText) ? 1.1 : 1;$/;"	v
leftPosition	library\Zend\Barcode\Object\Ean13.php	/^                $leftPosition = $leftPosition + $characterWidth + ($factor * $this->_barThinWidth * $this->_factor);$/;"	v
leftPosition	library\Zend\Barcode\Object\Ean13.php	/^            $leftPosition = $this->getQuietZone() - $characterWidth;$/;"	v
middleCharacter	library\Zend\Barcode\Object\Ean13.php	/^        $middleCharacter = (5 * $this->_barThinWidth) * $this->_factor;$/;"	v
parity	library\Zend\Barcode\Object\Ean13.php	/^        $parity = $this->_parities[$textTable[0]];$/;"	v
quietZone	library\Zend\Barcode\Object\Ean13.php	/^        $quietZone       = $this->getQuietZone();$/;"	v
startCharacter	library\Zend\Barcode\Object\Ean13.php	/^        $startCharacter  = (3 * $this->_barThinWidth) * $this->_factor;$/;"	v
stopCharacter	library\Zend\Barcode\Object\Ean13.php	/^        $stopCharacter   = (3 * $this->_barThinWidth) * $this->_factor;$/;"	v
text	library\Zend\Barcode\Object\Ean13.php	/^            $text = $this->getTextToDisplay();$/;"	v
textTable	library\Zend\Barcode\Object\Ean13.php	/^        $textTable = str_split($this->getText());$/;"	v
Zend_Barcode_Object_Ean2	library\Zend\Barcode\Object\Ean2.php	/^class Zend_Barcode_Object_Ean2 extends Zend_Barcode_Object_Ean5$/;"	c
modulo	library\Zend\Barcode\Object\Ean2.php	/^        $modulo = $this->getText() % 4;$/;"	v
Zend_Barcode_Object_Ean5	library\Zend\Barcode\Object\Ean5.php	/^class Zend_Barcode_Object_Ean5 extends Zend_Barcode_Object_Ean13$/;"	c
barcodeTable	library\Zend\Barcode\Object\Ean5.php	/^        $barcodeTable = array();$/;"	v
bars	library\Zend\Barcode\Object\Ean5.php	/^            $bars = str_split($this->_codingMap[$this->_getParity($i)][$textTable[$i]]);$/;"	v
checksum	library\Zend\Barcode\Object\Ean5.php	/^        $checksum = $this->getChecksum($this->getText());$/;"	v
checksum	library\Zend\Barcode\Object\Ean5.php	/^        $checksum = 0;$/;"	v
encodedData	library\Zend\Barcode\Object\Ean5.php	/^        $encodedData     = (7 * $this->_barThinWidth) * $this->_factor;$/;"	v
firstCharacter	library\Zend\Barcode\Object\Ean5.php	/^                $firstCharacter = false;$/;"	v
firstCharacter	library\Zend\Barcode\Object\Ean5.php	/^        $firstCharacter = true;$/;"	v
middleCharacter	library\Zend\Barcode\Object\Ean5.php	/^        $middleCharacter = (2 * $this->_barThinWidth) * $this->_factor;$/;"	v
quietZone	library\Zend\Barcode\Object\Ean5.php	/^        $quietZone       = $this->getQuietZone();$/;"	v
startCharacter	library\Zend\Barcode\Object\Ean5.php	/^        $startCharacter  = (5 * $this->_barThinWidth) * $this->_factor;$/;"	v
textTable	library\Zend\Barcode\Object\Ean5.php	/^        $textTable = str_split($this->getText());$/;"	v
Zend_Barcode_Object_Ean8	library\Zend\Barcode\Object\Ean8.php	/^class Zend_Barcode_Object_Ean8 extends Zend_Barcode_Object_Ean13$/;"	c
barcodeTable	library\Zend\Barcode\Object\Ean8.php	/^        $barcodeTable = array();$/;"	v
bars	library\Zend\Barcode\Object\Ean8.php	/^            $bars = str_split($this->_codingMap['A'][$textTable[$i]]);$/;"	v
bars	library\Zend\Barcode\Object\Ean8.php	/^            $bars = str_split($this->_codingMap['C'][$textTable[$i]]);$/;"	v
characterWidth	library\Zend\Barcode\Object\Ean8.php	/^            $characterWidth = (7 * $this->_barThinWidth) * $this->_factor;$/;"	v
encodedData	library\Zend\Barcode\Object\Ean8.php	/^        $encodedData     = (7 * $this->_barThinWidth) * $this->_factor * 8;$/;"	v
factor	library\Zend\Barcode\Object\Ean8.php	/^                        $factor = 0;$/;"	v
factor	library\Zend\Barcode\Object\Ean8.php	/^                        $factor = 4;$/;"	v
height	library\Zend\Barcode\Object\Ean8.php	/^        $height = ($this->_drawText) ? 1.1 : 1;$/;"	v
leftPosition	library\Zend\Barcode\Object\Ean8.php	/^                $leftPosition = $leftPosition + $characterWidth + ($factor * $this->_barThinWidth * $this->_factor);$/;"	v
leftPosition	library\Zend\Barcode\Object\Ean8.php	/^            $leftPosition = $this->getQuietZone() + (3 * $this->_barThinWidth) * $this->_factor;$/;"	v
message	library\Zend\Barcode\Object\Ean8.php	/^            $message = implode("\\n", $validator->getMessages());$/;"	v
middleCharacter	library\Zend\Barcode\Object\Ean8.php	/^        $middleCharacter = (5 * $this->_barThinWidth) * $this->_factor;$/;"	v
quietZone	library\Zend\Barcode\Object\Ean8.php	/^        $quietZone       = $this->getQuietZone();$/;"	v
startCharacter	library\Zend\Barcode\Object\Ean8.php	/^        $startCharacter  = (3 * $this->_barThinWidth) * $this->_factor;$/;"	v
stopCharacter	library\Zend\Barcode\Object\Ean8.php	/^        $stopCharacter   = (3 * $this->_barThinWidth) * $this->_factor;$/;"	v
text	library\Zend\Barcode\Object\Ean8.php	/^            $text = $this->getTextToDisplay();$/;"	v
textTable	library\Zend\Barcode\Object\Ean8.php	/^        $textTable = str_split($this->getText());$/;"	v
validator	library\Zend\Barcode\Object\Ean8.php	/^        $validator = new Zend_Validate_Barcode(array($/;"	v
value	library\Zend\Barcode\Object\Ean8.php	/^        $value = $this->_addLeadingZeros($value, true);$/;"	v
Zend_Barcode_Object_Error	library\Zend\Barcode\Object\Error.php	/^class Zend_Barcode_Object_Error extends Zend_Barcode_Object_ObjectAbstract$/;"	c
Zend_Barcode_Object_Exception	library\Zend\Barcode\Object\Exception.php	/^class Zend_Barcode_Object_Exception extends Zend_Barcode_Exception$/;"	c
Zend_Barcode_Object_Identcode	library\Zend\Barcode\Object\Identcode.php	/^class Zend_Barcode_Object_Identcode extends Zend_Barcode_Object_Code25interleaved$/;"	c
checksum	library\Zend\Barcode\Object\Identcode.php	/^        $checksum = (10 - ($checksum % 10)) % 10;$/;"	v
checksum	library\Zend\Barcode\Object\Identcode.php	/^        $checksum = 0;$/;"	v
Zend_Barcode_Object_Itf14	library\Zend\Barcode\Object\Itf14.php	/^class Zend_Barcode_Object_Itf14 extends Zend_Barcode_Object_Code25interleaved$/;"	c
Zend_Barcode_Object_Leitcode	library\Zend\Barcode\Object\Leitcode.php	/^class Zend_Barcode_Object_Leitcode extends Zend_Barcode_Object_Identcode$/;"	c
alignment	library\Zend\Barcode\Object\ObjectAbstract.php	/^        $alignment = 'center',$/;"	v
barLength	library\Zend\Barcode\Object\ObjectAbstract.php	/^        $barLength = $this->_barHeight * $this->_factor;$/;"	v
barcodeTable	library\Zend\Barcode\Object\ObjectAbstract.php	/^        $barcodeTable = $this->_prepareBarcode();$/;"	v
checksumCharacter	library\Zend\Barcode\Object\ObjectAbstract.php	/^            $checksumCharacter = $this->_substituteChecksumCharacter;$/;"	v
checksumCharacter	library\Zend\Barcode\Object\ObjectAbstract.php	/^        $checksumCharacter = '';$/;"	v
color	library\Zend\Barcode\Object\ObjectAbstract.php	/^            $color = $this->_foreColor;$/;"	v
extraHeight	library\Zend\Barcode\Object\ObjectAbstract.php	/^            $extraHeight = 2;$/;"	v
extraHeight	library\Zend\Barcode\Object\ObjectAbstract.php	/^        $extraHeight = 0;$/;"	v
leftPosition	library\Zend\Barcode\Object\ObjectAbstract.php	/^                    $leftPosition = $this->getQuietZone() + $space * ($i + 0.5);$/;"	v
length	library\Zend\Barcode\Object\ObjectAbstract.php	/^                $length = $this->_barcodeLength - $omitChecksum;$/;"	v
message	library\Zend\Barcode\Object\ObjectAbstract.php	/^            $message = implode("\\n", $validator->getMessages());$/;"	v
method	library\Zend\Barcode\Object\ObjectAbstract.php	/^            $method = 'set' . $key;$/;"	v
omitChecksum	library\Zend\Barcode\Object\ObjectAbstract.php	/^            $omitChecksum = (int) ($this->_withChecksum && $withoutChecksum);$/;"	v
options	library\Zend\Barcode\Object\ObjectAbstract.php	/^            $options = $options->toArray();$/;"	v
orientation	library\Zend\Barcode\Object\ObjectAbstract.php	/^        $orientation = 0$/;"	v
point1	library\Zend\Barcode\Object\ObjectAbstract.php	/^                $point1 = $this->_rotate($xpos, $ypos + $bar[2] * $barLength);$/;"	v
point1	library\Zend\Barcode\Object\ObjectAbstract.php	/^            $point1 = $this->_rotate(0, 0);$/;"	v
point1	library\Zend\Barcode\Object\ObjectAbstract.php	/^        $point1 = $this->_rotate(0, 0);$/;"	v
point2	library\Zend\Barcode\Object\ObjectAbstract.php	/^                $point2 = $this->_rotate($xpos, $ypos + $bar[3] * $barLength);$/;"	v
point2	library\Zend\Barcode\Object\ObjectAbstract.php	/^            $point2 = $this->_rotate($this->_calculateWidth() - 1, 0);$/;"	v
point2	library\Zend\Barcode\Object\ObjectAbstract.php	/^        $point2 = $this->_rotate(0, $this->_calculateHeight() - 1);$/;"	v
point3	library\Zend\Barcode\Object\ObjectAbstract.php	/^                $point3 = $this->_rotate($/;"	v
point3	library\Zend\Barcode\Object\ObjectAbstract.php	/^            $point3 = $this->_rotate($/;"	v
point3	library\Zend\Barcode\Object\ObjectAbstract.php	/^        $point3 = $this->_rotate($/;"	v
point4	library\Zend\Barcode\Object\ObjectAbstract.php	/^                $point4 = $this->_rotate($/;"	v
point4	library\Zend\Barcode\Object\ObjectAbstract.php	/^            $point4 = $this->_rotate(0, $this->_calculateHeight() - 1);$/;"	v
point4	library\Zend\Barcode\Object\ObjectAbstract.php	/^        $point4 = $this->_rotate($this->_calculateWidth() - 1, 0);$/;"	v
ratio	library\Zend\Barcode\Object\ObjectAbstract.php	/^        $ratio = $this->_barThickWidth \/ $this->_barThinWidth;$/;"	v
space	library\Zend\Barcode\Object\ObjectAbstract.php	/^                $space      = ($this->_calculateWidth() - 2 * $this->getQuietZone()) \/ $textLength;$/;"	v
text	library\Zend\Barcode\Object\ObjectAbstract.php	/^                    $text = ((strlen($text) - $omitChecksum) % 2 ? '0' . $text : $text);$/;"	v
text	library\Zend\Barcode\Object\ObjectAbstract.php	/^                    $text = str_repeat('0', $length - strlen($text)) . $text;$/;"	v
text	library\Zend\Barcode\Object\ObjectAbstract.php	/^            $text = $this->getTextToDisplay();$/;"	v
text	library\Zend\Barcode\Object\ObjectAbstract.php	/^        $text = $this->_text;$/;"	v
textHeight	library\Zend\Barcode\Object\ObjectAbstract.php	/^        $textHeight = 0;$/;"	v
textLength	library\Zend\Barcode\Object\ObjectAbstract.php	/^                $textLength = strlen($text);$/;"	v
tmp	library\Zend\Barcode\Object\ObjectAbstract.php	/^        $tmp                    = $this->_foreColor;$/;"	v
validator	library\Zend\Barcode\Object\ObjectAbstract.php	/^        $validator = new Zend_Validate_Barcode(array($/;"	v
validatorName	library\Zend\Barcode\Object\ObjectAbstract.php	/^        $validatorName = (isset($options['validator'])) ? $options['validator'] : $this->getType();$/;"	v
value	library\Zend\Barcode\Object\ObjectAbstract.php	/^            $value = $this->_text;$/;"	v
value	library\Zend\Barcode\Object\ObjectAbstract.php	/^        $value = $this->_addLeadingZeros($value, $withChecksum) . $checksumCharacter;$/;"	v
width	library\Zend\Barcode\Object\ObjectAbstract.php	/^            $width = $bar[1] * $this->_factor;$/;"	v
withChecksum	library\Zend\Barcode\Object\ObjectAbstract.php	/^            $withChecksum = true;$/;"	v
withChecksum	library\Zend\Barcode\Object\ObjectAbstract.php	/^        $withChecksum = false;$/;"	v
x2	library\Zend\Barcode\Object\ObjectAbstract.php	/^        $x2 = $x1 * cos($this->_orientation \/ 180 * pi())$/;"	v
xpos	library\Zend\Barcode\Object\ObjectAbstract.php	/^        $xpos = (int) $this->_withBorder;$/;"	v
y2	library\Zend\Barcode\Object\ObjectAbstract.php	/^        $y2 = $y1 * cos($this->_orientation \/ 180 * pi())$/;"	v
ypos	library\Zend\Barcode\Object\ObjectAbstract.php	/^        $ypos = (int) $this->_withBorder;$/;"	v
Zend_Barcode_Object_Planet	library\Zend\Barcode\Object\Planet.php	/^class Zend_Barcode_Object_Planet extends Zend_Barcode_Object_Postnet$/;"	c
Zend_Barcode_Object_Postnet	library\Zend\Barcode\Object\Postnet.php	/^class Zend_Barcode_Object_Postnet extends Zend_Barcode_Object_ObjectAbstract$/;"	c
barcodeTable	library\Zend\Barcode\Object\Postnet.php	/^        $barcodeTable = array();$/;"	v
bars	library\Zend\Barcode\Object\Postnet.php	/^            $bars = str_split($this->_codingMap[$char]);$/;"	v
checksum	library\Zend\Barcode\Object\Postnet.php	/^        $checksum = (10 - ($sum % 10)) % 10;$/;"	v
encodedData	library\Zend\Barcode\Object\Postnet.php	/^        $encodedData     = (10 * $this->_barThinWidth) * $this->_factor * strlen($this->getText());$/;"	v
quietZone	library\Zend\Barcode\Object\Postnet.php	/^        $quietZone       = $this->getQuietZone();$/;"	v
startCharacter	library\Zend\Barcode\Object\Postnet.php	/^        $startCharacter  = (2 * $this->_barThinWidth) * $this->_factor;$/;"	v
stopCharacter	library\Zend\Barcode\Object\Postnet.php	/^        $stopCharacter   = (1 * $this->_barThinWidth) * $this->_factor;$/;"	v
sum	library\Zend\Barcode\Object\Postnet.php	/^        $sum = array_sum(str_split($text));$/;"	v
textTable	library\Zend\Barcode\Object\Postnet.php	/^        $textTable = str_split($this->getText());$/;"	v
Zend_Barcode_Object_Royalmail	library\Zend\Barcode\Object\Royalmail.php	/^class Zend_Barcode_Object_Royalmail extends Zend_Barcode_Object_ObjectAbstract$/;"	c
barcodeTable	library\Zend\Barcode\Object\Royalmail.php	/^        $barcodeTable = array();$/;"	v
bars	library\Zend\Barcode\Object\Royalmail.php	/^            $bars = str_split($this->_codingMap[$char]);$/;"	v
colchkvalue	library\Zend\Barcode\Object\Royalmail.php	/^        $colchkvalue = array_keys($this->_columns, $colvalue);$/;"	v
colvalue	library\Zend\Barcode\Object\Royalmail.php	/^        $colvalue = 0;$/;"	v
encodedData	library\Zend\Barcode\Object\Royalmail.php	/^        $encodedData     = (8 * $this->_barThinWidth) * $this->_factor * strlen($this->getText());$/;"	v
quietZone	library\Zend\Barcode\Object\Royalmail.php	/^        $quietZone       = $this->getQuietZone();$/;"	v
rowchkvalue	library\Zend\Barcode\Object\Royalmail.php	/^        $rowchkvalue = array_keys($this->_rows, $rowvalue);$/;"	v
rowvalue	library\Zend\Barcode\Object\Royalmail.php	/^        $rowvalue = 0;$/;"	v
startCharacter	library\Zend\Barcode\Object\Royalmail.php	/^        $startCharacter  = (2 * $this->_barThinWidth) * $this->_factor;$/;"	v
stopCharacter	library\Zend\Barcode\Object\Royalmail.php	/^        $stopCharacter   = (1 * $this->_barThinWidth) * $this->_factor;$/;"	v
textTable	library\Zend\Barcode\Object\Royalmail.php	/^        $textTable = str_split($this->getText());$/;"	v
values	library\Zend\Barcode\Object\Royalmail.php	/^        $values   = str_split($text);$/;"	v
Zend_Barcode_Object_Upca	library\Zend\Barcode\Object\Upca.php	/^class Zend_Barcode_Object_Upca extends Zend_Barcode_Object_Ean13$/;"	c
barcodeTable	library\Zend\Barcode\Object\Upca.php	/^        $barcodeTable = array();$/;"	v
bars	library\Zend\Barcode\Object\Upca.php	/^            $bars = str_split($this->_codingMap['A'][$textTable[$i]]);$/;"	v
bars	library\Zend\Barcode\Object\Upca.php	/^            $bars = str_split($this->_codingMap['C'][$textTable[$i]]);$/;"	v
bars	library\Zend\Barcode\Object\Upca.php	/^        $bars = str_split($this->_codingMap['A'][$textTable[0]]);$/;"	v
bars	library\Zend\Barcode\Object\Upca.php	/^        $bars = str_split($this->_codingMap['C'][$textTable[11]]);$/;"	v
characterWidth	library\Zend\Barcode\Object\Upca.php	/^            $characterWidth = (7 * $this->_barThinWidth) * $this->_factor;$/;"	v
encodedData	library\Zend\Barcode\Object\Upca.php	/^        $encodedData     = (7 * $this->_barThinWidth) * $this->_factor * 12;$/;"	v
factor	library\Zend\Barcode\Object\Upca.php	/^                        $factor = 0;$/;"	v
factor	library\Zend\Barcode\Object\Upca.php	/^                        $factor = 10;$/;"	v
factor	library\Zend\Barcode\Object\Upca.php	/^                        $factor = 11;$/;"	v
factor	library\Zend\Barcode\Object\Upca.php	/^                        $factor = 4;$/;"	v
fontSize	library\Zend\Barcode\Object\Upca.php	/^                $fontSize = $this->_fontSize;$/;"	v
height	library\Zend\Barcode\Object\Upca.php	/^        $height = ($this->_drawText) ? 1.1 : 1;$/;"	v
leftPosition	library\Zend\Barcode\Object\Upca.php	/^                $leftPosition = $leftPosition + $characterWidth + ($factor * $this->_barThinWidth * $this->_factor);$/;"	v
leftPosition	library\Zend\Barcode\Object\Upca.php	/^            $leftPosition = $this->getQuietZone() - $characterWidth;$/;"	v
middleCharacter	library\Zend\Barcode\Object\Upca.php	/^        $middleCharacter = (5 * $this->_barThinWidth) * $this->_factor;$/;"	v
quietZone	library\Zend\Barcode\Object\Upca.php	/^        $quietZone       = $this->getQuietZone();$/;"	v
startCharacter	library\Zend\Barcode\Object\Upca.php	/^        $startCharacter  = (3 * $this->_barThinWidth) * $this->_factor;$/;"	v
stopCharacter	library\Zend\Barcode\Object\Upca.php	/^        $stopCharacter   = (3 * $this->_barThinWidth) * $this->_factor;$/;"	v
text	library\Zend\Barcode\Object\Upca.php	/^            $text = $this->getTextToDisplay();$/;"	v
textTable	library\Zend\Barcode\Object\Upca.php	/^        $textTable = str_split($this->getText());$/;"	v
Zend_Barcode_Object_Upce	library\Zend\Barcode\Object\Upce.php	/^class Zend_Barcode_Object_Upce extends Zend_Barcode_Object_Ean13$/;"	c
barcodeTable	library\Zend\Barcode\Object\Upce.php	/^        $barcodeTable = array();$/;"	v
bars	library\Zend\Barcode\Object\Upce.php	/^            $bars = str_split($this->_codingMap[$parity[$i - 1]][$textTable[$i]]);$/;"	v
characterWidth	library\Zend\Barcode\Object\Upce.php	/^            $characterWidth = (7 * $this->_barThinWidth) * $this->_factor;$/;"	v
checksum	library\Zend\Barcode\Object\Upce.php	/^        $checksum = $textTable[7];$/;"	v
encodedData	library\Zend\Barcode\Object\Upce.php	/^        $encodedData     = (7 * $this->_barThinWidth) * $this->_factor * 6;$/;"	v
factor	library\Zend\Barcode\Object\Upce.php	/^                        $factor = 0;$/;"	v
factor	library\Zend\Barcode\Object\Upce.php	/^                        $factor = 3;$/;"	v
factor	library\Zend\Barcode\Object\Upce.php	/^                        $factor = 5;$/;"	v
fontSize	library\Zend\Barcode\Object\Upce.php	/^                $fontSize = $this->_fontSize;$/;"	v
height	library\Zend\Barcode\Object\Upce.php	/^        $height = ($this->_drawText) ? 1.1 : 1;$/;"	v
leftPosition	library\Zend\Barcode\Object\Upce.php	/^                $leftPosition = $leftPosition + $characterWidth + ($factor * $this->_barThinWidth * $this->_factor);$/;"	v
leftPosition	library\Zend\Barcode\Object\Upce.php	/^            $leftPosition = $this->getQuietZone() - $characterWidth;$/;"	v
message	library\Zend\Barcode\Object\Upce.php	/^            $message = implode("\\n", $validator->getMessages());$/;"	v
parity	library\Zend\Barcode\Object\Upce.php	/^        $parity = $this->_parities[$system][$checksum];$/;"	v
quietZone	library\Zend\Barcode\Object\Upce.php	/^        $quietZone       = $this->getQuietZone();$/;"	v
startCharacter	library\Zend\Barcode\Object\Upce.php	/^        $startCharacter  = (3 * $this->_barThinWidth) * $this->_factor;$/;"	v
stopCharacter	library\Zend\Barcode\Object\Upce.php	/^        $stopCharacter   = (6 * $this->_barThinWidth) * $this->_factor;$/;"	v
system	library\Zend\Barcode\Object\Upce.php	/^            $system = 1;$/;"	v
system	library\Zend\Barcode\Object\Upce.php	/^        $system = 0;$/;"	v
text	library\Zend\Barcode\Object\Upce.php	/^            $text = $this->getTextToDisplay();$/;"	v
text	library\Zend\Barcode\Object\Upce.php	/^        $text = $this->_addLeadingZeros($text, true);$/;"	v
text	library\Zend\Barcode\Object\Upce.php	/^        $text = parent::getText();$/;"	v
textTable	library\Zend\Barcode\Object\Upce.php	/^        $textTable = str_split($this->getText());$/;"	v
validator	library\Zend\Barcode\Object\Upce.php	/^        $validator = new Zend_Validate_Barcode(array($/;"	v
value	library\Zend\Barcode\Object\Upce.php	/^        $value = $this->_addLeadingZeros($value, true);$/;"	v
Zend_Barcode_Renderer_Exception	library\Zend\Barcode\Renderer\Exception.php	/^class Zend_Barcode_Renderer_Exception extends Zend_Barcode_Exception$/;"	c
Zend_Barcode_Renderer_Image	library\Zend\Barcode\Renderer\Image.php	/^class Zend_Barcode_Renderer_Image extends Zend_Barcode_Renderer_RendererAbstract$/;"	c
allocatedColor	library\Zend\Barcode\Renderer\Image.php	/^        $allocatedColor = imagecolorallocate($/;"	v
backgroundColor	library\Zend\Barcode\Renderer\Image.php	/^            $backgroundColor = $this->_barcode->getBackgroundColor();$/;"	v
barcodeHeight	library\Zend\Barcode\Renderer\Image.php	/^        $barcodeHeight = $this->_barcode->getHeight(true);$/;"	v
barcodeWidth	library\Zend\Barcode\Renderer\Image.php	/^        $barcodeWidth  = $this->_barcode->getWidth(true);$/;"	v
box	library\Zend\Barcode\Renderer\Image.php	/^            $box = imagettfbbox($size, 0, $font, $text);$/;"	v
e	library\Zend\Barcode\Renderer\Image.php	/^            $e = new Zend_Barcode_Exception($/;"	v
font	library\Zend\Barcode\Renderer\Image.php	/^            $font = 3;$/;"	v
fontWidth	library\Zend\Barcode\Renderer\Image.php	/^            $fontWidth = imagefontwidth($font);$/;"	v
foreColor	library\Zend\Barcode\Renderer\Image.php	/^            $foreColor       = $this->_barcode->getForeColor();$/;"	v
functionName	library\Zend\Barcode\Renderer\Image.php	/^        $functionName = 'image' . $this->_imageType;$/;"	v
height	library\Zend\Barcode\Renderer\Image.php	/^                $height = $this->_barcode->getHeight(true);$/;"	v
height	library\Zend\Barcode\Renderer\Image.php	/^                $height = $this->_userHeight;$/;"	v
height	library\Zend\Barcode\Renderer\Image.php	/^            $height = $barcodeHeight;$/;"	v
newPoints	library\Zend\Barcode\Renderer\Image.php	/^        $newPoints = array($/;"	v
positionX	library\Zend\Barcode\Renderer\Image.php	/^                    $positionX = $position[0] - ($fontWidth * strlen($text));$/;"	v
positionX	library\Zend\Barcode\Renderer\Image.php	/^                    $positionX = $position[0] - ceil(($fontWidth * strlen($text)) \/ 2);$/;"	v
positionX	library\Zend\Barcode\Renderer\Image.php	/^                    $positionX = $position[0];$/;"	v
positionY	library\Zend\Barcode\Renderer\Image.php	/^            $positionY = $position[1] - imagefontheight($font) + 1;$/;"	v
value	library\Zend\Barcode\Renderer\Image.php	/^            $value = 'jpeg';$/;"	v
white	library\Zend\Barcode\Renderer\Image.php	/^            $white = imagecolorallocate($this->_resource, 255, 255, 255);$/;"	v
width	library\Zend\Barcode\Renderer\Image.php	/^                    $width = ($box[2] - $box[0]) \/ 2;$/;"	v
width	library\Zend\Barcode\Renderer\Image.php	/^                    $width = ($box[2] - $box[0]);$/;"	v
width	library\Zend\Barcode\Renderer\Image.php	/^                    $width = 0;$/;"	v
width	library\Zend\Barcode\Renderer\Image.php	/^                $width = $this->_barcode->getWidth(true);$/;"	v
width	library\Zend\Barcode\Renderer\Image.php	/^                $width = $this->_userWidth;$/;"	v
width	library\Zend\Barcode\Renderer\Image.php	/^            $width = $barcodeWidth;$/;"	v
Zend_Barcode_Renderer_Pdf	library\Zend\Barcode\Renderer\Pdf.php	/^class Zend_Barcode_Renderer_Pdf extends Zend_Barcode_Renderer_RendererAbstract$/;"	c
alignment	library\Zend\Barcode\Renderer\Pdf.php	/^        $alignment = 'center',$/;"	v
angle	library\Zend\Barcode\Renderer\Pdf.php	/^        $angle = pi() * $orientation \/ 180;$/;"	v
characters	library\Zend\Barcode\Renderer\Pdf.php	/^        $characters    = array();$/;"	v
color	library\Zend\Barcode\Renderer\Pdf.php	/^        $color = new Zend_Pdf_Color_Rgb($/;"	v
drawingString	library\Zend\Barcode\Renderer\Pdf.php	/^        $drawingString = iconv('UTF-8', 'UTF-16BE\/\/IGNORE', $text);$/;"	v
fillType	library\Zend\Barcode\Renderer\Pdf.php	/^        $fillType = ($filled)$/;"	v
glyphs	library\Zend\Barcode\Renderer\Pdf.php	/^        $glyphs = $font->glyphNumbersForCharacters($characters);$/;"	v
left	library\Zend\Barcode\Renderer\Pdf.php	/^        $left = $position[0] * $this->_moduleSize + $this->_leftOffset;$/;"	v
orientation	library\Zend\Barcode\Renderer\Pdf.php	/^        $orientation = 0$/;"	v
page	library\Zend\Barcode\Renderer\Pdf.php	/^        $page  = $this->_resource->pages[$this->_page];$/;"	v
page	library\Zend\Barcode\Renderer\Pdf.php	/^        $page = $this->_resource->pages[$this->_page];$/;"	v
pdfPage	library\Zend\Barcode\Renderer\Pdf.php	/^        $pdfPage = $this->_resource->pages[$this->_page];$/;"	v
stringWidth	library\Zend\Barcode\Renderer\Pdf.php	/^        $stringWidth = (array_sum($widths) \/ $font->getUnitsPerEm()) * $fontSize;$/;"	v
top	library\Zend\Barcode\Renderer\Pdf.php	/^        $top  = $page->getHeight() - $position[1] * $this->_moduleSize - $this->_topOffset;$/;"	v
width	library\Zend\Barcode\Renderer\Pdf.php	/^        $width = $this->widthForStringUsingFontSize($/;"	v
widths	library\Zend\Barcode\Renderer\Pdf.php	/^        $widths = $font->widthsForGlyphs($glyphs);$/;"	v
alignment	library\Zend\Barcode\Renderer\RendererAbstract.php	/^        $alignment = 'center',$/;"	v
barcode	library\Zend\Barcode\Renderer\RendererAbstract.php	/^                $barcode = Zend_Barcode::makeBarcode($/;"	v
barcodeHeight	library\Zend\Barcode\Renderer\RendererAbstract.php	/^        $barcodeHeight = $this->_barcode->getHeight(true) * $this->_moduleSize;$/;"	v
barcodeWidth	library\Zend\Barcode\Renderer\RendererAbstract.php	/^        $barcodeWidth = $this->_barcode->getWidth(true) * $this->_moduleSize;$/;"	v
instructionList	library\Zend\Barcode\Renderer\RendererAbstract.php	/^        $instructionList = $this->_barcode->draw();$/;"	v
method	library\Zend\Barcode\Renderer\RendererAbstract.php	/^            $method = 'set' . $key;$/;"	v
options	library\Zend\Barcode\Renderer\RendererAbstract.php	/^            $options = $options->toArray();$/;"	v
orientation	library\Zend\Barcode\Renderer\RendererAbstract.php	/^        $orientation = 0$/;"	v
renderable	library\Zend\Barcode\Renderer\RendererAbstract.php	/^                $renderable = $e->isRenderable();$/;"	v
renderable	library\Zend\Barcode\Renderer\RendererAbstract.php	/^            $renderable = false;$/;"	v
Zend_Barcode_Renderer_Svg	library\Zend\Barcode\Renderer\Svg.php	/^class Zend_Barcode_Renderer_Svg extends Zend_Barcode_Renderer_RendererAbstract$/;"	c
backgroundColor	library\Zend\Barcode\Renderer\Svg.php	/^        $backgroundColor = $this->_barcode->getBackgroundColor();$/;"	v
barcodeHeight	library\Zend\Barcode\Renderer\Svg.php	/^        $barcodeHeight = $this->_barcode->getHeight(true);$/;"	v
barcodeWidth	library\Zend\Barcode\Renderer\Svg.php	/^        $barcodeWidth  = $this->_barcode->getWidth(true);$/;"	v
color	library\Zend\Barcode\Renderer\Svg.php	/^        $color = 'rgb(' . implode(', ', array(($color & 0xFF0000) >> 16,$/;"	v
element	library\Zend\Barcode\Renderer\Svg.php	/^        $element = $this->_resource->createElement($tagName);$/;"	v
height	library\Zend\Barcode\Renderer\Svg.php	/^                $height = $this->_barcode->getHeight(true);$/;"	v
height	library\Zend\Barcode\Renderer\Svg.php	/^            $height = $this->_rootElement->getAttribute('height');$/;"	v
height	library\Zend\Barcode\Renderer\Svg.php	/^            $height = $this->_userHeight;$/;"	v
height	library\Zend\Barcode\Renderer\Svg.php	/^            $height = (float) $this->_rootElement->getAttribute('height');$/;"	v
height	library\Zend\Barcode\Renderer\Svg.php	/^        $height = $barcodeHeight;$/;"	v
imageBackgroundColor	library\Zend\Barcode\Renderer\Svg.php	/^        $imageBackgroundColor = 'rgb(' . implode(', ', array(($backgroundColor & 0xFF0000) >> 16,$/;"	v
newElement	library\Zend\Barcode\Renderer\Svg.php	/^        $newElement = $this->_createElement($tagName, $attributes, $textContent);$/;"	v
newPoints	library\Zend\Barcode\Renderer\Svg.php	/^        $newPoints = array($/;"	v
newPoints	library\Zend\Barcode\Renderer\Svg.php	/^        $newPoints = implode(' ', $newPoints);$/;"	v
orientation	library\Zend\Barcode\Renderer\Svg.php	/^        $orientation = $this->getBarcode()->getOrientation();$/;"	v
textAnchor	library\Zend\Barcode\Renderer\Svg.php	/^                $textAnchor = 'end';$/;"	v
textAnchor	library\Zend\Barcode\Renderer\Svg.php	/^                $textAnchor = 'middle';$/;"	v
textAnchor	library\Zend\Barcode\Renderer\Svg.php	/^                $textAnchor = 'start';$/;"	v
width	library\Zend\Barcode\Renderer\Svg.php	/^                $width = (float) $this->_barcode->getWidth(true);$/;"	v
width	library\Zend\Barcode\Renderer\Svg.php	/^            $width = $this->_rootElement->getAttribute('width');$/;"	v
width	library\Zend\Barcode\Renderer\Svg.php	/^            $width = $this->_userWidth;$/;"	v
width	library\Zend\Barcode\Renderer\Svg.php	/^        $width = $barcodeWidth;$/;"	v
backend	library\Zend\Cache.php	/^            $backend  = self::_normalizeName($backend);$/;"	v
backendClass	library\Zend\Cache.php	/^                $backendClass = $backend;$/;"	v
backendClass	library\Zend\Cache.php	/^                $backendClass = 'Zend_Cache_Backend_' . $backend;$/;"	v
backendClass	library\Zend\Cache.php	/^            $backendClass = 'Zend_Cache_Backend_' . $backend;$/;"	v
backendObject	library\Zend\Cache.php	/^                $backendObject = $backend;$/;"	v
backendObject	library\Zend\Cache.php	/^            $backendObject = self::_makeBackend($backend, $backendOptions, $customBackendNaming, $autoload);$/;"	v
file	library\Zend\Cache.php	/^                $file = str_replace('_', DIRECTORY_SEPARATOR, $backendClass) . '.php';$/;"	v
file	library\Zend\Cache.php	/^                $file = str_replace('_', DIRECTORY_SEPARATOR, $frontendClass) . '.php';$/;"	v
frontend	library\Zend\Cache.php	/^            $frontend = self::_normalizeName($frontend);$/;"	v
frontendClass	library\Zend\Cache.php	/^                $frontendClass = $frontend;$/;"	v
frontendClass	library\Zend\Cache.php	/^                $frontendClass = 'Zend_Cache_Frontend_' . $frontend;$/;"	v
frontendClass	library\Zend\Cache.php	/^            $frontendClass = 'Zend_Cache_' . ($frontend != 'Core' ? 'Frontend_' : '') . $frontend;$/;"	v
frontendObject	library\Zend\Cache.php	/^                $frontendObject = $frontend;$/;"	v
frontendObject	library\Zend\Cache.php	/^            $frontendObject = self::_makeFrontend($frontend, $frontendOptions, $customFrontendNaming, $autoload);$/;"	v
name	library\Zend\Cache.php	/^            $name = 'ZendServer_' . substr($name, strlen('ZendServer'));$/;"	v
name	library\Zend\Cache.php	/^        $name = str_replace(' ', '', $name);$/;"	v
name	library\Zend\Cache.php	/^        $name = str_replace(array('-', '_', '.'), ' ', $name);$/;"	v
name	library\Zend\Cache.php	/^        $name = ucfirst(strtolower($name));$/;"	v
name	library\Zend\Cache.php	/^        $name = ucwords($name);$/;"	v
Zend_Cache_Backend	library\Zend\Cache\Backend.php	/^class Zend_Cache_Backend$/;"	c
dir	library\Zend\Cache\Backend.php	/^                        $dir = realpath($tab[$key] . '\\\\temp');$/;"	v
dir	library\Zend\Cache\Backend.php	/^                        $dir = realpath($tab[$key]);$/;"	v
dir	library\Zend\Cache\Backend.php	/^            $dir = realpath($upload);$/;"	v
dir	library\Zend\Cache\Backend.php	/^            $dir = realpath(dirname($tempFile));$/;"	v
dir	library\Zend\Cache\Backend.php	/^            $dir = sys_get_temp_dir();$/;"	v
logger	library\Zend\Cache\Backend.php	/^        $logger = $this->_directives['logger'];$/;"	v
logger	library\Zend\Cache\Backend.php	/^        $logger = new Zend_Log(new Zend_Log_Writer_Stream('php:\/\/output'));$/;"	v
name	library\Zend\Cache\Backend.php	/^            $name = strtolower($name);$/;"	v
name	library\Zend\Cache\Backend.php	/^        $name = strtolower($name);$/;"	v
tempFile	library\Zend\Cache\Backend.php	/^        $tempFile = tempnam(md5(uniqid(rand(), TRUE)), '');$/;"	v
tmpdir	library\Zend\Cache\Backend.php	/^        $tmpdir = array();$/;"	v
upload	library\Zend\Cache\Backend.php	/^        $upload = ini_get('upload_tmp_dir');$/;"	v
Zend_Cache_Backend_Apc	library\Zend\Cache\Backend\Apc.php	/^class Zend_Cache_Backend_Apc extends Zend_Cache_Backend implements Zend_Cache_Backend_ExtendedInterface$/;"	c
array	library\Zend\Cache\Backend\Apc.php	/^        $array = apc_cache_info('user', false);$/;"	v
data	library\Zend\Cache\Backend\Apc.php	/^            $data = $tmp[0];$/;"	v
lifetime	library\Zend\Cache\Backend\Apc.php	/^            $lifetime = $tmp[2];$/;"	v
lifetime	library\Zend\Cache\Backend\Apc.php	/^        $lifetime = $this->getLifetime($specificLifetime);$/;"	v
mem	library\Zend\Cache\Backend\Apc.php	/^        $mem = apc_sma_info(true);$/;"	v
memAvailable	library\Zend\Cache\Backend\Apc.php	/^        $memAvailable= $mem['avail_mem'];$/;"	v
memSize	library\Zend\Cache\Backend\Apc.php	/^        $memSize    = $mem['num_seg'] * $mem['seg_size'];$/;"	v
memUsed	library\Zend\Cache\Backend\Apc.php	/^        $memUsed = $memSize - $memAvailable;$/;"	v
mtime	library\Zend\Cache\Backend\Apc.php	/^            $mtime = $tmp[1];$/;"	v
newLifetime	library\Zend\Cache\Backend\Apc.php	/^            $newLifetime = $lifetime - (time() - $mtime) + $extraLifetime;$/;"	v
records	library\Zend\Cache\Backend\Apc.php	/^        $records = $array['cache_list'];$/;"	v
res	library\Zend\Cache\Backend\Apc.php	/^        $res = array();$/;"	v
result	library\Zend\Cache\Backend\Apc.php	/^        $result = apc_store($id, array($data, time(), $lifetime), $lifetime);$/;"	v
tmp	library\Zend\Cache\Backend\Apc.php	/^        $tmp = apc_fetch($id);$/;"	v
Zend_Cache_Backend_BlackHole	library\Zend\Cache\Backend\BlackHole.php	/^class Zend_Cache_Backend_BlackHole$/;"	c
Zend_Cache_Backend_File	library\Zend\Cache\Backend\File.php	/^class Zend_Cache_Backend_File extends Zend_Cache_Backend implements Zend_Cache_Backend_ExtendedInterface$/;"	c
boolMetadata	library\Zend\Cache\Backend\File.php	/^        $boolMetadata = $this->_delMetadatas($id);$/;"	v
boolRemove	library\Zend\Cache\Backend\File.php	/^        $boolRemove   = $this->_remove($file);$/;"	v
data	library\Zend\Cache\Backend\File.php	/^        $data = $this->_fileGetContents($file);$/;"	v
f	library\Zend\Cache\Backend\File.php	/^        $f = @fopen($file, 'ab+');$/;"	v
f	library\Zend\Cache\Backend\File.php	/^        $f = @fopen($file, 'rb');$/;"	v
file	library\Zend\Cache\Backend\File.php	/^        $file = $this->_file($id);$/;"	v
file	library\Zend\Cache\Backend\File.php	/^        $file = $this->_metadatasFile($id);$/;"	v
fileName	library\Zend\Cache\Backend\File.php	/^                $fileName = basename($file);$/;"	v
fileName	library\Zend\Cache\Backend\File.php	/^        $fileName = $this->_idToFileName($id);$/;"	v
fileName	library\Zend\Cache\Backend\File.php	/^        $fileName = $this->_idToFileName('internal-metadatas---' . $id);$/;"	v
free	library\Zend\Cache\Backend\File.php	/^        $free = disk_free_space($this->_options['cache_dir']);$/;"	v
glob	library\Zend\Cache\Backend\File.php	/^        $glob = @glob($dir . $prefix . '--*');$/;"	v
hash	library\Zend\Cache\Backend\File.php	/^            $hash = $this->_hash($data, $this->_options['read_control_type']);$/;"	v
hash	library\Zend\Cache\Backend\File.php	/^            $hash = '';$/;"	v
hash	library\Zend\Cache\Backend\File.php	/^            $hash = hash('adler32', $id);$/;"	v
hashControl	library\Zend\Cache\Backend\File.php	/^            $hashControl = $metadatas['hash'];$/;"	v
hashData	library\Zend\Cache\Backend\File.php	/^            $hashData = $this->_hash($data, $this->_options['read_control_type']);$/;"	v
id	library\Zend\Cache\Backend\File.php	/^                $id = $this->_fileNameToId($fileName);$/;"	v
id	library\Zend\Cache\Backend\File.php	/^        $id = $this->_fileNameToId($fileName);$/;"	v
matching	library\Zend\Cache\Backend\File.php	/^                                $matching = false;$/;"	v
matching	library\Zend\Cache\Backend\File.php	/^                                $matching = true;$/;"	v
matching	library\Zend\Cache\Backend\File.php	/^                        $matching = false;$/;"	v
matching	library\Zend\Cache\Backend\File.php	/^                        $matching = true;$/;"	v
metadatas	library\Zend\Cache\Backend\File.php	/^                    $metadatas = array('expire' => 1, 'tags' => array());$/;"	v
metadatas	library\Zend\Cache\Backend\File.php	/^                $metadatas = $this->_getMetadatas($id);$/;"	v
metadatas	library\Zend\Cache\Backend\File.php	/^            $metadatas = $this->_loadMetadatas($id);$/;"	v
metadatas	library\Zend\Cache\Backend\File.php	/^        $metadatas = $this->_getMetadatas($id);$/;"	v
metadatas	library\Zend\Cache\Backend\File.php	/^        $metadatas = array($/;"	v
n	library\Zend\Cache\Backend\File.php	/^            $n = (int) ($this->_options['metadatas_array_max_size'] \/ 10);$/;"	v
newMetadatas	library\Zend\Cache\Backend\File.php	/^        $newMetadatas = array($/;"	v
partsArray	library\Zend\Cache\Backend\File.php	/^        $partsArray = $this->_path($id, true);$/;"	v
partsArray	library\Zend\Cache\Backend\File.php	/^        $partsArray = array();$/;"	v
path	library\Zend\Cache\Backend\File.php	/^        $path = $this->_path($id);$/;"	v
prefix	library\Zend\Cache\Backend\File.php	/^        $prefix = $this->_options['file_name_prefix'];$/;"	v
recursiveRs	library\Zend\Cache\Backend\File.php	/^                $recursiveRs =  $this->_get($file . DIRECTORY_SEPARATOR, $mode, $tags);$/;"	v
res	library\Zend\Cache\Backend\File.php	/^                            $res = $this->_remove($file);$/;"	v
res	library\Zend\Cache\Backend\File.php	/^                        $res = $this->remove($id);$/;"	v
res	library\Zend\Cache\Backend\File.php	/^        $res = $this->_filePutContents($file, $data);$/;"	v
res	library\Zend\Cache\Backend\File.php	/^        $res = $this->_setMetadatas($id, $metadatas);$/;"	v
res	library\Zend\Cache\Backend\File.php	/^        $res = $this->_setMetadatas($id, $newMetadatas);$/;"	v
result	library\Zend\Cache\Backend\File.php	/^                            $result = $this->remove($id) && $result;$/;"	v
result	library\Zend\Cache\Backend\File.php	/^                        $result = $result && $res;$/;"	v
result	library\Zend\Cache\Backend\File.php	/^                        $result = array_unique(array_merge($result, $metadatas['tags']));$/;"	v
result	library\Zend\Cache\Backend\File.php	/^                    $result = array_unique(array_merge($result, $recursiveRs));$/;"	v
result	library\Zend\Cache\Backend\File.php	/^                $result = $this->_clean($file . DIRECTORY_SEPARATOR, $mode, $tags) && $result;$/;"	v
result	library\Zend\Cache\Backend\File.php	/^                $result = true;$/;"	v
result	library\Zend\Cache\Backend\File.php	/^            $result = $this->_saveMetadatas($id, $metadatas);$/;"	v
result	library\Zend\Cache\Backend\File.php	/^            $result = stream_get_contents($f);$/;"	v
result	library\Zend\Cache\Backend\File.php	/^        $result = $prefix . '---' . $id;$/;"	v
result	library\Zend\Cache\Backend\File.php	/^        $result = $this->_fileGetContents($file);$/;"	v
result	library\Zend\Cache\Backend\File.php	/^        $result = $this->_filePutContents($file, serialize($metadatas));$/;"	v
result	library\Zend\Cache\Backend\File.php	/^        $result = array();$/;"	v
result	library\Zend\Cache\Backend\File.php	/^        $result = false;$/;"	v
result	library\Zend\Cache\Backend\File.php	/^        $result = true;$/;"	v
root	library\Zend\Cache\Backend\File.php	/^                $root = $root . $prefix . '--' . substr($hash, 0, $i + 1) . DIRECTORY_SEPARATOR;$/;"	v
root	library\Zend\Cache\Backend\File.php	/^        $root = $this->_options['cache_dir'];$/;"	v
tmp	library\Zend\Cache\Backend\File.php	/^            $tmp = @fwrite($f, $string);$/;"	v
tmp	library\Zend\Cache\Backend\File.php	/^        $tmp = @unserialize($result);$/;"	v
total	library\Zend\Cache\Backend\File.php	/^        $total = disk_total_space($this->_options['cache_dir']);$/;"	v
value	library\Zend\Cache\Backend\File.php	/^            $value = rtrim(realpath($value), '\\\\\/') . DIRECTORY_SEPARATOR;$/;"	v
Zend_Cache_Backend_Libmemcached	library\Zend\Cache\Backend\Libmemcached.php	/^class Zend_Cache_Backend_Libmemcached extends Zend_Cache_Backend implements Zend_Cache_Backend_ExtendedInterface$/;"	c
data	library\Zend\Cache\Backend\Libmemcached.php	/^            $data     = $tmp[0];$/;"	v
eachSize	library\Zend\Cache\Backend\Libmemcached.php	/^            $eachSize = $mem['limit_maxbytes'];$/;"	v
eachUsed	library\Zend\Cache\Backend\Libmemcached.php	/^                $eachUsed = $eachSize;$/;"	v
eachUsed	library\Zend\Cache\Backend\Libmemcached.php	/^            $eachUsed = $mem['bytes'];$/;"	v
lifetime	library\Zend\Cache\Backend\Libmemcached.php	/^            $lifetime = $tmp[2];$/;"	v
lifetime	library\Zend\Cache\Backend\Libmemcached.php	/^        $lifetime = $this->getLifetime($specificLifetime);$/;"	v
lifetime	library\Zend\Cache\Backend\Libmemcached.php	/^        $lifetime = $this->getLifetime(false);$/;"	v
memSize	library\Zend\Cache\Backend\Libmemcached.php	/^        $memSize = null;$/;"	v
memUsed	library\Zend\Cache\Backend\Libmemcached.php	/^        $memUsed = null;$/;"	v
mems	library\Zend\Cache\Backend\Libmemcached.php	/^        $mems = $this->_memcache->getStats();$/;"	v
mtime	library\Zend\Cache\Backend\Libmemcached.php	/^            $mtime    = $tmp[1];$/;"	v
newLifetime	library\Zend\Cache\Backend\Libmemcached.php	/^            $newLifetime = $lifetime - (time() - $mtime) + $extraLifetime;$/;"	v
optConst	library\Zend\Cache\Backend\Libmemcached.php	/^                $optConst = 'Memcached::OPT_' . strtoupper($name);$/;"	v
optId	library\Zend\Cache\Backend\Libmemcached.php	/^                    $optId = constant($optConst);$/;"	v
optId	library\Zend\Cache\Backend\Libmemcached.php	/^                $optId = $name;$/;"	v
optId	library\Zend\Cache\Backend\Libmemcached.php	/^            $optId = null;$/;"	v
result	library\Zend\Cache\Backend\Libmemcached.php	/^                $result = $this->_memcache->set($id, array($data, time(), $newLifetime), $newLifetime);$/;"	v
result	library\Zend\Cache\Backend\Libmemcached.php	/^        $result = @$this->_memcache->set($id, array($data, time(), $lifetime), $lifetime);$/;"	v
rsCode	library\Zend\Cache\Backend\Libmemcached.php	/^                    $rsCode = $this->_memcache->getResultCode();$/;"	v
rsCode	library\Zend\Cache\Backend\Libmemcached.php	/^            $rsCode = $this->_memcache->getResultCode();$/;"	v
rsMsg	library\Zend\Cache\Backend\Libmemcached.php	/^                    $rsMsg  = $this->_memcache->getResultMessage();$/;"	v
rsMsg	library\Zend\Cache\Backend\Libmemcached.php	/^            $rsMsg  = $this->_memcache->getResultMessage();$/;"	v
servers	library\Zend\Cache\Backend\Libmemcached.php	/^        $servers = array();$/;"	v
tmp	library\Zend\Cache\Backend\Libmemcached.php	/^        $tmp = $this->_memcache->get($id);$/;"	v
value	library\Zend\Cache\Backend\Libmemcached.php	/^                $value = array(0 => $value); \/\/ let's transform it into a classical array of associative arrays$/;"	v
value	library\Zend\Cache\Backend\Libmemcached.php	/^            $value = $this->_options['servers'];$/;"	v
Zend_Cache_Backend_Memcached	library\Zend\Cache\Backend\Memcached.php	/^class Zend_Cache_Backend_Memcached extends Zend_Cache_Backend implements Zend_Cache_Backend_ExtendedInterface$/;"	c
data	library\Zend\Cache\Backend\Memcached.php	/^            $data = $tmp[0];$/;"	v
eachSize	library\Zend\Cache\Backend\Memcached.php	/^            $eachSize = $mem['limit_maxbytes'];$/;"	v
eachUsed	library\Zend\Cache\Backend\Memcached.php	/^                $eachUsed = $eachSize;$/;"	v
eachUsed	library\Zend\Cache\Backend\Memcached.php	/^            $eachUsed = $mem['bytes'];$/;"	v
flag	library\Zend\Cache\Backend\Memcached.php	/^            $flag = 0;$/;"	v
flag	library\Zend\Cache\Backend\Memcached.php	/^            $flag = MEMCACHE_COMPRESSED;$/;"	v
lifetime	library\Zend\Cache\Backend\Memcached.php	/^            $lifetime = $tmp[2];$/;"	v
lifetime	library\Zend\Cache\Backend\Memcached.php	/^        $lifetime = $this->getLifetime($specificLifetime);$/;"	v
lifetime	library\Zend\Cache\Backend\Memcached.php	/^        $lifetime = $this->getLifetime(false);$/;"	v
memSize	library\Zend\Cache\Backend\Memcached.php	/^        $memSize = null;$/;"	v
memUsed	library\Zend\Cache\Backend\Memcached.php	/^        $memUsed = null;$/;"	v
mems	library\Zend\Cache\Backend\Memcached.php	/^        $mems = $this->_memcache->getExtendedStats();$/;"	v
mtime	library\Zend\Cache\Backend\Memcached.php	/^            $mtime = $tmp[1];$/;"	v
newLifetime	library\Zend\Cache\Backend\Memcached.php	/^            $newLifetime = $lifetime - (time() - $mtime) + $extraLifetime;$/;"	v
result	library\Zend\Cache\Backend\Memcached.php	/^                $result = $this->_memcache->set($id, array($data, time(), $newLifetime), $flag, $newLifetime);$/;"	v
result	library\Zend\Cache\Backend\Memcached.php	/^        $result = @$this->_memcache->set($id, array($data, time(), $lifetime), $flag, $lifetime);$/;"	v
tmp	library\Zend\Cache\Backend\Memcached.php	/^        $tmp = $this->_memcache->get($id);$/;"	v
value	library\Zend\Cache\Backend\Memcached.php	/^                $value = array(0 => $value); \/\/ let's transform it into a classical array of associative arrays$/;"	v
value	library\Zend\Cache\Backend\Memcached.php	/^            $value= $this->_options['servers'];$/;"	v
Zend_Cache_Backend_Sqlite	library\Zend\Cache\Backend\Sqlite.php	/^class Zend_Cache_Backend_Sqlite extends Zend_Cache_Backend implements Zend_Cache_Backend_ExtendedInterface$/;"	c
data	library\Zend\Cache\Backend\Sqlite.php	/^        $data = @sqlite_escape_string($data);$/;"	v
db	library\Zend\Cache\Backend\Sqlite.php	/^        $db = $this->_getConnection();$/;"	v
dir	library\Zend\Cache\Backend\Sqlite.php	/^        $dir = dirname($this->_options['cache_db_complete_path']);$/;"	v
expire	library\Zend\Cache\Backend\Sqlite.php	/^            $expire = $mktime + $lifetime;$/;"	v
expire	library\Zend\Cache\Backend\Sqlite.php	/^            $expire = 0;$/;"	v
expire	library\Zend\Cache\Backend\Sqlite.php	/^        $expire = @sqlite_fetch_single($res);$/;"	v
first	library\Zend\Cache\Backend\Sqlite.php	/^                $first = false;$/;"	v
first	library\Zend\Cache\Backend\Sqlite.php	/^        $first = true;$/;"	v
free	library\Zend\Cache\Backend\Sqlite.php	/^        $free = disk_free_space($dir);$/;"	v
id	library\Zend\Cache\Backend\Sqlite.php	/^            $id = $row['id'];$/;"	v
ids	library\Zend\Cache\Backend\Sqlite.php	/^                $ids = $ids2;$/;"	v
ids	library\Zend\Cache\Backend\Sqlite.php	/^                $ids = $this->getIdsMatchingAnyTags($tags);$/;"	v
ids	library\Zend\Cache\Backend\Sqlite.php	/^                $ids = $this->getIdsMatchingTags($tags);$/;"	v
ids	library\Zend\Cache\Backend\Sqlite.php	/^                $ids = $this->getIdsNotMatchingTags($tags);$/;"	v
ids	library\Zend\Cache\Backend\Sqlite.php	/^                $ids = array_intersect($ids, $ids2);$/;"	v
ids	library\Zend\Cache\Backend\Sqlite.php	/^                $ids = array_merge($ids, $ids2);$/;"	v
ids	library\Zend\Cache\Backend\Sqlite.php	/^        $ids = array();$/;"	v
ids2	library\Zend\Cache\Backend\Sqlite.php	/^            $ids2 = array();$/;"	v
lifetime	library\Zend\Cache\Backend\Sqlite.php	/^        $lifetime = $this->getLifetime($specificLifetime);$/;"	v
matching	library\Zend\Cache\Backend\Sqlite.php	/^                    $matching = true;$/;"	v
matching	library\Zend\Cache\Backend\Sqlite.php	/^            $matching = false;$/;"	v
mktime	library\Zend\Cache\Backend\Sqlite.php	/^                $mktime = time();$/;"	v
mktime	library\Zend\Cache\Backend\Sqlite.php	/^        $mktime = time();$/;"	v
nbr	library\Zend\Cache\Backend\Sqlite.php	/^                $nbr = (int) @sqlite_fetch_single($res);$/;"	v
newExpire	library\Zend\Cache\Backend\Sqlite.php	/^        $newExpire = $expire + $extraLifetime;$/;"	v
rand	library\Zend\Cache\Backend\Sqlite.php	/^            $rand = rand(1, $this->_options['automatic_vacuum_factor']);$/;"	v
res	library\Zend\Cache\Backend\Sqlite.php	/^                $res = $this->_query("SELECT COUNT(*) AS nbr FROM tag WHERE name='$tag' AND id='$id'");$/;"	v
res	library\Zend\Cache\Backend\Sqlite.php	/^            $res = $this->_query("SELECT DISTINCT(id) AS id FROM tag WHERE name='$tag'");$/;"	v
res	library\Zend\Cache\Backend\Sqlite.php	/^            $res = $this->_registerTag($id, $tag) && $res;$/;"	v
res	library\Zend\Cache\Backend\Sqlite.php	/^            $res = @sqlite_query($db, $query);$/;"	v
res	library\Zend\Cache\Backend\Sqlite.php	/^        $res = $this->_query("DELETE FROM TAG WHERE name='$tag' AND id='$id'");$/;"	v
res	library\Zend\Cache\Backend\Sqlite.php	/^        $res = $this->_query("INSERT INTO tag (name, id) VALUES ('$tag', '$id')");$/;"	v
res	library\Zend\Cache\Backend\Sqlite.php	/^        $res = $this->_query("SELECT COUNT(*) AS nbr FROM cache WHERE id='$id'");$/;"	v
res	library\Zend\Cache\Backend\Sqlite.php	/^        $res = $this->_query("SELECT DISTINCT(name) AS name FROM tag");$/;"	v
res	library\Zend\Cache\Backend\Sqlite.php	/^        $res = $this->_query("SELECT id FROM cache WHERE (expire=0 OR expire>" . time() . ")");$/;"	v
res	library\Zend\Cache\Backend\Sqlite.php	/^        $res = $this->_query("SELECT id FROM cache");$/;"	v
res	library\Zend\Cache\Backend\Sqlite.php	/^        $res = $this->_query("SELECT lastModified,expire FROM cache WHERE id='$id'");$/;"	v
res	library\Zend\Cache\Backend\Sqlite.php	/^        $res = $this->_query("SELECT name FROM tag WHERE id='$id'");$/;"	v
res	library\Zend\Cache\Backend\Sqlite.php	/^        $res = $this->_query("UPDATE cache SET lastModified=" . time() . ", expire=$newExpire WHERE id='$id'");$/;"	v
res	library\Zend\Cache\Backend\Sqlite.php	/^        $res = $this->_query($sql);$/;"	v
res	library\Zend\Cache\Backend\Sqlite.php	/^        $res = true;$/;"	v
res1	library\Zend\Cache\Backend\Sqlite.php	/^                $res1 = $this->_query("DELETE FROM tag WHERE id IN (SELECT id FROM cache WHERE expire>0 AND expire<=$mktime)");$/;"	v
res1	library\Zend\Cache\Backend\Sqlite.php	/^                $res1 = $this->_query('DELETE FROM cache');$/;"	v
res2	library\Zend\Cache\Backend\Sqlite.php	/^                $res2 = $this->_query("DELETE FROM cache WHERE expire>0 AND expire<=$mktime");$/;"	v
res2	library\Zend\Cache\Backend\Sqlite.php	/^                $res2 = $this->_query('DELETE FROM tag');$/;"	v
result	library\Zend\Cache\Backend\Sqlite.php	/^                    $result = $this->remove($id) && $result;$/;"	v
result	library\Zend\Cache\Backend\Sqlite.php	/^                $result = true;$/;"	v
result	library\Zend\Cache\Backend\Sqlite.php	/^        $result = $this->_query("SELECT num FROM version");$/;"	v
result	library\Zend\Cache\Backend\Sqlite.php	/^        $result = $this->_query($sql);$/;"	v
result	library\Zend\Cache\Backend\Sqlite.php	/^        $result = array();$/;"	v
result1	library\Zend\Cache\Backend\Sqlite.php	/^        $result1 = @sqlite_fetch_single($res);$/;"	v
result2	library\Zend\Cache\Backend\Sqlite.php	/^        $result2 = $this->_query("DELETE FROM cache WHERE id='$id'");$/;"	v
result3	library\Zend\Cache\Backend\Sqlite.php	/^        $result3 = $this->_query("DELETE FROM tag WHERE id='$id'");$/;"	v
return	library\Zend\Cache\Backend\Sqlite.php	/^        $return = $this->_clean($mode, $tags);$/;"	v
row	library\Zend\Cache\Backend\Sqlite.php	/^        $row = @sqlite_fetch_array($res, SQLITE_ASSOC);$/;"	v
row	library\Zend\Cache\Backend\Sqlite.php	/^        $row = @sqlite_fetch_array($result);$/;"	v
rows	library\Zend\Cache\Backend\Sqlite.php	/^            $rows = @sqlite_fetch_all($res, SQLITE_ASSOC);$/;"	v
rows	library\Zend\Cache\Backend\Sqlite.php	/^        $rows = @sqlite_fetch_all($res, SQLITE_ASSOC);$/;"	v
sql	library\Zend\Cache\Backend\Sqlite.php	/^            $sql = $sql . " AND (expire=0 OR expire>" . time() . ')';$/;"	v
sql	library\Zend\Cache\Backend\Sqlite.php	/^        $sql = "INSERT INTO cache (id, content, lastModified, expire) VALUES ('$id', '$data', $mktime, $expire)";$/;"	v
sql	library\Zend\Cache\Backend\Sqlite.php	/^        $sql = "SELECT content FROM cache WHERE id='$id'";$/;"	v
sql	library\Zend\Cache\Backend\Sqlite.php	/^        $sql = "SELECT expire FROM cache WHERE id='$id' AND (expire=0 OR expire>" . time() . ')';$/;"	v
sql	library\Zend\Cache\Backend\Sqlite.php	/^        $sql = "SELECT lastModified FROM cache WHERE id='$id' AND (expire=0 OR expire>" . time() . ')';$/;"	v
tags	library\Zend\Cache\Backend\Sqlite.php	/^        $tags = array();$/;"	v
time	library\Zend\Cache\Backend\Sqlite.php	/^        $time = time() - 1;$/;"	v
total	library\Zend\Cache\Backend\Sqlite.php	/^        $total = disk_total_space($dir);$/;"	v
Zend_Cache_Backend_Static	library\Zend\Cache\Backend\Static.php	/^class Zend_Cache_Backend_Static$/;"	c
base	library\Zend\Cache\Backend\Static.php	/^        $base = realpath($this->_options['public_dir']);$/;"	v
content	library\Zend\Cache\Backend\Static.php	/^            $content = file_get_contents($file);$/;"	v
data	library\Zend\Cache\Backend\Static.php	/^            $data = $dataUnserialized['data'];$/;"	v
data	library\Zend\Cache\Backend\Static.php	/^            $data = $data[0];$/;"	v
data	library\Zend\Cache\Backend\Static.php	/^            $data = unserialize($data);$/;"	v
dataUnserialized	library\Zend\Cache\Backend\Static.php	/^            $dataUnserialized = unserialize($data);$/;"	v
difference	library\Zend\Cache\Backend\Static.php	/^                    $difference = array_diff($tags, $this->_tagged[$url]['tags']);$/;"	v
directory	library\Zend\Cache\Backend\Static.php	/^        $directory = $pathName . '\/' . $fileName;$/;"	v
ext	library\Zend\Cache\Backend\Static.php	/^        $ext = $this->_options['file_extension'];$/;"	v
extension	library\Zend\Cache\Backend\Static.php	/^            $extension = $this->_options['file_extension'];$/;"	v
extension	library\Zend\Cache\Backend\Static.php	/^            $extension = $this->_tagged[$id]['extension'];$/;"	v
extension	library\Zend\Cache\Backend\Static.php	/^            $extension = '.' . ltrim($data[1], '.');$/;"	v
extension	library\Zend\Cache\Backend\Static.php	/^        $extension = null;$/;"	v
file	library\Zend\Cache\Backend\Static.php	/^        $file      = $pathName . '\/' . $fileName . $this->_options['file_extension'];$/;"	v
file	library\Zend\Cache\Backend\Static.php	/^        $file     = $pathName . '\/' . $fileName . $extension;$/;"	v
file	library\Zend\Cache\Backend\Static.php	/^        $file     = realpath($pathName) . '\/' . $fileName . $extension;$/;"	v
file	library\Zend\Cache\Backend\Static.php	/^        $file     = rtrim($pathName, '\/') . '\/' . $fileName . $this->_options['file_extension'];$/;"	v
file	library\Zend\Cache\Backend\Static.php	/^        $file = rtrim($pathName, '\/') . '\/' . $fileName . $ext;$/;"	v
fileName	library\Zend\Cache\Backend\Static.php	/^            $fileName = $this->_options['index_filename'];$/;"	v
fileName	library\Zend\Cache\Backend\Static.php	/^        $fileName = basename($id);$/;"	v
id	library\Zend\Cache\Backend\Static.php	/^            $id = $this->_decodeId($id);$/;"	v
id	library\Zend\Cache\Backend\Static.php	/^            $id = $this->_detectId();$/;"	v
id	library\Zend\Cache\Backend\Static.php	/^        $id = $this->_decodeId($id);$/;"	v
lastErr	library\Zend\Cache\Backend\Static.php	/^                $lastErr = error_get_last();$/;"	v
oldUmask	library\Zend\Cache\Backend\Static.php	/^            $oldUmask = umask(0);$/;"	v
path	library\Zend\Cache\Backend\Static.php	/^        $path = realpath($path);$/;"	v
pathName	library\Zend\Cache\Backend\Static.php	/^        $pathName  = $this->_options['public_dir'] . dirname($id);$/;"	v
pathName	library\Zend\Cache\Backend\Static.php	/^        $pathName = $this->_options['public_dir'] . dirname($id);$/;"	v
pathName	library\Zend\Cache\Backend\Static.php	/^        $pathName = realpath($this->_options['public_dir']) . dirname($id);$/;"	v
result	library\Zend\Cache\Backend\Static.php	/^                $result = true;$/;"	v
result	library\Zend\Cache\Backend\Static.php	/^            $result = file_put_contents($file, $data);$/;"	v
result	library\Zend\Cache\Backend\Static.php	/^            $result = file_put_contents($file, $data, LOCK_EX);$/;"	v
result	library\Zend\Cache\Backend\Static.php	/^        $result = false;$/;"	v
tagged	library\Zend\Cache\Backend\Static.php	/^                    $tagged = $this->getInnerCache()->load(self::INNER_CACHE_NAME);$/;"	v
urls	library\Zend\Cache\Backend\Static.php	/^                    $urls = array_keys($this->_tagged);$/;"	v
urls	library\Zend\Cache\Backend\Static.php	/^                $urls = array_keys($this->_tagged);$/;"	v
Zend_Cache_Backend_Test	library\Zend\Cache\Backend\Test.php	/^class Zend_Cache_Backend_Test extends Zend_Cache_Backend implements Zend_Cache_Backend_ExtendedInterface$/;"	c
Zend_Cache_Backend_TwoLevels	library\Zend\Cache\Backend\TwoLevels.php	/^class Zend_Cache_Backend_TwoLevels extends Zend_Cache_Backend implements Zend_Cache_Backend_ExtendedInterface$/;"	c
array	library\Zend\Cache\Backend\TwoLevels.php	/^        $array = unserialize($res);$/;"	v
bool	library\Zend\Cache\Backend\TwoLevels.php	/^                    $bool = $this->remove($id);$/;"	v
boolFast	library\Zend\Cache\Backend\TwoLevels.php	/^                    $boolFast = true;$/;"	v
boolFast	library\Zend\Cache\Backend\TwoLevels.php	/^                $boolFast = $this->_fastBackend->clean(Zend_Cache::CLEANING_MODE_ALL);$/;"	v
boolFast	library\Zend\Cache\Backend\TwoLevels.php	/^                $boolFast = $this->_fastBackend->remove($id);$/;"	v
boolFast	library\Zend\Cache\Backend\TwoLevels.php	/^            $boolFast = $this->_fastBackend->save($preparedData, $id, array(), $fastLifetime);$/;"	v
boolFast	library\Zend\Cache\Backend\TwoLevels.php	/^        $boolFast = $this->_fastBackend->remove($id);$/;"	v
boolFast	library\Zend\Cache\Backend\TwoLevels.php	/^        $boolFast = true;$/;"	v
boolSlow	library\Zend\Cache\Backend\TwoLevels.php	/^                $boolSlow = $this->_slowBackend->clean(Zend_Cache::CLEANING_MODE_ALL);$/;"	v
boolSlow	library\Zend\Cache\Backend\TwoLevels.php	/^            $boolSlow = $this->_slowBackend->save($preparedData, $id, $tags, $lifetime);$/;"	v
boolSlow	library\Zend\Cache\Backend\TwoLevels.php	/^        $boolSlow = $this->_slowBackend->remove($id);$/;"	v
fastLifetime	library\Zend\Cache\Backend\TwoLevels.php	/^            $fastLifetime = $this->_getFastLifetime($lifetime, $priority);$/;"	v
fastLifetime	library\Zend\Cache\Backend\TwoLevels.php	/^            $fastLifetime = (int) (2592000 \/ (11 - $priority));$/;"	v
fastLifetime	library\Zend\Cache\Backend\TwoLevels.php	/^            $fastLifetime = (int) ceil($lifetime \/ (11 - $priority));$/;"	v
fastTest	library\Zend\Cache\Backend\TwoLevels.php	/^        $fastTest = $this->_fastBackend->test($id);$/;"	v
ids	library\Zend\Cache\Backend\TwoLevels.php	/^                $ids = $this->_slowBackend->getIdsMatchingAnyTags($tags);$/;"	v
ids	library\Zend\Cache\Backend\TwoLevels.php	/^                $ids = $this->_slowBackend->getIdsMatchingTags($tags);$/;"	v
ids	library\Zend\Cache\Backend\TwoLevels.php	/^                $ids = $this->_slowBackend->getIdsNotMatchingTags($tags);$/;"	v
lifetime	library\Zend\Cache\Backend\TwoLevels.php	/^        $lifetime = $this->getLifetime($specificLifetime);$/;"	v
lt	library\Zend\Cache\Backend\TwoLevels.php	/^            $lt = 9999999999;$/;"	v
lt	library\Zend\Cache\Backend\TwoLevels.php	/^        $lt = $lifetime;$/;"	v
newFastLifetime	library\Zend\Cache\Backend\TwoLevels.php	/^            $newFastLifetime = $this->_getFastLifetime($array['lifetime'], $array['priority'], time() - $array['expire']);$/;"	v
preparedData	library\Zend\Cache\Backend\TwoLevels.php	/^                $preparedData = $this->_prepareData($array['data'], $array['lifetime'], $array['priority']);$/;"	v
preparedData	library\Zend\Cache\Backend\TwoLevels.php	/^        $preparedData = $this->_prepareData($data, $lifetime, $priority);$/;"	v
rand	library\Zend\Cache\Backend\TwoLevels.php	/^                $rand = rand(1, $this->_options['stats_update_factor']);$/;"	v
res	library\Zend\Cache\Backend\TwoLevels.php	/^                    $res = $res && $bool;$/;"	v
res	library\Zend\Cache\Backend\TwoLevels.php	/^                $res = true;$/;"	v
res	library\Zend\Cache\Backend\TwoLevels.php	/^            $res = $this->_slowBackend->load($id, $doNotTestCacheValidity);$/;"	v
res	library\Zend\Cache\Backend\TwoLevels.php	/^        $res = $this->_fastBackend->load($id, $doNotTestCacheValidity);$/;"	v
slowBackendCapabilities	library\Zend\Cache\Backend\TwoLevels.php	/^        $slowBackendCapabilities = $this->_slowBackend->getCapabilities();$/;"	v
usage	library\Zend\Cache\Backend\TwoLevels.php	/^            $usage = $this->_getFastFillingPercentage('loading');$/;"	v
usage	library\Zend\Cache\Backend\TwoLevels.php	/^        $usage = $this->_getFastFillingPercentage('saving');$/;"	v
Zend_Cache_Backend_WinCache	library\Zend\Cache\Backend\WinCache.php	/^class Zend_Cache_Backend_WinCache extends Zend_Cache_Backend implements Zend_Cache_Backend_ExtendedInterface$/;"	c
array	library\Zend\Cache\Backend\WinCache.php	/^        $array = wincache_ucache_info();$/;"	v
data	library\Zend\Cache\Backend\WinCache.php	/^            $data = $tmp[0];$/;"	v
lifetime	library\Zend\Cache\Backend\WinCache.php	/^            $lifetime = $tmp[2];$/;"	v
lifetime	library\Zend\Cache\Backend\WinCache.php	/^        $lifetime = $this->getLifetime($specificLifetime);$/;"	v
mem	library\Zend\Cache\Backend\WinCache.php	/^        $mem = wincache_ucache_meminfo();$/;"	v
memSize	library\Zend\Cache\Backend\WinCache.php	/^        $memSize = $mem['memory_total'];$/;"	v
memUsed	library\Zend\Cache\Backend\WinCache.php	/^        $memUsed = $mem['memory_free'];$/;"	v
mtime	library\Zend\Cache\Backend\WinCache.php	/^            $mtime = $tmp[1];$/;"	v
newLifetime	library\Zend\Cache\Backend\WinCache.php	/^            $newLifetime = $lifetime - (time() - $mtime) + $extraLifetime;$/;"	v
records	library\Zend\Cache\Backend\WinCache.php	/^        $records = $array['ucache_entries'];$/;"	v
res	library\Zend\Cache\Backend\WinCache.php	/^        $res = array();$/;"	v
result	library\Zend\Cache\Backend\WinCache.php	/^        $result = wincache_ucache_set($id, array($data, time(), $lifetime), $lifetime);$/;"	v
tmp	library\Zend\Cache\Backend\WinCache.php	/^        $tmp = wincache_ucache_get($id);$/;"	v
Zend_Cache_Backend_Xcache	library\Zend\Cache\Backend\Xcache.php	/^class Zend_Cache_Backend_Xcache extends Zend_Cache_Backend implements Zend_Cache_Backend_Interface$/;"	c
backup	library\Zend\Cache\Backend\Xcache.php	/^                $backup = array();$/;"	v
cnt	library\Zend\Cache\Backend\Xcache.php	/^                $cnt = xcache_count(XC_TYPE_VAR);$/;"	v
lifetime	library\Zend\Cache\Backend\Xcache.php	/^        $lifetime = $this->getLifetime($specificLifetime);$/;"	v
result	library\Zend\Cache\Backend\Xcache.php	/^        $result = xcache_set($id, array($data, time()), $lifetime);$/;"	v
tmp	library\Zend\Cache\Backend\Xcache.php	/^            $tmp = xcache_get($id);$/;"	v
tmp	library\Zend\Cache\Backend\Xcache.php	/^        $tmp = xcache_get($id);$/;"	v
Zend_Cache_Backend_ZendPlatform	library\Zend\Cache\Backend\ZendPlatform.php	/^class Zend_Cache_Backend_ZendPlatform extends Zend_Cache_Backend implements Zend_Cache_Backend_Interface$/;"	c
accConf	library\Zend\Cache\Backend\ZendPlatform.php	/^        $accConf = accelerator_get_configuration();$/;"	v
cache_dir	library\Zend\Cache\Backend\ZendPlatform.php	/^                $cache_dir = ini_get('zend_accelerator.output_cache_dir');$/;"	v
d	library\Zend\Cache\Backend\ZendPlatform.php	/^        $d = @dir($dir);$/;"	v
file	library\Zend\Cache\Backend\ZendPlatform.php	/^            $file = $d->path . $file;$/;"	v
idlist	library\Zend\Cache\Backend\ZendPlatform.php	/^                        $idlist = $next_idlist;$/;"	v
idlist	library\Zend\Cache\Backend\ZendPlatform.php	/^                        $idlist = array_intersect_assoc($idlist, $next_idlist);$/;"	v
idlist	library\Zend\Cache\Backend\ZendPlatform.php	/^                        $idlist = array_merge_recursive($idlist, $next_idlist);$/;"	v
idlist	library\Zend\Cache\Backend\ZendPlatform.php	/^                        $idlist = null;$/;"	v
idlist	library\Zend\Cache\Backend\ZendPlatform.php	/^                $idlist = null;$/;"	v
licenseInfo	library\Zend\Cache\Backend\ZendPlatform.php	/^            $licenseInfo = accelerator_license_info();$/;"	v
lifetime	library\Zend\Cache\Backend\ZendPlatform.php	/^            $lifetime = $this->_directives['lifetime'];$/;"	v
lifetime	library\Zend\Cache\Backend\ZendPlatform.php	/^            $lifetime = 0;$/;"	v
lifetime	library\Zend\Cache\Backend\ZendPlatform.php	/^        $lifetime = $this->_directives['lifetime'];$/;"	v
next_idlist	library\Zend\Cache\Backend\ZendPlatform.php	/^                    $next_idlist = output_cache_get(self::TAGS_PREFIX.$tag, $this->_directives['lifetime']);$/;"	v
old_tags	library\Zend\Cache\Backend\ZendPlatform.php	/^                $old_tags = array();$/;"	v
old_tags	library\Zend\Cache\Backend\ZendPlatform.php	/^            $old_tags = output_cache_get($tagid, $lifetime);$/;"	v
res	library\Zend\Cache\Backend\ZendPlatform.php	/^        $res = output_cache_get($id, $lifetime);$/;"	v
result	library\Zend\Cache\Backend\ZendPlatform.php	/^                            $result = ($this->_remove($file)) && ($result);$/;"	v
result	library\Zend\Cache\Backend\ZendPlatform.php	/^                    $result = ($this->_remove($file)) && ($result);$/;"	v
result	library\Zend\Cache\Backend\ZendPlatform.php	/^                $result = ($this->_clean($file .'\/', $mode)) && ($result);$/;"	v
result	library\Zend\Cache\Backend\ZendPlatform.php	/^        $result = output_cache_get($id, $this->_directives['lifetime']);$/;"	v
result	library\Zend\Cache\Backend\ZendPlatform.php	/^        $result = true;$/;"	v
result1	library\Zend\Cache\Backend\ZendPlatform.php	/^        $result1  = output_cache_put($id, array($data, time()));$/;"	v
result2	library\Zend\Cache\Backend\ZendPlatform.php	/^            $result2 = output_cache_put($tagid, $old_tags);$/;"	v
result2	library\Zend\Cache\Backend\ZendPlatform.php	/^        $result2  = (count($tags) == 0);$/;"	v
tagid	library\Zend\Cache\Backend\ZendPlatform.php	/^            $tagid = self::TAGS_PREFIX.$tag;$/;"	v
lifetime	library\Zend\Cache\Backend\ZendServer.php	/^        $lifetime = $this->getLifetime($specificLifetime);$/;"	v
metadatas	library\Zend\Cache\Backend\ZendServer.php	/^        $metadatas = array($/;"	v
result1	library\Zend\Cache\Backend\ZendServer.php	/^        $result1 = $this->_unset($id);$/;"	v
result2	library\Zend\Cache\Backend\ZendServer.php	/^        $result2 = $this->_unset('internal-metadatas---' . $id);$/;"	v
tmp	library\Zend\Cache\Backend\ZendServer.php	/^        $tmp = $this->_fetch($id);$/;"	v
tmp	library\Zend\Cache\Backend\ZendServer.php	/^        $tmp = $this->_fetch('internal-metadatas---' . $id);$/;"	v
Zend_Cache_Backend_ZendServer_Disk	library\Zend\Cache\Backend\ZendServer\Disk.php	/^class Zend_Cache_Backend_ZendServer_Disk extends Zend_Cache_Backend_ZendServer implements Zend_Cache_Backend_Interface$/;"	c
Zend_Cache_Backend_ZendServer_ShMem	library\Zend\Cache\Backend\ZendServer\ShMem.php	/^class Zend_Cache_Backend_ZendServer_ShMem extends Zend_Cache_Backend_ZendServer implements Zend_Cache_Backend_Interface$/;"	c
Zend_Cache_Core	library\Zend\Cache\Core.php	/^class Zend_Cache_Core$/;"	c
abort	library\Zend\Cache\Core.php	/^            $abort = ignore_user_abort(true);$/;"	v
data	library\Zend\Cache\Core.php	/^            $data = serialize($data);$/;"	v
data	library\Zend\Cache\Core.php	/^        $data = $this->_backend->load($id, $doNotTestCacheValidity);$/;"	v
data2	library\Zend\Cache\Core.php	/^            $data2 = $this->_backend->load($id, true);$/;"	v
directives	library\Zend\Cache\Core.php	/^        $directives = array();$/;"	v
id	library\Zend\Cache\Core.php	/^                    $id = substr($id, $prefixLen);$/;"	v
id	library\Zend\Cache\Core.php	/^            $id = $this->_id($id);$/;"	v
id	library\Zend\Cache\Core.php	/^            $id = $this->_lastId;$/;"	v
id	library\Zend\Cache\Core.php	/^        $id = $this->_id($id); \/\/ cache id may need prefix$/;"	v
ids	library\Zend\Cache\Core.php	/^        $ids = $this->_backend->getIds();$/;"	v
ids	library\Zend\Cache\Core.php	/^        $ids = $this->_backend->getIdsMatchingAnyTags($tags);$/;"	v
ids	library\Zend\Cache\Core.php	/^        $ids = $this->_backend->getIdsMatchingTags($tags);$/;"	v
ids	library\Zend\Cache\Core.php	/^        $ids = $this->_backend->getIdsNotMatchingTags($tags);$/;"	v
logger	library\Zend\Cache\Core.php	/^        $logger = $this->_options['logger'];$/;"	v
logger	library\Zend\Cache\Core.php	/^        $logger = new Zend_Log(new Zend_Log_Writer_Stream('php:\/\/output'));$/;"	v
name	library\Zend\Cache\Core.php	/^            $name = strtolower($name);$/;"	v
name	library\Zend\Cache\Core.php	/^        $name = strtolower($name);$/;"	v
options	library\Zend\Cache\Core.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Cache\Core.php	/^        $options = $config->toArray();$/;"	v
prefix	library\Zend\Cache\Core.php	/^            $prefix    = & $this->_options['cache_id_prefix'];$/;"	v
prefixLen	library\Zend\Cache\Core.php	/^            $prefixLen = strlen($prefix);$/;"	v
rand	library\Zend\Cache\Core.php	/^            $rand = rand(1, $this->_options['automatic_cleaning_factor']);$/;"	v
result	library\Zend\Cache\Core.php	/^            $result = $this->_backend->save($data, $id, $tags, $specificLifetime);$/;"	v
result	library\Zend\Cache\Core.php	/^            $result = $this->_backend->save($data, $id, $tags, $specificLifetime, $priority);$/;"	v
value	library\Zend\Cache\Core.php	/^            $value = null;$/;"	v
Zend_Cache_Exception	library\Zend\Cache\Exception.php	/^class Zend_Cache_Exception extends Zend_Exception {}$/;"	c
Zend_Cache_Frontend_Capture	library\Zend\Cache\Frontend\Capture.php	/^class Zend_Cache_Frontend_Capture extends Zend_Cache_Core$/;"	c
id	library\Zend\Cache\Frontend\Capture.php	/^        $id = array_pop($this->_idStack);$/;"	v
Zend_Cache_Frontend_Class	library\Zend\Cache\Frontend\Class.php	/^class Zend_Cache_Frontend_Class extends Zend_Cache_Core$/;"	c
cache	library\Zend\Cache\Frontend\Class.php	/^        $cache = (($cacheBool1 || $cacheBool2) && (!$cacheBool3));$/;"	v
cacheBool1	library\Zend\Cache\Frontend\Class.php	/^        $cacheBool1 = $this->_specificOptions['cache_by_default'];$/;"	v
cacheBool2	library\Zend\Cache\Frontend\Class.php	/^        $cacheBool2 = in_array($name, $this->_specificOptions['cached_methods']);$/;"	v
cacheBool3	library\Zend\Cache\Frontend\Class.php	/^        $cacheBool3 = in_array($name, $this->_specificOptions['non_cached_methods']);$/;"	v
callback	library\Zend\Cache\Frontend\Class.php	/^        $callback = array($this->_cachedEntity, $name);$/;"	v
data	library\Zend\Cache\Frontend\Class.php	/^                $data = array($output, $return);$/;"	v
id	library\Zend\Cache\Frontend\Class.php	/^        $id = $this->_makeId($name, $parameters);$/;"	v
output	library\Zend\Cache\Frontend\Class.php	/^                $output = ob_get_clean();$/;"	v
output	library\Zend\Cache\Frontend\Class.php	/^            $output = $rs[0];$/;"	v
return	library\Zend\Cache\Frontend\Class.php	/^                $return = call_user_func_array($callback, $parameters);$/;"	v
return	library\Zend\Cache\Frontend\Class.php	/^            $return = $rs[1];$/;"	v
ro	library\Zend\Cache\Frontend\Class.php	/^            $ro = new ReflectionObject($this->_cachedEntity);$/;"	v
Zend_Cache_Frontend_File	library\Zend\Cache\Frontend\File.php	/^class Zend_Cache_Frontend_File extends Zend_Cache_Core$/;"	c
i	library\Zend\Cache\Frontend\File.php	/^        $i = 0;$/;"	v
lastModified	library\Zend\Cache\Frontend\File.php	/^        $lastModified = parent::test($id);$/;"	v
mtime	library\Zend\Cache\Frontend\File.php	/^                $mtime = false;$/;"	v
mtime	library\Zend\Cache\Frontend\File.php	/^                $mtime = filemtime($masterFile);$/;"	v
res	library\Zend\Cache\Frontend\File.php	/^                $res = true;$/;"	v
Zend_Cache_Frontend_Function	library\Zend\Cache\Frontend\Function.php	/^class Zend_Cache_Frontend_Function extends Zend_Cache_Core$/;"	c
argsStr	library\Zend\Cache\Frontend\Function.php	/^                $argsStr = @serialize(array_values($args));$/;"	v
argsStr	library\Zend\Cache\Frontend\Function.php	/^        $argsStr = '';$/;"	v
cache	library\Zend\Cache\Frontend\Function.php	/^        $cache = (($cacheBool1 || $cacheBool2) && (!$cacheBool3));$/;"	v
cacheBool1	library\Zend\Cache\Frontend\Function.php	/^        $cacheBool1 = $this->_specificOptions['cache_by_default'];$/;"	v
cacheBool2	library\Zend\Cache\Frontend\Function.php	/^        $cacheBool2 = in_array($name, $this->_specificOptions['cached_functions']);$/;"	v
cacheBool3	library\Zend\Cache\Frontend\Function.php	/^        $cacheBool3 = in_array($name, $this->_specificOptions['non_cached_functions']);$/;"	v
data	library\Zend\Cache\Frontend\Function.php	/^            $data = array($output, $return);$/;"	v
id	library\Zend\Cache\Frontend\Function.php	/^        $id = $this->_makeId($callback, $parameters);$/;"	v
lastErr	library\Zend\Cache\Frontend\Function.php	/^                $lastErr = error_get_last();$/;"	v
name	library\Zend\Cache\Frontend\Function.php	/^        $name = strtolower($name);$/;"	v
object	library\Zend\Cache\Frontend\Function.php	/^            $object = $callback;$/;"	v
object	library\Zend\Cache\Frontend\Function.php	/^            $object = $callback[0];$/;"	v
output	library\Zend\Cache\Frontend\Function.php	/^            $output = $rs[0];$/;"	v
output	library\Zend\Cache\Frontend\Function.php	/^            $output = ob_get_clean();$/;"	v
return	library\Zend\Cache\Frontend\Function.php	/^            $return = $rs[1];$/;"	v
return	library\Zend\Cache\Frontend\Function.php	/^            $return = call_user_func_array($callback, $parameters);$/;"	v
tmp	library\Zend\Cache\Frontend\Function.php	/^                $tmp = @serialize($callback);$/;"	v
Zend_Cache_Frontend_Output	library\Zend\Cache\Frontend\Output.php	/^class Zend_Cache_Frontend_Output extends Zend_Cache_Core$/;"	c
data	library\Zend\Cache\Frontend\Output.php	/^            $data = ob_get_clean();$/;"	v
data	library\Zend\Cache\Frontend\Output.php	/^            $data =& $forcedDatas;$/;"	v
data	library\Zend\Cache\Frontend\Output.php	/^        $data = $this->load($id, $doNotTestCacheValidity);$/;"	v
id	library\Zend\Cache\Frontend\Output.php	/^        $id = array_pop($this->_idStack);$/;"	v
Zend_Cache_Frontend_Page	library\Zend\Cache\Frontend\Page.php	/^class Zend_Cache_Frontend_Page extends Zend_Cache_Core$/;"	c
array	library\Zend\Cache\Frontend\Page.php	/^        $array = $this->load($id);$/;"	v
array	library\Zend\Cache\Frontend\Page.php	/^        $array = array($/;"	v
array	library\Zend\Cache\Frontend\Page.php	/^        $array = explode('?', $tmp, 2);$/;"	v
conf	library\Zend\Cache\Frontend\Page.php	/^            $conf = $this->_specificOptions['regexps'][$lastMatchingRegexp];$/;"	v
contentType	library\Zend\Cache\Frontend\Page.php	/^        $contentType = null;$/;"	v
data	library\Zend\Cache\Frontend\Page.php	/^            $data = $array['data'];$/;"	v
found	library\Zend\Cache\Frontend\Page.php	/^                $found = $key;$/;"	v
found	library\Zend\Cache\Frontend\Page.php	/^        $found = null;$/;"	v
headerSentName	library\Zend\Cache\Frontend\Page.php	/^                $headerSentName = trim(array_shift($tmp));$/;"	v
headerSentValue	library\Zend\Cache\Frontend\Page.php	/^                    $headerSentValue = trim(implode(':', $tmp));$/;"	v
headers	library\Zend\Cache\Frontend\Page.php	/^            $headers = $array['headers'];$/;"	v
headersList	library\Zend\Cache\Frontend\Page.php	/^        $headersList = headers_list();$/;"	v
id	library\Zend\Cache\Frontend\Page.php	/^            $id = $this->_makeId();$/;"	v
key	library\Zend\Cache\Frontend\Page.php	/^                $key = strtolower($key);$/;"	v
key	library\Zend\Cache\Frontend\Page.php	/^            $key = strtolower($key);$/;"	v
lastMatchingRegexp	library\Zend\Cache\Frontend\Page.php	/^                    $lastMatchingRegexp = $regexp;$/;"	v
lastMatchingRegexp	library\Zend\Cache\Frontend\Page.php	/^        $lastMatchingRegexp = null;$/;"	v
name	library\Zend\Cache\Frontend\Page.php	/^                    $name = $headerCouple[0];$/;"	v
name	library\Zend\Cache\Frontend\Page.php	/^            $name = strtolower($name);$/;"	v
storedHeaders	library\Zend\Cache\Frontend\Page.php	/^        $storedHeaders = array();$/;"	v
tmp	library\Zend\Cache\Frontend\Page.php	/^                $tmp = explode(':', $headerSent);$/;"	v
tmp	library\Zend\Cache\Frontend\Page.php	/^            $tmp = $tmp . $tmp2;$/;"	v
tmp	library\Zend\Cache\Frontend\Page.php	/^          $tmp = $array[0];$/;"	v
tmp	library\Zend\Cache\Frontend\Page.php	/^        $tmp = $_SERVER['REQUEST_URI'];$/;"	v
tmp2	library\Zend\Cache\Frontend\Page.php	/^            $tmp2 = $this->_makePartialId($arrayName, $this->_activeOptions['cache_with_' . strtolower($arrayName) . '_variables'], $this->_activeOptions['make_id_with_' . strtolower($arrayName) . '_variables']);$/;"	v
validKeys	library\Zend\Cache\Frontend\Page.php	/^            $validKeys = array_keys($this->_specificOptions['default_options']);$/;"	v
value	library\Zend\Cache\Frontend\Page.php	/^                    $value = $headerCouple[1];$/;"	v
var	library\Zend\Cache\Frontend\Page.php	/^                $var = $_COOKIE;$/;"	v
var	library\Zend\Cache\Frontend\Page.php	/^                $var = $_SESSION;$/;"	v
var	library\Zend\Cache\Frontend\Page.php	/^                $var = null;$/;"	v
var	library\Zend\Cache\Frontend\Page.php	/^            $var = $_FILES;$/;"	v
var	library\Zend\Cache\Frontend\Page.php	/^            $var = $_GET;$/;"	v
var	library\Zend\Cache\Frontend\Page.php	/^            $var = $_POST;$/;"	v
Zend_Cache_Manager	library\Zend\Cache\Manager.php	/^class Zend_Cache_Manager$/;"	c
caches	library\Zend\Cache\Manager.php	/^        $caches = $this->_caches;$/;"	v
options	library\Zend\Cache\Manager.php	/^            $options = $options->toArray();$/;"	v
method	library\Zend\Captcha\Base.php	/^        $method = 'set' . ucfirst ($key);$/;"	v
Zend_Captcha_Dumb	library\Zend\Captcha\Dumb.php	/^class Zend_Captcha_Dumb extends Zend_Captcha_Word$/;"	c
Zend_Captcha_Exception	library\Zend\Captcha\Exception.php	/^class Zend_Captcha_Exception extends Zend_Exception$/;"	c
Zend_Captcha_Figlet	library\Zend\Captcha\Figlet.php	/^class Zend_Captcha_Figlet extends Zend_Captcha_Word$/;"	c
Zend_Captcha_Image	library\Zend\Captcha\Image.php	/^class Zend_Captcha_Image extends Zend_Captcha_Word$/;"	c
bg_color	library\Zend\Captcha\Image.php	/^        $bg_color   = imagecolorallocate($img, 255, 255, 255);$/;"	v
bg_color	library\Zend\Captcha\Image.php	/^        $bg_color = imagecolorallocate($img2, 255, 255, 255);$/;"	v
color	library\Zend\Captcha\Image.php	/^                    $color    = (imagecolorat($img, $sx, $sy) >> 16)         & 0xFF;$/;"	v
color_x	library\Zend\Captcha\Image.php	/^                    $color_x  = (imagecolorat($img, $sx + 1, $sy) >> 16)     & 0xFF;$/;"	v
color_xy	library\Zend\Captcha\Image.php	/^                    $color_xy = (imagecolorat($img, $sx + 1, $sy + 1) >> 16) & 0xFF;$/;"	v
color_y	library\Zend\Captcha\Image.php	/^                    $color_y  = (imagecolorat($img, $sx, $sy + 1) >> 16)     & 0xFF;$/;"	v
endTag	library\Zend\Captcha\Image.php	/^            $endTag = '>';$/;"	v
endTag	library\Zend\Captcha\Image.php	/^        $endTag = ' \/>';$/;"	v
expire	library\Zend\Captcha\Image.php	/^        $expire = time() - $this->getExpiration();$/;"	v
font	library\Zend\Captcha\Image.php	/^        $font = $this->getFont();$/;"	v
frac_x	library\Zend\Captcha\Image.php	/^                    $frac_x  = $sx-floor($sx);$/;"	v
frac_x1	library\Zend\Captcha\Image.php	/^                    $frac_x1 = 1-$frac_x;$/;"	v
frac_y	library\Zend\Captcha\Image.php	/^                    $frac_y  = $sy-floor($sy);$/;"	v
frac_y1	library\Zend\Captcha\Image.php	/^                    $frac_y1 = 1-$frac_y;$/;"	v
freq1	library\Zend\Captcha\Image.php	/^        $freq1 = $this->_randomFreq();$/;"	v
freq2	library\Zend\Captcha\Image.php	/^        $freq2 = $this->_randomFreq();$/;"	v
freq3	library\Zend\Captcha\Image.php	/^        $freq3 = $this->_randomFreq();$/;"	v
freq4	library\Zend\Captcha\Image.php	/^        $freq4 = $this->_randomFreq();$/;"	v
fsize	library\Zend\Captcha\Image.php	/^        $fsize = $this->getFontSize();$/;"	v
h	library\Zend\Captcha\Image.php	/^            $h = imagesy($img);$/;"	v
h	library\Zend\Captcha\Image.php	/^        $h     = $this->getHeight();$/;"	v
id	library\Zend\Captcha\Image.php	/^            $id = $this->_generateRandomId();$/;"	v
id	library\Zend\Captcha\Image.php	/^        $id = parent::generate();$/;"	v
img	library\Zend\Captcha\Image.php	/^            $img        = imagecreatetruecolor($w, $h);$/;"	v
img	library\Zend\Captcha\Image.php	/^            $img = imagecreatefrompng($this->_startImage);$/;"	v
img2	library\Zend\Captcha\Image.php	/^        $img2     = imagecreatetruecolor($w, $h);$/;"	v
img_file	library\Zend\Captcha\Image.php	/^        $img_file   = $this->getImgDir() . $id . $this->getSuffix();$/;"	v
imgdir	library\Zend\Captcha\Image.php	/^        $imgdir = $this->getImgDir();$/;"	v
newcolor	library\Zend\Captcha\Image.php	/^                    $newcolor = $color    * $frac_x1 * $frac_y1$/;"	v
newcolor	library\Zend\Captcha\Image.php	/^                    $newcolor = 0;$/;"	v
ph1	library\Zend\Captcha\Image.php	/^        $ph1 = $this->_randomPhase();$/;"	v
ph2	library\Zend\Captcha\Image.php	/^        $ph2 = $this->_randomPhase();$/;"	v
ph3	library\Zend\Captcha\Image.php	/^        $ph3 = $this->_randomPhase();$/;"	v
ph4	library\Zend\Captcha\Image.php	/^        $ph4 = $this->_randomPhase();$/;"	v
suffixLength	library\Zend\Captcha\Image.php	/^        $suffixLength = strlen($this->_suffix);$/;"	v
sx	library\Zend\Captcha\Image.php	/^                $sx = $x + (sin($x*$freq1 + $ph1) + sin($y*$freq3 + $ph3)) * $szx;$/;"	v
sy	library\Zend\Captcha\Image.php	/^                $sy = $y + (sin($x*$freq2 + $ph2) + sin($y*$freq4 + $ph4)) * $szy;$/;"	v
szx	library\Zend\Captcha\Image.php	/^        $szx = $this->_randomSize();$/;"	v
szy	library\Zend\Captcha\Image.php	/^        $szy = $this->_randomSize();$/;"	v
text_color	library\Zend\Captcha\Image.php	/^        $text_color = imagecolorallocate($img, 0, 0, 0);$/;"	v
textbox	library\Zend\Captcha\Image.php	/^        $textbox = imageftbbox($fsize, 0, $font, $word);$/;"	v
tries	library\Zend\Captcha\Image.php	/^        $tries = 5;$/;"	v
w	library\Zend\Captcha\Image.php	/^            $w = imagesx($img);$/;"	v
w	library\Zend\Captcha\Image.php	/^        $w     = $this->getWidth();$/;"	v
x	library\Zend\Captcha\Image.php	/^        $x = ($w - ($textbox[2] - $textbox[0])) \/ 2;$/;"	v
y	library\Zend\Captcha\Image.php	/^        $y = ($h - ($textbox[7] - $textbox[1])) \/ 2;$/;"	v
Zend_Captcha_ReCaptcha	library\Zend\Captcha\ReCaptcha.php	/^class Zend_Captcha_ReCaptcha extends Zend_Captcha_Base$/;"	c
name	library\Zend\Captcha\ReCaptcha.php	/^            $name = $element->getBelongsTo();$/;"	v
name	library\Zend\Captcha\ReCaptcha.php	/^        $name = null;$/;"	v
options	library\Zend\Captcha\ReCaptcha.php	/^            $options = $options->toArray();$/;"	v
res	library\Zend\Captcha\ReCaptcha.php	/^        $res = $service->verify($value[$this->_CHALLENGE], $value[$this->_RESPONSE]);$/;"	v
service	library\Zend\Captcha\ReCaptcha.php	/^        $service = $this->getService();$/;"	v
value	library\Zend\Captcha\ReCaptcha.php	/^            $value = $context;$/;"	v
consonant	library\Zend\Captcha\Word.php	/^            $consonant = $consonants[array_rand($consonants)];$/;"	v
consonants	library\Zend\Captcha\Word.php	/^        $consonants = $this->_useNumbers ? self::$CN : self::$C;$/;"	v
id	library\Zend\Captcha\Word.php	/^            $id = $this->getId();$/;"	v
id	library\Zend\Captcha\Word.php	/^        $id = $this->_generateRandomId();$/;"	v
input	library\Zend\Captcha\Word.php	/^        $input = strtolower($value['input']);$/;"	v
name	library\Zend\Captcha\Word.php	/^        $name = $this->getName();$/;"	v
session	library\Zend\Captcha\Word.php	/^            $session     = $this->getSession();$/;"	v
session	library\Zend\Captcha\Word.php	/^        $session       = $this->getSession();$/;"	v
value	library\Zend\Captcha\Word.php	/^            $value = $context;$/;"	v
value	library\Zend\Captcha\Word.php	/^            $value = $value[$name];$/;"	v
vowel	library\Zend\Captcha\Word.php	/^            $vowel     = $vowels[array_rand($vowels)];$/;"	v
vowels	library\Zend\Captcha\Word.php	/^        $vowels     = $this->_useNumbers ? self::$VN : self::$V;$/;"	v
word	library\Zend\Captcha\Word.php	/^            $word = substr($word, 0, $wordLen);$/;"	v
word	library\Zend\Captcha\Word.php	/^        $word       = '';$/;"	v
word	library\Zend\Captcha\Word.php	/^        $word = $this->_generateWord();$/;"	v
wordLen	library\Zend\Captcha\Word.php	/^        $wordLen    = $this->getWordLen();$/;"	v
Zend_Cloud_AbstractFactory	library\Zend\Cloud\AbstractFactory.php	/^class Zend_Cloud_AbstractFactory$/;"	c
classname	library\Zend\Cloud\AbstractFactory.php	/^        $classname = $options[$adapterOption];$/;"	v
options	library\Zend\Cloud\AbstractFactory.php	/^            $options = $options->toArray();$/;"	v
Zend_Cloud_DocumentService_Adapter_SimpleDb	library\Zend\Cloud\DocumentService\Adapter\SimpleDb.php	/^class Zend_Cloud_DocumentService_Adapter_SimpleDb$/;"	c
attributes	library\Zend\Cloud\DocumentService\Adapter\SimpleDb.php	/^            $attributes = $this->_simpleDb->getAttributes($collectionName, $documentId);$/;"	v
defaultClass	library\Zend\Cloud\DocumentService\Adapter\SimpleDb.php	/^        $defaultClass = self::DEFAULT_QUERY_CLASS;$/;"	v
docClass	library\Zend\Cloud\DocumentService\Adapter\SimpleDb.php	/^        $docClass   = get_class($document);$/;"	v
docs	library\Zend\Cloud\DocumentService\Adapter\SimpleDb.php	/^        $docs = array();$/;"	v
document	library\Zend\Cloud\DocumentService\Adapter\SimpleDb.php	/^            $document =  $this->_getDocumentFromArray($document);$/;"	v
document	library\Zend\Cloud\DocumentService\Adapter\SimpleDb.php	/^            $document = $document->getId();$/;"	v
document	library\Zend\Cloud\DocumentService\Adapter\SimpleDb.php	/^        $document   = new $docClass($fields, $documentId);$/;"	v
documentClass	library\Zend\Cloud\DocumentService\Adapter\SimpleDb.php	/^            $documentClass = $this->getDocumentClass();$/;"	v
documentClass	library\Zend\Cloud\DocumentService\Adapter\SimpleDb.php	/^        $documentClass = $this->getDocumentClass();$/;"	v
documentId	library\Zend\Cloud\DocumentService\Adapter\SimpleDb.php	/^                $documentId = $documentId->getId();$/;"	v
documentId	library\Zend\Cloud\DocumentService\Adapter\SimpleDb.php	/^                $documentId = $fieldset->getId();$/;"	v
documentId	library\Zend\Cloud\DocumentService\Adapter\SimpleDb.php	/^        $documentId = $document->getId();$/;"	v
domains	library\Zend\Cloud\DocumentService\Adapter\SimpleDb.php	/^            $domains = $this->_simpleDb->listDomains()->getData();$/;"	v
fields	library\Zend\Cloud\DocumentService\Adapter\SimpleDb.php	/^        $fields     = $document->getFields();$/;"	v
fieldset	library\Zend\Cloud\DocumentService\Adapter\SimpleDb.php	/^            $fieldset   = $documentId->getFields();$/;"	v
fieldset	library\Zend\Cloud\DocumentService\Adapter\SimpleDb.php	/^            $fieldset = $fieldset->getFields();$/;"	v
items	library\Zend\Cloud\DocumentService\Adapter\SimpleDb.php	/^        $items = $this->query($collectionName, $query, $options);$/;"	v
key	library\Zend\Cloud\DocumentService\Adapter\SimpleDb.php	/^                $key = $document[self::ITEM_NAME];$/;"	v
key	library\Zend\Cloud\DocumentService\Adapter\SimpleDb.php	/^            $key = $document[Zend_Cloud_DocumentService_Document::KEY_FIELD];$/;"	v
options	library\Zend\Cloud\DocumentService\Adapter\SimpleDb.php	/^            $options = $options->toArray();$/;"	v
query	library\Zend\Cloud\DocumentService\Adapter\SimpleDb.php	/^                $query = $query->assemble($collectionName);$/;"	v
query	library\Zend\Cloud\DocumentService\Adapter\SimpleDb.php	/^        $query = $this->select('*')->from($collectionName);$/;"	v
query	library\Zend\Cloud\DocumentService\Adapter\SimpleDb.php	/^        $query = new $queryClass($this);$/;"	v
queryClass	library\Zend\Cloud\DocumentService\Adapter\SimpleDb.php	/^        $queryClass = $this->getQueryClass();$/;"	v
replace	library\Zend\Cloud\DocumentService\Adapter\SimpleDb.php	/^        $replace = array();$/;"	v
result	library\Zend\Cloud\DocumentService\Adapter\SimpleDb.php	/^            $result = $this->_simpleDb->select($query);$/;"	v
result	library\Zend\Cloud\DocumentService\Adapter\SimpleDb.php	/^        $result = array();$/;"	v
returnDocs	library\Zend\Cloud\DocumentService\Adapter\SimpleDb.php	/^        $returnDocs = isset($options[self::RETURN_DOCUMENTS])$/;"	v
setClass	library\Zend\Cloud\DocumentService\Adapter\SimpleDb.php	/^        $setClass = $this->getDocumentSetClass();$/;"	v
value	library\Zend\Cloud\DocumentService\Adapter\SimpleDb.php	/^                $value = $value[0];$/;"	v
value	library\Zend\Cloud\DocumentService\Adapter\SimpleDb.php	/^                $value = null;$/;"	v
value	library\Zend\Cloud\DocumentService\Adapter\SimpleDb.php	/^            $value = $attr->getValues();$/;"	v
Zend_Cloud_DocumentService_Adapter_SimpleDb_Query	library\Zend\Cloud\DocumentService\Adapter\SimpleDb\Query.php	/^class Zend_Cloud_DocumentService_Adapter_SimpleDb_Query$/;"	c
adapter	library\Zend\Cloud\DocumentService\Adapter\SimpleDb\Query.php	/^        $adapter = $this->getAdapter()->getClient();$/;"	v
args	library\Zend\Cloud\DocumentService\Adapter\SimpleDb\Query.php	/^            $args = (array) $args;$/;"	v
from	library\Zend\Cloud\DocumentService\Adapter\SimpleDb\Query.php	/^                        $from = $adapter->quoteName($args);$/;"	v
from	library\Zend\Cloud\DocumentService\Adapter\SimpleDb\Query.php	/^            $from = $adapter->quoteName($collectionName);$/;"	v
from	library\Zend\Cloud\DocumentService\Adapter\SimpleDb\Query.php	/^        $from    = null;$/;"	v
i	library\Zend\Cloud\DocumentService\Adapter\SimpleDb\Query.php	/^        $i = 0;$/;"	v
limit	library\Zend\Cloud\DocumentService\Adapter\SimpleDb\Query.php	/^                    $limit = $args;$/;"	v
limit	library\Zend\Cloud\DocumentService\Adapter\SimpleDb\Query.php	/^        $limit   = null;$/;"	v
operator	library\Zend\Cloud\DocumentService\Adapter\SimpleDb\Query.php	/^                        $operator = empty($args[2]) ? 'AND' : $args[2];$/;"	v
order	library\Zend\Cloud\DocumentService\Adapter\SimpleDb\Query.php	/^                    $order = $adapter->quoteName($args[0]);$/;"	v
order	library\Zend\Cloud\DocumentService\Adapter\SimpleDb\Query.php	/^        $order   = null;$/;"	v
query	library\Zend\Cloud\DocumentService\Adapter\SimpleDb\Query.php	/^        $query = "select $select from $from";$/;"	v
select	library\Zend\Cloud\DocumentService\Adapter\SimpleDb\Query.php	/^                    $select = $args[0];$/;"	v
select	library\Zend\Cloud\DocumentService\Adapter\SimpleDb\Query.php	/^            $select = "*";$/;"	v
select	library\Zend\Cloud\DocumentService\Adapter\SimpleDb\Query.php	/^        $select  = null;$/;"	v
statement	library\Zend\Cloud\DocumentService\Adapter\SimpleDb\Query.php	/^                    $statement = $this->_parseWhere($args[0], $args[1]);$/;"	v
statement	library\Zend\Cloud\DocumentService\Adapter\SimpleDb\Query.php	/^                    $statement = $this->_parseWhere('ItemName() = ?', array($args));$/;"	v
where	library\Zend\Cloud\DocumentService\Adapter\SimpleDb\Query.php	/^                        $where = $statement;$/;"	v
where	library\Zend\Cloud\DocumentService\Adapter\SimpleDb\Query.php	/^            $where = '(' . $where . ')';$/;"	v
where	library\Zend\Cloud\DocumentService\Adapter\SimpleDb\Query.php	/^           $where = substr_replace($where, $adapter->quote($args[$i]), $pos);$/;"	v
where	library\Zend\Cloud\DocumentService\Adapter\SimpleDb\Query.php	/^        $where   = null;$/;"	v
Zend_Cloud_DocumentService_Adapter_WindowsAzure	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^class Zend_Cloud_DocumentService_Adapter_WindowsAzure$/;"	c
defaultClass	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^        $defaultClass = self::DEFAULT_QUERY_CLASS;$/;"	v
document	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^            $document =  $this->_getDocumentFromArray($document, $collectionName);$/;"	v
document	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^            $document = $document->getFields();$/;"	v
document	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^            $document = $this->_getDocumentFromArray($document, $collectionName);$/;"	v
documentClass	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^            $documentClass = $this->getDocumentClass();$/;"	v
documentClass	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^        $documentClass = $this->getDocumentClass();$/;"	v
documentId	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^                $documentId = $fieldset->getId();$/;"	v
documentId	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^            $documentId = $documentId->getId();$/;"	v
documentId	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^        $documentId = $this->_validateDocumentId($documentId, $collectionName);$/;"	v
entities	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^                $entities = $this->_storageClient->retrieveEntities($collectionName, $query);$/;"	v
entities	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^                $entities = $this->_storageClient->retrieveEntities($query->assemble());$/;"	v
entity	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^            $entity = $this->_storageClient->retrieveEntityById($collectionName, $documentId[0], $documentId[1]);$/;"	v
entity	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^            $entity = new Zend_Service_WindowsAzure_Storage_DynamicTableEntity($documentId[0], $documentId[1]);$/;"	v
entity	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^            $entity = new Zend_Service_WindowsAzure_Storage_DynamicTableEntity($key[0], $key[1]);$/;"	v
fieldset	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^            $fieldset   = $documentId->getFields();$/;"	v
fieldset	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^            $fieldset = $fieldset->getFields();$/;"	v
host	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^            $host = $options[self::HOST];$/;"	v
host	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^            $host = self::DEFAULT_HOST;$/;"	v
key	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^                    $key = array($collectionName, $rowKey);$/;"	v
key	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^                    $key = array($document[self::PARTITION_KEY], $rowKey);$/;"	v
key	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^                    $key = array($partitionKey, $rowKey);$/;"	v
key	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^            $key = $document[Zend_Cloud_DocumentService_Document::KEY_FIELD];$/;"	v
key	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^        $key = $this->_validateDocumentId($document->getId(), $collectionName);$/;"	v
key	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^        $key = null;$/;"	v
options	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^            $options = array();$/;"	v
proxyCredentials	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^                $proxyCredentials = isset($options[self::PROXY_CREDENTIALS]) ? $options[self::PROXY_CREDENTIALS] : '';$/;"	v
proxyHost	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^                $proxyHost = $options[self::PROXY_HOST];$/;"	v
proxyPort	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^                $proxyPort = isset($options[self::PROXY_PORT]) ? $options[self::PROXY_PORT] : 8080;$/;"	v
query	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^        $query = new $queryClass();$/;"	v
queryClass	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^        $queryClass = $this->getQueryClass();$/;"	v
restables	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^            $restables = array();$/;"	v
result	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^        $result = array();$/;"	v
resultSet	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^            $resultSet     = array();$/;"	v
rowKey	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^                $rowKey = $document[self::ROW_KEY];$/;"	v
select	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^        $select = $this->select()->from($collectionName);$/;"	v
setClass	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^        $setClass = $this->getDocumentSetClass();$/;"	v
tables	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure.php	/^            $tables = $this->_storageClient->listTables();$/;"	v
Zend_Cloud_DocumentService_Adapter_WindowsAzure_Query	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure\Query.php	/^class Zend_Cloud_DocumentService_Adapter_WindowsAzure_Query$/;"	c
select	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure\Query.php	/^            $select = new Zend_Service_WindowsAzure_Storage_TableEntityQuery();$/;"	v
value	library\Zend\Cloud\DocumentService\Adapter\WindowsAzure\Query.php	/^            $value = array($value);$/;"	v
Zend_Cloud_DocumentService_Document	library\Zend\Cloud\DocumentService\Document.php	/^class Zend_Cloud_DocumentService_Document$/;"	c
id	library\Zend\Cloud\DocumentService\Document.php	/^            $id = $fields[self::KEY_FIELD];$/;"	v
option	library\Zend\Cloud\DocumentService\Document.php	/^            $option = substr($name, 3);$/;"	v
prefix	library\Zend\Cloud\DocumentService\Document.php	/^        $prefix = substr($name, 0, 3);$/;"	v
Zend_Cloud_DocumentService_DocumentSet	library\Zend\Cloud\DocumentService\DocumentSet.php	/^class Zend_Cloud_DocumentService_DocumentSet implements Countable, IteratorAggregate$/;"	c
Zend_Cloud_DocumentService_Exception	library\Zend\Cloud\DocumentService\Exception.php	/^class Zend_Cloud_DocumentService_Exception extends Zend_Cloud_Exception$/;"	c
Zend_Cloud_DocumentService_Factory	library\Zend\Cloud\DocumentService\Factory.php	/^class Zend_Cloud_DocumentService_Factory extends Zend_Cloud_AbstractFactory$/;"	c
adapter	library\Zend\Cloud\DocumentService\Factory.php	/^        $adapter = parent::_getAdapter(self::DOCUMENT_ADAPTER_KEY, $options);$/;"	v
Zend_Cloud_DocumentService_Query	library\Zend\Cloud\DocumentService\Query.php	/^class Zend_Cloud_DocumentService_Query$/;"	c
Zend_Cloud_Exception	library\Zend\Cloud\Exception.php	/^class Zend_Cloud_Exception extends Zend_Exception$/;"	c
Zend_Cloud_OperationNotAvailableException	library\Zend\Cloud\OperationNotAvailableException.php	/^class Zend_Cloud_OperationNotAvailableException extends Zend_Exception$/;"	c
Zend_Cloud_QueueService_Adapter_Sqs	library\Zend\Cloud\QueueService\Adapter\Sqs.php	/^class Zend_Cloud_QueueService_Adapter_Sqs$/;"	c
attributes	library\Zend\Cloud\QueueService\Adapter\Sqs.php	/^            $attributes = $this->_sqs->getAttribute($queueId, 'All');$/;"	v
message	library\Zend\Cloud\QueueService\Adapter\Sqs.php	/^                $message = $message->getMessage();$/;"	v
messageClass	library\Zend\Cloud\QueueService\Adapter\Sqs.php	/^        $messageClass = $this->getMessageClass();$/;"	v
messageId	library\Zend\Cloud\QueueService\Adapter\Sqs.php	/^            $messageId = $message['handle'];$/;"	v
options	library\Zend\Cloud\QueueService\Adapter\Sqs.php	/^            $options = $options->toArray();$/;"	v
result	library\Zend\Cloud\QueueService\Adapter\Sqs.php	/^        $result = array();$/;"	v
setClass	library\Zend\Cloud\QueueService\Adapter\Sqs.php	/^        $setClass     = $this->getMessageSetClass();$/;"	v
Zend_Cloud_QueueService_Adapter_WindowsAzure	library\Zend\Cloud\QueueService\Adapter\WindowsAzure.php	/^class Zend_Cloud_QueueService_Adapter_WindowsAzure$/;"	c
host	library\Zend\Cloud\QueueService\Adapter\WindowsAzure.php	/^            $host = $options[self::HOST];$/;"	v
host	library\Zend\Cloud\QueueService\Adapter\WindowsAzure.php	/^            $host = self::DEFAULT_HOST;$/;"	v
message	library\Zend\Cloud\QueueService\Adapter\WindowsAzure.php	/^                $message = $message->getMessage();$/;"	v
messageClass	library\Zend\Cloud\QueueService\Adapter\WindowsAzure.php	/^        $messageClass = $this->getMessageClass();$/;"	v
options	library\Zend\Cloud\QueueService\Adapter\WindowsAzure.php	/^            $options = $options->toArray();$/;"	v
prefix	library\Zend\Cloud\QueueService\Adapter\WindowsAzure.php	/^        $prefix = $maxResults = null;$/;"	v
proxyCredentials	library\Zend\Cloud\QueueService\Adapter\WindowsAzure.php	/^                $proxyCredentials = isset($options[self::PROXY_CREDENTIALS]) ? $options[self::PROXY_CREDENTIALS] : '';$/;"	v
proxyHost	library\Zend\Cloud\QueueService\Adapter\WindowsAzure.php	/^                $proxyHost = $options[self::PROXY_HOST];$/;"	v
proxyPort	library\Zend\Cloud\QueueService\Adapter\WindowsAzure.php	/^                $proxyPort = isset($options[self::PROXY_PORT]) ? $options[self::PROXY_PORT] : 8080;$/;"	v
queue	library\Zend\Cloud\QueueService\Adapter\WindowsAzure.php	/^            $queue = $this->_storageClient->createQueue($name, $options);$/;"	v
queueId	library\Zend\Cloud\QueueService\Adapter\WindowsAzure.php	/^                $queueId = $queueId->Name;$/;"	v
queues	library\Zend\Cloud\QueueService\Adapter\WindowsAzure.php	/^            $queues =  $this->_storageClient->listQueues($prefix, $maxResults);$/;"	v
result	library\Zend\Cloud\QueueService\Adapter\WindowsAzure.php	/^            $result = array();$/;"	v
result	library\Zend\Cloud\QueueService\Adapter\WindowsAzure.php	/^        $result = array();$/;"	v
setClass	library\Zend\Cloud\QueueService\Adapter\WindowsAzure.php	/^        $setClass     = $this->getMessageSetClass();$/;"	v
visibility	library\Zend\Cloud\QueueService\Adapter\WindowsAzure.php	/^                $visibility = $options[self::VISIBILITY_TIMEOUT];$/;"	v
visibility	library\Zend\Cloud\QueueService\Adapter\WindowsAzure.php	/^                $visibility = self::DEFAULT_TIMEOUT;$/;"	v
Zend_Cloud_QueueService_Adapter_ZendQueue	library\Zend\Cloud\QueueService\Adapter\ZendQueue.php	/^class Zend_Cloud_QueueService_Adapter_ZendQueue$/;"	c
adapter	library\Zend\Cloud\QueueService\Adapter\ZendQueue.php	/^            $adapter = $options[self::ADAPTER];$/;"	v
message	library\Zend\Cloud\QueueService\Adapter\ZendQueue.php	/^                $message = $message->getMessage();$/;"	v
messageClass	library\Zend\Cloud\QueueService\Adapter\ZendQueue.php	/^        $messageClass = $this->getMessageClass();$/;"	v
options	library\Zend\Cloud\QueueService\Adapter\ZendQueue.php	/^            $options = $options->toArray();$/;"	v
res	library\Zend\Cloud\QueueService\Adapter\ZendQueue.php	/^            $res = $this->_queues[$queueId]->receive($max, isset($options[Zend_Queue::TIMEOUT])?$options[Zend_Queue::TIMEOUT]:null);$/;"	v
result	library\Zend\Cloud\QueueService\Adapter\ZendQueue.php	/^        $result = array();$/;"	v
setClass	library\Zend\Cloud\QueueService\Adapter\ZendQueue.php	/^        $setClass     = $this->getMessageSetClass();$/;"	v
Zend_Cloud_QueueService_Exception	library\Zend\Cloud\QueueService\Exception.php	/^class Zend_Cloud_QueueService_Exception extends Zend_Cloud_Exception$/;"	c
Zend_Cloud_QueueService_Factory	library\Zend\Cloud\QueueService\Factory.php	/^class Zend_Cloud_QueueService_Factory extends Zend_Cloud_AbstractFactory$/;"	c
adapter	library\Zend\Cloud\QueueService\Factory.php	/^        $adapter = parent::_getAdapter(self::QUEUE_ADAPTER_KEY, $options);$/;"	v
Zend_Cloud_QueueService_Message	library\Zend\Cloud\QueueService\Message.php	/^class Zend_Cloud_QueueService_Message$/;"	c
__construct	library\Zend\Cloud\QueueService\Message.php	/^    function __construct($body, $message)$/;"	f
Zend_Cloud_QueueService_MessageSet	library\Zend\Cloud\QueueService\MessageSet.php	/^class Zend_Cloud_QueueService_MessageSet implements Countable, IteratorAggregate$/;"	c
options	library\Zend\Cloud\StorageService\Adapter.php	/^                              $options = null);$/;"	v
Zend_Cloud_StorageService_Adapter_FileSystem	library\Zend\Cloud\StorageService\Adapter\FileSystem.php	/^class Zend_Cloud_StorageService_Adapter_FileSystem implements Zend_Cloud_StorageService_Adapter$/;"	c
filepath	library\Zend\Cloud\StorageService\Adapter\FileSystem.php	/^        $filepath = $this->_getFullPath($path);$/;"	v
fullPath	library\Zend\Cloud\StorageService\Adapter\FileSystem.php	/^        $fullPath = $this->_getFullPath($path);$/;"	v
listing	library\Zend\Cloud\StorageService\Adapter\FileSystem.php	/^        $listing = array_diff($listing, array('.', '..'));$/;"	v
listing	library\Zend\Cloud\StorageService\Adapter\FileSystem.php	/^        $listing = scandir($this->_getFullPath($path));$/;"	v
metadata	library\Zend\Cloud\StorageService\Adapter\FileSystem.php	/^            $metadata = stat(realpath($fullPath));$/;"	v
metadata	library\Zend\Cloud\StorageService\Adapter\FileSystem.php	/^        $metadata = null;$/;"	v
options	library\Zend\Cloud\StorageService\Adapter\FileSystem.php	/^            $options = $options->toArray();$/;"	v
path	library\Zend\Cloud\StorageService\Adapter\FileSystem.php	/^        $path     = realpath($filepath);$/;"	v
path	library\Zend\Cloud\StorageService\Adapter\FileSystem.php	/^        $path = $this->_getFullPath($destinationPath);$/;"	v
Zend_Cloud_StorageService_Adapter_Nirvanix	library\Zend\Cloud\StorageService\Adapter\Nirvanix.php	/^class Zend_Cloud_StorageService_Adapter_Nirvanix$/;"	c
__construct	library\Zend\Cloud\StorageService\Adapter\Nirvanix.php	/^    function __construct($options = array())$/;"	f
auth	library\Zend\Cloud\StorageService\Adapter\Nirvanix.php	/^        $auth = array($/;"	v
destinationPath	library\Zend\Cloud\StorageService\Adapter\Nirvanix.php	/^            $destinationPath = $this->_getFullPath($destinationPath);$/;"	v
destinationPath	library\Zend\Cloud\StorageService\Adapter\Nirvanix.php	/^        $destinationPath = $this->_getFullPath($destinationPath);$/;"	v
folderPath	library\Zend\Cloud\StorageService\Adapter\Nirvanix.php	/^                    $folderPath = $arrayElem->Path;$/;"	v
folderPath	library\Zend\Cloud\StorageService\Adapter\Nirvanix.php	/^                $folderPath = $response->ListFolder->Folder->Path;$/;"	v
httpc	library\Zend\Cloud\StorageService\Adapter\Nirvanix.php	/^            $httpc = new Zend_Http_Client();$/;"	v
item	library\Zend\Cloud\StorageService\Adapter\Nirvanix.php	/^            $item = $this->_imfNs->getContents($path);$/;"	v
length	library\Zend\Cloud\StorageService\Adapter\Nirvanix.php	/^        $length = count($metadataNode->Metadata);$/;"	v
metadata	library\Zend\Cloud\StorageService\Adapter\Nirvanix.php	/^        $metadata = array();$/;"	v
metadataNode	library\Zend\Cloud\StorageService\Adapter\Nirvanix.php	/^            $metadataNode = $this->_metadataNs->getMetadata(array('path' => $path));$/;"	v
metadataString	library\Zend\Cloud\StorageService\Adapter\Nirvanix.php	/^                    $metadataString = $key . ":" . $value;$/;"	v
nirvanix_options	library\Zend\Cloud\StorageService\Adapter\Nirvanix.php	/^        $nirvanix_options = array();$/;"	v
numFiles	library\Zend\Cloud\StorageService\Adapter\Nirvanix.php	/^            $numFiles = $response->ListFolder->TotalFileCount;$/;"	v
numFolders	library\Zend\Cloud\StorageService\Adapter\Nirvanix.php	/^           $numFolders = $response->ListFolder->TotalFolderCount;$/;"	v
options	library\Zend\Cloud\StorageService\Adapter\Nirvanix.php	/^            $options = $options->toArray();$/;"	v
path	library\Zend\Cloud\StorageService\Adapter\Nirvanix.php	/^            $path = $this->_getFullPath($destinationPath);$/;"	v
path	library\Zend\Cloud\StorageService\Adapter\Nirvanix.php	/^            $path = $this->_getFullPath($path);$/;"	v
path	library\Zend\Cloud\StorageService\Adapter\Nirvanix.php	/^        $path = $this->_getFullPath($path);$/;"	v
response	library\Zend\Cloud\StorageService\Adapter\Nirvanix.php	/^                $response = $this->_imfNs->ListFolder(array($/;"	v
response	library\Zend\Cloud\StorageService\Adapter\Nirvanix.php	/^        $response = $this->_imfNs->ListFolder(array($/;"	v
resultArray	library\Zend\Cloud\StorageService\Adapter\Nirvanix.php	/^        $resultArray = array();$/;"	v
sourcePath	library\Zend\Cloud\StorageService\Adapter\Nirvanix.php	/^            $sourcePath = $this->_getFullPath($sourcePath);$/;"	v
Zend_Cloud_StorageService_Adapter_S3	library\Zend\Cloud\StorageService\Adapter\S3.php	/^class Zend_Cloud_StorageService_Adapter_S3$/;"	c
bucket	library\Zend\Cloud\StorageService\Adapter\S3.php	/^            $bucket = $options[self::BUCKET_NAME];$/;"	v
bucket	library\Zend\Cloud\StorageService\Adapter\S3.php	/^            $bucket = $this->_defaultBucketName;$/;"	v
fullDestPath	library\Zend\Cloud\StorageService\Adapter\S3.php	/^            $fullDestPath   = $this->_getFullPath($destinationPath, $options);$/;"	v
fullPath	library\Zend\Cloud\StorageService\Adapter\S3.php	/^            $fullPath = $this->_getFullPath($destinationPath, $options);$/;"	v
fullPath	library\Zend\Cloud\StorageService\Adapter\S3.php	/^        $fullPath = $this->_getFullPath($path, $options);$/;"	v
fullSourcePath	library\Zend\Cloud\StorageService\Adapter\S3.php	/^            $fullSourcePath = $this->_getFullPath($sourcePath, $options);$/;"	v
item	library\Zend\Cloud\StorageService\Adapter\S3.php	/^            $item = $this->fetch($_getFullPath(sourcePath), $options);$/;"	v
options	library\Zend\Cloud\StorageService\Adapter\S3.php	/^            $options = $options->toArray();$/;"	v
Zend_Cloud_StorageService_Adapter_WindowsAzure	library\Zend\Cloud\StorageService\Adapter\WindowsAzure.php	/^class Zend_Cloud_StorageService_Adapter_WindowsAzure$/;"	c
blobList	library\Zend\Cloud\StorageService\Adapter\WindowsAzure.php	/^            $blobList = $this->_storageClient->listBlobs($/;"	v
fpDestination	library\Zend\Cloud\StorageService\Adapter\WindowsAzure.php	/^            $fpDestination     = fopen($temporaryFilePath, 'w');$/;"	v
fpSource	library\Zend\Cloud\StorageService\Adapter\WindowsAzure.php	/^            $fpSource = $data;$/;"	v
host	library\Zend\Cloud\StorageService\Adapter\WindowsAzure.php	/^            $host = $options[self::HOST];$/;"	v
host	library\Zend\Cloud\StorageService\Adapter\WindowsAzure.php	/^            $host = self::DEFAULT_HOST;$/;"	v
openMode	library\Zend\Cloud\StorageService\Adapter\WindowsAzure.php	/^                $openMode = $options[self::RETURN_OPENMODE];$/;"	v
openMode	library\Zend\Cloud\StorageService\Adapter\WindowsAzure.php	/^        $openMode   = 'r';$/;"	v
options	library\Zend\Cloud\StorageService\Adapter\WindowsAzure.php	/^            $options = $options->toArray();$/;"	v
proxyCredentials	library\Zend\Cloud\StorageService\Adapter\WindowsAzure.php	/^            $proxyCredentials = isset($options[self::PROXY_CREDENTIALS]) ? $options[self::PROXY_CREDENTIALS] : '';$/;"	v
proxyHost	library\Zend\Cloud\StorageService\Adapter\WindowsAzure.php	/^            $proxyHost = $options[self::PROXY_HOST];$/;"	v
proxyPort	library\Zend\Cloud\StorageService\Adapter\WindowsAzure.php	/^            $proxyPort = isset($options[self::PROXY_PORT]) ? $options[self::PROXY_PORT] : 8080;$/;"	v
removeTemporaryFilePath	library\Zend\Cloud\StorageService\Adapter\WindowsAzure.php	/^            $removeTemporaryFilePath = false;$/;"	v
removeTemporaryFilePath	library\Zend\Cloud\StorageService\Adapter\WindowsAzure.php	/^            $removeTemporaryFilePath = true;$/;"	v
removeTemporaryFilePath	library\Zend\Cloud\StorageService\Adapter\WindowsAzure.php	/^        $removeTemporaryFilePath = false;$/;"	v
returnPath	library\Zend\Cloud\StorageService\Adapter\WindowsAzure.php	/^                $returnPath = $options[self::RETURN_PATHNAME];$/;"	v
returnPath	library\Zend\Cloud\StorageService\Adapter\WindowsAzure.php	/^        $returnPath = tempnam('', 'azr');$/;"	v
returnType	library\Zend\Cloud\StorageService\Adapter\WindowsAzure.php	/^                $returnType = $options[self::RETURN_TYPE];$/;"	v
returnType	library\Zend\Cloud\StorageService\Adapter\WindowsAzure.php	/^               $returnType = $options[self::RETURN_TYPE];$/;"	v
returnType	library\Zend\Cloud\StorageService\Adapter\WindowsAzure.php	/^        $returnType = self::RETURN_NAMES; \/\/ 1: return list of paths, 2: return raw output from underlying provider$/;"	v
returnType	library\Zend\Cloud\StorageService\Adapter\WindowsAzure.php	/^        $returnType = self::RETURN_STRING;$/;"	v
returnValue	library\Zend\Cloud\StorageService\Adapter\WindowsAzure.php	/^        $returnValue = array();$/;"	v
temporaryFilePath	library\Zend\Cloud\StorageService\Adapter\WindowsAzure.php	/^            $temporaryFilePath       = $data;$/;"	v
temporaryFilePath	library\Zend\Cloud\StorageService\Adapter\WindowsAzure.php	/^            $temporaryFilePath = tempnam('', 'azr');$/;"	v
temporaryFilePath	library\Zend\Cloud\StorageService\Adapter\WindowsAzure.php	/^        $temporaryFilePath       = '';$/;"	v
Zend_Cloud_StorageService_Exception	library\Zend\Cloud\StorageService\Exception.php	/^class Zend_Cloud_StorageService_Exception extends Zend_Cloud_Exception$/;"	c
Zend_Cloud_StorageService_Factory	library\Zend\Cloud\StorageService\Factory.php	/^class Zend_Cloud_StorageService_Factory extends Zend_Cloud_AbstractFactory$/;"	c
adapter	library\Zend\Cloud\StorageService\Factory.php	/^        $adapter = parent::_getAdapter(self::STORAGE_ADAPTER_KEY, $options);$/;"	v
methodName	library\Zend\CodeGenerator\Abstract.php	/^            $methodName = 'set' . $optionName;$/;"	v
options	library\Zend\CodeGenerator\Abstract.php	/^                $options = $options->toArray();$/;"	v
Zend_CodeGenerator_Exception	library\Zend\CodeGenerator\Exception.php	/^class Zend_CodeGenerator_Exception extends Zend_Exception$/;"	c
Zend_CodeGenerator_Php_Body	library\Zend\CodeGenerator\Php\Body.php	/^class Zend_CodeGenerator_Php_Body extends Zend_CodeGenerator_Abstract$/;"	c
Zend_CodeGenerator_Php_Class	library\Zend\CodeGenerator\Php\Class.php	/^class Zend_CodeGenerator_Php_Class extends Zend_CodeGenerator_Php_Abstract$/;"	c
class	library\Zend\CodeGenerator\Php\Class.php	/^        $class = new self();$/;"	v
docblock	library\Zend\CodeGenerator\Php\Class.php	/^            $docblock = array('shortDescription' => $docblock);$/;"	v
docblock	library\Zend\CodeGenerator\Php\Class.php	/^            $docblock = new Zend_CodeGenerator_Php_Docblock($docblock);$/;"	v
implemented	library\Zend\CodeGenerator\Php\Class.php	/^        $implemented = $this->getImplementedInterfaces();$/;"	v
interfaceNames	library\Zend\CodeGenerator\Php\Class.php	/^        $interfaceNames = array();$/;"	v
interfaces	library\Zend\CodeGenerator\Php\Class.php	/^            $interfaces = $reflectionClass->getInterfaces();$/;"	v
interfaces	library\Zend\CodeGenerator\Php\Class.php	/^            $interfaces = array_diff($reflectionClass->getInterfaces(), $parentClass->getInterfaces());$/;"	v
method	library\Zend\CodeGenerator\Php\Class.php	/^            $method = new Zend_CodeGenerator_Php_Method($method);$/;"	v
methodName	library\Zend\CodeGenerator\Php\Class.php	/^            $methodName = $method->getName();$/;"	v
methods	library\Zend\CodeGenerator\Php\Class.php	/^        $methods = $this->getMethods();$/;"	v
methods	library\Zend\CodeGenerator\Php\Class.php	/^        $methods = array();$/;"	v
output	library\Zend\CodeGenerator\Php\Class.php	/^        $output = '';$/;"	v
properties	library\Zend\CodeGenerator\Php\Class.php	/^        $properties = $this->getProperties();$/;"	v
properties	library\Zend\CodeGenerator\Php\Class.php	/^        $properties = array();$/;"	v
property	library\Zend\CodeGenerator\Php\Class.php	/^            $property = new Zend_CodeGenerator_Php_Property($property);$/;"	v
propertyName	library\Zend\CodeGenerator\Php\Class.php	/^            $propertyName = $property->getName();$/;"	v
Zend_CodeGenerator_Php_Docblock	library\Zend\CodeGenerator\Php\Docblock.php	/^class Zend_CodeGenerator_Php_Docblock extends Zend_CodeGenerator_Php_Abstract$/;"	c
content	library\Zend\CodeGenerator\Php\Docblock.php	/^        $content = wordwrap($content, 80, self::LINE_FEED);$/;"	v
docblock	library\Zend\CodeGenerator\Php\Docblock.php	/^        $docblock = new self();$/;"	v
indent	library\Zend\CodeGenerator\Php\Docblock.php	/^        $indent = $this->getIndentation();$/;"	v
lines	library\Zend\CodeGenerator\Php\Docblock.php	/^        $lines = explode(self::LINE_FEED, $content);$/;"	v
output	library\Zend\CodeGenerator\Php\Docblock.php	/^        $output  = '';$/;"	v
output	library\Zend\CodeGenerator\Php\Docblock.php	/^        $output = $indent . '\/**' . self::LINE_FEED;$/;"	v
tag	library\Zend\CodeGenerator\Php\Docblock.php	/^            $tag = new Zend_CodeGenerator_Php_Docblock_Tag($tag);$/;"	v
Zend_CodeGenerator_Php_Docblock_Tag	library\Zend\CodeGenerator\Php\Docblock\Tag.php	/^class Zend_CodeGenerator_Php_Docblock_Tag extends Zend_CodeGenerator_Php_Abstract$/;"	c
codeGenDocblockTag	library\Zend\CodeGenerator\Php\Docblock\Tag.php	/^        $codeGenDocblockTag = self::factory($tagName);$/;"	v
pluginLoader	library\Zend\CodeGenerator\Php\Docblock\Tag.php	/^        $pluginLoader = self::getPluginLoader();$/;"	v
propertyName	library\Zend\CodeGenerator\Php\Docblock\Tag.php	/^                $propertyName = substr($method->getName(), 3);$/;"	v
reflectionClass	library\Zend\CodeGenerator\Php\Docblock\Tag.php	/^        $reflectionClass = new ReflectionClass($reflectionTag);$/;"	v
tag	library\Zend\CodeGenerator\Php\Docblock\Tag.php	/^        $tag = '@' . $this->_name;$/;"	v
tag	library\Zend\CodeGenerator\Php\Docblock\Tag.php	/^        $tag = new $tagClass(array('name' => $tagName));$/;"	v
tagClass	library\Zend\CodeGenerator\Php\Docblock\Tag.php	/^            $tagClass = $pluginLoader->load($tagName);$/;"	v
tagClass	library\Zend\CodeGenerator\Php\Docblock\Tag.php	/^            $tagClass = 'Zend_CodeGenerator_Php_Docblock_Tag';$/;"	v
tagName	library\Zend\CodeGenerator\Php\Docblock\Tag.php	/^        $tagName = $reflectionTag->getName();$/;"	v
Zend_CodeGenerator_Php_Docblock_Tag_License	library\Zend\CodeGenerator\Php\Docblock\Tag\License.php	/^class Zend_CodeGenerator_Php_Docblock_Tag_License extends Zend_CodeGenerator_Php_Docblock_Tag$/;"	c
output	library\Zend\CodeGenerator\Php\Docblock\Tag\License.php	/^        $output = '@license ' . $this->_url . ' ' . $this->_description . self::LINE_FEED;$/;"	v
returnTag	library\Zend\CodeGenerator\Php\Docblock\Tag\License.php	/^        $returnTag = new self();$/;"	v
Zend_CodeGenerator_Php_Docblock_Tag_Param	library\Zend\CodeGenerator\Php\Docblock\Tag\Param.php	/^class Zend_CodeGenerator_Php_Docblock_Tag_Param extends Zend_CodeGenerator_Php_Docblock_Tag$/;"	c
output	library\Zend\CodeGenerator\Php\Docblock\Tag\Param.php	/^        $output = '@param '$/;"	v
paramTag	library\Zend\CodeGenerator\Php\Docblock\Tag\Param.php	/^        $paramTag = new self();$/;"	v
Zend_CodeGenerator_Php_Docblock_Tag_Return	library\Zend\CodeGenerator\Php\Docblock\Tag\Return.php	/^class Zend_CodeGenerator_Php_Docblock_Tag_Return extends Zend_CodeGenerator_Php_Docblock_Tag$/;"	c
output	library\Zend\CodeGenerator\Php\Docblock\Tag\Return.php	/^        $output = '@return ' . $this->_datatype . ' ' . $this->_description;$/;"	v
returnTag	library\Zend\CodeGenerator\Php\Docblock\Tag\Return.php	/^        $returnTag = new self();$/;"	v
Zend_CodeGenerator_Php_Exception	library\Zend\CodeGenerator\Php\Exception.php	/^class Zend_CodeGenerator_Php_Exception extends Zend_CodeGenerator_Exception$/;"	c
Zend_CodeGenerator_Php_File	library\Zend\CodeGenerator\Php\File.php	/^class Zend_CodeGenerator_Php_File extends Zend_CodeGenerator_Php_Abstract$/;"	c
body	library\Zend\CodeGenerator\Php\File.php	/^            $body    = '';$/;"	v
body	library\Zend\CodeGenerator\Php\File.php	/^            $body = implode("\\n", $bodyReturn);$/;"	v
body	library\Zend\CodeGenerator\Php\File.php	/^        $body = $reflectionFile->getContents();$/;"	v
body	library\Zend\CodeGenerator\Php\File.php	/^        $body = $this->getBody();$/;"	v
bodyLines	library\Zend\CodeGenerator\Php\File.php	/^            $bodyLines = explode("\\n", $body);$/;"	v
bodyReturn	library\Zend\CodeGenerator\Php\File.php	/^            $bodyReturn = array();$/;"	v
class	library\Zend\CodeGenerator\Php\File.php	/^            $class = new Zend_CodeGenerator_Php_Class($class);$/;"	v
classEndLine	library\Zend\CodeGenerator\Php\File.php	/^            $classEndLine = $class->getEndLine();$/;"	v
className	library\Zend\CodeGenerator\Php\File.php	/^            $className = $class->getName();$/;"	v
classStartLine	library\Zend\CodeGenerator\Php\File.php	/^            $classStartLine = $class->getStartLine(true);$/;"	v
classes	library\Zend\CodeGenerator\Php\File.php	/^        $classes = $this->getClasses();$/;"	v
codeGenerator	library\Zend\CodeGenerator\Php\File.php	/^        $codeGenerator = self::fromReflection(($fileReflector = new Zend_Reflection_File($realpath)));$/;"	v
docblock	library\Zend\CodeGenerator\Php\File.php	/^            $docblock = $reflectionFile->getDocblock();$/;"	v
docblock	library\Zend\CodeGenerator\Php\File.php	/^            $docblock = array('shortDescription' => $docblock);$/;"	v
docblock	library\Zend\CodeGenerator\Php\File.php	/^            $docblock = new Zend_CodeGenerator_Php_Docblock($docblock);$/;"	v
file	library\Zend\CodeGenerator\Php\File.php	/^        $file = new self();$/;"	v
fileName	library\Zend\CodeGenerator\Php\File.php	/^            $fileName = $fileCodeGenerator->getFilename();$/;"	v
fileName	library\Zend\CodeGenerator\Php\File.php	/^        $fileName = str_replace(array('\\\\', '\/'), DIRECTORY_SEPARATOR, $fileName);$/;"	v
lineNum	library\Zend\CodeGenerator\Php\File.php	/^                    $lineNum = $classEndLine;$/;"	v
lineNum	library\Zend\CodeGenerator\Php\File.php	/^                    $lineNum = $docblock->getEndLine();$/;"	v
output	library\Zend\CodeGenerator\Php\File.php	/^                    $output = preg_replace('#'.$regex.'#', $class->generate(), $output, 1);$/;"	v
output	library\Zend\CodeGenerator\Php\File.php	/^                $output  = preg_replace('#'.$regex.'#', $docblock->generate(), $output, 1);$/;"	v
output	library\Zend\CodeGenerator\Php\File.php	/^            $output = '<?php' . self::LINE_FEED;$/;"	v
output	library\Zend\CodeGenerator\Php\File.php	/^        $output = '';$/;"	v
realpath	library\Zend\CodeGenerator\Php\File.php	/^        $realpath = realpath($filePath);$/;"	v
regex	library\Zend\CodeGenerator\Php\File.php	/^                $regex = preg_quote($regex, '#');$/;"	v
regex	library\Zend\CodeGenerator\Php\File.php	/^                $regex = str_replace('?', $class->getName(), self::$_markerClass);$/;"	v
regex	library\Zend\CodeGenerator\Php\File.php	/^            $regex = preg_quote(self::$_markerDocblock, '#');$/;"	v
requiredFiles	library\Zend\CodeGenerator\Php\File.php	/^        $requiredFiles = $this->getRequiredFiles();$/;"	v
docblock	library\Zend\CodeGenerator\Php\Member\Abstract.php	/^            $docblock = array('shortDescription' => $docblock);$/;"	v
docblock	library\Zend\CodeGenerator\Php\Member\Abstract.php	/^            $docblock = new Zend_CodeGenerator_Php_Docblock($docblock);$/;"	v
Zend_CodeGenerator_Php_Member_Container	library\Zend\CodeGenerator\Php\Member\Container.php	/^class Zend_CodeGenerator_Php_Member_Container extends ArrayObject$/;"	c
Zend_CodeGenerator_Php_Method	library\Zend\CodeGenerator\Php\Method.php	/^class Zend_CodeGenerator_Php_Method extends Zend_CodeGenerator_Php_Member_Abstract$/;"	c
indent	library\Zend\CodeGenerator\Php\Method.php	/^        $indent = $this->getIndentation();$/;"	v
method	library\Zend\CodeGenerator\Php\Method.php	/^        $method = new self();$/;"	v
output	library\Zend\CodeGenerator\Php\Method.php	/^        $output = '';$/;"	v
parameter	library\Zend\CodeGenerator\Php\Method.php	/^            $parameter = new Zend_CodeGenerator_Php_Parameter($parameter);$/;"	v
parameterName	library\Zend\CodeGenerator\Php\Method.php	/^            $parameterName = $parameter->getName();$/;"	v
parameters	library\Zend\CodeGenerator\Php\Method.php	/^        $parameters = $this->getParameters();$/;"	v
Zend_CodeGenerator_Php_Parameter	library\Zend\CodeGenerator\Php\Parameter.php	/^class Zend_CodeGenerator_Php_Parameter extends Zend_CodeGenerator_Php_Abstract$/;"	c
defaultValue	library\Zend\CodeGenerator\Php\Parameter.php	/^            $defaultValue = str_replace(array("\\r", "\\n"), "", var_export($defaultValue, true));$/;"	v
output	library\Zend\CodeGenerator\Php\Parameter.php	/^        $output = '';$/;"	v
param	library\Zend\CodeGenerator\Php\Parameter.php	/^        $param = new Zend_CodeGenerator_Php_Parameter();$/;"	v
typeClass	library\Zend\CodeGenerator\Php\Parameter.php	/^            $typeClass = $reflectionParameter->getClass();$/;"	v
Zend_CodeGenerator_Php_Parameter_DefaultValue	library\Zend\CodeGenerator\Php\Parameter\DefaultValue.php	/^class Zend_CodeGenerator_Php_Parameter_DefaultValue$/;"	c
Zend_CodeGenerator_Php_Property	library\Zend\CodeGenerator\Php\Property.php	/^class Zend_CodeGenerator_Php_Property extends Zend_CodeGenerator_Php_Member_Abstract$/;"	c
allDefaultProperties	library\Zend\CodeGenerator\Php\Property.php	/^        $allDefaultProperties = $reflectionProperty->getDeclaringClass()->getDefaultProperties();$/;"	v
defaultValue	library\Zend\CodeGenerator\Php\Property.php	/^            $defaultValue = new Zend_CodeGenerator_Php_Property_DefaultValue($defaultValue);$/;"	v
defaultValue	library\Zend\CodeGenerator\Php\Property.php	/^            $defaultValue = new Zend_CodeGenerator_Php_Property_DefaultValue(array('value' => $defaultValue));$/;"	v
defaultValue	library\Zend\CodeGenerator\Php\Property.php	/^        $defaultValue = $this->getDefaultValue();$/;"	v
name	library\Zend\CodeGenerator\Php\Property.php	/^        $name         = $this->getName();$/;"	v
output	library\Zend\CodeGenerator\Php\Property.php	/^        $output = '';$/;"	v
property	library\Zend\CodeGenerator\Php\Property.php	/^        $property = new self();$/;"	v
Zend_CodeGenerator_Php_Property_DefaultValue	library\Zend\CodeGenerator\Php\Property\DefaultValue.php	/^class Zend_CodeGenerator_Php_Property_DefaultValue extends Zend_CodeGenerator_Php_Abstract$/;"	c
curArrayMultiblock	library\Zend\CodeGenerator\Php\Property\DefaultValue.php	/^                    $curArrayMultiblock = true;$/;"	v
curArrayMultiblock	library\Zend\CodeGenerator\Php\Property\DefaultValue.php	/^                $curArrayMultiblock = false;$/;"	v
curValue	library\Zend\CodeGenerator\Php\Property\DefaultValue.php	/^                        $curValue = new self(array('value' => $curValue));$/;"	v
it	library\Zend\CodeGenerator\Php\Property\DefaultValue.php	/^                    $it = new RecursiveArrayIterator($value),$/;"	v
noKeyIndex	library\Zend\CodeGenerator\Php\Property\DefaultValue.php	/^                $noKeyIndex = 0;$/;"	v
output	library\Zend\CodeGenerator\Php\Property\DefaultValue.php	/^        $output = '';$/;"	v
outputParts	library\Zend\CodeGenerator\Php\Property\DefaultValue.php	/^                $outputParts = array();$/;"	v
partV	library\Zend\CodeGenerator\Php\Property\DefaultValue.php	/^                    $partV = $v->generate();$/;"	v
partV	library\Zend\CodeGenerator\Php\Property\DefaultValue.php	/^                    $partV = substr($partV, 0, strlen($partV)-1);$/;"	v
reflect	library\Zend\CodeGenerator\Php\Property\DefaultValue.php	/^            $reflect = new ReflectionClass(get_class($this));$/;"	v
rii	library\Zend\CodeGenerator\Php\Property\DefaultValue.php	/^                $rii = new RecursiveIteratorIterator($/;"	v
scalarTypes	library\Zend\CodeGenerator\Php\Property\DefaultValue.php	/^        $scalarTypes = array($/;"	v
type	library\Zend\CodeGenerator\Php\Property\DefaultValue.php	/^            $type = $this->_getAutoDeterminedType($this->_value);$/;"	v
type	library\Zend\CodeGenerator\Php\Property\DefaultValue.php	/^            $type = $this->_getAutoDeterminedType($value);$/;"	v
type	library\Zend\CodeGenerator\Php\Property\DefaultValue.php	/^            $type = $this->_getValidatedType($type);$/;"	v
type	library\Zend\CodeGenerator\Php\Property\DefaultValue.php	/^            $type = $this->_type;$/;"	v
type	library\Zend\CodeGenerator\Php\Property\DefaultValue.php	/^        $type = $this->_type;$/;"	v
value	library\Zend\CodeGenerator\Php\Property\DefaultValue.php	/^                $value = $rii->getSubIterator()->getArrayCopy();$/;"	v
value	library\Zend\CodeGenerator\Php\Property\DefaultValue.php	/^        $value = $this->_value;$/;"	v
Zend_Config	library\Zend\Config.php	/^class Zend_Config implements Countable, Iterator$/;"	c
array	library\Zend\Config.php	/^        $array = array();$/;"	v
array	library\Zend\Config.php	/^      $array = array();$/;"	v
data	library\Zend\Config.php	/^        $data = $this->_data;$/;"	v
extendedSectionCurrent	library\Zend\Config.php	/^            $extendedSectionCurrent = $this->_extends[$extendedSectionCurrent];$/;"	v
extendedSectionCurrent	library\Zend\Config.php	/^        $extendedSectionCurrent = $extendedSection;$/;"	v
firstArray	library\Zend\Config.php	/^                        $firstArray= array(0=>$this->_arrayMergeRecursive($firstArray, $value));$/;"	v
firstArray	library\Zend\Config.php	/^            $firstArray = $secondArray;$/;"	v
result	library\Zend\Config.php	/^            $result = $this->_data[$name];$/;"	v
result	library\Zend\Config.php	/^        $result = $default;$/;"	v
Zend_Config_Exception	library\Zend\Config\Exception.php	/^class Zend_Config_Exception extends Zend_Exception {}$/;"	c
Zend_Config_Ini	library\Zend\Config\Ini.php	/^class Zend_Config_Ini extends Zend_Config$/;"	c
allowModifications	library\Zend\Config\Ini.php	/^                $allowModifications = (bool) $options['allowModifications'];$/;"	v
allowModifications	library\Zend\Config\Ini.php	/^            $allowModifications = $options;$/;"	v
allowModifications	library\Zend\Config\Ini.php	/^        $allowModifications = false;$/;"	v
config	library\Zend\Config\Ini.php	/^                        $config = $this->_processSection($iniArray, $value, $config);$/;"	v
config	library\Zend\Config\Ini.php	/^                        $config = array($pieces[0] => $config);$/;"	v
config	library\Zend\Config\Ini.php	/^                $config = $this->_processKey($config, $key, $value);$/;"	v
dataArray	library\Zend\Config\Ini.php	/^                    $dataArray = $this->_arrayMergeRecursive($dataArray, $this->_processKey(array(), $sectionName, $sectionData));$/;"	v
dataArray	library\Zend\Config\Ini.php	/^                $dataArray = $this->_arrayMergeRecursive($this->_processSection($iniArray, $sectionName), $dataArray);$/;"	v
dataArray	library\Zend\Config\Ini.php	/^            $dataArray = array();$/;"	v
extendedSection	library\Zend\Config\Ini.php	/^                    $extendedSection = trim($pieces[1]);$/;"	v
iniArray	library\Zend\Config\Ini.php	/^        $iniArray = $this->_loadIniFile($filename);$/;"	v
iniArray	library\Zend\Config\Ini.php	/^        $iniArray = array();$/;"	v
iniArray	library\Zend\Config\Ini.php	/^        $iniArray = parse_ini_file($filename, true); \/\/ Warnings and errors are suppressed$/;"	v
loaded	library\Zend\Config\Ini.php	/^        $loaded = $this->_parseIniFile($filename);$/;"	v
pieces	library\Zend\Config\Ini.php	/^            $pieces = explode($this->_nestSeparator, $key, 2);$/;"	v
pieces	library\Zend\Config\Ini.php	/^            $pieces = explode($this->_sectionSeparator, $key);$/;"	v
section	library\Zend\Config\Ini.php	/^                $section = array($section);$/;"	v
thisSection	library\Zend\Config\Ini.php	/^            $thisSection = trim($pieces[0]);$/;"	v
thisSection	library\Zend\Config\Ini.php	/^        $thisSection = $iniArray[$section];$/;"	v
Zend_Config_Json	library\Zend\Config\Json.php	/^class Zend_Config_Json extends Zend_Config$/;"	c
allowModifications	library\Zend\Config\Json.php	/^                        $allowModifications = (bool) $value;$/;"	v
allowModifications	library\Zend\Config\Json.php	/^            $allowModifications = $options;$/;"	v
allowModifications	library\Zend\Config\Json.php	/^        $allowModifications = false;$/;"	v
config	library\Zend\Config\Json.php	/^                $config = $this->_processExtends($data, $thisSection[self::EXTENDS_NAME], $config);$/;"	v
config	library\Zend\Config\Json.php	/^        $config = $this->_arrayMergeRecursive($config, $thisSection);$/;"	v
config	library\Zend\Config\Json.php	/^        $config = Zend_Json::decode($json);$/;"	v
constants	library\Zend\Config\Json.php	/^        $constants = array_keys(get_defined_constants());$/;"	v
dataArray	library\Zend\Config\Json.php	/^                $dataArray = array($section => $dataArray);$/;"	v
dataArray	library\Zend\Config\Json.php	/^                $dataArray = array_merge($this->_processExtends($config, $sectionName), $dataArray);$/;"	v
dataArray	library\Zend\Config\Json.php	/^            $dataArray = $this->_processExtends($config, $section);$/;"	v
dataArray	library\Zend\Config\Json.php	/^            $dataArray = array();$/;"	v
json	library\Zend\Config\Json.php	/^            $json = $this->_replaceConstants($json);$/;"	v
json	library\Zend\Config\Json.php	/^            $json = file_get_contents($json);$/;"	v
thisSection	library\Zend\Config\Json.php	/^        $thisSection  = $data[$section];$/;"	v
value	library\Zend\Config\Json.php	/^                $value = str_replace($constant, constant($constant), $value);$/;"	v
method	library\Zend\Config\Writer.php	/^            $method = 'set' . ucfirst($key);$/;"	v
Zend_Config_Writer_Array	library\Zend\Config\Writer\Array.php	/^class Zend_Config_Writer_Array extends Zend_Config_Writer_FileAbstract$/;"	c
arrayString	library\Zend\Config\Writer\Array.php	/^        $arrayString = "<?php\\n"$/;"	v
data	library\Zend\Config\Writer\Array.php	/^            $data = array($sectionName => $data);$/;"	v
data	library\Zend\Config\Writer\Array.php	/^        $data        = $this->_config->toArray();$/;"	v
sectionName	library\Zend\Config\Writer\Array.php	/^        $sectionName = $this->_config->getSectionName();$/;"	v
Zend_Config_Writer_FileAbstract	library\Zend\Config\Writer\FileAbstract.php	/^class Zend_Config_Writer_FileAbstract extends Zend_Config_Writer$/;"	c
configString	library\Zend\Config\Writer\FileAbstract.php	/^        $configString = $this->render();$/;"	v
flags	library\Zend\Config\Writer\FileAbstract.php	/^        $flags = 0;$/;"	v
result	library\Zend\Config\Writer\FileAbstract.php	/^        $result = @file_put_contents($this->_filename, $configString, $flags);$/;"	v
Zend_Config_Writer_Ini	library\Zend\Config\Writer\Ini.php	/^class Zend_Config_Writer_Ini extends Zend_Config_Writer_FileAbstract$/;"	c
config	library\Zend\Config\Writer\Ini.php	/^            $config = $this->_sortRootElements($this->_config);$/;"	v
configArray	library\Zend\Config\Writer\Ini.php	/^        $configArray = $config->toArray();$/;"	v
extends	library\Zend\Config\Writer\Ini.php	/^        $extends     = $this->_config->getExtends();$/;"	v
group	library\Zend\Config\Writer\Ini.php	/^            $group = array_merge($parents, array($key));$/;"	v
iniString	library\Zend\Config\Writer\Ini.php	/^        $iniString   = '';$/;"	v
iniString	library\Zend\Config\Writer\Ini.php	/^        $iniString = '';$/;"	v
sectionName	library\Zend\Config\Writer\Ini.php	/^        $sectionName = $this->_config->getSectionName();$/;"	v
sections	library\Zend\Config\Writer\Ini.php	/^        $sections = array();$/;"	v
Zend_Config_Writer_Json	library\Zend\Config\Writer\Json.php	/^class Zend_Config_Writer_Json extends Zend_Config_Writer_FileAbstract$/;"	c
data	library\Zend\Config\Writer\Json.php	/^            $data = array($sectionName => $data);$/;"	v
data	library\Zend\Config\Writer\Json.php	/^        $data        = $this->_config->toArray();$/;"	v
extends	library\Zend\Config\Writer\Json.php	/^        $extends     = $this->_config->getExtends();$/;"	v
out	library\Zend\Config\Writer\Json.php	/^             $out = Zend_Json::prettyPrint($out);$/;"	v
out	library\Zend\Config\Writer\Json.php	/^        $out = Zend_Json::encode($data);$/;"	v
sectionExtends	library\Zend\Config\Writer\Json.php	/^                $sectionExtends = $sectionData[Zend_Config_Json::EXTENDS_NAME];$/;"	v
sectionName	library\Zend\Config\Writer\Json.php	/^        $sectionName = $this->_config->getSectionName();$/;"	v
Zend_Config_Writer_Xml	library\Zend\Config\Writer\Xml.php	/^class Zend_Config_Writer_Xml extends Zend_Config_Writer_FileAbstract$/;"	c
branchName	library\Zend\Config\Writer\Xml.php	/^                    $branchName = $xml->getName();$/;"	v
branchType	library\Zend\Config\Writer\Xml.php	/^                    $branchType = 'numeric';$/;"	v
branchType	library\Zend\Config\Writer\Xml.php	/^                    $branchType = 'string';$/;"	v
branchType	library\Zend\Config\Writer\Xml.php	/^        $branchType = null;$/;"	v
child	library\Zend\Config\Writer\Xml.php	/^                    $child = $parent->addChild($branchName);$/;"	v
child	library\Zend\Config\Writer\Xml.php	/^                    $child = $xml->addChild($key);$/;"	v
child	library\Zend\Config\Writer\Xml.php	/^                    $child = $xml->addChild($sectionName);$/;"	v
child	library\Zend\Config\Writer\Xml.php	/^            $child = $xml->addChild($sectionName);$/;"	v
dom	library\Zend\Config\Writer\Xml.php	/^        $dom = dom_import_simplexml($xml)->ownerDocument;$/;"	v
extends	library\Zend\Config\Writer\Xml.php	/^        $extends     = $this->_config->getExtends();$/;"	v
sectionName	library\Zend\Config\Writer\Xml.php	/^        $sectionName = $this->_config->getSectionName();$/;"	v
xml	library\Zend\Config\Writer\Xml.php	/^                    $xml        = $parent;$/;"	v
xml	library\Zend\Config\Writer\Xml.php	/^        $xml         = new SimpleXMLElement('<zend-config xmlns:zf="' . Zend_Config_Xml::XML_NAMESPACE . '"\/>');$/;"	v
xmlString	library\Zend\Config\Writer\Xml.php	/^        $xmlString = $dom->saveXML();$/;"	v
Zend_Config_Writer_Yaml	library\Zend\Config\Writer\Yaml.php	/^class Zend_Config_Writer_Yaml extends Zend_Config_Writer_FileAbstract$/;"	c
data	library\Zend\Config\Writer\Yaml.php	/^            $data = array($sectionName => $data);$/;"	v
data	library\Zend\Config\Writer\Yaml.php	/^        $data        = $this->_config->toArray();$/;"	v
encoded	library\Zend\Config\Writer\Yaml.php	/^                $encoded = "\\n".self::_encodeYaml($indent+1, $value);$/;"	v
encoded	library\Zend\Config\Writer\Yaml.php	/^                $encoded = (string)$value."\\n";$/;"	v
extends	library\Zend\Config\Writer\Yaml.php	/^        $extends     = $this->_config->getExtends();$/;"	v
numeric	library\Zend\Config\Writer\Yaml.php	/^        $numeric = is_numeric(key($data));$/;"	v
result	library\Zend\Config\Writer\Yaml.php	/^        $result = "";$/;"	v
sectionExtends	library\Zend\Config\Writer\Yaml.php	/^                $sectionExtends = $sectionData[Zend_Config_Yaml::EXTENDS_NAME];$/;"	v
sectionName	library\Zend\Config\Writer\Yaml.php	/^        $sectionName = $this->_config->getSectionName();$/;"	v
Zend_Config_Xml	library\Zend\Config\Xml.php	/^class Zend_Config_Xml extends Zend_Config$/;"	c
allowModifications	library\Zend\Config\Xml.php	/^                $allowModifications = (bool) $options['allowModifications'];$/;"	v
allowModifications	library\Zend\Config\Xml.php	/^            $allowModifications = $options;$/;"	v
allowModifications	library\Zend\Config\Xml.php	/^        $allowModifications = false;$/;"	v
attributes	library\Zend\Config\Xml.php	/^                    $attributes = $value->attributes();$/;"	v
config	library\Zend\Config\Xml.php	/^                $config = $this->_processExtends($element, $extendedSection, $config);$/;"	v
config	library\Zend\Config\Xml.php	/^            $config = (string) $xmlObject;$/;"	v
config	library\Zend\Config\Xml.php	/^            $config = simplexml_load_file($xml);$/;"	v
config	library\Zend\Config\Xml.php	/^            $config = simplexml_load_string($xml);$/;"	v
config	library\Zend\Config\Xml.php	/^        $config       = array();$/;"	v
config	library\Zend\Config\Xml.php	/^        $config = $this->_arrayMergeRecursive($config, $this->_toArray($thisSection));$/;"	v
constantName	library\Zend\Config\Xml.php	/^                        $constantName = $node->getAttributeNS(self::XML_NAMESPACE, 'name');$/;"	v
constantValue	library\Zend\Config\Xml.php	/^                        $constantValue = constant($constantName);$/;"	v
dataArray	library\Zend\Config\Xml.php	/^                $dataArray = array($section => $dataArray);$/;"	v
dataArray	library\Zend\Config\Xml.php	/^                $dataArray = array_merge($this->_processExtends($config, $sectionName), $dataArray);$/;"	v
dataArray	library\Zend\Config\Xml.php	/^            $dataArray = $this->_processExtends($config, $section);$/;"	v
dataArray	library\Zend\Config\Xml.php	/^            $dataArray = array();$/;"	v
dom	library\Zend\Config\Xml.php	/^            $dom                 = dom_import_simplexml($xmlObject);$/;"	v
extendedSection	library\Zend\Config\Xml.php	/^            $extendedSection = (string) (isset($nsAttributes['extends']) ? $nsAttributes['extends'] : $thisSection['extends']);$/;"	v
namespaceChildNodes	library\Zend\Config\Xml.php	/^            $namespaceChildNodes = array();$/;"	v
nsAttributes	library\Zend\Config\Xml.php	/^        $nsAttributes = $thisSection->attributes(self::XML_NAMESPACE);$/;"	v
nsAttributes	library\Zend\Config\Xml.php	/^        $nsAttributes = $xmlObject->attributes(self::XML_NAMESPACE);$/;"	v
thisSection	library\Zend\Config\Xml.php	/^        $thisSection  = $element->$section;$/;"	v
value	library\Zend\Config\Xml.php	/^                        $value = $this->_toArray($value);$/;"	v
value	library\Zend\Config\Xml.php	/^                        $value = (string) $attributes['value'];$/;"	v
value	library\Zend\Config\Xml.php	/^                    $value = $this->_toArray($value);$/;"	v
value	library\Zend\Config\Xml.php	/^                    $value = (string) $value;$/;"	v
value	library\Zend\Config\Xml.php	/^                $value = (string) $value;$/;"	v
Zend_Config_Yaml	library\Zend\Config\Yaml.php	/^class Zend_Config_Yaml extends Zend_Config$/;"	c
allowModifications	library\Zend\Config\Yaml.php	/^                        $allowModifications = (bool) $value;$/;"	v
allowModifications	library\Zend\Config\Yaml.php	/^            $allowModifications = $options;$/;"	v
allowModifications	library\Zend\Config\Yaml.php	/^        $allowModifications = false;$/;"	v
config	library\Zend\Config\Yaml.php	/^                $config = $this->_processExtends($data, $thisSection[self::EXTENDS_NAME], $config);$/;"	v
config	library\Zend\Config\Yaml.php	/^        $config   = array();$/;"	v
config	library\Zend\Config\Yaml.php	/^        $config = $this->_arrayMergeRecursive($config, $thisSection);$/;"	v
config	library\Zend\Config\Yaml.php	/^        $config = call_user_func($this->getYamlDecoder(), $yaml);$/;"	v
constants	library\Zend\Config\Yaml.php	/^        $constants = array_keys(get_defined_constants());$/;"	v
currentIndent	library\Zend\Config\Yaml.php	/^                $currentIndent = $indent;$/;"	v
dataArray	library\Zend\Config\Yaml.php	/^                $dataArray = array($section => $dataArray);$/;"	v
dataArray	library\Zend\Config\Yaml.php	/^                $dataArray = array_merge($this->_processExtends($config, $sectionName), $dataArray);$/;"	v
dataArray	library\Zend\Config\Yaml.php	/^            $dataArray = $this->_processExtends($config, $section);$/;"	v
dataArray	library\Zend\Config\Yaml.php	/^            $dataArray = array();$/;"	v
ignoreConstants	library\Zend\Config\Yaml.php	/^                        $ignoreConstants = (bool) $value;$/;"	v
ignoreConstants	library\Zend\Config\Yaml.php	/^        $ignoreConstants    = $staticIgnoreConstants = self::ignoreConstants();$/;"	v
inIndent	library\Zend\Config\Yaml.php	/^                $inIndent      = true;$/;"	v
inIndent	library\Zend\Config\Yaml.php	/^        $inIndent = false;$/;"	v
indent	library\Zend\Config\Yaml.php	/^            $indent = strspn($line, " ");$/;"	v
line	library\Zend\Config\Yaml.php	/^            $line = rtrim(preg_replace("\/#.*$\/", "", $line));$/;"	v
line	library\Zend\Config\Yaml.php	/^            $line = trim($line);$/;"	v
lineno	library\Zend\Config\Yaml.php	/^            $lineno = $n + 1;$/;"	v
lines	library\Zend\Config\Yaml.php	/^        $lines = explode("\\n", $yaml);$/;"	v
thisSection	library\Zend\Config\Yaml.php	/^        $thisSection  = $data[$section];$/;"	v
value	library\Zend\Config\Yaml.php	/^                        $value = "";$/;"	v
value	library\Zend\Config\Yaml.php	/^                        $value = false;$/;"	v
value	library\Zend\Config\Yaml.php	/^                        $value = self::_replaceConstants($value);$/;"	v
value	library\Zend\Config\Yaml.php	/^                        $value = true;$/;"	v
value	library\Zend\Config\Yaml.php	/^                    $value = rtrim(preg_replace("\/#.*$\/", "", $m[2]));$/;"	v
value	library\Zend\Config\Yaml.php	/^                    $value = self::_decodeYaml($currentIndent + 1, $lines);$/;"	v
value	library\Zend\Config\Yaml.php	/^                $value = str_replace($constant, constant($constant), $value);$/;"	v
yaml	library\Zend\Config\Yaml.php	/^        $yaml = file_get_contents($yaml);$/;"	v
Zend_Console_Getopt	library\Zend\Console\Getopt.php	/^class Zend_Console_Getopt$/;"	c
alias	library\Zend\Console\Getopt.php	/^                $alias = strtolower($alias);$/;"	v
argv	library\Zend\Console\Getopt.php	/^            $argv = array_slice($_SERVER['argv'], 1);$/;"	v
argv	library\Zend\Console\Getopt.php	/^        $argv = $this->_argv;$/;"	v
delimiter	library\Zend\Console\Getopt.php	/^                $delimiter = $paramType = null;$/;"	v
delimiter	library\Zend\Console\Getopt.php	/^                $delimiter = substr($ruleCode, -2, 1);$/;"	v
doc	library\Zend\Console\Getopt.php	/^        $doc = new DomDocument('1.0', 'utf-8');$/;"	v
flag	library\Zend\Console\Getopt.php	/^                $flag = strtolower($flag);$/;"	v
flag	library\Zend\Console\Getopt.php	/^            $flag = $this->_ruleMap[$flag];$/;"	v
flag	library\Zend\Console\Getopt.php	/^            $flag = strtolower($flag);$/;"	v
flag	library\Zend\Console\Getopt.php	/^            $flag = substr($rule, 0, 1);$/;"	v
flag	library\Zend\Console\Getopt.php	/^        $flag = array_shift($l);$/;"	v
flagCluster	library\Zend\Console\Getopt.php	/^        $flagCluster = ltrim(array_shift($argv), '-');$/;"	v
flagList	library\Zend\Console\Getopt.php	/^                $flagList  = substr($ruleCode, 0, -2);$/;"	v
flagList	library\Zend\Console\Getopt.php	/^                $flagList = $ruleCode;$/;"	v
flagList	library\Zend\Console\Getopt.php	/^                $flagList = strtolower($flagList);$/;"	v
flags	library\Zend\Console\Getopt.php	/^            $flags = array();$/;"	v
flags	library\Zend\Console\Getopt.php	/^            $flags = explode('|', $flagList);$/;"	v
j	library\Zend\Console\Getopt.php	/^        $j = array();$/;"	v
json	library\Zend\Console\Getopt.php	/^        $json = Zend_Json::encode($j);$/;"	v
key	library\Zend\Console\Getopt.php	/^            $key = $this->_ruleMap[$key];$/;"	v
l	library\Zend\Console\Getopt.php	/^        $l = explode('=', $optionWithParam, 2);$/;"	v
lines	library\Zend\Console\Getopt.php	/^        $lines = array();$/;"	v
mainFlag	library\Zend\Console\Getopt.php	/^            $mainFlag = $flags[0];$/;"	v
maxLen	library\Zend\Console\Getopt.php	/^                $maxLen = strlen($linepart['name']);$/;"	v
maxLen	library\Zend\Console\Getopt.php	/^        $maxLen = 20;$/;"	v
method	library\Zend\Console\Getopt.php	/^                $method = '_addRulesMode' . ucfirst($ruleMode);$/;"	v
o	library\Zend\Console\Getopt.php	/^                $o = (strlen($alias) == 1 ? '-' : '--') . $alias;$/;"	v
optionNode	library\Zend\Console\Getopt.php	/^            $optionNode = $doc->createElement('option');$/;"	v
optionWithParam	library\Zend\Console\Getopt.php	/^        $optionWithParam = ltrim(array_shift($argv), '-');$/;"	v
optionsNode	library\Zend\Console\Getopt.php	/^        $optionsNode = $doc->createElement('options');$/;"	v
param	library\Zend\Console\Getopt.php	/^                    $param = array_shift($argv);$/;"	v
param	library\Zend\Console\Getopt.php	/^                    $param = true;$/;"	v
param	library\Zend\Console\Getopt.php	/^                $param = true;$/;"	v
param	library\Zend\Console\Getopt.php	/^        $param = array_shift($l);$/;"	v
paramType	library\Zend\Console\Getopt.php	/^                $paramType = substr($ruleCode, -1);$/;"	v
r	library\Zend\Console\Getopt.php	/^            $r = array();$/;"	v
realFlag	library\Zend\Console\Getopt.php	/^        $realFlag = $this->_ruleMap[$flag];$/;"	v
rule	library\Zend\Console\Getopt.php	/^            $rule = array();$/;"	v
ruleArray	library\Zend\Console\Getopt.php	/^        $ruleArray = array();$/;"	v
ruleMode	library\Zend\Console\Getopt.php	/^        $ruleMode = $this->_getoptConfig['ruleMode'];$/;"	v
s	library\Zend\Console\Getopt.php	/^        $s = array();$/;"	v
type	library\Zend\Console\Getopt.php	/^            $type = $this->_rules[$flag]['paramType'];$/;"	v
type	library\Zend\Console\Getopt.php	/^        $type = 'string';$/;"	v
usage	library\Zend\Console\Getopt.php	/^        $usage = "Usage: {$this->_progname} [ options ]\\n";$/;"	v
xml	library\Zend\Console\Getopt.php	/^        $xml = $doc->saveXML();$/;"	v
Zend_Console_Getopt_Exception	library\Zend\Console\Getopt\Exception.php	/^class Zend_Console_Getopt_Exception extends Zend_Exception$/;"	c
action	library\Zend\Controller\Action.php	/^            $action = $request->getActionName();$/;"	v
action	library\Zend\Controller\Action.php	/^            $action = 'index';$/;"	v
action	library\Zend\Controller\Action.php	/^            $action = substr($methodName, 0, strlen($methodName) - 6);$/;"	v
action	library\Zend\Controller\Action.php	/^        $action = $action . 'Action';$/;"	v
action	library\Zend\Controller\Action.php	/^        $action = $request->getActionName();$/;"	v
action	library\Zend\Controller\Action.php	/^        $action = str_replace($this->_delimiters, '-', $action);$/;"	v
baseDir	library\Zend\Controller\Action.php	/^        $baseDir = dirname($dirs[$module]) . DIRECTORY_SEPARATOR . 'views';$/;"	v
controller	library\Zend\Controller\Action.php	/^            $controller = $request->getControllerName();$/;"	v
controller	library\Zend\Controller\Action.php	/^            $controller = str_replace($this->_delimiters, '-', $controller);$/;"	v
dirs	library\Zend\Controller\Action.php	/^        $dirs    = $this->getFrontController()->getControllerDirectory();$/;"	v
dispatcher	library\Zend\Controller\Action.php	/^            $dispatcher = Zend_Controller_Front::getInstance()->getDispatcher();$/;"	v
module	library\Zend\Controller\Action.php	/^            $module = $this->getFrontController()->getDispatcher()->getDefaultModule();$/;"	v
module	library\Zend\Controller\Action.php	/^        $module  = $request->getModuleName();$/;"	v
pathDelimiters	library\Zend\Controller\Action.php	/^            $pathDelimiters = $dispatcher->getPathDelimiter();$/;"	v
request	library\Zend\Controller\Action.php	/^            $request = $this->getRequest();$/;"	v
request	library\Zend\Controller\Action.php	/^        $request = $this->getRequest();$/;"	v
script	library\Zend\Controller\Action.php	/^            $script = $controller . DIRECTORY_SEPARATOR . $script;$/;"	v
script	library\Zend\Controller\Action.php	/^        $script = $action . '.' . $this->viewSuffix;$/;"	v
script	library\Zend\Controller\Action.php	/^        $script = $this->getViewScript($action, $noController);$/;"	v
value	library\Zend\Controller\Action.php	/^            $value = $default;$/;"	v
value	library\Zend\Controller\Action.php	/^        $value = $this->getRequest()->getParam($paramName);$/;"	v
view	library\Zend\Controller\Action.php	/^        $view   = $this->initView();$/;"	v
view	library\Zend\Controller\Action.php	/^        $view = $this->initView();$/;"	v
viewRenderer	library\Zend\Controller\Action.php	/^            $viewRenderer = $this->_helper->getHelper('viewRenderer');$/;"	v
wordDelimiters	library\Zend\Controller\Action.php	/^            $wordDelimiters = $dispatcher->getWordDelimiter();$/;"	v
Zend_Controller_Action_Exception	library\Zend\Controller\Action\Exception.php	/^class Zend_Controller_Action_Exception extends Zend_Controller_Exception$/;"	c
Zend_Controller_Action_HelperBroker	library\Zend\Controller\Action\HelperBroker.php	/^class Zend_Controller_Action_HelperBroker$/;"	c
class	library\Zend\Controller\Action\HelperBroker.php	/^            $class = self::getPluginLoader()->load($name);$/;"	v
helper	library\Zend\Controller\Action\HelperBroker.php	/^        $helper = $stack->{$name};$/;"	v
helper	library\Zend\Controller\Action\HelperBroker.php	/^        $helper = $this->getHelper($method);$/;"	v
helper	library\Zend\Controller\Action\HelperBroker.php	/^        $helper = new $class();$/;"	v
initialize	library\Zend\Controller\Action\HelperBroker.php	/^            $initialize = true;$/;"	v
initialize	library\Zend\Controller\Action\HelperBroker.php	/^        $initialize = false;$/;"	v
name	library\Zend\Controller\Action\HelperBroker.php	/^            $name = str_replace(' ', '', ucwords(str_replace('_', ' ', $name)));$/;"	v
name	library\Zend\Controller\Action\HelperBroker.php	/^        $name  = self::_normalizeHelperName($name);$/;"	v
name	library\Zend\Controller\Action\HelperBroker.php	/^        $name = self::_normalizeHelperName($name);$/;"	v
path	library\Zend\Controller\Action\HelperBroker.php	/^        $path   = str_replace('_', DIRECTORY_SEPARATOR, $prefix);$/;"	v
prefix	library\Zend\Controller\Action\HelperBroker.php	/^        $prefix = rtrim($prefix, '_');$/;"	v
stack	library\Zend\Controller\Action\HelperBroker.php	/^        $stack = self::getStack();$/;"	v
Zend_Controller_Action_HelperBroker_PriorityStack	library\Zend\Controller\Action\HelperBroker\PriorityStack.php	/^class Zend_Controller_Action_HelperBroker_PriorityStack implements IteratorAggregate, ArrayAccess, Countable$/;"	c
helper	library\Zend\Controller\Action\HelperBroker\PriorityStack.php	/^            $helper = $this->_helpersByNameRef[$helperName];$/;"	v
helperName	library\Zend\Controller\Action\HelperBroker\PriorityStack.php	/^            $helperName = $priorityOrHelperName;$/;"	v
helperName	library\Zend\Controller\Action\HelperBroker\PriorityStack.php	/^            $helperName = $this->_helpersByPriority[$priorityOrHelperName]->getName();$/;"	v
indexPriority	library\Zend\Controller\Action\HelperBroker\PriorityStack.php	/^            $indexPriority = $this->_nextDefaultPriority;$/;"	v
priorities	library\Zend\Controller\Action\HelperBroker\PriorityStack.php	/^        $priorities = array_keys($this->_helpersByPriority);$/;"	v
priority	library\Zend\Controller\Action\HelperBroker\PriorityStack.php	/^            $priority = $priorityOrHelperName;$/;"	v
priority	library\Zend\Controller\Action\HelperBroker\PriorityStack.php	/^            $priority = $this->getNextFreeHigherPriority($priority);  \/\/ ensures LIFO$/;"	v
priority	library\Zend\Controller\Action\HelperBroker\PriorityStack.php	/^            $priority = array_search($helper, $this->_helpersByPriority, true);$/;"	v
priority	library\Zend\Controller\Action\HelperBroker\PriorityStack.php	/^        $priority = (int) $priority;$/;"	v
controller	library\Zend\Controller\Action\Helper\Abstract.php	/^            $controller = $this->getFrontController();$/;"	v
controller	library\Zend\Controller\Action\Helper\Abstract.php	/^        $controller = $this->getActionController();$/;"	v
fullClassName	library\Zend\Controller\Action\Helper\Abstract.php	/^        $fullClassName = get_class($this);$/;"	v
helperName	library\Zend\Controller\Action\Helper\Abstract.php	/^            $helperName = strrchr($fullClassName, '\\\\');$/;"	v
helperName	library\Zend\Controller\Action\Helper\Abstract.php	/^            $helperName = strrchr($fullClassName, '_');$/;"	v
Zend_Controller_Action_Helper_ActionStack	library\Zend\Controller\Action\Helper\ActionStack.php	/^class Zend_Controller_Action_Helper_ActionStack extends Zend_Controller_Action_Helper_Abstract$/;"	c
controller	library\Zend\Controller\Action\Helper\ActionStack.php	/^        $controller = (null === $controller) ? $request->getControllerName() : $controller;$/;"	v
front	library\Zend\Controller\Action\Helper\ActionStack.php	/^        $front = Zend_Controller_Front::getInstance();$/;"	v
module	library\Zend\Controller\Action\Helper\ActionStack.php	/^        $module = (null === $module) ? $request->getModuleName() : $module;$/;"	v
newRequest	library\Zend\Controller\Action\Helper\ActionStack.php	/^        $newRequest = new Zend_Controller_Request_Simple($action, $controller, $module, $params);$/;"	v
request	library\Zend\Controller\Action\Helper\ActionStack.php	/^        $request = $this->getRequest();$/;"	v
Zend_Controller_Action_Helper_AjaxContext	library\Zend\Controller\Action\Helper\AjaxContext.php	/^class Zend_Controller_Action_Helper_AjaxContext extends Zend_Controller_Action_Helper_ContextSwitch$/;"	c
request	library\Zend\Controller\Action\Helper\AjaxContext.php	/^        $request = $this->getRequest();$/;"	v
Zend_Controller_Action_Helper_AutoCompleteDojo	library\Zend\Controller\Action\Helper\AutoCompleteDojo.php	/^class Zend_Controller_Action_Helper_AutoCompleteDojo extends Zend_Controller_Action_Helper_AutoComplete_Abstract$/;"	c
data	library\Zend\Controller\Action\Helper\AutoCompleteDojo.php	/^            $data = new Zend_Dojo_Data('name', $items);$/;"	v
items	library\Zend\Controller\Action\Helper\AutoCompleteDojo.php	/^            $items = array();$/;"	v
layout	library\Zend\Controller\Action\Helper\AutoCompleteDojo.php	/^            $layout = Zend_Layout::getMvcInstance();$/;"	v
response	library\Zend\Controller\Action\Helper\AutoCompleteDojo.php	/^        $response = Zend_Controller_Front::getInstance()->getResponse();$/;"	v
Zend_Controller_Action_Helper_AutoCompleteScriptaculous	library\Zend\Controller\Action\Helper\AutoCompleteScriptaculous.php	/^class Zend_Controller_Action_Helper_AutoCompleteScriptaculous extends Zend_Controller_Action_Helper_AutoComplete_Abstract$/;"	c
data	library\Zend\Controller\Action\Helper\AutoCompleteScriptaculous.php	/^        $data = '<ul><li>' . implode('<\/li><li>', $data) . '<\/li><\/ul>';$/;"	v
data	library\Zend\Controller\Action\Helper\AutoCompleteScriptaculous.php	/^        $data = (array) $data;$/;"	v
data	library\Zend\Controller\Action\Helper\AutoComplete\Abstract.php	/^        $data = $this->prepareAutoCompletion($data, $keepLayouts);$/;"	v
response	library\Zend\Controller\Action\Helper\AutoComplete\Abstract.php	/^        $response = $this->getResponse();$/;"	v
Zend_Controller_Action_Helper_Cache	library\Zend\Controller\Action\Helper\Cache.php	/^class Zend_Controller_Action_Helper_Cache$/;"	c
action	library\Zend\Controller\Action\Helper\Cache.php	/^        $action = $this->getRequest()->getActionName();$/;"	v
actions	library\Zend\Controller\Action\Helper\Cache.php	/^        $actions = array_unique($actions);$/;"	v
backend	library\Zend\Controller\Action\Helper\Cache.php	/^            $backend = $cache->getBackend();$/;"	v
cache	library\Zend\Controller\Action\Helper\Cache.php	/^        $cache = $this->getCache(Zend_Cache_Manager::PAGECACHE);$/;"	v
controller	library\Zend\Controller\Action\Helper\Cache.php	/^        $controller = $this->getRequest()->getControllerName();$/;"	v
extension	library\Zend\Controller\Action\Helper\Cache.php	/^                $extension = $this->_extensions[$controller][$action];$/;"	v
extension	library\Zend\Controller\Action\Helper\Cache.php	/^            $extension = null;$/;"	v
front	library\Zend\Controller\Action\Helper\Cache.php	/^        $front = Zend_Controller_Front::getInstance();$/;"	v
obStarted	library\Zend\Controller\Action\Helper\Cache.php	/^                $obStarted = true;$/;"	v
reqUri	library\Zend\Controller\Action\Helper\Cache.php	/^            $reqUri = $this->getRequest()->getRequestUri();$/;"	v
stats	library\Zend\Controller\Action\Helper\Cache.php	/^        $stats = ob_get_status(true);$/;"	v
tags	library\Zend\Controller\Action\Helper\Cache.php	/^                $tags = array_unique($this->_tags[$controller][$action]);$/;"	v
tags	library\Zend\Controller\Action\Helper\Cache.php	/^            $tags = array();$/;"	v
tags	library\Zend\Controller\Action\Helper\Cache.php	/^            $tags = array_unique($tags);$/;"	v
Zend_Controller_Action_Helper_ContextSwitch	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^class Zend_Controller_Action_Helper_ContextSwitch extends Zend_Controller_Action_Helper_Abstract$/;"	c
action	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^            $action         = (string) $action;$/;"	v
action	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^        $action     = $request->getActionName();$/;"	v
action	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^        $action     = (string) $action;$/;"	v
action	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^        $action = (string) $action;$/;"	v
actionContexts	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^            $actionContexts = $contexts[$action];$/;"	v
allContexts	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^        $allContexts = $controller->{$contextKey};$/;"	v
content	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^        $content = (string) $content;$/;"	v
context	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^                        $context = $suffixInfo['context'];$/;"	v
context	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^                        $context = array_shift($suffixInfo);$/;"	v
context	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^                $context = null;$/;"	v
context	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^            $context = $error;$/;"	v
context	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^            $context = $format;$/;"	v
context	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^        $context = $this->getCurrentContext();$/;"	v
context	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^        $context = (array) $context;$/;"	v
context	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^        $context = (string) $context;$/;"	v
contextKey	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^            $contextKey     = $this->_contextKey;$/;"	v
contextKey	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^        $contextKey = $this->_contextKey;$/;"	v
contexts	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^            $contexts       = $controller->$contextKey;$/;"	v
contexts	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^            $contexts       = (array) $context;$/;"	v
contexts	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^            $contexts = $this->getContexts();$/;"	v
contexts	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^        $contexts = $allContexts[$action];$/;"	v
contexts	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^        $contexts = $this->getActionContexts($action);$/;"	v
controller	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^            $controller     = $this->getActionController();$/;"	v
controller	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^        $controller = $this->getActionController();$/;"	v
count	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^                $count = count($suffixInfo);$/;"	v
error	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^                    $error = (string) $test;$/;"	v
error	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^            $error = false;$/;"	v
format	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^            $format  = null;$/;"	v
found	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^                    $found = false;$/;"	v
found	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^            $found = true;$/;"	v
header	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^        $header  = (string) $header;$/;"	v
headers	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^        $headers = $this->getHeaders($context);$/;"	v
index	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^                $index = array_search($context, $actionContexts);$/;"	v
layout	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^            $layout = Zend_Layout::getMvcInstance();$/;"	v
method	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^                $method = '_' . $method;$/;"	v
method	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^            $method = 'set' . ucfirst($key);$/;"	v
prependViewRendererSuffix	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^                        $prependViewRendererSuffix = $suffixInfo['prependViewRendererSuffix'];$/;"	v
prependViewRendererSuffix	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^                        $prependViewRendererSuffix = array_shift($suffixInfo);$/;"	v
prependViewRendererSuffix	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^                    $prependViewRendererSuffix = true;$/;"	v
prependViewRendererSuffix	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^                $prependViewRendererSuffix = $suffix['prependViewRendererSuffix'];$/;"	v
request	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^        $request    = $this->getRequest();$/;"	v
response	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^            $response = $this->getResponse();$/;"	v
suffix	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^                        $suffix  = array_shift($suffixInfo);$/;"	v
suffix	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^                        $suffix = array_shift($suffixInfo);$/;"	v
suffix	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^                    $suffix                    = $suffixInfo['suffix'];$/;"	v
suffix	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^                $suffix = $suffix['suffix'];$/;"	v
suffix	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^                $suffix = $this->_getViewRenderer()->getViewSuffix();$/;"	v
suffix	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^                $suffix = '';$/;"	v
suffix	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^            $suffix = '';$/;"	v
suffix	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^        $suffix = $this->getSuffix($context);$/;"	v
suffix	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^        $suffix = (string) $suffix;$/;"	v
trigger	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^            $trigger = 'TRIGGER_' . $trigger;$/;"	v
trigger	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^        $trigger = $this->_validateTrigger($trigger);$/;"	v
trigger	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^        $trigger = strtoupper($trigger);$/;"	v
vars	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^                $vars = Zend_Json::encode($view->getVars());$/;"	v
view	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^        $view = $viewRenderer->view;$/;"	v
viewRenderer	library\Zend\Controller\Action\Helper\ContextSwitch.php	/^        $viewRenderer = Zend_Controller_Action_HelperBroker::getStaticHelper('viewRenderer');$/;"	v
Zend_Controller_Action_Helper_FlashMessenger	library\Zend\Controller\Action\Helper\FlashMessenger.php	/^class Zend_Controller_Action_Helper_FlashMessenger extends Zend_Controller_Action_Helper_Abstract implements IteratorAggregate, Countable$/;"	c
Zend_Controller_Action_Helper_Json	library\Zend\Controller\Action\Helper\Json.php	/^class Zend_Controller_Action_Helper_Json extends Zend_Controller_Action_Helper_Abstract$/;"	c
data	library\Zend\Controller\Action\Helper\Json.php	/^        $data = $jsonHelper->json($data, $keepLayouts);$/;"	v
data	library\Zend\Controller\Action\Helper\Json.php	/^        $data = $this->encodeJson($data, $keepLayouts);$/;"	v
jsonHelper	library\Zend\Controller\Action\Helper\Json.php	/^        $jsonHelper = new Zend_View_Helper_Json();$/;"	v
response	library\Zend\Controller\Action\Helper\Json.php	/^        $response = $this->getResponse();$/;"	v
Zend_Controller_Action_Helper_Redirector	library\Zend\Controller\Action\Helper\Redirector.php	/^class Zend_Controller_Action_Helper_Redirector extends Zend_Controller_Action_Helper_Abstract$/;"	c
base	library\Zend\Controller\Action\Helper\Redirector.php	/^                $base = rtrim($request->getBaseUrl(), '\/');$/;"	v
code	library\Zend\Controller\Action\Helper\Redirector.php	/^        $code = (int)$code;$/;"	v
controller	library\Zend\Controller\Action\Helper\Redirector.php	/^                $controller = $dispatcher->getDefaultControllerName();$/;"	v
controller	library\Zend\Controller\Action\Helper\Redirector.php	/^            $controller = $request->getControllerName();$/;"	v
curModule	library\Zend\Controller\Action\Helper\Redirector.php	/^        $curModule  = $request->getModuleName();$/;"	v
dispatcher	library\Zend\Controller\Action\Helper\Redirector.php	/^        $dispatcher = $this->getFrontController()->getDispatcher();$/;"	v
host	library\Zend\Controller\Action\Helper\Redirector.php	/^            $host  = (isset($_SERVER['HTTP_HOST'])?$_SERVER['HTTP_HOST']:'');$/;"	v
method	library\Zend\Controller\Action\Helper\Redirector.php	/^        $method = strtolower($method);$/;"	v
module	library\Zend\Controller\Action\Helper\Redirector.php	/^            $module = $curModule;$/;"	v
module	library\Zend\Controller\Action\Helper\Redirector.php	/^            $module = '';$/;"	v
port	library\Zend\Controller\Action\Helper\Redirector.php	/^            $port  = (isset($_SERVER['SERVER_PORT'])?$_SERVER['SERVER_PORT']:80);$/;"	v
proto	library\Zend\Controller\Action\Helper\Redirector.php	/^            $proto = (isset($_SERVER['HTTPS'])&&$_SERVER['HTTPS']!=="off") ? 'https' : 'http';$/;"	v
request	library\Zend\Controller\Action\Helper\Redirector.php	/^            $request = $this->getRequest();$/;"	v
request	library\Zend\Controller\Action\Helper\Redirector.php	/^        $request    = $this->getRequest();$/;"	v
router	library\Zend\Controller\Action\Helper\Redirector.php	/^        $router = $this->getFrontController()->getRouter();$/;"	v
uri	library\Zend\Controller\Action\Helper\Redirector.php	/^            $uri   = $proto . ':\/\/' . $host;$/;"	v
url	library\Zend\Controller\Action\Helper\Redirector.php	/^                    $url = $base . '\/' . ltrim($url, '\/');$/;"	v
url	library\Zend\Controller\Action\Helper\Redirector.php	/^                    $url = '\/' . ltrim($url, '\/');$/;"	v
url	library\Zend\Controller\Action\Helper\Redirector.php	/^            $url = $this->_prependBase($url);$/;"	v
url	library\Zend\Controller\Action\Helper\Redirector.php	/^            $url = $uri . '\/' . ltrim($url, '\/');$/;"	v
url	library\Zend\Controller\Action\Helper\Redirector.php	/^        $url    = $router->assemble($params, 'default', true);$/;"	v
url	library\Zend\Controller\Action\Helper\Redirector.php	/^        $url    = $router->assemble($urlOptions, $name, $reset, $encode);$/;"	v
url	library\Zend\Controller\Action\Helper\Redirector.php	/^        $url = str_replace(array("\\n", "\\r"), '', $url);$/;"	v
useDefaultController	library\Zend\Controller\Action\Helper\Redirector.php	/^            $useDefaultController = true;$/;"	v
useDefaultController	library\Zend\Controller\Action\Helper\Redirector.php	/^        $useDefaultController = false;$/;"	v
Zend_Controller_Action_Helper_Url	library\Zend\Controller\Action\Helper\Url.php	/^class Zend_Controller_Action_Helper_Url extends Zend_Controller_Action_Helper_Abstract$/;"	c
controller	library\Zend\Controller\Action\Helper\Url.php	/^            $controller = $request->getControllerName();$/;"	v
module	library\Zend\Controller\Action\Helper\Url.php	/^            $module = $request->getModuleName();$/;"	v
paramPairs	library\Zend\Controller\Action\Helper\Url.php	/^            $paramPairs = array();$/;"	v
paramString	library\Zend\Controller\Action\Helper\Url.php	/^            $paramString = implode('\/', $paramPairs);$/;"	v
request	library\Zend\Controller\Action\Helper\Url.php	/^        $request = $this->getRequest();$/;"	v
router	library\Zend\Controller\Action\Helper\Url.php	/^        $router = $this->getFrontController()->getRouter();$/;"	v
url	library\Zend\Controller\Action\Helper\Url.php	/^            $url = $baseUrl . '\/' . $url;$/;"	v
url	library\Zend\Controller\Action\Helper\Url.php	/^            $url = $module . '\/' . $url;$/;"	v
url	library\Zend\Controller\Action\Helper\Url.php	/^        $url = $controller . '\/' . $action;$/;"	v
url	library\Zend\Controller\Action\Helper\Url.php	/^        $url = '\/' . ltrim($url, '\/');$/;"	v
Zend_Controller_Action_Helper_ViewRenderer	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^class Zend_Controller_Action_Helper_ViewRenderer extends Zend_Controller_Action_Helper_Abstract$/;"	c
action	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^                $action = $request->getActionName();$/;"	v
action	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^            $action = $this->getScriptAction();$/;"	v
action	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^        $action     = $dispatcher->formatActionName($request->getActionName());$/;"	v
class	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^        $class = get_class($this->_actionController);$/;"	v
controller	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^        $controller = $request->getControllerName();$/;"	v
currentPaths	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^        $currentPaths = $this->view->getScriptPaths();$/;"	v
default	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^        $default = 'Zend_View';$/;"	v
dispatcher	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^        $dispatcher = $this->getFrontController()->getDispatcher();$/;"	v
filtered	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^        $filtered = $inflector->filter($params);$/;"	v
inflector	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^        $inflector  = $this->getInflector();$/;"	v
inflector	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^        $inflector = $this->getInflector();$/;"	v
module	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^            $module = $this->getFrontController()->getDispatcher()->getDefaultModule();$/;"	v
module	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^        $module     = $dispatcher->formatModuleName($request->getModuleName());$/;"	v
module	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^        $module    = $this->getModule();$/;"	v
module	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^        $module  = $request->getModuleName();$/;"	v
module	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^        $module = $this->getModule();$/;"	v
moduleDir	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^        $moduleDir = $this->getFrontController()->getControllerDirectory($module);$/;"	v
name	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^            $name = $this->getResponseSegment();$/;"	v
origModuleDir	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^            $origModuleDir = $this->_getModuleDir();$/;"	v
origSuffix	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^            $origSuffix = $this->getViewSuffix();$/;"	v
params	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^        $params     = compact('module', 'controller', 'action');$/;"	v
parts	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^        $parts = array($/;"	v
path	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^            $path = $this->_getBasePath();$/;"	v
path	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^        $path         = str_replace(array('\/', '\\\\'), '\/', $path);$/;"	v
path	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^        $path = $inflector->filter($parts);$/;"	v
path	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^        $path = $this->getViewScript($action, $vars);$/;"	v
path	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^        $path = $this->getViewScript();$/;"	v
pathExists	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^                $pathExists = true;$/;"	v
pathExists	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^        $pathExists   = false;$/;"	v
prefix	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^            $prefix = $this->_generateDefaultPrefix();$/;"	v
prefix	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^        $prefix = substr($class, 0, strpos($class, '_')) . '_View';$/;"	v
property	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^                    $property = '_' . $key;$/;"	v
replacePattern	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^        $replacePattern = array('\/[^a-z0-9]+$\/i', '\/^[^a-z0-9]+\/i');$/;"	v
request	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^        $request    = $this->getRequest();$/;"	v
request	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^        $request = $this->getRequest();$/;"	v
tmpPath	library\Zend\Controller\Action\Helper\ViewRenderer.php	/^            $tmpPath = str_replace(array('\/', '\\\\'), '\/', $tmpPath);$/;"	v
allStrings	library\Zend\Controller\Dispatcher\Abstract.php	/^                    $allStrings = false;$/;"	v
allStrings	library\Zend\Controller\Dispatcher\Abstract.php	/^            $allStrings = true;$/;"	v
formatted	library\Zend\Controller\Dispatcher\Abstract.php	/^        $formatted = $this->_formatName($unformatted, true);$/;"	v
name	library\Zend\Controller\Dispatcher\Abstract.php	/^        $name = (string) $name;$/;"	v
segment	library\Zend\Controller\Dispatcher\Abstract.php	/^            $segment        = preg_replace('\/[^a-z0-9 ]\/', '', $segment);$/;"	v
segment	library\Zend\Controller\Dispatcher\Abstract.php	/^            $segment        = str_replace($this->getWordDelimiter(), ' ', strtolower($segment));$/;"	v
segments	library\Zend\Controller\Dispatcher\Abstract.php	/^            $segments = (array) $unformatted;$/;"	v
segments	library\Zend\Controller\Dispatcher\Abstract.php	/^            $segments = explode($this->getPathDelimiter(), $unformatted);$/;"	v
spec	library\Zend\Controller\Dispatcher\Abstract.php	/^        $spec = $this->_verifyDelimiter($spec);$/;"	v
Zend_Controller_Dispatcher_Exception	library\Zend\Controller\Dispatcher\Exception.php	/^class Zend_Controller_Dispatcher_Exception extends Zend_Controller_Exception$/;"	c
Zend_Controller_Dispatcher_Standard	library\Zend\Controller\Dispatcher\Standard.php	/^class Zend_Controller_Dispatcher_Standard extends Zend_Controller_Dispatcher_Abstract$/;"	c
action	library\Zend\Controller\Dispatcher\Standard.php	/^            $action = $this->getDefaultAction();$/;"	v
action	library\Zend\Controller\Dispatcher\Standard.php	/^        $action = $request->getActionName();$/;"	v
action	library\Zend\Controller\Dispatcher\Standard.php	/^        $action = $this->getActionMethod($request);$/;"	v
className	library\Zend\Controller\Dispatcher\Standard.php	/^                $className = $this->getDefaultControllerClass($request);$/;"	v
className	library\Zend\Controller\Dispatcher\Standard.php	/^            $className = $this->getControllerClass($request);$/;"	v
className	library\Zend\Controller\Dispatcher\Standard.php	/^            $className = $this->getDefaultControllerClass($request);$/;"	v
className	library\Zend\Controller\Dispatcher\Standard.php	/^        $className = $this->formatControllerName($controllerName);$/;"	v
className	library\Zend\Controller\Dispatcher\Standard.php	/^        $className = $this->getControllerClass($request);$/;"	v
className	library\Zend\Controller\Dispatcher\Standard.php	/^        $className = $this->loadClass($className);$/;"	v
content	library\Zend\Controller\Dispatcher\Standard.php	/^            $content = ob_get_clean();$/;"	v
controller	library\Zend\Controller\Dispatcher\Standard.php	/^            $controller = $request->getControllerName();$/;"	v
controller	library\Zend\Controller\Dispatcher\Standard.php	/^        $controller = $this->getDefaultControllerName();$/;"	v
controller	library\Zend\Controller\Dispatcher\Standard.php	/^        $controller = new $className($request, $this->getResponse(), $this->getParams());$/;"	v
controller	library\Zend\Controller\Dispatcher\Standard.php	/^        $controller = null;$/;"	v
controllerDir	library\Zend\Controller\Dispatcher\Standard.php	/^        $controllerDir = $this->getControllerDirectory();$/;"	v
controllerDirs	library\Zend\Controller\Dispatcher\Standard.php	/^        $controllerDirs      = $this->getControllerDirectory();$/;"	v
controllerName	library\Zend\Controller\Dispatcher\Standard.php	/^            $controllerName = $this->getDefaultControllerName();$/;"	v
controllerName	library\Zend\Controller\Dispatcher\Standard.php	/^        $controllerName = $request->getControllerName();$/;"	v
curObLevel	library\Zend\Controller\Dispatcher\Standard.php	/^                    $curObLevel = ob_get_level();$/;"	v
curObLevel	library\Zend\Controller\Dispatcher\Standard.php	/^            $curObLevel = ob_get_level();$/;"	v
default	library\Zend\Controller\Dispatcher\Standard.php	/^        $default    = $this->formatControllerName($controller);$/;"	v
disableOb	library\Zend\Controller\Dispatcher\Standard.php	/^        $disableOb = $this->getParam('disableOutputBuffering');$/;"	v
dispatchDir	library\Zend\Controller\Dispatcher\Standard.php	/^        $dispatchDir = $this->getDispatchDirectory();$/;"	v
fileSpec	library\Zend\Controller\Dispatcher\Standard.php	/^                $fileSpec  = $moduleDir . DIRECTORY_SEPARATOR . $this->classToFilename($default);$/;"	v
fileSpec	library\Zend\Controller\Dispatcher\Standard.php	/^        $fileSpec    = $this->classToFilename($className);$/;"	v
finalClass	library\Zend\Controller\Dispatcher\Standard.php	/^            $finalClass = $this->formatClassName($this->_curModule, $className);$/;"	v
finalClass	library\Zend\Controller\Dispatcher\Standard.php	/^        $finalClass  = $className;$/;"	v
found	library\Zend\Controller\Dispatcher\Standard.php	/^                    $found = true;$/;"	v
found	library\Zend\Controller\Dispatcher\Standard.php	/^                $found = true;$/;"	v
found	library\Zend\Controller\Dispatcher\Standard.php	/^            $found = false;$/;"	v
loadFile	library\Zend\Controller\Dispatcher\Standard.php	/^        $loadFile    = $dispatchDir . DIRECTORY_SEPARATOR . $this->classToFilename($className);$/;"	v
module	library\Zend\Controller\Dispatcher\Standard.php	/^            $module = $this->_defaultModule;$/;"	v
module	library\Zend\Controller\Dispatcher\Standard.php	/^        $module              = $request->getModuleName();$/;"	v
module	library\Zend\Controller\Dispatcher\Standard.php	/^        $module        = strtolower($module);$/;"	v
module	library\Zend\Controller\Dispatcher\Standard.php	/^        $module = $request->getModuleName();$/;"	v
module	library\Zend\Controller\Dispatcher\Standard.php	/^        $module = (string) $module;$/;"	v
moduleDir	library\Zend\Controller\Dispatcher\Standard.php	/^                $moduleDir = $controllerDirs[$module];$/;"	v
obLevel	library\Zend\Controller\Dispatcher\Standard.php	/^        $obLevel   = ob_get_level();$/;"	v
path	library\Zend\Controller\Dispatcher\Standard.php	/^        $path   = rtrim((string) $path, '\/\\\\');$/;"	v
test	library\Zend\Controller\Dispatcher\Standard.php	/^        $test        = $dispatchDir . DIRECTORY_SEPARATOR . $fileSpec;$/;"	v
Zend_Controller_Exception	library\Zend\Controller\Exception.php	/^class Zend_Controller_Exception extends Zend_Exception$/;"	c
Zend_Controller_Front	library\Zend\Controller\Front.php	/^class Zend_Controller_Front$/;"	c
controllerDir	library\Zend\Controller\Front.php	/^        $controllerDir = $this->getControllerDirectory($module);$/;"	v
dir	library\Zend\Controller\Front.php	/^            $dir = new DirectoryIterator($path);$/;"	v
dispatcher	library\Zend\Controller\Front.php	/^        $dispatcher = $this->getDispatcher();$/;"	v
module	library\Zend\Controller\Front.php	/^                $module = $this->getDispatcher()->getDefaultModule();$/;"	v
module	library\Zend\Controller\Front.php	/^                $module = $this->getRequest()->getModuleName();$/;"	v
module	library\Zend\Controller\Front.php	/^            $module    = $file->getFilename();$/;"	v
moduleDir	library\Zend\Controller\Front.php	/^            $moduleDir = $file->getPathname() . DIRECTORY_SEPARATOR . $this->getModuleControllerDirectoryName();$/;"	v
name	library\Zend\Controller\Front.php	/^            $name = $property->getName();$/;"	v
name	library\Zend\Controller\Front.php	/^        $name = (string) $name;$/;"	v
reflection	library\Zend\Controller\Front.php	/^        $reflection = new ReflectionObject($this);$/;"	v
request	library\Zend\Controller\Front.php	/^            $request = $this->getRequest();$/;"	v
request	library\Zend\Controller\Front.php	/^            $request = new $request();$/;"	v
request	library\Zend\Controller\Front.php	/^            $request = new Zend_Controller_Request_Http();$/;"	v
request	library\Zend\Controller\Front.php	/^        $request = $this->getRequest();$/;"	v
response	library\Zend\Controller\Front.php	/^            $response = new $response();$/;"	v
response	library\Zend\Controller\Front.php	/^            $response = new Zend_Controller_Response_Http();$/;"	v
router	library\Zend\Controller\Front.php	/^            $router = new $router();$/;"	v
router	library\Zend\Controller\Front.php	/^        $router = $this->getRouter();$/;"	v
Zend_Controller_Plugin_ActionStack	library\Zend\Controller\Plugin\ActionStack.php	/^class Zend_Controller_Plugin_ActionStack extends Zend_Controller_Plugin_Abstract$/;"	c
action	library\Zend\Controller\Plugin\ActionStack.php	/^        $action = $next->getActionName();$/;"	v
controller	library\Zend\Controller\Plugin\ActionStack.php	/^        $controller = $next->getControllerName();$/;"	v
key	library\Zend\Controller\Plugin\ActionStack.php	/^            $key = $this->getRegistryKey();$/;"	v
module	library\Zend\Controller\Plugin\ActionStack.php	/^        $module = $next->getModuleName();$/;"	v
next	library\Zend\Controller\Plugin\ActionStack.php	/^        $next = $this->popStack();$/;"	v
next	library\Zend\Controller\Plugin\ActionStack.php	/^        $next = array_pop($stack);$/;"	v
registry	library\Zend\Controller\Plugin\ActionStack.php	/^            $registry = Zend_Registry::getInstance();$/;"	v
registry	library\Zend\Controller\Plugin\ActionStack.php	/^        $registry = $this->getRegistry();$/;"	v
request	library\Zend\Controller\Plugin\ActionStack.php	/^        $request    = $this->getRequest();$/;"	v
request	library\Zend\Controller\Plugin\ActionStack.php	/^        $request = $this->getRequest();$/;"	v
stack	library\Zend\Controller\Plugin\ActionStack.php	/^        $stack    = $registry[$this->getRegistryKey()];$/;"	v
stack	library\Zend\Controller\Plugin\ActionStack.php	/^        $stack = $this->getStack();$/;"	v
Zend_Controller_Plugin_Broker	library\Zend\Controller\Plugin\Broker.php	/^class Zend_Controller_Plugin_Broker extends Zend_Controller_Plugin_Abstract$/;"	c
found	library\Zend\Controller\Plugin\Broker.php	/^        $found = array();$/;"	v
key	library\Zend\Controller\Plugin\Broker.php	/^            $key = array_search($plugin, $this->_plugins, true);$/;"	v
request	library\Zend\Controller\Plugin\Broker.php	/^        $request = $this->getRequest();$/;"	v
response	library\Zend\Controller\Plugin\Broker.php	/^        $response = $this->getResponse();$/;"	v
stackIndex	library\Zend\Controller\Plugin\Broker.php	/^            $stackIndex = count($this->_plugins);$/;"	v
stackIndex	library\Zend\Controller\Plugin\Broker.php	/^        $stackIndex = (int) $stackIndex;$/;"	v
type	library\Zend\Controller\Plugin\Broker.php	/^                $type = get_class($_plugin);$/;"	v
type	library\Zend\Controller\Plugin\Broker.php	/^            $type = get_class($plugin);$/;"	v
Zend_Controller_Plugin_ErrorHandler	library\Zend\Controller\Plugin\ErrorHandler.php	/^class Zend_Controller_Plugin_ErrorHandler extends Zend_Controller_Plugin_Abstract$/;"	c
error	library\Zend\Controller\Plugin\ErrorHandler.php	/^            $error            = new ArrayObject(array(), ArrayObject::ARRAY_AS_PROPS);$/;"	v
exception	library\Zend\Controller\Plugin\ErrorHandler.php	/^            $exception        = $exceptions[0];$/;"	v
exceptionType	library\Zend\Controller\Plugin\ErrorHandler.php	/^            $exceptionType    = get_class($exception);$/;"	v
exceptions	library\Zend\Controller\Plugin\ErrorHandler.php	/^            $exceptions       = $response->getException();$/;"	v
exceptions	library\Zend\Controller\Plugin\ErrorHandler.php	/^            $exceptions = $response->getException();$/;"	v
frontController	library\Zend\Controller\Plugin\ErrorHandler.php	/^        $frontController = Zend_Controller_Front::getInstance();$/;"	v
response	library\Zend\Controller\Plugin\ErrorHandler.php	/^        $response = $this->getResponse();$/;"	v
Zend_Controller_Plugin_PutHandler	library\Zend\Controller\Plugin\PutHandler.php	/^class Zend_Controller_Plugin_PutHandler extends Zend_Controller_Plugin_Abstract$/;"	c
putParams	library\Zend\Controller\Plugin\PutHandler.php	/^            $putParams = array();$/;"	v
key	library\Zend\Controller\Request\Abstract.php	/^        $key = (string) $key;$/;"	v
Zend_Controller_Request_Apache404	library\Zend\Controller\Request\Apache404.php	/^class Zend_Controller_Request_Apache404 extends Zend_Controller_Request_Http$/;"	c
parseUriGetVars	library\Zend\Controller\Request\Apache404.php	/^                    $parseUriGetVars = $_SERVER['REDIRECT_QUERY_STRING'];$/;"	v
parseUriGetVars	library\Zend\Controller\Request\Apache404.php	/^                $parseUriGetVars = substr($requestUri, $pos + 1);$/;"	v
parseUriGetVars	library\Zend\Controller\Request\Apache404.php	/^        $parseUriGetVars = false;$/;"	v
requestUri	library\Zend\Controller\Request\Apache404.php	/^                $requestUri = $_SERVER['HTTP_X_REWRITE_URL'];$/;"	v
requestUri	library\Zend\Controller\Request\Apache404.php	/^                $requestUri = $_SERVER['ORIG_PATH_INFO'];$/;"	v
requestUri	library\Zend\Controller\Request\Apache404.php	/^                $requestUri = $_SERVER['REDIRECT_URL'];$/;"	v
requestUri	library\Zend\Controller\Request\Apache404.php	/^                $requestUri = $_SERVER['REQUEST_URI'];$/;"	v
Zend_Controller_Request_Exception	library\Zend\Controller\Request\Exception.php	/^class Zend_Controller_Request_Exception extends Zend_Controller_Exception$/;"	c
Zend_Controller_Request_Http	library\Zend\Controller\Request\Http.php	/^class Zend_Controller_Request_Http extends Zend_Controller_Request_Abstract$/;"	c
basePath	library\Zend\Controller\Request\Http.php	/^                $basePath = $baseUrl;$/;"	v
basePath	library\Zend\Controller\Request\Http.php	/^                $basePath = dirname($baseUrl);$/;"	v
basePath	library\Zend\Controller\Request\Http.php	/^            $basePath = str_replace('\\\\', '\/', $basePath);$/;"	v
baseUrl	library\Zend\Controller\Request\Http.php	/^                    $baseUrl = '\/' . $seg . $baseUrl;$/;"	v
baseUrl	library\Zend\Controller\Request\Http.php	/^                $baseUrl = $_SERVER['ORIG_SCRIPT_NAME']; \/\/ 1and1 shared hosting compatibility$/;"	v
baseUrl	library\Zend\Controller\Request\Http.php	/^                $baseUrl = $_SERVER['PHP_SELF'];$/;"	v
baseUrl	library\Zend\Controller\Request\Http.php	/^                $baseUrl = $_SERVER['SCRIPT_NAME'];$/;"	v
baseUrl	library\Zend\Controller\Request\Http.php	/^                $baseUrl = '';$/;"	v
baseUrl	library\Zend\Controller\Request\Http.php	/^                $baseUrl = substr($requestUri, 0, $pos + strlen($baseUrl));$/;"	v
baseUrl	library\Zend\Controller\Request\Http.php	/^            $baseUrl = $this->getBaseUrl(); \/\/ this actually calls setBaseUrl() & setRequestUri()$/;"	v
baseUrl	library\Zend\Controller\Request\Http.php	/^            $baseUrl = $this->getBaseUrl();$/;"	v
baseUrlEncoded	library\Zend\Controller\Request\Http.php	/^            $baseUrlEncoded = urlencode($baseUrlRaw);$/;"	v
baseUrlRaw	library\Zend\Controller\Request\Http.php	/^            $baseUrlRaw = $this->getBaseUrl(false);$/;"	v
basename	library\Zend\Controller\Request\Http.php	/^            $basename = basename($baseUrl);$/;"	v
body	library\Zend\Controller\Request\Http.php	/^            $body = file_get_contents('php:\/\/input');$/;"	v
file	library\Zend\Controller\Request\Http.php	/^                $file    = isset($_SERVER['SCRIPT_FILENAME']) ? $_SERVER['SCRIPT_FILENAME'] : '';$/;"	v
filename	library\Zend\Controller\Request\Http.php	/^            $filename = (isset($_SERVER['SCRIPT_FILENAME'])) ? basename($_SERVER['SCRIPT_FILENAME']) : '';$/;"	v
filename	library\Zend\Controller\Request\Http.php	/^            $filename = (isset($_SERVER['SCRIPT_FILENAME']))$/;"	v
header	library\Zend\Controller\Request\Http.php	/^            $header = strtolower($header);$/;"	v
header	library\Zend\Controller\Request\Http.php	/^        $header = strtolower($this->getHeader('USER_AGENT'));$/;"	v
headers	library\Zend\Controller\Request\Http.php	/^            $headers = apache_request_headers();$/;"	v
host	library\Zend\Controller\Request\Http.php	/^        $host = $this->getServer('HTTP_HOST');$/;"	v
index	library\Zend\Controller\Request\Http.php	/^                $index   = 0;$/;"	v
ip	library\Zend\Controller\Request\Http.php	/^            $ip = $this->getServer('HTTP_CLIENT_IP');$/;"	v
ip	library\Zend\Controller\Request\Http.php	/^            $ip = $this->getServer('HTTP_X_FORWARDED_FOR');$/;"	v
ip	library\Zend\Controller\Request\Http.php	/^            $ip = $this->getServer('REMOTE_ADDR');$/;"	v
key	library\Zend\Controller\Request\Http.php	/^        $key = (null !== ($alias = $this->getAlias($key))) ? $alias : $key;$/;"	v
keyName	library\Zend\Controller\Request\Http.php	/^        $keyName = (null !== ($alias = $this->getAlias($key))) ? $alias : $key;$/;"	v
last	library\Zend\Controller\Request\Http.php	/^                $last    = count($segs);$/;"	v
name	library\Zend\Controller\Request\Http.php	/^        $name   = $this->getServer('SERVER_NAME');$/;"	v
paramSources	library\Zend\Controller\Request\Http.php	/^        $paramSources = $this->getParamSources();$/;"	v
path	library\Zend\Controller\Request\Http.php	/^                $path    = isset($_SERVER['PHP_SELF']) ? $_SERVER['PHP_SELF'] : '';$/;"	v
path	library\Zend\Controller\Request\Http.php	/^                $path  = $uri->getPath();$/;"	v
pathInfo	library\Zend\Controller\Request\Http.php	/^                    $pathInfo = $requestUri;$/;"	v
pathInfo	library\Zend\Controller\Request\Http.php	/^                    $pathInfo = substr($requestUri, strlen($baseUrl));$/;"	v
pathInfo	library\Zend\Controller\Request\Http.php	/^                    $pathInfo = substr($requestUri, strlen($baseUrlEncoded));$/;"	v
pathInfo	library\Zend\Controller\Request\Http.php	/^                    $pathInfo = substr($requestUri, strlen($baseUrlRaw));$/;"	v
pathInfo	library\Zend\Controller\Request\Http.php	/^                $pathInfo = $requestUri;$/;"	v
port	library\Zend\Controller\Request\Http.php	/^        $port   = $this->getServer('SERVER_PORT');$/;"	v
query	library\Zend\Controller\Request\Http.php	/^                $query = $uri->getQuery();$/;"	v
query	library\Zend\Controller\Request\Http.php	/^                $query = substr($requestUri, $pos + 1);$/;"	v
requestUri	library\Zend\Controller\Request\Http.php	/^                    $requestUri = substr($requestUri, strlen($schemeAndHttpHost));$/;"	v
requestUri	library\Zend\Controller\Request\Http.php	/^                $requestUri = $_SERVER['HTTP_X_REWRITE_URL'];$/;"	v
requestUri	library\Zend\Controller\Request\Http.php	/^                $requestUri = $_SERVER['ORIG_PATH_INFO'];$/;"	v
requestUri	library\Zend\Controller\Request\Http.php	/^                $requestUri = $_SERVER['REQUEST_URI'];$/;"	v
requestUri	library\Zend\Controller\Request\Http.php	/^                $requestUri = $_SERVER['UNENCODED_URL'];$/;"	v
requestUri	library\Zend\Controller\Request\Http.php	/^                $requestUri = substr($requestUri, 0, $pos);$/;"	v
requestUri	library\Zend\Controller\Request\Http.php	/^            $requestUri = $this->getRequestUri();$/;"	v
return	library\Zend\Controller\Request\Http.php	/^        $return       = $this->_params;$/;"	v
scheme	library\Zend\Controller\Request\Http.php	/^        $scheme = $this->getScheme();$/;"	v
schemeAndHttpHost	library\Zend\Controller\Request\Http.php	/^                $schemeAndHttpHost = $this->getScheme() . ':\/\/' . $this->getHttpHost();$/;"	v
seg	library\Zend\Controller\Request\Http.php	/^                    $seg     = $segs[$index];$/;"	v
segs	library\Zend\Controller\Request\Http.php	/^                $segs    = array_reverse($segs);$/;"	v
segs	library\Zend\Controller\Request\Http.php	/^                $segs    = explode('\/', trim($file, '\/'));$/;"	v
temp	library\Zend\Controller\Request\Http.php	/^        $temp = 'HTTP_' . strtoupper(str_replace('-', '_', $header));$/;"	v
truncatedRequestUri	library\Zend\Controller\Request\Http.php	/^                $truncatedRequestUri = substr($requestUri, 0, $pos);$/;"	v
truncatedRequestUri	library\Zend\Controller\Request\Http.php	/^            $truncatedRequestUri = $requestUri;$/;"	v
uri	library\Zend\Controller\Request\Http.php	/^                $uri = Zend_Uri::factory($uri);$/;"	v
Zend_Controller_Request_HttpTestCase	library\Zend\Controller\Request\HttpTestCase.php	/^class Zend_Controller_Request_HttpTestCase extends Zend_Controller_Request_Http$/;"	c
_COOKIE	library\Zend\Controller\Request\HttpTestCase.php	/^        $_COOKIE = array();$/;"	v
_GET	library\Zend\Controller\Request\HttpTestCase.php	/^        $_GET = array();$/;"	v
_POST	library\Zend\Controller\Request\HttpTestCase.php	/^        $_POST = array();$/;"	v
header	library\Zend\Controller\Request\HttpTestCase.php	/^        $header = $this->_normalizeHeaderName($header);$/;"	v
key	library\Zend\Controller\Request\HttpTestCase.php	/^        $key = $this->_normalizeHeaderName($key);$/;"	v
name	library\Zend\Controller\Request\HttpTestCase.php	/^        $name = str_replace('-', '_', $name);$/;"	v
name	library\Zend\Controller\Request\HttpTestCase.php	/^        $name = strtoupper((string) $name);$/;"	v
type	library\Zend\Controller\Request\HttpTestCase.php	/^        $type = strtoupper(trim((string) $type));$/;"	v
Zend_Controller_Request_Simple	library\Zend\Controller\Request\Simple.php	/^class Zend_Controller_Request_Simple extends Zend_Controller_Request_Abstract$/;"	c
body	library\Zend\Controller\Response\Abstract.php	/^        $body = implode('', $this->_body);$/;"	v
code	library\Zend\Controller\Response\Abstract.php	/^        $code       = (int) $code;$/;"	v
code	library\Zend\Controller\Response\Abstract.php	/^        $code = (int) $code;$/;"	v
exceptions	library\Zend\Controller\Response\Abstract.php	/^            $exceptions = '';$/;"	v
exceptions	library\Zend\Controller\Response\Abstract.php	/^            $exceptions = false;$/;"	v
exceptions	library\Zend\Controller\Response\Abstract.php	/^        $exceptions = array();$/;"	v
filtered	library\Zend\Controller\Response\Abstract.php	/^        $filtered = str_replace(' ', '-', $filtered);$/;"	v
filtered	library\Zend\Controller\Response\Abstract.php	/^        $filtered = str_replace(array('-', '_'), ' ', (string) $name);$/;"	v
filtered	library\Zend\Controller\Response\Abstract.php	/^        $filtered = ucwords(strtolower($filtered));$/;"	v
httpCodeSent	library\Zend\Controller\Response\Abstract.php	/^                $httpCodeSent = true;$/;"	v
httpCodeSent	library\Zend\Controller\Response\Abstract.php	/^            $httpCodeSent = true;$/;"	v
httpCodeSent	library\Zend\Controller\Response\Abstract.php	/^        $httpCodeSent = false;$/;"	v
ins	library\Zend\Controller\Response\Abstract.php	/^        $ins  = array($name => (string) $content);$/;"	v
key	library\Zend\Controller\Response\Abstract.php	/^        $key = array_search($headerRaw, $this->_headersRaw);$/;"	v
keys	library\Zend\Controller\Response\Abstract.php	/^        $keys = array_keys($this->_body);$/;"	v
loc	library\Zend\Controller\Response\Abstract.php	/^        $loc  = array_search($parent, $keys);$/;"	v
name	library\Zend\Controller\Response\Abstract.php	/^            $name = (string) $name;$/;"	v
name	library\Zend\Controller\Response\Abstract.php	/^        $name  = $this->_normalizeHeader($name);$/;"	v
new	library\Zend\Controller\Response\Abstract.php	/^        $new = array($name => (string) $content);$/;"	v
ok	library\Zend\Controller\Response\Abstract.php	/^        $ok = headers_sent($file, $line);$/;"	v
post	library\Zend\Controller\Response\Abstract.php	/^            $post = array_slice($this->_body, $loc);$/;"	v
pre	library\Zend\Controller\Response\Abstract.php	/^            $pre  = array_slice($this->_body, 0, $loc);$/;"	v
value	library\Zend\Controller\Response\Abstract.php	/^        $value = (string) $value;$/;"	v
Zend_Controller_Response_Cli	library\Zend\Controller\Response\Cli.php	/^class Zend_Controller_Response_Cli extends Zend_Controller_Response_Abstract$/;"	c
exceptions	library\Zend\Controller\Response\Cli.php	/^            $exceptions = '';$/;"	v
Zend_Controller_Response_Exception	library\Zend\Controller\Response\Exception.php	/^class Zend_Controller_Response_Exception extends Zend_Controller_Exception$/;"	c
Zend_Controller_Response_Http	library\Zend\Controller\Response\Http.php	/^class Zend_Controller_Response_Http extends Zend_Controller_Response_Abstract$/;"	c
Zend_Controller_Response_HttpTestCase	library\Zend\Controller\Response\HttpTestCase.php	/^class Zend_Controller_Response_HttpTestCase extends Zend_Controller_Response_Http$/;"	c
content	library\Zend\Controller\Response\HttpTestCase.php	/^        $content = implode("\\n", $headers) . "\\n\\n";$/;"	v
exceptions	library\Zend\Controller\Response\HttpTestCase.php	/^            $exceptions = '';$/;"	v
fullContent	library\Zend\Controller\Response\HttpTestCase.php	/^        $fullContent = '';$/;"	v
headers	library\Zend\Controller\Response\HttpTestCase.php	/^        $headers = $this->sendHeaders();$/;"	v
headers	library\Zend\Controller\Response\HttpTestCase.php	/^        $headers = array();$/;"	v
key	library\Zend\Controller\Response\HttpTestCase.php	/^            $key  = strtolower($name);$/;"	v
name	library\Zend\Controller\Response\HttpTestCase.php	/^            $name = $header['name'];$/;"	v
name	library\Zend\Controller\Router\Abstract.php	/^        $name = (string) $name;$/;"	v
Zend_Controller_Router_Exception	library\Zend\Controller\Router\Exception.php	/^class Zend_Controller_Router_Exception extends Zend_Controller_Exception$/;"	c
Zend_Controller_Router_Rewrite	library\Zend\Controller\Router\Rewrite.php	/^class Zend_Controller_Router_Rewrite extends Zend_Controller_Router_Abstract$/;"	c
chainName	library\Zend\Controller\Router\Rewrite.php	/^            $chainName = $name . $this->_chainNameSeparator . $childRouteName;$/;"	v
chainRoute	library\Zend\Controller\Router\Rewrite.php	/^                $chainRoute = $route->chain($childRoute);$/;"	v
chainRoute	library\Zend\Controller\Router\Rewrite.php	/^                $chainRoute = clone $route;$/;"	v
childRoute	library\Zend\Controller\Router\Rewrite.php	/^                    $childRoute = $this->getRoute(trim($childRouteName));$/;"	v
childRoute	library\Zend\Controller\Router\Rewrite.php	/^                $childRoute     = $this->getRoute($childRouteName);$/;"	v
childRoute	library\Zend\Controller\Router\Rewrite.php	/^                $childRoute = $this->_getRouteFromConfig($childRouteInfo);$/;"	v
childRouteName	library\Zend\Controller\Router\Rewrite.php	/^                $childRouteName = $childRouteInfo;$/;"	v
childRouteNames	library\Zend\Controller\Router\Rewrite.php	/^                    $childRouteNames = $info->chain;$/;"	v
childRouteNames	library\Zend\Controller\Router\Rewrite.php	/^                    $childRouteNames = explode(',', $info->chain);$/;"	v
class	library\Zend\Controller\Router\Rewrite.php	/^        $class = (isset($info->type)) ? $info->type : 'Zend_Controller_Router_Route';$/;"	v
compat	library\Zend\Controller\Router\Rewrite.php	/^            $compat = new Zend_Controller_Router_Route_Module(array(), $dispatcher, $request);$/;"	v
config	library\Zend\Controller\Router\Rewrite.php	/^            $config = $config->{$section};$/;"	v
dispatcher	library\Zend\Controller\Router\Rewrite.php	/^            $dispatcher = $this->getFrontController()->getDispatcher();$/;"	v
match	library\Zend\Controller\Router\Rewrite.php	/^                $match = $request->getPathInfo();$/;"	v
match	library\Zend\Controller\Router\Rewrite.php	/^                $match = $request;$/;"	v
name	library\Zend\Controller\Router\Rewrite.php	/^                $name = $this->getCurrentRouteName();$/;"	v
name	library\Zend\Controller\Router\Rewrite.php	/^                $name = 'default';$/;"	v
params	library\Zend\Controller\Router\Rewrite.php	/^            $params = $request->getParams();$/;"	v
params	library\Zend\Controller\Router\Rewrite.php	/^        $params = $userParams + $this->_globalParams;$/;"	v
request	library\Zend\Controller\Router\Rewrite.php	/^            $request = $this->getFrontController()->getRequest();$/;"	v
route	library\Zend\Controller\Router\Rewrite.php	/^            $route = $this->_getRouteFromConfig($info);$/;"	v
route	library\Zend\Controller\Router\Rewrite.php	/^        $route = $this->getRoute($name);$/;"	v
route	library\Zend\Controller\Router\Rewrite.php	/^        $route = call_user_func(array($class, 'getInstance'), $info);$/;"	v
routeMatched	library\Zend\Controller\Router\Rewrite.php	/^                $routeMatched        = true;$/;"	v
routeMatched	library\Zend\Controller\Router\Rewrite.php	/^        $routeMatched = false;$/;"	v
url	library\Zend\Controller\Router\Rewrite.php	/^            $url = rtrim($this->getFrontController()->getBaseUrl(), self::URI_DELIMITER) . self::URI_DELIMITER . $url;$/;"	v
url	library\Zend\Controller\Router\Rewrite.php	/^        $url   = $route->assemble($params, $reset, $encode);$/;"	v
Zend_Controller_Router_Route	library\Zend\Controller\Router\Route.php	/^class Zend_Controller_Router_Route extends Zend_Controller_Router_Route_Abstract$/;"	c
count	library\Zend\Controller\Router\Route.php	/^                    $count = count($path);$/;"	v
defaultValue	library\Zend\Controller\Router\Route.php	/^                    $defaultValue = $translator->translate($defaultValue, $locale);$/;"	v
defaultValue	library\Zend\Controller\Router\Route.php	/^                $defaultValue = $this->getDefault($this->_variables[$key]);$/;"	v
defaultValue	library\Zend\Controller\Router\Route.php	/^            $defaultValue = null;$/;"	v
defaults	library\Zend\Controller\Router\Route.php	/^                $defaults = $this->getDefaults();$/;"	v
defs	library\Zend\Controller\Router\Route.php	/^        $defs = ($config->defaults instanceof Zend_Config) ? $config->defaults->toArray() : array();$/;"	v
flag	library\Zend\Controller\Router\Route.php	/^                        $flag = true;$/;"	v
flag	library\Zend\Controller\Router\Route.php	/^                $flag = true;$/;"	v
flag	library\Zend\Controller\Router\Route.php	/^        $flag = false;$/;"	v
locale	library\Zend\Controller\Router\Route.php	/^                $locale = $data['@locale'];$/;"	v
locale	library\Zend\Controller\Router\Route.php	/^                $locale = $this->getLocale();$/;"	v
locale	library\Zend\Controller\Router\Route.php	/^                $locale = Zend_Registry::get('Zend_Locale');$/;"	v
locale	library\Zend\Controller\Router\Route.php	/^                $locale = null;$/;"	v
matchedPath	library\Zend\Controller\Router\Route.php	/^                    $matchedPath = implode($this->_urlDelimiter, $path);$/;"	v
matchedPath	library\Zend\Controller\Router\Route.php	/^        $matchedPath     = '';$/;"	v
name	library\Zend\Controller\Router\Route.php	/^                        $name                  = substr($name, 1);$/;"	v
name	library\Zend\Controller\Router\Route.php	/^                    $name = substr($part, 1);$/;"	v
name	library\Zend\Controller\Router\Route.php	/^                $name     = isset($this->_variables[$pos]) ? $this->_variables[$pos] : null;$/;"	v
name	library\Zend\Controller\Router\Route.php	/^            $name = isset($this->_variables[$key]) ? $this->_variables[$key] : null;$/;"	v
part	library\Zend\Controller\Router\Route.php	/^                        $part = substr($part, 1);$/;"	v
part	library\Zend\Controller\Router\Route.php	/^                    $part = substr($part, 1);$/;"	v
part	library\Zend\Controller\Router\Route.php	/^                $part = $this->_parts[$pos];$/;"	v
path	library\Zend\Controller\Router\Route.php	/^            $path = explode($this->_urlDelimiter, $path);$/;"	v
path	library\Zend\Controller\Router\Route.php	/^            $path = trim($path, $this->_urlDelimiter);$/;"	v
pathPart	library\Zend\Controller\Router\Route.php	/^                        $pathPart = $originalPathPart;$/;"	v
pathPart	library\Zend\Controller\Router\Route.php	/^                $pathPart = urldecode($pathPart);$/;"	v
pathStaticCount	library\Zend\Controller\Router\Route.php	/^        $pathStaticCount = 0;$/;"	v
reqs	library\Zend\Controller\Router\Route.php	/^        $reqs = ($config->reqs instanceof Zend_Config) ? $config->reqs->toArray() : array();$/;"	v
return	library\Zend\Controller\Router\Route.php	/^                $return = $this->_urlDelimiter . $value . $return;$/;"	v
return	library\Zend\Controller\Router\Route.php	/^        $return = $values + $this->_wildcardData + $this->_defaults;$/;"	v
return	library\Zend\Controller\Router\Route.php	/^        $return = '';$/;"	v
route	library\Zend\Controller\Router\Route.php	/^        $route               = trim($route, $this->_urlDelimiter);$/;"	v
translateMessages	library\Zend\Controller\Router\Route.php	/^            $translateMessages = $this->getTranslator()->getMessages();$/;"	v
translator	library\Zend\Controller\Router\Route.php	/^                $translator = Zend_Registry::get('Zend_Translate');$/;"	v
translator	library\Zend\Controller\Router\Route.php	/^                $translator = null;$/;"	v
translator	library\Zend\Controller\Router\Route.php	/^            $translator = $this->getTranslator();$/;"	v
url	library\Zend\Controller\Router\Route.php	/^        $url  = array();$/;"	v
useDefault	library\Zend\Controller\Router\Route.php	/^                $useDefault = true;$/;"	v
useDefault	library\Zend\Controller\Router\Route.php	/^            $useDefault = false;$/;"	v
value	library\Zend\Controller\Router\Route.php	/^                    $value = $data[$name];$/;"	v
value	library\Zend\Controller\Router\Route.php	/^                    $value = $this->_defaults[$name];$/;"	v
value	library\Zend\Controller\Router\Route.php	/^                    $value = $this->_values[$name];$/;"	v
value	library\Zend\Controller\Router\Route.php	/^                    $value = $this->_wildcardData[$name];$/;"	v
values	library\Zend\Controller\Router\Route.php	/^        $values          = array();$/;"	v
var	library\Zend\Controller\Router\Route.php	/^                        $var = urldecode($path[$i]);$/;"	v
chain	library\Zend\Controller\Router\Route\Abstract.php	/^        $chain = new Zend_Controller_Router_Route_Chain();$/;"	v
Zend_Controller_Router_Route_Chain	library\Zend\Controller\Router\Route\Chain.php	/^class Zend_Controller_Router_Route_Chain extends Zend_Controller_Router_Route_Abstract$/;"	c
defs	library\Zend\Controller\Router\Route\Chain.php	/^        $defs = ($config->defaults instanceof Zend_Config) ? $config->defaults->toArray() : array();$/;"	v
match	library\Zend\Controller\Router\Route\Chain.php	/^                $match = $request;$/;"	v
match	library\Zend\Controller\Router\Route\Chain.php	/^                $match = $subPath;$/;"	v
matchedPath	library\Zend\Controller\Router\Route\Chain.php	/^            $matchedPath = $route->getMatchedPath();$/;"	v
numRoutes	library\Zend\Controller\Router\Route\Chain.php	/^        $numRoutes = count($this->_routes);$/;"	v
path	library\Zend\Controller\Router\Route\Chain.php	/^        $path    = trim($request->getPathInfo(), self::URI_DELIMITER);$/;"	v
res	library\Zend\Controller\Router\Route\Chain.php	/^            $res = $route->match($match, true);$/;"	v
separator	library\Zend\Controller\Router\Route\Chain.php	/^                $separator   = substr($subPath, 0, strlen($this->_separators[$key]));$/;"	v
separator	library\Zend\Controller\Router\Route\Chain.php	/^                $separator = substr($subPath, 0, strlen($this->_separators[$key]));$/;"	v
subPath	library\Zend\Controller\Router\Route\Chain.php	/^                $subPath     = substr($subPath, strlen($matchedPath));$/;"	v
subPath	library\Zend\Controller\Router\Route\Chain.php	/^                $subPath = substr($subPath, strlen($separator));$/;"	v
subPath	library\Zend\Controller\Router\Route\Chain.php	/^        $subPath = $path;$/;"	v
value	library\Zend\Controller\Router\Route\Chain.php	/^        $value     = '';$/;"	v
values	library\Zend\Controller\Router\Route\Chain.php	/^            $values = $res + $values;$/;"	v
values	library\Zend\Controller\Router\Route\Chain.php	/^        $values  = array();$/;"	v
variables	library\Zend\Controller\Router\Route\Chain.php	/^                $variables = $route->getVariables();$/;"	v
Zend_Controller_Router_Route_Hostname	library\Zend\Controller\Router\Route\Hostname.php	/^class Zend_Controller_Router_Route_Hostname extends Zend_Controller_Router_Route_Abstract$/;"	c
defs	library\Zend\Controller\Router\Route\Hostname.php	/^        $defs   = ($config->defaults instanceof Zend_Config) ? $config->defaults->toArray() : array();$/;"	v
flag	library\Zend\Controller\Router\Route\Hostname.php	/^                $flag = true;$/;"	v
flag	library\Zend\Controller\Router\Route\Hostname.php	/^        $flag = false;$/;"	v
host	library\Zend\Controller\Router\Route\Hostname.php	/^            $host = explode('.', $host);$/;"	v
host	library\Zend\Controller\Router\Route\Hostname.php	/^            $host = substr($host, 0, -strlen($result[0]));$/;"	v
host	library\Zend\Controller\Router\Route\Hostname.php	/^        $host = $request->getHttpHost();$/;"	v
host	library\Zend\Controller\Router\Route\Hostname.php	/^        $host = array();$/;"	v
host	library\Zend\Controller\Router\Route\Hostname.php	/^        $host = trim($host, '.');$/;"	v
hostPart	library\Zend\Controller\Router\Route\Hostname.php	/^                $hostPart = urldecode($hostPart);$/;"	v
hostStaticCount	library\Zend\Controller\Router\Route\Hostname.php	/^        $hostStaticCount = 0;$/;"	v
name	library\Zend\Controller\Router\Route\Hostname.php	/^                    $name = substr($part, 1);$/;"	v
name	library\Zend\Controller\Router\Route\Hostname.php	/^                $name = isset($this->_variables[$pos]) ? $this->_variables[$pos] : null;$/;"	v
name	library\Zend\Controller\Router\Route\Hostname.php	/^            $name = isset($this->_variables[$key]) ? $this->_variables[$key] : null;$/;"	v
reqs	library\Zend\Controller\Router\Route\Hostname.php	/^        $reqs   = ($config->reqs instanceof Zend_Config) ? $config->reqs->toArray() : array();$/;"	v
request	library\Zend\Controller\Router\Route\Hostname.php	/^            $request = $this->getRequest();$/;"	v
return	library\Zend\Controller\Router\Route\Hostname.php	/^                $return = '.' . $value . $return;$/;"	v
return	library\Zend\Controller\Router\Route\Hostname.php	/^        $return = $values + $this->_defaults;$/;"	v
return	library\Zend\Controller\Router\Route\Hostname.php	/^        $return = '';$/;"	v
route	library\Zend\Controller\Router\Route\Hostname.php	/^        $route               = trim($route, '.');$/;"	v
scheme	library\Zend\Controller\Router\Route\Hostname.php	/^                $scheme = $request->getScheme();$/;"	v
scheme	library\Zend\Controller\Router\Route\Hostname.php	/^                $scheme = 'http';$/;"	v
scheme	library\Zend\Controller\Router\Route\Hostname.php	/^            $scheme = $request->getScheme();$/;"	v
scheme	library\Zend\Controller\Router\Route\Hostname.php	/^            $scheme = $this->_scheme;$/;"	v
scheme	library\Zend\Controller\Router\Route\Hostname.php	/^        $scheme = (isset($config->scheme)) ? $config->scheme : null;$/;"	v
url	library\Zend\Controller\Router\Route\Hostname.php	/^        $url      = $scheme . ':\/\/' . $url;$/;"	v
url	library\Zend\Controller\Router\Route\Hostname.php	/^        $url = trim($return, '.');$/;"	v
useDefault	library\Zend\Controller\Router\Route\Hostname.php	/^                $useDefault = true;$/;"	v
useDefault	library\Zend\Controller\Router\Route\Hostname.php	/^            $useDefault = false;$/;"	v
values	library\Zend\Controller\Router\Route\Hostname.php	/^        $values = array();$/;"	v
Zend_Controller_Router_Route_Module	library\Zend\Controller\Router\Route\Module.php	/^class Zend_Controller_Router_Route_Module extends Zend_Controller_Router_Route_Abstract$/;"	c
action	library\Zend\Controller\Router\Route\Module.php	/^        $action = $params[$this->_actionKey];$/;"	v
arrayValue	library\Zend\Controller\Router\Route\Module.php	/^                    $arrayValue = ($encode) ? urlencode($arrayValue) : $arrayValue;$/;"	v
controller	library\Zend\Controller\Router\Route\Module.php	/^        $controller = $params[$this->_controllerKey];$/;"	v
defs	library\Zend\Controller\Router\Route\Module.php	/^        $defs       = ($config->defaults instanceof Zend_Config) ? $config->defaults->toArray() : array();$/;"	v
dispatcher	library\Zend\Controller\Router\Route\Module.php	/^        $dispatcher = $frontController->getDispatcher();$/;"	v
frontController	library\Zend\Controller\Router\Route\Module.php	/^        $frontController = Zend_Controller_Front::getInstance();$/;"	v
key	library\Zend\Controller\Router\Route\Module.php	/^                    $key = urldecode($path[$i]);$/;"	v
key	library\Zend\Controller\Router\Route\Module.php	/^            $key = ($encode) ? urlencode($key) : $key;$/;"	v
matchedPath	library\Zend\Controller\Router\Route\Module.php	/^            $matchedPath = $path;$/;"	v
module	library\Zend\Controller\Router\Route\Module.php	/^                $module = $params[$this->_moduleKey];$/;"	v
params	library\Zend\Controller\Router\Route\Module.php	/^        $params = (!$reset) ? $this->_values : array();$/;"	v
params	library\Zend\Controller\Router\Route\Module.php	/^        $params = array();$/;"	v
path	library\Zend\Controller\Router\Route\Module.php	/^            $path = explode(self::URI_DELIMITER, $path);$/;"	v
path	library\Zend\Controller\Router\Route\Module.php	/^            $path = trim($path, self::URI_DELIMITER);$/;"	v
request	library\Zend\Controller\Router\Route\Module.php	/^        $request    = $frontController->getRequest();$/;"	v
url	library\Zend\Controller\Router\Route\Module.php	/^            $url = self::URI_DELIMITER . $action . $url;$/;"	v
url	library\Zend\Controller\Router\Route\Module.php	/^            $url = self::URI_DELIMITER . $controller . $url;$/;"	v
url	library\Zend\Controller\Router\Route\Module.php	/^            $url = self::URI_DELIMITER . $module . $url;$/;"	v
url	library\Zend\Controller\Router\Route\Module.php	/^        $url = '';$/;"	v
val	library\Zend\Controller\Router\Route\Module.php	/^                    $val = isset($path[$i + 1]) ? urldecode($path[$i + 1]) : null;$/;"	v
values	library\Zend\Controller\Router\Route\Module.php	/^        $values = array();$/;"	v
Zend_Controller_Router_Route_Regex	library\Zend\Controller\Router\Route\Regex.php	/^class Zend_Controller_Router_Route_Regex extends Zend_Controller_Router_Route_Abstract$/;"	c
dataValuesMapped	library\Zend\Controller\Router\Route\Regex.php	/^        $dataValuesMapped     = $this->_getMappedValues($data, true, false);$/;"	v
defaultValuesMapped	library\Zend\Controller\Router\Route\Regex.php	/^        $defaultValuesMapped  = $this->_getMappedValues($this->_defaults, true, false);$/;"	v
defaults	library\Zend\Controller\Router\Route\Regex.php	/^        $defaults = $this->_getMappedValues($this->_defaults, false, true);$/;"	v
defs	library\Zend\Controller\Router\Route\Regex.php	/^        $defs = ($config->defaults instanceof Zend_Config) ? $config->defaults->toArray() : array();$/;"	v
index	library\Zend\Controller\Router\Route\Regex.php	/^                        $index = $this->_map[$key];$/;"	v
index	library\Zend\Controller\Router\Route\Regex.php	/^                        $index = array_search($key, $this->_map, true);$/;"	v
index	library\Zend\Controller\Router\Route\Regex.php	/^                    $index = $key;$/;"	v
index	library\Zend\Controller\Router\Route\Regex.php	/^                    $index = $this->_map[$key];$/;"	v
index	library\Zend\Controller\Router\Route\Regex.php	/^                $index = $key;$/;"	v
map	library\Zend\Controller\Router\Route\Regex.php	/^        $map = ($config->map instanceof Zend_Config) ? $config->map->toArray() : array();$/;"	v
matchedValuesMapped	library\Zend\Controller\Router\Route\Regex.php	/^        $matchedValuesMapped  = $this->_getMappedValues($this->_values, true, false);$/;"	v
mergedData	library\Zend\Controller\Router\Route\Regex.php	/^        $mergedData = $defaultValuesMapped;$/;"	v
mergedData	library\Zend\Controller\Router\Route\Regex.php	/^        $mergedData = $this->_arrayMergeNumericKeys($mergedData, $dataValuesMapped);$/;"	v
mergedData	library\Zend\Controller\Router\Route\Regex.php	/^        $mergedData = $this->_arrayMergeNumericKeys($mergedData, $matchedValuesMapped);$/;"	v
path	library\Zend\Controller\Router\Route\Regex.php	/^            $path = trim(urldecode($path), self::URI_DELIMITER);$/;"	v
regex	library\Zend\Controller\Router\Route\Regex.php	/^            $regex = '#^' . $this->_regex . '#i';$/;"	v
regex	library\Zend\Controller\Router\Route\Regex.php	/^            $regex = '#^' . $this->_regex . '$#i';$/;"	v
res	library\Zend\Controller\Router\Route\Regex.php	/^        $res = preg_match($regex, $path, $values);$/;"	v
return	library\Zend\Controller\Router\Route\Regex.php	/^        $return   = $values + $defaults;$/;"	v
return	library\Zend\Controller\Router\Route\Regex.php	/^        $return = @vsprintf($this->_reverse, $mergedData);$/;"	v
return	library\Zend\Controller\Router\Route\Regex.php	/^        $return = array();$/;"	v
returnArray	library\Zend\Controller\Router\Route\Regex.php	/^        $returnArray = $array1;$/;"	v
reverse	library\Zend\Controller\Router\Route\Regex.php	/^        $reverse = (isset($config->reverse)) ? $config->reverse : null;$/;"	v
value	library\Zend\Controller\Router\Route\Regex.php	/^                $value = urlencode($value);$/;"	v
values	library\Zend\Controller\Router\Route\Regex.php	/^        $values   = $this->_getMappedValues($values);$/;"	v
variables	library\Zend\Controller\Router\Route\Regex.php	/^        $variables = array();$/;"	v
Zend_Controller_Router_Route_Static	library\Zend\Controller\Router\Route\Static.php	/^class Zend_Controller_Router_Route_Static extends Zend_Controller_Router_Route_Abstract$/;"	c
defs	library\Zend\Controller\Router\Route\Static.php	/^        $defs = ($config->defaults instanceof Zend_Config) ? $config->defaults->toArray() : array();$/;"	v
Zend_Crypt	library\Zend\Crypt.php	/^class Zend_Crypt$/;"	c
algorithm	library\Zend\Crypt.php	/^                $algorithm = 'rmd160';$/;"	v
algorithm	library\Zend\Crypt.php	/^            $algorithm = 'rmd160';$/;"	v
algorithm	library\Zend\Crypt.php	/^        $algorithm = strtolower($algorithm);$/;"	v
binary	library\Zend\Crypt.php	/^        $binary = mhash($constant, $data);$/;"	v
constant	library\Zend\Crypt.php	/^        $constant = constant('MHASH_' . strtoupper($algorithm));$/;"	v
result	library\Zend\Crypt.php	/^        $result = self::$supportedMethod($algorithm, $data, $binaryOutput);$/;"	v
supportedMethod	library\Zend\Crypt.php	/^        $supportedMethod = '_digest' . ucfirst(self::$_type);$/;"	v
Zend_Crypt_DiffieHellman	library\Zend\Crypt\DiffieHellman.php	/^class Zend_Crypt_DiffieHellman$/;"	c
data	library\Zend\Crypt\DiffieHellman.php	/^            $data = openssl_pkey_get_details($opensslKeyResource);$/;"	v
details	library\Zend\Crypt\DiffieHellman.php	/^            $details = array();$/;"	v
number	library\Zend\Crypt\DiffieHellman.php	/^            $number = $this->_math->fromBinary($number);$/;"	v
opensslKeyResource	library\Zend\Crypt\DiffieHellman.php	/^            $opensslKeyResource = openssl_pkey_new( array('dh' => $details) );$/;"	v
publicKey	library\Zend\Crypt\DiffieHellman.php	/^            $publicKey = $this->_math->fromBinary($publicKey);$/;"	v
publicKey	library\Zend\Crypt\DiffieHellman.php	/^            $publicKey = $this->_math->powmod($this->getGenerator(), $this->getPrivateKey(), $this->getPrime());$/;"	v
rand	library\Zend\Crypt\DiffieHellman.php	/^        $rand = $this->_math->rand($this->getGenerator(), $this->getPrime());$/;"	v
Zend_Crypt_DiffieHellman_Exception	library\Zend\Crypt\DiffieHellman\Exception.php	/^class Zend_Crypt_DiffieHellman_Exception extends Zend_Crypt_Exception$/;"	c
Zend_Crypt_Exception	library\Zend\Crypt\Exception.php	/^class Zend_Crypt_Exception extends Zend_Exception$/;"	c
Zend_Crypt_Hmac	library\Zend\Crypt\Hmac.php	/^class Zend_Crypt_Hmac extends Zend_Crypt$/;"	c
bin	library\Zend\Crypt\Hmac.php	/^            $bin = mhash(self::_getMhashDefinition(self::$_hashAlgorithm), $data, self::$_key);$/;"	v
hash	library\Zend\Crypt\Hmac.php	/^        $hash = strtolower($hash);$/;"	v
hashSupported	library\Zend\Crypt\Hmac.php	/^            $hashSupported = true;$/;"	v
hashSupported	library\Zend\Crypt\Hmac.php	/^        $hashSupported = false;$/;"	v
Zend_Crypt_Hmac_Exception	library\Zend\Crypt\Hmac\Exception.php	/^class Zend_Crypt_Hmac_Exception extends Zend_Crypt_Exception$/;"	c
Zend_Crypt_Math	library\Zend\Crypt\Math.php	/^class Zend_Crypt_Math extends Zend_Crypt_Math_BigInteger$/;"	c
frandom	library\Zend\Crypt\Math.php	/^            $frandom = fopen('\/dev\/urandom', 'r');$/;"	v
i2	library\Zend\Crypt\Math.php	/^        $i2 = strlen($maximum) - 1;$/;"	v
rand	library\Zend\Crypt\Math.php	/^        $rand = '';$/;"	v
Zend_Crypt_Math_BigInteger	library\Zend\Crypt\Math\BigInteger.php	/^class Zend_Crypt_Math_BigInteger$/;"	c
extension	library\Zend\Crypt\Math\BigInteger.php	/^                $extension = 'bcmath';$/;"	v
extension	library\Zend\Crypt\Math\BigInteger.php	/^                $extension = 'gmp';$/;"	v
Zend_Crypt_Math_BigInteger_Bcmath	library\Zend\Crypt\Math\BigInteger\Bcmath.php	/^class Zend_Crypt_Math_BigInteger_Bcmath implements Zend_Crypt_Math_BigInteger_Interface$/;"	c
cmp	library\Zend\Crypt\Math\BigInteger\Bcmath.php	/^        $cmp = bccomp($operand, 0);$/;"	v
dec	library\Zend\Crypt\Math\BigInteger\Bcmath.php	/^            $dec = bcadd(bcmul($return, 65536), $hex);$/;"	v
hex	library\Zend\Crypt\Math\BigInteger\Bcmath.php	/^            $hex = hexdec(substr($operand, 0, 4));$/;"	v
operand	library\Zend\Crypt\Math\BigInteger\Bcmath.php	/^            $operand = bcdiv($operand, '256');$/;"	v
operand	library\Zend\Crypt\Math\BigInteger\Bcmath.php	/^            $operand = bcdiv($operand, 256);$/;"	v
operand	library\Zend\Crypt\Math\BigInteger\Bcmath.php	/^            $operand = substr($operand, 1);$/;"	v
operand	library\Zend\Crypt\Math\BigInteger\Bcmath.php	/^            $operand = substr($operand, 4);$/;"	v
ord	library\Zend\Crypt\Math\BigInteger\Bcmath.php	/^            $ord = ord(substr($operand, 0, 1));$/;"	v
result	library\Zend\Crypt\Math\BigInteger\Bcmath.php	/^            $result = bcadd(bcmul($result, 256), $ord);$/;"	v
result	library\Zend\Crypt\Math\BigInteger\Bcmath.php	/^        $result = '0';$/;"	v
return	library\Zend\Crypt\Math\BigInteger\Bcmath.php	/^            $return = "\\0" . $return;$/;"	v
return	library\Zend\Crypt\Math\BigInteger\Bcmath.php	/^            $return = chr(bcmod($operand, 256)) . $return;$/;"	v
return	library\Zend\Crypt\Math\BigInteger\Bcmath.php	/^        $return = '';$/;"	v
return	library\Zend\Crypt\Math\BigInteger\Bcmath.php	/^        $return = '0';$/;"	v
Zend_Crypt_Math_BigInteger_Exception	library\Zend\Crypt\Math\BigInteger\Exception.php	/^class Zend_Crypt_Math_BigInteger_Exception extends Zend_Crypt_Math_Exception$/;"	c
Zend_Crypt_Math_BigInteger_Gmp	library\Zend\Crypt\Math\BigInteger\Gmp.php	/^class Zend_Crypt_Math_BigInteger_Gmp implements Zend_Crypt_Math_BigInteger_Interface$/;"	c
bigInt	library\Zend\Crypt\Math\BigInteger\Gmp.php	/^            $bigInt = '0' . $bigInt;$/;"	v
bigInt	library\Zend\Crypt\Math\BigInteger\Gmp.php	/^            $bigInt = '00' . $bigInt;$/;"	v
bigInt	library\Zend\Crypt\Math\BigInteger\Gmp.php	/^        $bigInt = gmp_strval($operand, 16);$/;"	v
dec	library\Zend\Crypt\Math\BigInteger\Gmp.php	/^            $dec = gmp_add(gmp_mul($return, 65536), $hex);$/;"	v
hex	library\Zend\Crypt\Math\BigInteger\Gmp.php	/^            $hex = hexdec(substr($operand, 0, 4));$/;"	v
operand	library\Zend\Crypt\Math\BigInteger\Gmp.php	/^            $operand = substr($operand, 1);$/;"	v
operand	library\Zend\Crypt\Math\BigInteger\Gmp.php	/^            $operand = substr($operand, 4);$/;"	v
ord	library\Zend\Crypt\Math\BigInteger\Gmp.php	/^            $ord = ord(substr($operand, 0, 1));$/;"	v
result	library\Zend\Crypt\Math\BigInteger\Gmp.php	/^            $result = gmp_add(gmp_mul($result, 256), $ord);$/;"	v
result	library\Zend\Crypt\Math\BigInteger\Gmp.php	/^        $result = '0';$/;"	v
result	library\Zend\Crypt\Math\BigInteger\Gmp.php	/^        $result = gmp_add($left_operand, $right_operand);$/;"	v
result	library\Zend\Crypt\Math\BigInteger\Gmp.php	/^        $result = gmp_cmp($left_operand, $right_operand);$/;"	v
result	library\Zend\Crypt\Math\BigInteger\Gmp.php	/^        $result = gmp_div($left_operand, $right_operand);$/;"	v
result	library\Zend\Crypt\Math\BigInteger\Gmp.php	/^        $result = gmp_mod($left_operand, $modulus);$/;"	v
result	library\Zend\Crypt\Math\BigInteger\Gmp.php	/^        $result = gmp_mul($left_operand, $right_operand);$/;"	v
result	library\Zend\Crypt\Math\BigInteger\Gmp.php	/^        $result = gmp_pow($left_operand, $right_operand);$/;"	v
result	library\Zend\Crypt\Math\BigInteger\Gmp.php	/^        $result = gmp_powm($left_operand, $right_operand, $modulus);$/;"	v
result	library\Zend\Crypt\Math\BigInteger\Gmp.php	/^        $result = gmp_sqrt($operand);$/;"	v
result	library\Zend\Crypt\Math\BigInteger\Gmp.php	/^        $result = gmp_sub($left_operand, $right_operand);$/;"	v
return	library\Zend\Crypt\Math\BigInteger\Gmp.php	/^        $return = '0';$/;"	v
return	library\Zend\Crypt\Math\BigInteger\Gmp.php	/^        $return = pack("H*", $bigInt);$/;"	v
Zend_Crypt_Math_Exception	library\Zend\Crypt\Math\Exception.php	/^class Zend_Crypt_Math_Exception extends Zend_Crypt_Exception$/;"	c
Zend_Crypt_Rsa	library\Zend\Crypt\Rsa.php	/^class Zend_Crypt_Rsa$/;"	c
config	library\Zend\Crypt\Rsa.php	/^            $config = $this->_parseConfigArgs($configargs);$/;"	v
config	library\Zend\Crypt\Rsa.php	/^        $config = null;$/;"	v
configs	library\Zend\Crypt\Rsa.php	/^        $configs = array();$/;"	v
data	library\Zend\Crypt\Rsa.php	/^            $data = base64_decode($data);$/;"	v
decrypted	library\Zend\Crypt\Rsa.php	/^        $decrypted = '';$/;"	v
details	library\Zend\Crypt\Rsa.php	/^        $details = openssl_pkey_get_details($resource);$/;"	v
encrypted	library\Zend\Crypt\Rsa.php	/^        $encrypted = '';$/;"	v
function	library\Zend\Crypt\Rsa.php	/^            $function = 'openssl_private_encrypt';$/;"	v
function	library\Zend\Crypt\Rsa.php	/^            $function = 'openssl_public_decrypt';$/;"	v
function	library\Zend\Crypt\Rsa.php	/^        $function = 'openssl_private_decrypt';$/;"	v
function	library\Zend\Crypt\Rsa.php	/^        $function = 'openssl_public_encrypt';$/;"	v
opensslKeyResource	library\Zend\Crypt\Rsa.php	/^            $opensslKeyResource = $privateKey->getOpensslKeyResource();$/;"	v
opensslKeyResource	library\Zend\Crypt\Rsa.php	/^            $opensslKeyResource = $this->_privateKey->getOpensslKeyResource();$/;"	v
passPhrase	library\Zend\Crypt\Rsa.php	/^                $passPhrase = $configargs['passPhrase'];$/;"	v
passPhrase	library\Zend\Crypt\Rsa.php	/^        $passPhrase = null;$/;"	v
privateKey	library\Zend\Crypt\Rsa.php	/^        $privateKey = new Zend_Crypt_Rsa_Key_Private($private, $passPhrase);$/;"	v
privateKey	library\Zend\Crypt\Rsa.php	/^        $privateKey = null;$/;"	v
publicKey	library\Zend\Crypt\Rsa.php	/^        $publicKey = new Zend_Crypt_Rsa_Key_Public($details['key']);$/;"	v
publicKey	library\Zend\Crypt\Rsa.php	/^        $publicKey = null;$/;"	v
resource	library\Zend\Crypt\Rsa.php	/^        $resource = openssl_pkey_new($config);$/;"	v
result	library\Zend\Crypt\Rsa.php	/^        $result = openssl_sign($/;"	v
result	library\Zend\Crypt\Rsa.php	/^        $result = openssl_verify($data, $signature,$/;"	v
return	library\Zend\Crypt\Rsa.php	/^        $return = new ArrayObject(array($/;"	v
signature	library\Zend\Crypt\Rsa.php	/^            $signature = base64_decode($signature);$/;"	v
signature	library\Zend\Crypt\Rsa.php	/^        $signature = '';$/;"	v
Zend_Crypt_Rsa_Exception	library\Zend\Crypt\Rsa\Exception.php	/^class Zend_Crypt_Rsa_Exception extends Zend_Crypt_Exception$/;"	c
Zend_Crypt_Rsa_Key	library\Zend\Crypt\Rsa\Key.php	/^class Zend_Crypt_Rsa_Key implements Countable$/;"	c
Zend_Crypt_Rsa_Key_Private	library\Zend\Crypt\Rsa\Key\Private.php	/^class Zend_Crypt_Rsa_Key_Private extends Zend_Crypt_Rsa_Key$/;"	c
result	library\Zend\Crypt\Rsa\Key\Private.php	/^        $result = openssl_get_privatekey($this->_pemString, $passPhrase);$/;"	v
Zend_Crypt_Rsa_Key_Public	library\Zend\Crypt\Rsa\Key\Public.php	/^class Zend_Crypt_Rsa_Key_Public extends Zend_Crypt_Rsa_Key$/;"	c
result	library\Zend\Crypt\Rsa\Key\Public.php	/^        $result = openssl_get_publickey($string);$/;"	v
Zend_Currency	library\Zend\Currency.php	/^class Zend_Currency$/;"	c
abbreviation	library\Zend\Currency.php	/^            $abbreviation = $currency;$/;"	v
abbreviation	library\Zend\Currency.php	/^            $abbreviation = $data;$/;"	v
check	library\Zend\Currency.php	/^                $check = iconv_substr($content, 0, iconv_strpos($content, '<'));$/;"	v
check	library\Zend\Currency.php	/^                $check = iconv_substr($content, 0, iconv_strpos($content, '≤'));$/;"	v
country	library\Zend\Currency.php	/^            $country = substr($locale, (strpos($locale, '_') + 1));$/;"	v
country	library\Zend\Currency.php	/^        $country = null;$/;"	v
currency	library\Zend\Currency.php	/^            $currency = $this->_options['currency'];$/;"	v
currency	library\Zend\Currency.php	/^            $currency = $this->getShortName($currency, $this->getLocale());$/;"	v
currency	library\Zend\Currency.php	/^            $currency = $value->getShortName();$/;"	v
currency	library\Zend\Currency.php	/^            $currency = null;$/;"	v
data	library\Zend\Currency.php	/^        $data = Zend_Locale_Data::getContent($locale, 'currencytoregion', $country);$/;"	v
data	library\Zend\Currency.php	/^        $data = Zend_Locale_Data::getContent($this->_options['locale'], 'currencytoregion', $region);$/;"	v
data	library\Zend\Currency.php	/^        $data = Zend_Locale_Data::getContent($this->_options['locale'], 'regiontocurrency', $currency);$/;"	v
file	library\Zend\Currency.php	/^                $file = str_replace('_', DIRECTORY_SEPARATOR, $service) . '.php';$/;"	v
format	library\Zend\Currency.php	/^            $format = Zend_Locale_Data::getContent($format, 'currencynumber');$/;"	v
format	library\Zend\Currency.php	/^            $format = Zend_Locale_Data::getContent($locale, 'currencynumber');$/;"	v
format	library\Zend\Currency.php	/^        $format = $options['format'];$/;"	v
list	library\Zend\Currency.php	/^                $list = $params['currency'];$/;"	v
list	library\Zend\Currency.php	/^            $list = Zend_Locale_Data::getContent($params['locale'], 'nametocurrency', $params['currency']);$/;"	v
list	library\Zend\Currency.php	/^        $list = Zend_Locale_Data::getContent($params['locale'], 'currencytoname', $params['currency']);$/;"	v
locale	library\Zend\Currency.php	/^            $locale   = $currency;$/;"	v
locale	library\Zend\Currency.php	/^            $locale = $format;$/;"	v
locale	library\Zend\Currency.php	/^            $locale = Zend_Locale::findLocale($locale);$/;"	v
locale	library\Zend\Currency.php	/^        $locale = $options['locale'];$/;"	v
name	library\Zend\Currency.php	/^            $name = Zend_Locale_Data::getContent($params['locale'], 'nametocurrency', $params['name']);$/;"	v
name	library\Zend\Currency.php	/^            $name = strtolower($name);$/;"	v
name	library\Zend\Currency.php	/^        $name = Zend_Locale_Data::getContent($params['locale'], 'nametocurrency', $params['currency']);$/;"	v
options	library\Zend\Currency.php	/^            $options = $locale;$/;"	v
options	library\Zend\Currency.php	/^        $options = $this->_checkOptions($options) + $this->_options;$/;"	v
original	library\Zend\Currency.php	/^        $original = $value;$/;"	v
params	library\Zend\Currency.php	/^        $params = self::_checkParams($currency, $locale);$/;"	v
patterns	library\Zend\Currency.php	/^        $patterns = explode('|', $pattern);$/;"	v
rate	library\Zend\Currency.php	/^            $rate = $service->getRate($currency, $this->getShortName());$/;"	v
rate	library\Zend\Currency.php	/^        $rate = 1;$/;"	v
region	library\Zend\Currency.php	/^                $region = substr($this->_options['locale'], (strpos($this->_options['locale'], '_') + 1));$/;"	v
result	library\Zend\Currency.php	/^        $result = explode(' ', $data);$/;"	v
service	library\Zend\Currency.php	/^            $service = $this->getService();$/;"	v
service	library\Zend\Currency.php	/^            $service = new $service;$/;"	v
sign	library\Zend\Currency.php	/^                    $sign = $options['currency'];$/;"	v
sign	library\Zend\Currency.php	/^                    $sign = $options['name'];$/;"	v
sign	library\Zend\Currency.php	/^                    $sign = $this->_extractPattern($options['symbol'], $original);$/;"	v
sign	library\Zend\Currency.php	/^                    $sign = '';$/;"	v
sign	library\Zend\Currency.php	/^            $sign = $options['display'];$/;"	v
space	library\Zend\Currency.php	/^                $space = ' ';$/;"	v
space	library\Zend\Currency.php	/^            $space = '';$/;"	v
symbol	library\Zend\Currency.php	/^            $symbol = Zend_Locale_Data::getContent($params['locale'], 'currencysymbol', $params['name']);$/;"	v
symbol	library\Zend\Currency.php	/^        $symbol = Zend_Locale_Data::getContent($params['locale'], 'currencysymbol', $params['currency']);$/;"	v
token	library\Zend\Currency.php	/^                $token = iconv_substr($content, iconv_strpos($content, '<') + 1);$/;"	v
token	library\Zend\Currency.php	/^                $token = iconv_substr($content, iconv_strpos($content, '≤') + 1);$/;"	v
token	library\Zend\Currency.php	/^        $token    = $pattern;$/;"	v
value	library\Zend\Currency.php	/^                        $value = -1;$/;"	v
value	library\Zend\Currency.php	/^                    $value = str_replace(' ', '', $value);$/;"	v
value	library\Zend\Currency.php	/^                    $value = strtolower($value);$/;"	v
value	library\Zend\Currency.php	/^                $value = $options['value'];$/;"	v
value	library\Zend\Currency.php	/^                $value = $this->_options['value'];$/;"	v
value	library\Zend\Currency.php	/^                $value = $value . $space . '¤';$/;"	v
value	library\Zend\Currency.php	/^                $value = '¤' . $space . $value;$/;"	v
value	library\Zend\Currency.php	/^                $value = str_replace(' ', '', $value);$/;"	v
value	library\Zend\Currency.php	/^            $value    = $value->getValue();$/;"	v
value	library\Zend\Currency.php	/^            $value = Zend_Locale_Format::convertNumerals($value, 'Latn', $options['script']);$/;"	v
value	library\Zend\Currency.php	/^            $value = str_replace('¤', '', $value);$/;"	v
value	library\Zend\Currency.php	/^        $value    = Zend_Locale_Format::toNumber($value, array('locale'        => $locale,$/;"	v
value	library\Zend\Currency.php	/^        $value    = trim(str_replace('¤', '', $value));$/;"	v
value	library\Zend\Currency.php	/^        $value = $this->_exchangeCurrency($value, $currency);$/;"	v
value	library\Zend\Currency.php	/^        $value = $this->_options['value'] - $value;$/;"	v
value	library\Zend\Currency.php	/^        $value = str_replace('¤', $sign, $value);$/;"	v
Zend_Currency_Exception	library\Zend\Currency\Exception.php	/^class Zend_Currency_Exception extends Zend_Exception$/;"	c
Zend_Date	library\Zend\Date.php	/^class Zend_Date extends Zend_Date_DateObject$/;"	c
am	library\Zend\Date.php	/^                $am = $this->date('a', $this->getUnixTimestamp(), false);$/;"	v
calc	library\Zend\Date.php	/^                        $calc  = 'set';$/;"	v
calc	library\Zend\Date.php	/^                        $calc = 'set';$/;"	v
clone	library\Zend\Date.php	/^        $clone = clone $this;           \/\/ copy all instance variables$/;"	v
cnt	library\Zend\Date.php	/^                $cnt       = 0;$/;"	v
cnt	library\Zend\Date.php	/^                $cnt = 0;$/;"	v
comment	library\Zend\Date.php	/^                    $comment = $comment ? false : true;$/;"	v
comment	library\Zend\Date.php	/^                $comment = $comment ? false : true;$/;"	v
comment	library\Zend\Date.php	/^        $comment = false;$/;"	v
comp	library\Zend\Date.php	/^        $comp = $this->_fractional - $milli;$/;"	v
compare	library\Zend\Date.php	/^        $compare = $this->_calculate('cmp', $date, $part, $locale);$/;"	v
date	library\Zend\Date.php	/^                            $date = $date['day'];$/;"	v
date	library\Zend\Date.php	/^                            $date = $date['day_of_year'];$/;"	v
date	library\Zend\Date.php	/^                            $date = $date['gmtsecs'];$/;"	v
date	library\Zend\Date.php	/^                            $date = $date['hour'];$/;"	v
date	library\Zend\Date.php	/^                            $date = $date['minute'];$/;"	v
date	library\Zend\Date.php	/^                            $date = $date['month'];$/;"	v
date	library\Zend\Date.php	/^                            $date = $date['second'];$/;"	v
date	library\Zend\Date.php	/^                            $date = $date['timestamp'];$/;"	v
date	library\Zend\Date.php	/^                            $date = $date['timezone'];$/;"	v
date	library\Zend\Date.php	/^                            $date = $date['week'];$/;"	v
date	library\Zend\Date.php	/^                            $date = $date['weekday'];$/;"	v
date	library\Zend\Date.php	/^                            $date = $date['year'];$/;"	v
date	library\Zend\Date.php	/^                            $date = $value->getInfo();$/;"	v
date	library\Zend\Date.php	/^                        $date = $month - $date;$/;"	v
date	library\Zend\Date.php	/^                        $date = $month - $found;$/;"	v
date	library\Zend\Date.php	/^                        $date = $year - $date;$/;"	v
date	library\Zend\Date.php	/^                        $date = self::getFullYear($date);$/;"	v
date	library\Zend\Date.php	/^                    $date = intval($date);$/;"	v
date	library\Zend\Date.php	/^                $date   = null;$/;"	v
date	library\Zend\Date.php	/^                $date = $date->get($part);$/;"	v
date	library\Zend\Date.php	/^                $date = (string) $date;$/;"	v
date	library\Zend\Date.php	/^                $date = array_search($date, $monthlist);$/;"	v
date	library\Zend\Date.php	/^                $date = self::now($locale);$/;"	v
date	library\Zend\Date.php	/^                $date = time();$/;"	v
date	library\Zend\Date.php	/^            $date   = null;$/;"	v
date	library\Zend\Date.php	/^            $date  = $parsed['day'] . "." . $parsed['month'] . "." . $parsed['year'];$/;"	v
date	library\Zend\Date.php	/^            $date = $date->getInfo();$/;"	v
date	library\Zend\Date.php	/^            $date = $date->toString($part, 'iso', $locale);$/;"	v
date	library\Zend\Date.php	/^            $date = $date->toString('d.M.y', 'iso');$/;"	v
date	library\Zend\Date.php	/^            $date = $this->_getTime($date['offset']);$/;"	v
date	library\Zend\Date.php	/^            $date = $this->_getTime(parent::$_defaultOffset);$/;"	v
date	library\Zend\Date.php	/^            $date = null;$/;"	v
date	library\Zend\Date.php	/^        $date      = new self($parsed, null, $locale);$/;"	v
date	library\Zend\Date.php	/^        $date = $this->copyPart(self::DATE_MEDIUM, $locale);$/;"	v
dateMatchCharCount	library\Zend\Date.php	/^                    $dateMatchCharCount = iconv_strlen($datematch[0], 'UTF-8');$/;"	v
day	library\Zend\Date.php	/^                        $day   = 1;$/;"	v
day	library\Zend\Date.php	/^                $day     = Zend_Locale_Data::getContent($locale, 'day', array('gregorian', 'format', 'wide', $weekday));$/;"	v
day	library\Zend\Date.php	/^                $day = $day['day'];$/;"	v
day	library\Zend\Date.php	/^                $day = Zend_Locale_Data::getContent($locale, 'day', array('gregorian', 'format', 'abbreviated', $weekday));$/;"	v
day	library\Zend\Date.php	/^            $day = $day->toString(self::DAY_SHORT, 'iso', $locale);$/;"	v
day	library\Zend\Date.php	/^        $day    = $this->toString(self::DAY_SHORT, 'iso');$/;"	v
day	library\Zend\Date.php	/^        $day   = $this->date('Ymd', $this->getUnixTimestamp());$/;"	v
daylist	library\Zend\Date.php	/^                $daylist = Zend_Locale_Data::getList($locale, 'day');$/;"	v
daylist	library\Zend\Date.php	/^                $daylist = Zend_Locale_Data::getList($locale, 'day', array('gregorian', 'format', 'abbreviated'));$/;"	v
days	library\Zend\Date.php	/^                    $days = $date['day'];$/;"	v
days	library\Zend\Date.php	/^                $days = 0;$/;"	v
diff	library\Zend\Date.php	/^                $diff = $precision - $this->_precision;$/;"	v
diff	library\Zend\Date.php	/^                $diff = $this->_precision - $precision;$/;"	v
fixday	library\Zend\Date.php	/^                                $fixday = ($parts['mday'] < $day) ? -$parts['mday'] : ($parts['mday'] - $day);$/;"	v
fixday	library\Zend\Date.php	/^                    $fixday = 0;$/;"	v
format	library\Zend\Date.php	/^                    $format = Zend_Locale_Data::getContent($locale, 'date', array('gregorian', 'full'));$/;"	v
format	library\Zend\Date.php	/^                    $format = Zend_Locale_Data::getContent($locale, 'date', array('gregorian', 'long'));$/;"	v
format	library\Zend\Date.php	/^                    $format = Zend_Locale_Data::getContent($locale, 'date', array('gregorian', 'medium'));$/;"	v
format	library\Zend\Date.php	/^                    $format = Zend_Locale_Data::getContent($locale, 'date', array('gregorian', 'short'));$/;"	v
format	library\Zend\Date.php	/^                    $format = Zend_Locale_Data::getContent($locale, 'datetime', array('gregorian', 'full'));$/;"	v
format	library\Zend\Date.php	/^                    $format = Zend_Locale_Data::getContent($locale, 'datetime', array('gregorian', 'long'));$/;"	v
format	library\Zend\Date.php	/^                    $format = Zend_Locale_Data::getContent($locale, 'datetime', array('gregorian', 'medium'));$/;"	v
format	library\Zend\Date.php	/^                    $format = Zend_Locale_Data::getContent($locale, 'datetime', array('gregorian', 'short'));$/;"	v
format	library\Zend\Date.php	/^                    $format = Zend_Locale_Data::getContent($locale, 'time', array('gregorian', 'full'));$/;"	v
format	library\Zend\Date.php	/^                    $format = Zend_Locale_Data::getContent($locale, 'time', array('gregorian', 'long'));$/;"	v
format	library\Zend\Date.php	/^                    $format = Zend_Locale_Data::getContent($locale, 'time', array('gregorian', 'medium'));$/;"	v
format	library\Zend\Date.php	/^                    $format = Zend_Locale_Data::getContent($locale, 'time', array('gregorian', 'short'));$/;"	v
format	library\Zend\Date.php	/^                    $format = Zend_Locale_Format::convertPhpToIsoFormat($format);$/;"	v
format	library\Zend\Date.php	/^                $format = (string) $format;$/;"	v
format	library\Zend\Date.php	/^                $format = null;$/;"	v
format	library\Zend\Date.php	/^            $format = 'D';$/;"	v
format	library\Zend\Date.php	/^            $format = 'D\\, d M y H\\:i\\:s O';$/;"	v
format	library\Zend\Date.php	/^            $format = 'H:i:s';$/;"	v
format	library\Zend\Date.php	/^            $format = 'W';$/;"	v
format	library\Zend\Date.php	/^            $format = 'Y';$/;"	v
format	library\Zend\Date.php	/^            $format = 'i';$/;"	v
format	library\Zend\Date.php	/^            $format = 'l';$/;"	v
format	library\Zend\Date.php	/^            $format = 'm';$/;"	v
format	library\Zend\Date.php	/^            $format = 's';$/;"	v
format	library\Zend\Date.php	/^            $format = Zend_Locale_Format::convertPhpToIsoFormat($format);$/;"	v
format	library\Zend\Date.php	/^            $format = Zend_Locale_Format::getDateFormat($locale) . ' ' . Zend_Locale_Format::getTimeFormat($locale);$/;"	v
format	library\Zend\Date.php	/^            $format = Zend_Locale_Format::getDateFormat($locale);$/;"	v
format	library\Zend\Date.php	/^            $format = null;$/;"	v
format	library\Zend\Date.php	/^            $format = self::DAY_OF_YEAR;$/;"	v
format	library\Zend\Date.php	/^            $format = self::MINUTE;$/;"	v
format	library\Zend\Date.php	/^            $format = self::MONTH;$/;"	v
format	library\Zend\Date.php	/^            $format = self::RFC_822;$/;"	v
format	library\Zend\Date.php	/^            $format = self::SECOND;$/;"	v
format	library\Zend\Date.php	/^            $format = self::TIME_MEDIUM;$/;"	v
format	library\Zend\Date.php	/^            $format = self::WEEK;$/;"	v
format	library\Zend\Date.php	/^            $format = self::WEEKDAY;$/;"	v
format	library\Zend\Date.php	/^            $format = self::YEAR;$/;"	v
format	library\Zend\Date.php	/^        $format  = '';$/;"	v
format	library\Zend\Date.php	/^        $format = self::_getLocalizedToken($format, $locale);$/;"	v
found	library\Zend\Date.php	/^                            $found = $key + 1;$/;"	v
found	library\Zend\Date.php	/^                         $found = $cnt;$/;"	v
found	library\Zend\Date.php	/^                        $found = $cnt;$/;"	v
found	library\Zend\Date.php	/^                        $found = $key;$/;"	v
found	library\Zend\Date.php	/^                        $found = ($key % 12) + 1;$/;"	v
found	library\Zend\Date.php	/^                $found = $month;$/;"	v
found	library\Zend\Date.php	/^                $found = 0;$/;"	v
found	library\Zend\Date.php	/^            $found = $month->toString(self::MONTH_SHORT, 'iso', $locale);$/;"	v
horizon	library\Zend\Date.php	/^            $horizon = $this->_checkLocation($location);$/;"	v
horizon	library\Zend\Date.php	/^        $horizon = $this->_checkLocation($location);$/;"	v
hour	library\Zend\Date.php	/^                $hour = $date['hour'] - $hour;$/;"	v
hour	library\Zend\Date.php	/^                $hour = $this->toString('H', 'iso', true);$/;"	v
hour	library\Zend\Date.php	/^            $hour = $this->toString(self::HOUR, 'iso');$/;"	v
hour	library\Zend\Date.php	/^        $hour   = $this->toString(self::HOUR_SHORT, 'iso');$/;"	v
hours	library\Zend\Date.php	/^                    $hours   = floor($rest * 24 \/ 1000);$/;"	v
hours	library\Zend\Date.php	/^                    $hours = $date['hour'];$/;"	v
hours	library\Zend\Date.php	/^                $hours = 0;$/;"	v
length	library\Zend\Date.php	/^                $length  = iconv_strlen($token, 'UTF-8');$/;"	v
length	library\Zend\Date.php	/^                $length = iconv_strlen($token, 'UTF-8');$/;"	v
locale	library\Zend\Date.php	/^                        $locale = $this->getLocale();$/;"	v
locale	library\Zend\Date.php	/^                $locale = $date;$/;"	v
locale	library\Zend\Date.php	/^                $locale = $format;$/;"	v
locale	library\Zend\Date.php	/^                $locale = $type;$/;"	v
locale	library\Zend\Date.php	/^            $locale = $date;$/;"	v
locale	library\Zend\Date.php	/^            $locale = $format;$/;"	v
locale	library\Zend\Date.php	/^            $locale = $part;$/;"	v
locale	library\Zend\Date.php	/^            $locale = $this->getLocale();$/;"	v
locale	library\Zend\Date.php	/^            $locale = $type;$/;"	v
locale	library\Zend\Date.php	/^        $locale = (string) $locale;$/;"	v
locale	library\Zend\Date.php	/^        $locale = Zend_Locale::findLocale($locale);$/;"	v
match	library\Zend\Date.php	/^        $match = array();$/;"	v
matchStartPos	library\Zend\Date.php	/^                $matchStartPos = iconv_strpos($match[0], ' ', 0, 'UTF-8') + 1;$/;"	v
max	library\Zend\Date.php	/^        $max = pow(10, $this->_precision);$/;"	v
milli	library\Zend\Date.php	/^                $milli = (int) ($milli * (10 * $diff));$/;"	v
milli	library\Zend\Date.php	/^                $milli = (int) ($milli \/ (10 * $diff));$/;"	v
milli	library\Zend\Date.php	/^            $milli = intval($milli);$/;"	v
minute	library\Zend\Date.php	/^        $minute = $this->toString(self::MINUTE_SHORT, 'iso');$/;"	v
minutes	library\Zend\Date.php	/^                    $minutes = $date['minute'];$/;"	v
minutes	library\Zend\Date.php	/^                    $minutes = floor($rest * 1440 \/ 1000);$/;"	v
minutes	library\Zend\Date.php	/^                $minutes = 0;$/;"	v
mon	library\Zend\Date.php	/^                $mon = Zend_Locale_Data::getContent($locale, 'month', array('gregorian', 'format', 'abbreviated', $month));$/;"	v
month	library\Zend\Date.php	/^                        $month = 1;$/;"	v
month	library\Zend\Date.php	/^                    $month = $month['month'];$/;"	v
month	library\Zend\Date.php	/^                $month = $this->date('n', $this->getUnixTimestamp(), false);$/;"	v
month	library\Zend\Date.php	/^        $month  = $this->toString(self::MONTH_SHORT, 'iso');$/;"	v
monthlist	library\Zend\Date.php	/^                $monthlist  = Zend_Locale_Data::getList($locale, 'month');$/;"	v
monthlist	library\Zend\Date.php	/^                $monthlist = Zend_Locale_Data::getList($locale, 'month');$/;"	v
monthlist	library\Zend\Date.php	/^                $monthlist = Zend_Locale_Data::getList($locale, 'month', array('gregorian', 'format', 'abbreviated'));$/;"	v
monthlist	library\Zend\Date.php	/^                $monthlist = Zend_Locale_Data::getList($locale, 'month', array('gregorian', 'stand-alone', 'narrow'));$/;"	v
monthlist	library\Zend\Date.php	/^                $monthlist = array_merge($monthlist, $monthlist2);$/;"	v
monthlist2	library\Zend\Date.php	/^                $monthlist2 = Zend_Locale_Data::getList($locale, 'month', array('gregorian', 'format', 'abbreviated'));$/;"	v
months	library\Zend\Date.php	/^                    $months = $date['month'];$/;"	v
months	library\Zend\Date.php	/^                $months    = $this->_getDigitFromName($match[2]);$/;"	v
months	library\Zend\Date.php	/^                $months  = $this->_getDigitFromName($match[2]);$/;"	v
months	library\Zend\Date.php	/^                $months = 0;$/;"	v
name	library\Zend\Date.php	/^            $name  = strtolower($name);$/;"	v
old	library\Zend\Date.php	/^            $old = true;$/;"	v
old	library\Zend\Date.php	/^        $old = false;$/;"	v
oldzone	library\Zend\Date.php	/^                $oldzone = $this->getTimezone();$/;"	v
orig	library\Zend\Date.php	/^                    $orig  = '';$/;"	v
orig	library\Zend\Date.php	/^                $orig = '';$/;"	v
orig	library\Zend\Date.php	/^        $orig    = '';$/;"	v
orig	library\Zend\Date.php	/^        $orig = self::$_options['format_type'];$/;"	v
parsed	library\Zend\Date.php	/^                        $parsed = Zend_Locale_Format::getDate($date, array('date_format' => $part, 'locale' => $locale, 'fix_date' => true, 'format_type' => 'iso'));$/;"	v
parsed	library\Zend\Date.php	/^                    $parsed = $date;$/;"	v
parsed	library\Zend\Date.php	/^                    $parsed = $time;$/;"	v
parsed	library\Zend\Date.php	/^                    $parsed = Zend_Locale_Format::getDate($date, array('date_format' => $format, 'format_type' => 'iso', 'locale' => $locale));$/;"	v
parsed	library\Zend\Date.php	/^                    $parsed = Zend_Locale_Format::getDate($date, array('date_format' => $format, 'locale' => $locale, 'format_type' => 'iso'));$/;"	v
parsed	library\Zend\Date.php	/^                    $parsed = Zend_Locale_Format::getDate($date, array('locale' => $locale, 'format_type' => 'iso', 'fix_date' => true));$/;"	v
parsed	library\Zend\Date.php	/^                    $parsed = Zend_Locale_Format::getDateTime($date, array('date_format' => $format, 'format_type' => 'iso', 'locale' => $locale));$/;"	v
parsed	library\Zend\Date.php	/^                    $parsed = Zend_Locale_Format::getDateTime($date, array('locale' => $locale, 'format_type' => 'iso', 'fix_date' => true));$/;"	v
parsed	library\Zend\Date.php	/^                    $parsed = Zend_Locale_Format::getTime($date, array('date_format' => $format, 'format_type' => 'iso', 'locale' => $locale));$/;"	v
parsed	library\Zend\Date.php	/^                    $parsed = Zend_Locale_Format::getTime($date, array('locale' => $locale, 'format_type' => 'iso', 'fix_date' => true));$/;"	v
parsed	library\Zend\Date.php	/^                    $parsed = Zend_Locale_Format::getTime($time, array('date_format' => $format, 'locale' => $locale, 'format_type' => 'iso'));$/;"	v
parsed	library\Zend\Date.php	/^                $parsed = Zend_Locale_Format::getDate($date, array('locale' => $locale,$/;"	v
parsed	library\Zend\Date.php	/^            $parsed = $date;$/;"	v
part	library\Zend\Date.php	/^                            $part  = Zend_Locale_Format::getDateFormat($locale) . " ";$/;"	v
part	library\Zend\Date.php	/^                            $part = self::WEEKDAY_DIGIT;$/;"	v
part	library\Zend\Date.php	/^                $part   = null;$/;"	v
part	library\Zend\Date.php	/^            $part   = null;$/;"	v
part	library\Zend\Date.php	/^            $part = $date;$/;"	v
part	library\Zend\Date.php	/^            $part = Zend_Locale_Format::convertPhpToIsoFormat($part);$/;"	v
part	library\Zend\Date.php	/^            $part = null;$/;"	v
part	library\Zend\Date.php	/^            $part = self::TIMESTAMP;$/;"	v
parts	library\Zend\Date.php	/^                            $parts = $this->getDateParts($this->mktime($hour, $minute, $second, $date, $day, $year, false));$/;"	v
precision	library\Zend\Date.php	/^            $precision = $this->_precision;$/;"	v
precision	library\Zend\Date.php	/^            $precision = 6;$/;"	v
precision	library\Zend\Date.php	/^            $precision = strlen($milli);$/;"	v
rest	library\Zend\Date.php	/^                    $rest    = $rest - ($hours * 1000 \/ 24);$/;"	v
rest	library\Zend\Date.php	/^                    $rest    = $rest - ($minutes * 1000 \/ 1440);$/;"	v
rest	library\Zend\Date.php	/^                    $rest    = intval($date);$/;"	v
result	library\Zend\Date.php	/^                 $result = preg_match('\/^\\w{3},\\s(\\d{1,2})\\s(\\w{3})\\s(\\d{4})\\s'$/;"	v
result	library\Zend\Date.php	/^                $result  = substr($this->getMilliSecond(), 0, 3);$/;"	v
result	library\Zend\Date.php	/^                $result = $this->getTimezone();$/;"	v
result	library\Zend\Date.php	/^                $result = preg_match("\/^\\w{6,9},\\s(\\d{2})-(\\w{3})-(\\d{2})\\s(\\d{2}):(\\d{2}):(\\d{2})\\s.{3,20}$\/", $date, $match);$/;"	v
result	library\Zend\Date.php	/^                $result = preg_match('\/^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})[+-]{1}\\d{2}:\\d{2}$\/', $date, $match);$/;"	v
result	library\Zend\Date.php	/^                $result = preg_match('\/^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})\\d{0,4}([+-]{1}\\d{2}:\\d{2}|Z)$\/', $date, $match);$/;"	v
result	library\Zend\Date.php	/^                $result = preg_match('\/^\\w{0,3},{0,1}\\s{0,1}(\\d{1,2})\\s(\\w{3})\\s(\\d{2,4})\\s(\\d{2}):(\\d{2}):{0,1}(\\d{0,2})\\s([+-]{1}\\d{4}|\\w{1,20})$\/', $date, $match);$/;"	v
result	library\Zend\Date.php	/^                $result = preg_match('\/^\\w{0,3},{0,1}\\s{0,1}(\\d{1,2})\\s(\\w{3})\\s(\\d{2})\\s(\\d{2}):(\\d{2}):{0,1}(\\d{0,2})\\s([+-]{1}\\d{4}|\\w{1,20})$\/', $date, $match);$/;"	v
result	library\Zend\Date.php	/^                $result = preg_match('\/^\\w{3},\\s(\\d{2})\\s(\\w{3})\\s(\\d{2,4})\\s(\\d{1,2}):(\\d{2}):(\\d{2})\\s.{1,21}$\/', $date, $match);$/;"	v
result	library\Zend\Date.php	/^                $result = preg_match('\/^\\w{6,9},\\s(\\d{2})-(\\w{3})-(\\d{2})\\s(\\d{2}):(\\d{2}):(\\d{2})\\s.{3,21}$\/', $date, $match);$/;"	v
result	library\Zend\Date.php	/^            $result = clone $this;$/;"	v
result	library\Zend\Date.php	/^        $result = $this->compare($date, $part, $locale);$/;"	v
result	library\Zend\Date.php	/^        $result = $this->get($part);$/;"	v
result	library\Zend\Date.php	/^        $result = '';$/;"	v
result	library\Zend\Date.php	/^        $result = clone $this;$/;"	v
return	library\Zend\Date.php	/^                $return = $this->add($date, $type, $locale);$/;"	v
return	library\Zend\Date.php	/^                $return = $this->compare($date, $type, $locale);$/;"	v
return	library\Zend\Date.php	/^                $return = $this->set($date, $type, $locale);$/;"	v
return	library\Zend\Date.php	/^                $return = $this->sub($date, $type, $locale);$/;"	v
return	library\Zend\Date.php	/^            $return = $this->_calcdetail($calc, $stamp, self::TIMESTAMP, null);$/;"	v
return	library\Zend\Date.php	/^            $return = $this->setUnixTimestamp($stamp);$/;"	v
return	library\Zend\Date.php	/^        $return = $this->_calcdetail($calc, $date, self::DATE_MEDIUM, 'de');$/;"	v
return	library\Zend\Date.php	/^        $return = $this->_calcdetail($calc, $day, $type, $locale);$/;"	v
return	library\Zend\Date.php	/^        $return = $this->_calcdetail($calc, $found, self::MONTH_SHORT, $locale);$/;"	v
return	library\Zend\Date.php	/^        $return = $this->_calcdetail($calc, $time, self::TIMES, 'de');$/;"	v
return	library\Zend\Date.php	/^        $return = $this->_calcdetail($calc, $value, $parameter, $locale);$/;"	v
return	library\Zend\Date.php	/^        $return = $this->_calcdetail($calc, $weekday, $type, $locale);$/;"	v
second	library\Zend\Date.php	/^        $second = $this->toString(self::SECOND_SHORT, 'iso');$/;"	v
seconds	library\Zend\Date.php	/^                    $seconds = $date['second'];$/;"	v
seconds	library\Zend\Date.php	/^                    $seconds = floor($rest * 86400 \/ 1000);$/;"	v
seconds	library\Zend\Date.php	/^                $seconds = 0;$/;"	v
stamp	library\Zend\Date.php	/^                $stamp = $stamp['timestamp'];$/;"	v
stamp	library\Zend\Date.php	/^            $stamp = $stamp->getTimestamp();$/;"	v
suninfo	library\Zend\Date.php	/^        $suninfo = array();$/;"	v
time	library\Zend\Date.php	/^            $time  = str_pad($parsed['hour'], 2, '0', STR_PAD_LEFT) . ":";$/;"	v
time	library\Zend\Date.php	/^            $time = $time->toString('HH:mm:ss', 'iso');$/;"	v
timeMatchCharCount	library\Zend\Date.php	/^                    $timeMatchCharCount = iconv_strlen($timematch[0], 'UTF-8');$/;"	v
timestamp	library\Zend\Date.php	/^        $timestamp = $date->mktime($parsed['hour'], $parsed['minute'], $parsed['second'],$/;"	v
tmpdate	library\Zend\Date.php	/^                    $tmpdate = iconv_substr($date,$/;"	v
tmpdate	library\Zend\Date.php	/^                    $tmpdate = iconv_substr($tmpdate,$/;"	v
tmpdate	library\Zend\Date.php	/^                $tmpdate = $date;$/;"	v
today	library\Zend\Date.php	/^        $today = $this->date('Ymd', $this->_getTime());$/;"	v
token	library\Zend\Date.php	/^        $token = str_split($token);$/;"	v
tomorrow	library\Zend\Date.php	/^        $tomorrow = $this->date('Ymd', $this->mktime(0, 0, 0, $month, $day +1, $year));$/;"	v
type	library\Zend\Date.php	/^                    $type = self::WEEKDAY;$/;"	v
type	library\Zend\Date.php	/^                    $type = self::WEEKDAY_NAME;$/;"	v
type	library\Zend\Date.php	/^                    $type = self::WEEKDAY_SHORT;$/;"	v
type	library\Zend\Date.php	/^                   $type = self::WEEKDAY_NARROW;$/;"	v
type	library\Zend\Date.php	/^                $type   = null;$/;"	v
type	library\Zend\Date.php	/^                $type = (string) $type;$/;"	v
type	library\Zend\Date.php	/^                $type = self::WEEKDAY;$/;"	v
type	library\Zend\Date.php	/^            $type = null;$/;"	v
type	library\Zend\Date.php	/^            $type = self::DAY_SHORT;$/;"	v
type	library\Zend\Date.php	/^            $type = self::WEEKDAY_8601;$/;"	v
value	library\Zend\Date.php	/^                $value = $this->getUnixTimestamp();$/;"	v
value	library\Zend\Date.php	/^            $value = $value->toString($parameter, 'iso', $locale);$/;"	v
week	library\Zend\Date.php	/^                    $week = (int) $this->toString(self::WEEK, 'iso', $locale);$/;"	v
week	library\Zend\Date.php	/^                $week = $this->date('W', $this->getUnixTimestamp(), false);$/;"	v
weekday	library\Zend\Date.php	/^                $weekday = $weekday['weekday'];$/;"	v
weekday	library\Zend\Date.php	/^                $weekday = (int) $this->toString(self::WEEKDAY_8601, 'iso', $locale);$/;"	v
weekday	library\Zend\Date.php	/^                $weekday = (int) $this->toString(self::WEEKDAY_DIGIT, 'iso', $locale);$/;"	v
weekday	library\Zend\Date.php	/^                $weekday = strtolower($this->date('D', $this->getUnixTimestamp(), false));$/;"	v
weekday	library\Zend\Date.php	/^            $weekday = $weekday->toString(self::WEEKDAY_8601, 'iso', $locale);$/;"	v
year	library\Zend\Date.php	/^                        $year  = 1970;$/;"	v
year	library\Zend\Date.php	/^                        $year = 1970;$/;"	v
year	library\Zend\Date.php	/^                $year = $this->date('Y', $this->getUnixTimestamp(), false);$/;"	v
year	library\Zend\Date.php	/^                $year = $year['year'];$/;"	v
year	library\Zend\Date.php	/^            $year = (int) $year->toString(self::YEAR, 'iso');$/;"	v
year	library\Zend\Date.php	/^        $year   = $this->toString(self::YEAR, 'iso');$/;"	v
years	library\Zend\Date.php	/^                    $years = $date['year'];$/;"	v
years	library\Zend\Date.php	/^                $years = 0;$/;"	v
yesterday	library\Zend\Date.php	/^        $yesterday = $this->date('Ymd', $this->mktime(0, 0, 0, $month, $day -1, $year));$/;"	v
zone	library\Zend\Date.php	/^            $zone = "Etc\/GMT";$/;"	v
zone	library\Zend\Date.php	/^            $zone = $this->getTimezoneFromString($date);$/;"	v
zone	library\Zend\Date.php	/^        $zone = $this->getTimezoneFromString($date);$/;"	v
zone	library\Zend\Date.php	/^        $zone = @date_default_timezone_get();$/;"	v
Zend_Date_Cities	library\Zend\Date\Cities.php	/^class Zend_Date_Cities$/;"	c
return	library\Zend\Date\Cities.php	/^                $return            = $value;$/;"	v
act	library\Zend\Date\DateObject.php	/^                $act = $year;$/;"	v
act	library\Zend\Date\DateObject.php	/^            $act = 1970;$/;"	v
array	library\Zend\Date\DateObject.php	/^            $array = array($/;"	v
backend	library\Zend\Date\DateObject.php	/^        $backend = self::$_cache->getBackend();$/;"	v
cacheOptions	library\Zend\Date\DateObject.php	/^            $cacheOptions = $backend->getCapabilities();$/;"	v
correction	library\Zend\Date\DateObject.php	/^            $correction = 3;$/;"	v
correction	library\Zend\Date\DateObject.php	/^        $correction = 0;$/;"	v
date	library\Zend\Date\DateObject.php	/^                $date  = -12219321600;$/;"	v
date	library\Zend\Date\DateObject.php	/^            $date = (($date * 86400) + ($hour * 3600) + ($minute * 60) + $second);$/;"	v
date	library\Zend\Date\DateObject.php	/^            $date = -(($date * 86400) + (86400 - (($hour * 3600) + ($minute * 60) + $second)));$/;"	v
date	library\Zend\Date\DateObject.php	/^        $date   = $this->getDateParts($this->getUnixTimestamp(), true);$/;"	v
date	library\Zend\Date\DateObject.php	/^        $date   = $this->getDateParts($timestamp, true);$/;"	v
date	library\Zend\Date\DateObject.php	/^        $date = 0;$/;"	v
day	library\Zend\Date\DateObject.php	/^                        $day = 7;$/;"	v
day	library\Zend\Date\DateObject.php	/^                    $day = self::dayOfWeek($date['year'], $date['mon'], $date['mday']);$/;"	v
day	library\Zend\Date\DateObject.php	/^                $day = $timestamp;$/;"	v
day	library\Zend\Date\DateObject.php	/^            $day       = 31;$/;"	v
day	library\Zend\Date\DateObject.php	/^        $day   = intval($day);$/;"	v
day	library\Zend\Date\DateObject.php	/^        $day  = floor((13 * $month - 1) \/ 5) + $day + ($year % 100) + floor(($year % 100) \/ 4);$/;"	v
dayofweek	library\Zend\Date\DateObject.php	/^            $dayofweek = self::dayOfWeek($year, $month, $numberdays);$/;"	v
dayofweek	library\Zend\Date\DateObject.php	/^        $dayofweek = self::dayOfWeek($year, $month, $day);$/;"	v
dayseconds	library\Zend\Date\DateObject.php	/^                    $dayseconds = ($date['hours'] * 3600) + ($date['minutes'] * 60) + $date['seconds'];$/;"	v
difference	library\Zend\Date\DateObject.php	/^                    $difference = $this->getGmtOffset();$/;"	v
difference	library\Zend\Date\DateObject.php	/^                    $difference = sprintf('%s%04d', ($difference <= 0) ? '+' : '-', abs($difference) \/ 36);$/;"	v
difference	library\Zend\Date\DateObject.php	/^                    $difference = substr($difference, 0, 3) . ':' . substr($difference, 3);$/;"	v
dst	library\Zend\Date\DateObject.php	/^                $dst = date("I", $tempstamp);$/;"	v
firstday	library\Zend\Date\DateObject.php	/^            $firstday  = self::dayOfWeek($year - 1, 1, 1);$/;"	v
firstday	library\Zend\Date\DateObject.php	/^        $firstday  = self::dayOfWeek($year, 1, 1);$/;"	v
fullCircle	library\Zend\Date\DateObject.php	/^        $fullCircle         = 2   * M_PI;$/;"	v
gmtstr	library\Zend\Date\DateObject.php	/^                    $gmtstr = ($gmt === true) ? 0 : $this->getGmtOffset();$/;"	v
gmtstr	library\Zend\Date\DateObject.php	/^                    $gmtstr = sprintf('%s%04d', ($gmtstr <= 0) ? '+' : '-', abs($gmtstr) \/ 36);$/;"	v
halfCircle	library\Zend\Date\DateObject.php	/^        $halfCircle         =       M_PI;$/;"	v
hour	library\Zend\Date\DateObject.php	/^                            $hour = $date['hours'];$/;"	v
hour	library\Zend\Date\DateObject.php	/^                            $hour = '12';$/;"	v
hour	library\Zend\Date\DateObject.php	/^                        $hour = $date['hours'] - 12;$/;"	v
hour	library\Zend\Date\DateObject.php	/^        $hour = intval($universalTime);$/;"	v
hours	library\Zend\Date\DateObject.php	/^            $hours      = floor($timestamp \/ 3600);$/;"	v
hours	library\Zend\Date\DateObject.php	/^            $hours = floor($timestamp \/ 3600);$/;"	v
i	library\Zend\Date\DateObject.php	/^                    $i = $act;$/;"	v
i	library\Zend\Date\DateObject.php	/^                $i = $act;$/;"	v
id	library\Zend\Date\DateObject.php	/^            $id = strtr('Zend_DateObject_getDateParts_' . $timestamp.'_'.(int)$fast, '-','_');$/;"	v
id	library\Zend\Date\DateObject.php	/^            $id = strtr('Zend_DateObject_mkTime_' . $this->_offset . '_' . $year.$month.$day.'_'.$hour.$minute.$second . '_'.(int)$gmt, '-','_');$/;"	v
idstamp	library\Zend\Date\DateObject.php	/^            $idstamp = strtr('Zend_DateObject_date_' . $this->_offset . '_'. $timestamp . '_'.(int)$gmt, '-','_');$/;"	v
jump	library\Zend\Date\DateObject.php	/^                $jump = true;$/;"	v
jump	library\Zend\Date\DateObject.php	/^        $jump      = false;$/;"	v
leapyear	library\Zend\Date\DateObject.php	/^                $leapyear = self::isYearLeapYear($count);$/;"	v
leapyear	library\Zend\Date\DateObject.php	/^                $leapyear = self::isYearLeapYear($i);$/;"	v
length	library\Zend\Date\DateObject.php	/^        $length = strlen($format);$/;"	v
localTime	library\Zend\Date\DateObject.php	/^        $localTime     = $solHorizon + $solAscension - 0.0172028 * $radDay - 1.73364;$/;"	v
min	library\Zend\Date\DateObject.php	/^        $min  = intval($universalTime);$/;"	v
minutes	library\Zend\Date\DateObject.php	/^        $minutes = floor($timestamp \/ 60);$/;"	v
month	library\Zend\Date\DateObject.php	/^                    $month  = $i;$/;"	v
month	library\Zend\Date\DateObject.php	/^            $month     = 12;$/;"	v
month	library\Zend\Date\DateObject.php	/^        $month = 0;$/;"	v
month	library\Zend\Date\DateObject.php	/^        $month = intval($month);$/;"	v
numberdays	library\Zend\Date\DateObject.php	/^            $numberdays = $numday + ceil(($timestamp + 1) \/ 86400);$/;"	v
numberdays	library\Zend\Date\DateObject.php	/^            $numberdays = ceil(($timestamp + 1) \/ 86400);$/;"	v
numday	library\Zend\Date\DateObject.php	/^                    $numday = self::$_monthTable[$i];$/;"	v
numday	library\Zend\Date\DateObject.php	/^        $numday = 0;$/;"	v
offset	library\Zend\Date\DateObject.php	/^            $offset = $this->mktime($date['hours'], $date['minutes'], $date['seconds'],$/;"	v
old	library\Zend\Date\DateObject.php	/^        $old = $this->_unixTimestamp;$/;"	v
oldzone	library\Zend\Date\DateObject.php	/^            $oldzone = @date_default_timezone_get();$/;"	v
oldzone	library\Zend\Date\DateObject.php	/^        $oldzone = @date_default_timezone_get();$/;"	v
origstamp	library\Zend\Date\DateObject.php	/^        $origstamp = $timestamp;$/;"	v
otimestamp	library\Zend\Date\DateObject.php	/^        $otimestamp = $timestamp;$/;"	v
output	library\Zend\Date\DateObject.php	/^                    $output = $output . substr($gmtstr, 0, 3) . ':' . substr($gmtstr, 3);$/;"	v
output	library\Zend\Date\DateObject.php	/^        $output = '';$/;"	v
overlap	library\Zend\Date\DateObject.php	/^            $overlap = ceil((1 - $month) \/ 12);$/;"	v
overlap	library\Zend\Date\DateObject.php	/^            $overlap = floor($month \/ 12);$/;"	v
quarterCircle	library\Zend\Date\DateObject.php	/^        $quarterCircle      = 0.5 * M_PI;$/;"	v
radDay	library\Zend\Date\DateObject.php	/^        $radDay        = $this->date('z',$this->_unixTimestamp) + ($tmpRise - $radLongitude) \/ $fullCircle;$/;"	v
radLatitude	library\Zend\Date\DateObject.php	/^        $radLatitude  = $location['latitude']   * $halfCircle \/ 180;$/;"	v
radLongitude	library\Zend\Date\DateObject.php	/^        $radLongitude = $location['longitude']  * $halfCircle \/ 180;$/;"	v
result	library\Zend\Date\DateObject.php	/^            $result = ($gmt) ? @gmdate($format) : @date($format);$/;"	v
result	library\Zend\Date\DateObject.php	/^            $result = ($gmt) ? @gmdate($format, $timestamp) : @date($format, $timestamp);$/;"	v
result	library\Zend\Date\DateObject.php	/^            $result = ($gmt) ? @gmmktime($hour, $minute, $second, $month, $day, $year)$/;"	v
result	library\Zend\Date\DateObject.php	/^        $result = @date_default_timezone_set($this->_timezone);$/;"	v
result	library\Zend\Date\DateObject.php	/^        $result = @date_default_timezone_set($zone);$/;"	v
sec	library\Zend\Date\DateObject.php	/^                $sec = $seconds;$/;"	v
sec	library\Zend\Date\DateObject.php	/^            $sec = 0;$/;"	v
sec	library\Zend\Date\DateObject.php	/^        $sec  = intval($universalTime);$/;"	v
seconds	library\Zend\Date\DateObject.php	/^        $seconds = $timestamp - $minutes * 60;$/;"	v
secondsPerYear	library\Zend\Date\DateObject.php	/^            $secondsPerYear = $day;$/;"	v
secondsPerYear	library\Zend\Date\DateObject.php	/^            $secondsPerYear = 86400 * ($leapyear ? 366 : 365) + $day;$/;"	v
solAnomoly	library\Zend\Date\DateObject.php	/^        $solAnomoly    = $radDay * 0.017202 - 0.0574039;$/;"	v
solAscension	library\Zend\Date\DateObject.php	/^        $solAscension = atan2(0.91746 * $solAscension, 1);$/;"	v
solAscension	library\Zend\Date\DateObject.php	/^        $solAscension = sin($solLongitude) \/ cos($solLongitude);$/;"	v
solDeclination	library\Zend\Date\DateObject.php	/^        $solDeclination  = 0.39782 * sin($solLongitude);$/;"	v
solDeclination	library\Zend\Date\DateObject.php	/^        $solDeclination  = atan2($solDeclination, 1);$/;"	v
solHorizon	library\Zend\Date\DateObject.php	/^            $solHorizon = $fullCircle - $solHorizon;$/;"	v
solHorizon	library\Zend\Date\DateObject.php	/^        $solHorizon  = $quarterCircle - atan2($solHorizon, 1);$/;"	v
solHorizon	library\Zend\Date\DateObject.php	/^        $solHorizon = $horizon - sin($solDeclination) * sin($radLatitude);$/;"	v
solLongitude	library\Zend\Date\DateObject.php	/^        $solLongitude  = $solAnomoly + 0.0334405 * sin($solAnomoly);$/;"	v
solLongitude	library\Zend\Date\DateObject.php	/^        $solLongitude = $this->_range($solLongitude, $fullCircle);$/;"	v
temp	library\Zend\Date\DateObject.php	/^                $temp       = date('Z', $tempstamp);$/;"	v
tempstamp	library\Zend\Date\DateObject.php	/^            $tempstamp = $timestamp;$/;"	v
threeQuarterCircle	library\Zend\Date\DateObject.php	/^        $threeQuarterCircle = 1.5 * M_PI;$/;"	v
timestamp	library\Zend\Date\DateObject.php	/^                $timestamp = unserialize($result2);$/;"	v
timestamp	library\Zend\Date\DateObject.php	/^            $timestamp  = $day;$/;"	v
timestamp	library\Zend\Date\DateObject.php	/^            $timestamp  = $timestamp - ($numberdays - 1) * 86400;$/;"	v
timestamp	library\Zend\Date\DateObject.php	/^            $timestamp = $day;$/;"	v
tmpRise	library\Zend\Date\DateObject.php	/^        $tmpRise       = $rise ? $quarterCircle : $threeQuarterCircle;$/;"	v
universalTime	library\Zend\Date\DateObject.php	/^        $universalTime    = ($universalTime - $hour) * 60;$/;"	v
universalTime	library\Zend\Date\DateObject.php	/^        $universalTime    = ($universalTime - $min) * 60;$/;"	v
universalTime	library\Zend\Date\DateObject.php	/^        $universalTime = $localTime - $radLongitude;$/;"	v
universalTime	library\Zend\Date\DateObject.php	/^        $universalTime = $this->_range($universalTime, $fullCircle);$/;"	v
week	library\Zend\Date\DateObject.php	/^                    $week = $this->weekNumber($date['year'], $date['mon'], $date['mday']);$/;"	v
year	library\Zend\Date\DateObject.php	/^                    $year = $i;$/;"	v
year	library\Zend\Date\DateObject.php	/^        $year  = intval($year);$/;"	v
zone	library\Zend\Date\DateObject.php	/^            $zone = $oldzone;$/;"	v
zone	library\Zend\Date\DateObject.php	/^        $zone   = @date_default_timezone_get();$/;"	v
Zend_Date_Exception	library\Zend\Date\Exception.php	/^class Zend_Date_Exception extends Zend_Exception$/;"	c
Zend_Db	library\Zend\Db.php	/^class Zend_Db$/;"	c
adapter	library\Zend\Db.php	/^                $adapter = (string) $adapter->adapter;$/;"	v
adapter	library\Zend\Db.php	/^                $adapter = null;$/;"	v
adapterName	library\Zend\Db.php	/^        $adapterName = $adapterNamespace . '_';$/;"	v
adapterNamespace	library\Zend\Db.php	/^                $adapterNamespace = $config['adapterNamespace'];$/;"	v
adapterNamespace	library\Zend\Db.php	/^        $adapterNamespace = 'Zend_Db_Adapter';$/;"	v
config	library\Zend\Db.php	/^                $config = $adapter->params->toArray();$/;"	v
config	library\Zend\Db.php	/^            $config = $config->toArray();$/;"	v
dbAdapter	library\Zend\Db.php	/^        $dbAdapter = new $adapterName($config);$/;"	v
alias	library\Zend\Db\Adapter\Abstract.php	/^                    $alias = null;$/;"	v
bind	library\Zend\Db\Adapter\Abstract.php	/^                $bind = $sql->getBind();$/;"	v
bind	library\Zend\Db\Adapter\Abstract.php	/^            $bind = array($bind);$/;"	v
bind	library\Zend\Db\Adapter\Abstract.php	/^            $bind = array_values($bind);$/;"	v
case	library\Zend\Db\Adapter\Abstract.php	/^            $case = (int) $options[Zend_Db::CASE_FOLDING];$/;"	v
cols	library\Zend\Db\Adapter\Abstract.php	/^        $cols = array();$/;"	v
config	library\Zend\Db\Adapter\Abstract.php	/^                $config = $config->toArray();$/;"	v
constant	library\Zend\Db\Adapter\Abstract.php	/^                $constant = 'Zend_Db::FETCH_' . strtoupper($options[Zend_Db::FETCH_MODE]);$/;"	v
data	library\Zend\Db\Adapter\Abstract.php	/^        $data = array();$/;"	v
driverOptions	library\Zend\Db\Adapter\Abstract.php	/^        $driverOptions = array();$/;"	v
enabled	library\Zend\Db\Adapter\Abstract.php	/^                $enabled = (bool) $profiler['enabled'];$/;"	v
enabled	library\Zend\Db\Adapter\Abstract.php	/^            $enabled = (bool) $profiler;$/;"	v
enabled	library\Zend\Db\Adapter\Abstract.php	/^        $enabled          = null;$/;"	v
fetchMode	library\Zend\Db\Adapter\Abstract.php	/^            $fetchMode = $this->_fetchMode;$/;"	v
i	library\Zend\Db\Adapter\Abstract.php	/^        $i = 0;$/;"	v
ident	library\Zend\Db\Adapter\Abstract.php	/^                $ident = explode('.', $ident);$/;"	v
options	library\Zend\Db\Adapter\Abstract.php	/^        $options = array($/;"	v
profiler	library\Zend\Db\Adapter\Abstract.php	/^                $profiler = $profiler->toArray();$/;"	v
profiler	library\Zend\Db\Adapter\Abstract.php	/^            $profiler = $this->_config[Zend_Db::PROFILER];$/;"	v
profiler	library\Zend\Db\Adapter\Abstract.php	/^        $profiler = false;$/;"	v
profilerClass	library\Zend\Db\Adapter\Abstract.php	/^                $profilerClass = $profiler['class'];$/;"	v
profilerClass	library\Zend\Db\Adapter\Abstract.php	/^        $profilerClass    = $this->_defaultProfilerClass;$/;"	v
profilerInstance	library\Zend\Db\Adapter\Abstract.php	/^                $profilerInstance = $profiler;$/;"	v
profilerInstance	library\Zend\Db\Adapter\Abstract.php	/^                $profilerInstance = $profiler['instance'];$/;"	v
profilerInstance	library\Zend\Db\Adapter\Abstract.php	/^            $profilerInstance = new $profilerClass();$/;"	v
profilerInstance	library\Zend\Db\Adapter\Abstract.php	/^        $profilerInstance = null;$/;"	v
q	library\Zend\Db\Adapter\Abstract.php	/^            $q = $this->getQuoteIdentifierSymbol();$/;"	v
q	library\Zend\Db\Adapter\Abstract.php	/^        $q = $this->_profiler->queryStart('begin', Zend_Db_Profiler::TRANSACTION);$/;"	v
q	library\Zend\Db\Adapter\Abstract.php	/^        $q = $this->_profiler->queryStart('commit', Zend_Db_Profiler::TRANSACTION);$/;"	v
q	library\Zend\Db\Adapter\Abstract.php	/^        $q = $this->_profiler->queryStart('rollback', Zend_Db_Profiler::TRANSACTION);$/;"	v
quoted	library\Zend\Db\Adapter\Abstract.php	/^                $quoted = $this->_quoteIdentifier($ident, $auto);$/;"	v
quoted	library\Zend\Db\Adapter\Abstract.php	/^                $quoted = implode('.', $segments);$/;"	v
quoted	library\Zend\Db\Adapter\Abstract.php	/^            $quoted = $ident->__toString();$/;"	v
quoted	library\Zend\Db\Adapter\Abstract.php	/^            $quoted = '(' . $ident->assemble() . ')';$/;"	v
quotedValue	library\Zend\Db\Adapter\Abstract.php	/^                        $quotedValue = $matches[1];$/;"	v
quotedValue	library\Zend\Db\Adapter\Abstract.php	/^                    $quotedValue = (string) intval($value);$/;"	v
quotedValue	library\Zend\Db\Adapter\Abstract.php	/^                    $quotedValue = sprintf('%F', $value);$/;"	v
quotedValue	library\Zend\Db\Adapter\Abstract.php	/^            $quotedValue = '0';$/;"	v
result	library\Zend\Db\Adapter\Abstract.php	/^        $result = $stmt->fetch($fetchMode);$/;"	v
result	library\Zend\Db\Adapter\Abstract.php	/^        $result = $stmt->fetchAll($fetchMode);$/;"	v
result	library\Zend\Db\Adapter\Abstract.php	/^        $result = $stmt->fetchAll(Zend_Db::FETCH_COLUMN, 0);$/;"	v
result	library\Zend\Db\Adapter\Abstract.php	/^        $result = $stmt->fetchColumn(0);$/;"	v
result	library\Zend\Db\Adapter\Abstract.php	/^        $result = $stmt->rowCount();$/;"	v
segments	library\Zend\Db\Adapter\Abstract.php	/^                $segments = array();$/;"	v
set	library\Zend\Db\Adapter\Abstract.php	/^        $set = array();$/;"	v
sql	library\Zend\Db\Adapter\Abstract.php	/^            $sql = $sql->assemble();$/;"	v
sql	library\Zend\Db\Adapter\Abstract.php	/^        $sql = "DELETE FROM "$/;"	v
sql	library\Zend\Db\Adapter\Abstract.php	/^        $sql = "INSERT INTO "$/;"	v
sql	library\Zend\Db\Adapter\Abstract.php	/^        $sql = "UPDATE "$/;"	v
stmt	library\Zend\Db\Adapter\Abstract.php	/^            $stmt = $this->query($sql, $bind);$/;"	v
stmt	library\Zend\Db\Adapter\Abstract.php	/^            $stmt = $this->query($sql, array_values($bind));$/;"	v
stmt	library\Zend\Db\Adapter\Abstract.php	/^        $stmt = $this->prepare($sql);$/;"	v
stmt	library\Zend\Db\Adapter\Abstract.php	/^        $stmt = $this->query($sql);$/;"	v
stmt	library\Zend\Db\Adapter\Abstract.php	/^        $stmt = $this->query($sql, $bind);$/;"	v
term	library\Zend\Db\Adapter\Abstract.php	/^                    $term = $term->__toString();$/;"	v
term	library\Zend\Db\Adapter\Abstract.php	/^                $term = $this->quoteInto($cond, $term);$/;"	v
term	library\Zend\Db\Adapter\Abstract.php	/^            $term = '(' . $term . ')';$/;"	v
text	library\Zend\Db\Adapter\Abstract.php	/^                    $text = substr_replace($text, $this->quote($value, $type), strpos($text, '?'), 1);$/;"	v
tmp	library\Zend\Db\Adapter\Abstract.php	/^            $tmp = array_values(array_slice($row, 0, 1));$/;"	v
val	library\Zend\Db\Adapter\Abstract.php	/^                        $val = ':col'.$i;$/;"	v
val	library\Zend\Db\Adapter\Abstract.php	/^                    $val = '?';$/;"	v
val	library\Zend\Db\Adapter\Abstract.php	/^                $val = $this->quote($val, $type);$/;"	v
val	library\Zend\Db\Adapter\Abstract.php	/^                $val = $val->__toString();$/;"	v
vals	library\Zend\Db\Adapter\Abstract.php	/^        $vals = array();$/;"	v
value	library\Zend\Db\Adapter\Abstract.php	/^                $value = (string) $key;$/;"	v
value	library\Zend\Db\Adapter\Abstract.php	/^                $value = strtolower((string) $key);$/;"	v
value	library\Zend\Db\Adapter\Abstract.php	/^                $value = strtoupper((string) $key);$/;"	v
where	library\Zend\Db\Adapter\Abstract.php	/^            $where = array($where);$/;"	v
where	library\Zend\Db\Adapter\Abstract.php	/^        $where = $this->_whereExpr($where);$/;"	v
where	library\Zend\Db\Adapter\Abstract.php	/^        $where = implode(' AND ', $where);$/;"	v
Zend_Db_Adapter_Db2	library\Zend\Db\Adapter\Db2.php	/^class Zend_Db_Adapter_Db2 extends Zend_Db_Adapter_Abstract$/;"	c
caseAttrMap	library\Zend\Db\Adapter\Db2.php	/^            $caseAttrMap = array($/;"	v
colname	library\Zend\Db\Adapter\Db2.php	/^        $colname        = 2;$/;"	v
colno	library\Zend\Db\Adapter\Db2.php	/^        $colno          = 3;$/;"	v
colseq	library\Zend\Db\Adapter\Db2.php	/^        $colseq         = 11;$/;"	v
conn_func_name	library\Zend\Db\Adapter\Db2.php	/^            $conn_func_name = 'db2_connect';$/;"	v
conn_func_name	library\Zend\Db\Adapter\Db2.php	/^            $conn_func_name = 'db2_pconnect';$/;"	v
count	library\Zend\Db\Adapter\Db2.php	/^        $count = intval($count);$/;"	v
dbname	library\Zend\Db\Adapter\Db2.php	/^            $dbname = 'DRIVER={IBM DB2 ODBC DRIVER}' .$/;"	v
default	library\Zend\Db\Adapter\Db2.php	/^        $default        = 5;$/;"	v
desc	library\Zend\Db\Adapter\Db2.php	/^        $desc = array();$/;"	v
identQuote	library\Zend\Db\Adapter\Db2.php	/^                $identQuote ="'";$/;"	v
identQuote	library\Zend\Db\Adapter\Db2.php	/^            $identQuote = $info->IDENTIFIER_QUOTE_CHAR;$/;"	v
identity	library\Zend\Db\Adapter\Db2.php	/^                $identity = true;$/;"	v
identityCol	library\Zend\Db\Adapter\Db2.php	/^        $identityCol    = 9;$/;"	v
info	library\Zend\Db\Adapter\Db2.php	/^        $info = db2_server_info($this->_connection);$/;"	v
length	library\Zend\Db\Adapter\Db2.php	/^        $length         = 7;$/;"	v
limit_sql	library\Zend\Db\Adapter\Db2.php	/^            $limit_sql = $sql . " FETCH FIRST $count ROWS ONLY";$/;"	v
limit_sql	library\Zend\Db\Adapter\Db2.php	/^        $limit_sql = "SELECT z2.*$/;"	v
nulls	library\Zend\Db\Adapter\Db2.php	/^        $nulls          = 6;$/;"	v
offset	library\Zend\Db\Adapter\Db2.php	/^        $offset = intval($offset);$/;"	v
primary	library\Zend\Db\Adapter\Db2.php	/^                $primary = true;$/;"	v
primaryPosition	library\Zend\Db\Adapter\Db2.php	/^                $primaryPosition = $row[$colseq];$/;"	v
quotedSequenceName	library\Zend\Db\Adapter\Db2.php	/^            $quotedSequenceName = $sequenceName;$/;"	v
quotedSequenceName	library\Zend\Db\Adapter\Db2.php	/^            $quotedSequenceName = $this->quoteIdentifier($sequenceName, true);$/;"	v
result	library\Zend\Db\Adapter\Db2.php	/^        $result = $stmt->fetchAll(Zend_Db::FETCH_NUM);$/;"	v
scale	library\Zend\Db\Adapter\Db2.php	/^        $scale          = 8;$/;"	v
schema	library\Zend\Db\Adapter\Db2.php	/^            $schema = $this->_config['schema'];$/;"	v
schemaName	library\Zend\Db\Adapter\Db2.php	/^            $schemaName = $this->_config['schema'];$/;"	v
schemaStatement	library\Zend\Db\Adapter\Db2.php	/^            $schemaStatement = db2_tables($this->_connection);$/;"	v
sequenceName	library\Zend\Db\Adapter\Db2.php	/^            $sequenceName = $objectName;$/;"	v
sequenceName	library\Zend\Db\Adapter\Db2.php	/^            $sequenceName = $tableName;$/;"	v
server_info	library\Zend\Db\Adapter\Db2.php	/^        $server_info = db2_server_info($this->_connection);$/;"	v
sql	library\Zend\Db\Adapter\Db2.php	/^            $sql = "SELECT DISTINCT C.TABLE_SCHEMA, C.TABLE_NAME, C.COLUMN_NAME, C.ORDINAL_POSITION,$/;"	v
sql	library\Zend\Db\Adapter\Db2.php	/^            $sql = "SELECT DISTINCT c.tabschema, c.tabname, c.colname, c.colno,$/;"	v
sql	library\Zend\Db\Adapter\Db2.php	/^            $sql = 'SELECT IDENTITY_VAL_LOCAL() AS VAL FROM QSYS2.QSQPTABL';$/;"	v
sql	library\Zend\Db\Adapter\Db2.php	/^            $sql = 'SELECT PREVVAL FOR ' . $quotedSequenceName . ' AS VAL FROM SYSIBM.SYSDUMMY1';$/;"	v
sql	library\Zend\Db\Adapter\Db2.php	/^            $sql = 'SELECT PREVVAL FOR ' . $this->quoteIdentifier($sequenceName, true) . ' AS VAL FROM QSYS2.QSQPTABL';$/;"	v
sql	library\Zend\Db\Adapter\Db2.php	/^        $sql = 'SELECT IDENTITY_VAL_LOCAL() AS VAL FROM SYSIBM.SYSDUMMY1';$/;"	v
sql	library\Zend\Db\Adapter\Db2.php	/^        $sql = 'SELECT NEXTVAL FOR '.$this->quoteIdentifier($sequenceName, true).' AS VAL FROM SYSIBM.SYSDUMMY1';$/;"	v
stmt	library\Zend\Db\Adapter\Db2.php	/^                $stmt = db2_tables($this->_connection);$/;"	v
stmt	library\Zend\Db\Adapter\Db2.php	/^                $stmt = db2_tables($this->_connection, null, $schema);$/;"	v
stmt	library\Zend\Db\Adapter\Db2.php	/^        $stmt = $this->query($sql);$/;"	v
stmt	library\Zend\Db\Adapter\Db2.php	/^        $stmt = new $stmtClass($this, $sql);$/;"	v
stmtClass	library\Zend\Db\Adapter\Db2.php	/^        $stmtClass = $this->_defaultStmtClass;$/;"	v
tabconstType	library\Zend\Db\Adapter\Db2.php	/^        $tabconstType   = 10;$/;"	v
tableName	library\Zend\Db\Adapter\Db2.php	/^        $tableName = $objectName;$/;"	v
tables	library\Zend\Db\Adapter\Db2.php	/^            $tables = $this->_i5listTables($schema);$/;"	v
tables	library\Zend\Db\Adapter\Db2.php	/^        $tables = array();$/;"	v
tablesStatement	library\Zend\Db\Adapter\Db2.php	/^                    $tablesStatement = db2_tables($this->_connection, NULL, $schema['TABLE_SCHEM']);$/;"	v
tablesStatement	library\Zend\Db\Adapter\Db2.php	/^            $tablesStatement = db2_tables($this->_connection, null, $schema);$/;"	v
tabname	library\Zend\Db\Adapter\Db2.php	/^        $tabname        = 1;$/;"	v
tabschema	library\Zend\Db\Adapter\Db2.php	/^        $tabschema      = 0;$/;"	v
typename	library\Zend\Db\Adapter\Db2.php	/^        $typename       = 4;$/;"	v
value	library\Zend\Db\Adapter\Db2.php	/^            $value = $this->fetchOne($sql);$/;"	v
value	library\Zend\Db\Adapter\Db2.php	/^        $value = $this->fetchOne($sql);$/;"	v
version	library\Zend\Db\Adapter\Db2.php	/^                $version = (int) substr($version, 0, 2) . '.' . (int) substr($version, 2, 2) . '.' . (int) substr($version, 4);$/;"	v
version	library\Zend\Db\Adapter\Db2.php	/^            $version = $server_info->DBMS_VER;$/;"	v
Zend_Db_Adapter_Db2_Exception	library\Zend\Db\Adapter\Db2\Exception.php	/^class Zend_Db_Adapter_Db2_Exception extends Zend_Db_Adapter_Exception$/;"	c
__construct	library\Zend\Db\Adapter\Db2\Exception.php	/^   function __construct($message = 'unknown exception', $code = '00000', Exception $e = null)$/;"	f
Zend_Db_Adapter_Exception	library\Zend\Db\Adapter\Exception.php	/^class Zend_Db_Adapter_Exception extends Zend_Db_Exception$/;"	c
code	library\Zend\Db\Adapter\Exception.php	/^            $code = $e->getCode();$/;"	v
Zend_Db_Adapter_Mysqli	library\Zend\Db\Adapter\Mysqli.php	/^class Zend_Db_Adapter_Mysqli extends Zend_Db_Adapter_Abstract$/;"	c
_isConnected	library\Zend\Db\Adapter\Mysqli.php	/^        $_isConnected = @mysqli_real_connect($/;"	v
count	library\Zend\Db\Adapter\Mysqli.php	/^        $count = intval($count);$/;"	v
desc	library\Zend\Db\Adapter\Mysqli.php	/^        $desc = array();$/;"	v
i	library\Zend\Db\Adapter\Mysqli.php	/^        $i = 1;$/;"	v
major	library\Zend\Db\Adapter\Mysqli.php	/^        $major = (int) ($version \/ 10000);$/;"	v
minor	library\Zend\Db\Adapter\Mysqli.php	/^        $minor = (int) ($version % 10000 \/ 100);$/;"	v
mysqli	library\Zend\Db\Adapter\Mysqli.php	/^        $mysqli = $this->_connection;$/;"	v
offset	library\Zend\Db\Adapter\Mysqli.php	/^        $offset = intval($offset);$/;"	v
option	library\Zend\Db\Adapter\Mysqli.php	/^                    $option = @constant(strtoupper($option));$/;"	v
p	library\Zend\Db\Adapter\Mysqli.php	/^        $p = 1;$/;"	v
port	library\Zend\Db\Adapter\Mysqli.php	/^            $port = (integer) $this->_config['port'];$/;"	v
port	library\Zend\Db\Adapter\Mysqli.php	/^            $port = null;$/;"	v
result	library\Zend\Db\Adapter\Mysqli.php	/^        $result = array();$/;"	v
revision	library\Zend\Db\Adapter\Mysqli.php	/^        $revision = (int) ($version % 100);$/;"	v
row	library\Zend\Db\Adapter\Mysqli.php	/^            $row = array_merge($row_defaults, $row);$/;"	v
row_defaults	library\Zend\Db\Adapter\Mysqli.php	/^        $row_defaults = array($/;"	v
sql	library\Zend\Db\Adapter\Mysqli.php	/^            $sql = 'DESCRIBE ' . $this->quoteIdentifier("$schemaName.$tableName", true);$/;"	v
sql	library\Zend\Db\Adapter\Mysqli.php	/^            $sql = 'DESCRIBE ' . $this->quoteIdentifier($tableName, true);$/;"	v
sql	library\Zend\Db\Adapter\Mysqli.php	/^        $sql = 'SHOW TABLES';$/;"	v
stmt	library\Zend\Db\Adapter\Mysqli.php	/^        $stmt = new $stmtClass($this, $sql);$/;"	v
stmtClass	library\Zend\Db\Adapter\Mysqli.php	/^        $stmtClass = $this->_defaultStmtClass;$/;"	v
version	library\Zend\Db\Adapter\Mysqli.php	/^        $version = $this->_connection->server_version;$/;"	v
Zend_Db_Adapter_Mysqli_Exception	library\Zend\Db\Adapter\Mysqli\Exception.php	/^class Zend_Db_Adapter_Mysqli_Exception extends Zend_Db_Adapter_Exception$/;"	c
Zend_Db_Adapter_Oracle	library\Zend\Db\Adapter\Oracle.php	/^class Zend_Db_Adapter_Oracle extends Zend_Db_Adapter_Abstract$/;"	c
column_id	library\Zend\Db\Adapter\Oracle.php	/^        $column_id       = 6;$/;"	v
column_name	library\Zend\Db\Adapter\Oracle.php	/^        $column_name     = 2;$/;"	v
connectionFuncName	library\Zend\Db\Adapter\Oracle.php	/^        $connectionFuncName = ($this->_config['persistent'] == true) ? 'oci_pconnect' : 'oci_connect';$/;"	v
constraint_type	library\Zend\Db\Adapter\Oracle.php	/^        $constraint_type = 10;$/;"	v
count	library\Zend\Db\Adapter\Oracle.php	/^        $count = intval($count);$/;"	v
data	library\Zend\Db\Adapter\Oracle.php	/^        $data = $this->fetchCol('SELECT table_name FROM all_tables');$/;"	v
data_default	library\Zend\Db\Adapter\Oracle.php	/^        $data_default    = 4;$/;"	v
data_length	library\Zend\Db\Adapter\Oracle.php	/^        $data_length     = 7;$/;"	v
data_precision	library\Zend\Db\Adapter\Oracle.php	/^        $data_precision  = 9;$/;"	v
data_scale	library\Zend\Db\Adapter\Oracle.php	/^        $data_scale      = 8;$/;"	v
data_type	library\Zend\Db\Adapter\Oracle.php	/^        $data_type       = 3;$/;"	v
desc	library\Zend\Db\Adapter\Oracle.php	/^        $desc = array();$/;"	v
identity	library\Zend\Db\Adapter\Oracle.php	/^                $identity = false;$/;"	v
limit_sql	library\Zend\Db\Adapter\Oracle.php	/^        $limit_sql = "SELECT z2.*$/;"	v
matches	library\Zend\Db\Adapter\Oracle.php	/^            $matches = null;$/;"	v
nullable	library\Zend\Db\Adapter\Oracle.php	/^        $nullable        = 5;$/;"	v
offset	library\Zend\Db\Adapter\Oracle.php	/^        $offset = intval($offset);$/;"	v
owner	library\Zend\Db\Adapter\Oracle.php	/^        $owner           = 1;$/;"	v
position	library\Zend\Db\Adapter\Oracle.php	/^        $position        = 11;$/;"	v
primary	library\Zend\Db\Adapter\Oracle.php	/^                $primary = true;$/;"	v
primaryPosition	library\Zend\Db\Adapter\Oracle.php	/^                $primaryPosition = $row[$position];$/;"	v
result	library\Zend\Db\Adapter\Oracle.php	/^        $result = $stmt->fetchAll(Zend_Db::FETCH_NUM);$/;"	v
sequenceName	library\Zend\Db\Adapter\Oracle.php	/^            $sequenceName = $tableName;$/;"	v
sql	library\Zend\Db\Adapter\Oracle.php	/^            $sql = "SELECT TC.TABLE_NAME, TC.OWNER, TC.COLUMN_NAME, TC.DATA_TYPE,$/;"	v
sql	library\Zend\Db\Adapter\Oracle.php	/^            $sql="SELECT TC.TABLE_NAME, TC.OWNER, TC.COLUMN_NAME, TC.DATA_TYPE,$/;"	v
sql	library\Zend\Db\Adapter\Oracle.php	/^        $sql = 'SELECT '.$this->quoteIdentifier($sequenceName, true).'.CURRVAL FROM dual';$/;"	v
sql	library\Zend\Db\Adapter\Oracle.php	/^        $sql = 'SELECT '.$this->quoteIdentifier($sequenceName, true).'.NEXTVAL FROM dual';$/;"	v
stmt	library\Zend\Db\Adapter\Oracle.php	/^        $stmt = $this->query($sql, $bind);$/;"	v
stmt	library\Zend\Db\Adapter\Oracle.php	/^        $stmt = new $stmtClass($this, $sql);$/;"	v
stmtClass	library\Zend\Db\Adapter\Oracle.php	/^        $stmtClass = $this->_defaultStmtClass;$/;"	v
subSql	library\Zend\Db\Adapter\Oracle.php	/^            $subSql="SELECT AC.OWNER, AC.TABLE_NAME, ACC.COLUMN_NAME, AC.CONSTRAINT_TYPE, ACC.POSITION$/;"	v
table_name	library\Zend\Db\Adapter\Oracle.php	/^        $table_name      = 0;$/;"	v
value	library\Zend\Db\Adapter\Oracle.php	/^        $value = $this->fetchOne($sql);$/;"	v
value	library\Zend\Db\Adapter\Oracle.php	/^        $value = str_replace("'", "''", $value);$/;"	v
version	library\Zend\Db\Adapter\Oracle.php	/^        $version = $this->getServerVersion();$/;"	v
version	library\Zend\Db\Adapter\Oracle.php	/^        $version = oci_server_version($this->_connection);$/;"	v
Zend_Db_Adapter_Oracle_Exception	library\Zend\Db\Adapter\Oracle\Exception.php	/^class Zend_Db_Adapter_Oracle_Exception extends Zend_Db_Adapter_Exception$/;"	c
__construct	library\Zend\Db\Adapter\Oracle\Exception.php	/^   function __construct($error = null, $code = 0) {$/;"	f
affected	library\Zend\Db\Adapter\Pdo\Abstract.php	/^            $affected = $this->getConnection()->exec($sql);$/;"	v
bind	library\Zend\Db\Adapter\Pdo\Abstract.php	/^            $bind = $sql->getBind();$/;"	v
dsn	library\Zend\Db\Adapter\Pdo\Abstract.php	/^        $dsn = $this->_config;$/;"	v
dsn	library\Zend\Db\Adapter\Pdo\Abstract.php	/^        $dsn = $this->_dsn();$/;"	v
errorInfo	library\Zend\Db\Adapter\Pdo\Abstract.php	/^                $errorInfo = $this->getConnection()->errorInfo();$/;"	v
matches	library\Zend\Db\Adapter\Pdo\Abstract.php	/^        $matches = null;$/;"	v
newName	library\Zend\Db\Adapter\Pdo\Abstract.php	/^                    $newName = ":$name";$/;"	v
q	library\Zend\Db\Adapter\Pdo\Abstract.php	/^        $q = $this->_profiler->queryStart('connect', Zend_Db_Profiler::CONNECT);$/;"	v
sql	library\Zend\Db\Adapter\Pdo\Abstract.php	/^            $sql = $sql->assemble();$/;"	v
stmt	library\Zend\Db\Adapter\Pdo\Abstract.php	/^        $stmt = new $stmtClass($this, $sql);$/;"	v
stmtClass	library\Zend\Db\Adapter\Pdo\Abstract.php	/^        $stmtClass = $this->_defaultStmtClass;$/;"	v
version	library\Zend\Db\Adapter\Pdo\Abstract.php	/^            $version = $this->_connection->getAttribute(PDO::ATTR_SERVER_VERSION);$/;"	v
Zend_Db_Adapter_Pdo_Ibm	library\Zend\Db\Adapter\Pdo\Ibm.php	/^class Zend_Db_Adapter_Pdo_Ibm extends Zend_Db_Adapter_Pdo_Abstract$/;"	c
dsn	library\Zend\Db\Adapter\Pdo\Ibm.php	/^            $dsn = $this->_config['dbname'];$/;"	v
dsn	library\Zend\Db\Adapter\Pdo\Ibm.php	/^            $dsn = ';DATABASE=' . $this->_config['dbname']$/;"	v
error	library\Zend\Db\Adapter\Pdo\Ibm.php	/^            $error = strpos($e->getMessage(), 'driver does not support that attribute');$/;"	v
id	library\Zend\Db\Adapter\Pdo\Ibm.php	/^        $id = $this->getConnection()->lastInsertId();$/;"	v
matches	library\Zend\Db\Adapter\Pdo\Ibm.php	/^                $matches = null;$/;"	v
newbind	library\Zend\Db\Adapter\Pdo\Ibm.php	/^        $newbind = array();$/;"	v
result	library\Zend\Db\Adapter\Pdo\Ibm.php	/^            $result = $stmt->fetchAll(Zend_Db::FETCH_NUM);$/;"	v
sequenceName	library\Zend\Db\Adapter\Pdo\Ibm.php	/^            $sequenceName = $tableName;$/;"	v
server	library\Zend\Db\Adapter\Pdo\Ibm.php	/^                $server = substr($this->getConnection()->getAttribute(PDO::ATTR_SERVER_INFO), 0, 3);$/;"	v
stmt	library\Zend\Db\Adapter\Pdo\Ibm.php	/^            $stmt = $this->query('SELECT service_level, fixpack_num FROM TABLE (sysproc.env_get_inst_info()) as INSTANCEINFO');$/;"	v
stmt	library\Zend\Db\Adapter\Pdo\Ibm.php	/^        $stmt = new $stmtClass($this, $sql);$/;"	v
stmtClass	library\Zend\Db\Adapter\Pdo\Ibm.php	/^        $stmtClass = $this->_defaultStmtClass;$/;"	v
Zend_Db_Adapter_Pdo_Ibm_Db2	library\Zend\Db\Adapter\Pdo\Ibm\Db2.php	/^class Zend_Db_Adapter_Pdo_Ibm_Db2$/;"	c
colname	library\Zend\Db\Adapter\Pdo\Ibm\Db2.php	/^        $colname        = 2;$/;"	v
colno	library\Zend\Db\Adapter\Pdo\Ibm\Db2.php	/^        $colno          = 3;$/;"	v
colseq	library\Zend\Db\Adapter\Pdo\Ibm\Db2.php	/^        $colseq         = 11;$/;"	v
count	library\Zend\Db\Adapter\Pdo\Ibm\Db2.php	/^        $count = intval($count);$/;"	v
default	library\Zend\Db\Adapter\Pdo\Ibm\Db2.php	/^        $default        = 5;$/;"	v
desc	library\Zend\Db\Adapter\Pdo\Ibm\Db2.php	/^        $desc = array();$/;"	v
identity	library\Zend\Db\Adapter\Pdo\Ibm\Db2.php	/^                $identity = true;$/;"	v
identityCol	library\Zend\Db\Adapter\Pdo\Ibm\Db2.php	/^        $identityCol    = 9;$/;"	v
length	library\Zend\Db\Adapter\Pdo\Ibm\Db2.php	/^        $length         = 7;$/;"	v
limit_sql	library\Zend\Db\Adapter\Pdo\Ibm\Db2.php	/^                $limit_sql = $sql . " FETCH FIRST $count ROWS ONLY";$/;"	v
limit_sql	library\Zend\Db\Adapter\Pdo\Ibm\Db2.php	/^            $limit_sql = "SELECT z2.*$/;"	v
nulls	library\Zend\Db\Adapter\Pdo\Ibm\Db2.php	/^        $nulls          = 6;$/;"	v
offset	library\Zend\Db\Adapter\Pdo\Ibm\Db2.php	/^            $offset = intval($offset);$/;"	v
primary	library\Zend\Db\Adapter\Pdo\Ibm\Db2.php	/^                $primary = true;$/;"	v
primaryPosition	library\Zend\Db\Adapter\Pdo\Ibm\Db2.php	/^                $primaryPosition = $row[$colseq];$/;"	v
result	library\Zend\Db\Adapter\Pdo\Ibm\Db2.php	/^        $result = $stmt->fetchAll(Zend_Db::FETCH_NUM);$/;"	v
scale	library\Zend\Db\Adapter\Pdo\Ibm\Db2.php	/^        $scale          = 8;$/;"	v
sql	library\Zend\Db\Adapter\Pdo\Ibm\Db2.php	/^        $sql = "SELECT DISTINCT c.tabschema, c.tabname, c.colname, c.colno,$/;"	v
sql	library\Zend\Db\Adapter\Pdo\Ibm\Db2.php	/^        $sql = "SELECT tabname "$/;"	v
sql	library\Zend\Db\Adapter\Pdo\Ibm\Db2.php	/^        $sql = 'SELECT NEXTVAL FOR '.$this->_adapter->quoteIdentifier($sequenceName).' AS VAL FROM SYSIBM.SYSDUMMY1';$/;"	v
sql	library\Zend\Db\Adapter\Pdo\Ibm\Db2.php	/^        $sql = 'SELECT PREVVAL FOR '.$this->_adapter->quoteIdentifier($sequenceName).' AS VAL FROM SYSIBM.SYSDUMMY1';$/;"	v
stmt	library\Zend\Db\Adapter\Pdo\Ibm\Db2.php	/^        $stmt = $this->_adapter->query($sql);$/;"	v
tabconstype	library\Zend\Db\Adapter\Pdo\Ibm\Db2.php	/^        $tabconstype    = 10;$/;"	v
tabname	library\Zend\Db\Adapter\Pdo\Ibm\Db2.php	/^        $tabname        = 1;$/;"	v
tabschema	library\Zend\Db\Adapter\Pdo\Ibm\Db2.php	/^        $tabschema      = 0;$/;"	v
typename	library\Zend\Db\Adapter\Pdo\Ibm\Db2.php	/^        $typename       = 4;$/;"	v
value	library\Zend\Db\Adapter\Pdo\Ibm\Db2.php	/^        $value = $this->_adapter->fetchOne($sql);$/;"	v
Zend_Db_Adapter_Pdo_Ibm_Ids	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^class Zend_Db_Adapter_Pdo_Ibm_Ids$/;"	c
colname	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^        $colname        = 2;$/;"	v
colno	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^        $colno          = 3;$/;"	v
cols	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^        $cols = array();$/;"	v
count	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^        $count = intval($count);$/;"	v
default	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^        $default        = 5;$/;"	v
desc	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^        $desc = array();$/;"	v
identity	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^                $identity = true;$/;"	v
identity	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^            $identity = false;$/;"	v
length	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^        $length         = 6;$/;"	v
limit_sql	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^                $limit_sql = str_ireplace("SELECT", "SELECT FIRST $count", $sql);$/;"	v
limit_sql	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^                $limit_sql = str_ireplace("SELECT", "SELECT SKIP $offset LIMIT $count", $sql);$/;"	v
limit_sql	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^              $limit_sql = str_ireplace("SELECT", "SELECT * FROM (SELECT", $sql);$/;"	v
offset	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^            $offset = intval($offset);$/;"	v
position	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^        $position = 0;$/;"	v
primary	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^                $primary = true;$/;"	v
primary	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^            $primary = false;$/;"	v
primaryCols	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^                $primaryCols = $this->_getPrimaryInfo($row[$tabid]);$/;"	v
primaryCols	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^        $primaryCols = null;$/;"	v
primaryPosition	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^                $primaryPosition = $primaryCols[$row[$colno]];$/;"	v
primaryPosition	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^            $primaryPosition = null;$/;"	v
result	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^        $result = $stmt->fetchAll(Zend_Db::FETCH_NUM);$/;"	v
results	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^        $results = $stmt->fetchAll();$/;"	v
row	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^            $row = $results[0];$/;"	v
sql	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^        $sql = "SELECT i.part1, i.part2, i.part3, i.part4, i.part5, i.part6,$/;"	v
sql	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^        $sql = "SELECT tabname "$/;"	v
sql	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^        $sql = 'SELECT '.$this->_adapter->quoteIdentifier($sequenceName).'.CURRVAL FROM '$/;"	v
sql	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^        $sql = 'SELECT '.$this->_adapter->quoteIdentifier($sequenceName).'.NEXTVAL FROM '$/;"	v
sql	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^        $sql= "SELECT DISTINCT t.owner, t.tabname, c.colname, c.colno, c.coltype,$/;"	v
stmt	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^        $stmt = $this->_adapter->query($sql);$/;"	v
tabid	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^        $tabid          = 7;$/;"	v
tabname	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^        $tabname        = 1;$/;"	v
tabschema	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^        $tabschema      = 0;$/;"	v
typeNo	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^            $typeNo = $typeNo - 256;$/;"	v
typemap	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^        $typemap = array($/;"	v
typename	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^        $typename       = 4;$/;"	v
value	library\Zend\Db\Adapter\Pdo\Ibm\Ids.php	/^        $value = $this->_adapter->fetchOne($sql);$/;"	v
Zend_Db_Adapter_Pdo_Mssql	library\Zend\Db\Adapter\Pdo\Mssql.php	/^class Zend_Db_Adapter_Pdo_Mssql extends Zend_Db_Adapter_Pdo_Abstract$/;"	c
column_def	library\Zend\Db\Adapter\Pdo\Mssql.php	/^        $column_def  = 12;$/;"	v
column_name	library\Zend\Db\Adapter\Pdo\Mssql.php	/^        $column_name = 3;$/;"	v
column_position	library\Zend\Db\Adapter\Pdo\Mssql.php	/^        $column_position = 16;$/;"	v
count	library\Zend\Db\Adapter\Pdo\Mssql.php	/^        $count = intval($count);$/;"	v
desc	library\Zend\Db\Adapter\Pdo\Mssql.php	/^        $desc = array();$/;"	v
dsn	library\Zend\Db\Adapter\Pdo\Mssql.php	/^        $dsn = $this->_config;$/;"	v
dsn	library\Zend\Db\Adapter\Pdo\Mssql.php	/^        $dsn = $this->_pdoType . ':' . implode(';', $dsn);$/;"	v
identity	library\Zend\Db\Adapter\Pdo\Mssql.php	/^                    $identity = (bool) preg_match('\/identity\/', $words[1]);$/;"	v
identity	library\Zend\Db\Adapter\Pdo\Mssql.php	/^            $identity = false;$/;"	v
inv	library\Zend\Db\Adapter\Pdo\Mssql.php	/^                    $inv = preg_replace('\/\\s+asc$\/i', ' DESC', $orderPart, 1, $pregReplaceCount);$/;"	v
inv	library\Zend\Db\Adapter\Pdo\Mssql.php	/^                    $inv = preg_replace('\/\\s+desc$\/i', ' ASC', $orderPart, 1, $pregReplaceCount);$/;"	v
isPrimary	library\Zend\Db\Adapter\Pdo\Mssql.php	/^            $isPrimary = array_key_exists($row[$column_name], $primaryKeyColumn);$/;"	v
length	library\Zend\Db\Adapter\Pdo\Mssql.php	/^        $length      = 7;$/;"	v
nullable	library\Zend\Db\Adapter\Pdo\Mssql.php	/^        $nullable    = 10;$/;"	v
offset	library\Zend\Db\Adapter\Pdo\Mssql.php	/^        $offset = intval($offset);$/;"	v
orderPart	library\Zend\Db\Adapter\Pdo\Mssql.php	/^                    $orderPart = rtrim($orderPart);$/;"	v
orderParts	library\Zend\Db\Adapter\Pdo\Mssql.php	/^                $orderParts = explode(',', substr($orderby, 8));$/;"	v
orderby	library\Zend\Db\Adapter\Pdo\Mssql.php	/^            $orderby = stristr($sql, 'ORDER BY');$/;"	v
orderbyInverse	library\Zend\Db\Adapter\Pdo\Mssql.php	/^                $orderbyInverse = 'ORDER BY ' . implode(', ', $orderbyInverseParts);$/;"	v
orderbyInverseParts	library\Zend\Db\Adapter\Pdo\Mssql.php	/^                $orderbyInverseParts = array();$/;"	v
p	library\Zend\Db\Adapter\Pdo\Mssql.php	/^        $p = 1;$/;"	v
pkey_column_name	library\Zend\Db\Adapter\Pdo\Mssql.php	/^        $pkey_column_name = 3;$/;"	v
pkey_key_seq	library\Zend\Db\Adapter\Pdo\Mssql.php	/^        $pkey_key_seq = 4;$/;"	v
precision	library\Zend\Db\Adapter\Pdo\Mssql.php	/^        $precision   = 6;$/;"	v
pregReplaceCount	library\Zend\Db\Adapter\Pdo\Mssql.php	/^                $pregReplaceCount = null;$/;"	v
primaryKeyColumn	library\Zend\Db\Adapter\Pdo\Mssql.php	/^        $primaryKeyColumn = array();$/;"	v
primaryKeysResult	library\Zend\Db\Adapter\Pdo\Mssql.php	/^        $primaryKeysResult = $stmt->fetchAll(Zend_Db::FETCH_NUM);$/;"	v
primaryPosition	library\Zend\Db\Adapter\Pdo\Mssql.php	/^                $primaryPosition = $primaryKeyColumn[$row[$column_name]];$/;"	v
primaryPosition	library\Zend\Db\Adapter\Pdo\Mssql.php	/^                $primaryPosition = null;$/;"	v
result	library\Zend\Db\Adapter\Pdo\Mssql.php	/^                $result = explode('.', $schemaName);$/;"	v
result	library\Zend\Db\Adapter\Pdo\Mssql.php	/^            $result = $stmt->fetchAll(Zend_Db::FETCH_NUM);$/;"	v
result	library\Zend\Db\Adapter\Pdo\Mssql.php	/^        $result = $stmt->fetchAll(Zend_Db::FETCH_NUM);$/;"	v
scale	library\Zend\Db\Adapter\Pdo\Mssql.php	/^        $scale       = 8;$/;"	v
schemaName	library\Zend\Db\Adapter\Pdo\Mssql.php	/^                $schemaName = $result[1];$/;"	v
seperator	library\Zend\Db\Adapter\Pdo\Mssql.php	/^                $seperator = ',';$/;"	v
seperator	library\Zend\Db\Adapter\Pdo\Mssql.php	/^            $seperator = ':';$/;"	v
sql	library\Zend\Db\Adapter\Pdo\Mssql.php	/^            $sql = 'SELECT * FROM (SELECT TOP ' . $count . ' * FROM (' . $sql . ') AS inner_tbl';$/;"	v
sql	library\Zend\Db\Adapter\Pdo\Mssql.php	/^        $sql = "SELECT name FROM sysobjects WHERE type = 'U' ORDER BY name";$/;"	v
sql	library\Zend\Db\Adapter\Pdo\Mssql.php	/^        $sql = "exec sp_columns @table_name = " . $this->quoteIdentifier($tableName, true);$/;"	v
sql	library\Zend\Db\Adapter\Pdo\Mssql.php	/^        $sql = "exec sp_pkeys @table_name = " . $this->quoteIdentifier($tableName, true);$/;"	v
sql	library\Zend\Db\Adapter\Pdo\Mssql.php	/^        $sql = 'SELECT SCOPE_IDENTITY()';$/;"	v
sql	library\Zend\Db\Adapter\Pdo\Mssql.php	/^        $sql = preg_replace($/;"	v
stmt	library\Zend\Db\Adapter\Pdo\Mssql.php	/^            $stmt = $this->query("SELECT SERVERPROPERTY('productversion')");$/;"	v
stmt	library\Zend\Db\Adapter\Pdo\Mssql.php	/^        $stmt = $this->query($sql);$/;"	v
table_name	library\Zend\Db\Adapter\Pdo\Mssql.php	/^        $table_name  = 2;$/;"	v
type	library\Zend\Db\Adapter\Pdo\Mssql.php	/^                $type = $words[0];$/;"	v
type_name	library\Zend\Db\Adapter\Pdo\Mssql.php	/^        $type_name   = 5;$/;"	v
words	library\Zend\Db\Adapter\Pdo\Mssql.php	/^            $words = explode(' ', $row[$type_name], 2);$/;"	v
Zend_Db_Adapter_Pdo_Mysql	library\Zend\Db\Adapter\Pdo\Mysql.php	/^class Zend_Db_Adapter_Pdo_Mysql extends Zend_Db_Adapter_Pdo_Abstract$/;"	c
count	library\Zend\Db\Adapter\Pdo\Mysql.php	/^        $count = intval($count);$/;"	v
default	library\Zend\Db\Adapter\Pdo\Mysql.php	/^        $default = 4;$/;"	v
desc	library\Zend\Db\Adapter\Pdo\Mysql.php	/^        $desc = array();$/;"	v
dsn	library\Zend\Db\Adapter\Pdo\Mysql.php	/^        $dsn = parent::_dsn();$/;"	v
extra	library\Zend\Db\Adapter\Pdo\Mysql.php	/^        $extra   = 5;$/;"	v
field	library\Zend\Db\Adapter\Pdo\Mysql.php	/^        $field   = 0;$/;"	v
i	library\Zend\Db\Adapter\Pdo\Mysql.php	/^        $i = 1;$/;"	v
identity	library\Zend\Db\Adapter\Pdo\Mysql.php	/^                    $identity = false;$/;"	v
identity	library\Zend\Db\Adapter\Pdo\Mysql.php	/^                    $identity = true;$/;"	v
initCommand	library\Zend\Db\Adapter\Pdo\Mysql.php	/^            $initCommand = "SET NAMES '" . $this->_config['charset'] . "'";$/;"	v
key	library\Zend\Db\Adapter\Pdo\Mysql.php	/^        $key     = 3;$/;"	v
length	library\Zend\Db\Adapter\Pdo\Mysql.php	/^                $length = $matches[2];$/;"	v
null	library\Zend\Db\Adapter\Pdo\Mysql.php	/^        $null    = 2;$/;"	v
offset	library\Zend\Db\Adapter\Pdo\Mysql.php	/^        $offset = intval($offset);$/;"	v
p	library\Zend\Db\Adapter\Pdo\Mysql.php	/^        $p = 1;$/;"	v
precision	library\Zend\Db\Adapter\Pdo\Mysql.php	/^                $precision = $matches[1];$/;"	v
primary	library\Zend\Db\Adapter\Pdo\Mysql.php	/^                $primary = true;$/;"	v
primaryPosition	library\Zend\Db\Adapter\Pdo\Mysql.php	/^                $primaryPosition = $p;$/;"	v
result	library\Zend\Db\Adapter\Pdo\Mysql.php	/^        $result = $stmt->fetchAll(Zend_Db::FETCH_NUM);$/;"	v
scale	library\Zend\Db\Adapter\Pdo\Mysql.php	/^                $scale = $matches[2];$/;"	v
sql	library\Zend\Db\Adapter\Pdo\Mysql.php	/^            $sql = 'DESCRIBE ' . $this->quoteIdentifier("$schemaName.$tableName", true);$/;"	v
sql	library\Zend\Db\Adapter\Pdo\Mysql.php	/^            $sql = 'DESCRIBE ' . $this->quoteIdentifier($tableName, true);$/;"	v
stmt	library\Zend\Db\Adapter\Pdo\Mysql.php	/^        $stmt = $this->query($sql);$/;"	v
type	library\Zend\Db\Adapter\Pdo\Mysql.php	/^        $type    = 1;$/;"	v
unsigned	library\Zend\Db\Adapter\Pdo\Mysql.php	/^                $unsigned = true;$/;"	v
Zend_Db_Adapter_Pdo_Oci	library\Zend\Db\Adapter\Pdo\Oci.php	/^class Zend_Db_Adapter_Pdo_Oci extends Zend_Db_Adapter_Pdo_Abstract$/;"	c
column_id	library\Zend\Db\Adapter\Pdo\Oci.php	/^        $column_id       = 6;$/;"	v
column_name	library\Zend\Db\Adapter\Pdo\Oci.php	/^        $column_name     = 2;$/;"	v
constraint_type	library\Zend\Db\Adapter\Pdo\Oci.php	/^        $constraint_type = 10;$/;"	v
count	library\Zend\Db\Adapter\Pdo\Oci.php	/^        $count = intval($count);$/;"	v
data	library\Zend\Db\Adapter\Pdo\Oci.php	/^        $data = $this->fetchCol('SELECT table_name FROM all_tables');$/;"	v
data_default	library\Zend\Db\Adapter\Pdo\Oci.php	/^        $data_default    = 4;$/;"	v
data_length	library\Zend\Db\Adapter\Pdo\Oci.php	/^        $data_length     = 7;$/;"	v
data_precision	library\Zend\Db\Adapter\Pdo\Oci.php	/^        $data_precision  = 9;$/;"	v
data_scale	library\Zend\Db\Adapter\Pdo\Oci.php	/^        $data_scale      = 8;$/;"	v
data_type	library\Zend\Db\Adapter\Pdo\Oci.php	/^        $data_type       = 3;$/;"	v
desc	library\Zend\Db\Adapter\Pdo\Oci.php	/^        $desc = array();$/;"	v
dsn	library\Zend\Db\Adapter\Pdo\Oci.php	/^        $dsn = $this->_config;$/;"	v
identity	library\Zend\Db\Adapter\Pdo\Oci.php	/^                $identity = false;$/;"	v
limit_sql	library\Zend\Db\Adapter\Pdo\Oci.php	/^        $limit_sql = "SELECT z2.*$/;"	v
nullable	library\Zend\Db\Adapter\Pdo\Oci.php	/^        $nullable        = 5;$/;"	v
offset	library\Zend\Db\Adapter\Pdo\Oci.php	/^        $offset = intval($offset);$/;"	v
owner	library\Zend\Db\Adapter\Pdo\Oci.php	/^        $owner           = 1;$/;"	v
position	library\Zend\Db\Adapter\Pdo\Oci.php	/^        $position        = 11;$/;"	v
primary	library\Zend\Db\Adapter\Pdo\Oci.php	/^                $primary = true;$/;"	v
primaryPosition	library\Zend\Db\Adapter\Pdo\Oci.php	/^                $primaryPosition = $row[$position];$/;"	v
result	library\Zend\Db\Adapter\Pdo\Oci.php	/^        $result = $stmt->fetchAll(Zend_Db::FETCH_NUM);$/;"	v
sequenceName	library\Zend\Db\Adapter\Pdo\Oci.php	/^            $sequenceName = $tableName;$/;"	v
sql	library\Zend\Db\Adapter\Pdo\Oci.php	/^            $sql = "SELECT TC.TABLE_NAME, TC.OWNER, TC.COLUMN_NAME, TC.DATA_TYPE,$/;"	v
sql	library\Zend\Db\Adapter\Pdo\Oci.php	/^            $sql="SELECT TC.TABLE_NAME, TC.OWNER, TC.COLUMN_NAME, TC.DATA_TYPE,$/;"	v
stmt	library\Zend\Db\Adapter\Pdo\Oci.php	/^        $stmt = $this->query($sql, $bind);$/;"	v
subSql	library\Zend\Db\Adapter\Pdo\Oci.php	/^            $subSql="SELECT AC.OWNER, AC.TABLE_NAME, ACC.COLUMN_NAME, AC.CONSTRAINT_TYPE, ACC.POSITION$/;"	v
table_name	library\Zend\Db\Adapter\Pdo\Oci.php	/^        $table_name      = 0;$/;"	v
tns	library\Zend\Db\Adapter\Pdo\Oci.php	/^            $tns = 'dbname=' . $dsn['dbname'];$/;"	v
tns	library\Zend\Db\Adapter\Pdo\Oci.php	/^            $tns = 'dbname=(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)' .$/;"	v
value	library\Zend\Db\Adapter\Pdo\Oci.php	/^        $value = $this->fetchOne('SELECT '.$this->quoteIdentifier($sequenceName, true).'.CURRVAL FROM dual');$/;"	v
value	library\Zend\Db\Adapter\Pdo\Oci.php	/^        $value = $this->fetchOne('SELECT '.$this->quoteIdentifier($sequenceName, true).'.NEXTVAL FROM dual');$/;"	v
value	library\Zend\Db\Adapter\Pdo\Oci.php	/^        $value = str_replace("'", "''", $value);$/;"	v
version	library\Zend\Db\Adapter\Pdo\Oci.php	/^        $version = $this->getServerVersion();$/;"	v
Zend_Db_Adapter_Pdo_Pgsql	library\Zend\Db\Adapter\Pdo\Pgsql.php	/^class Zend_Db_Adapter_Pdo_Pgsql extends Zend_Db_Adapter_Pdo_Abstract$/;"	c
attnum	library\Zend\Db\Adapter\Pdo\Pgsql.php	/^        $attnum        = 0;$/;"	v
atttypemod	library\Zend\Db\Adapter\Pdo\Pgsql.php	/^        $atttypemod    = 5;$/;"	v
colname	library\Zend\Db\Adapter\Pdo\Pgsql.php	/^        $colname       = 3;$/;"	v
complete_type	library\Zend\Db\Adapter\Pdo\Pgsql.php	/^        $complete_type = 6;$/;"	v
conkey	library\Zend\Db\Adapter\Pdo\Pgsql.php	/^        $conkey        = 11;$/;"	v
contype	library\Zend\Db\Adapter\Pdo\Pgsql.php	/^        $contype       = 10;$/;"	v
count	library\Zend\Db\Adapter\Pdo\Pgsql.php	/^        $count = intval($count);$/;"	v
defaultValue	library\Zend\Db\Adapter\Pdo\Pgsql.php	/^                    $defaultValue = $matches[1];$/;"	v
defaultValue	library\Zend\Db\Adapter\Pdo\Pgsql.php	/^            $defaultValue = $row[$default_value];$/;"	v
default_value	library\Zend\Db\Adapter\Pdo\Pgsql.php	/^        $default_value = 7;$/;"	v
desc	library\Zend\Db\Adapter\Pdo\Pgsql.php	/^        $desc = array();$/;"	v
identity	library\Zend\Db\Adapter\Pdo\Pgsql.php	/^                $identity = (bool) (preg_match('\/^nextval\/', $row[$default_value]));$/;"	v
length	library\Zend\Db\Adapter\Pdo\Pgsql.php	/^        $length        = 9;$/;"	v
notnull	library\Zend\Db\Adapter\Pdo\Pgsql.php	/^        $notnull       = 8;$/;"	v
nspname	library\Zend\Db\Adapter\Pdo\Pgsql.php	/^        $nspname       = 1;$/;"	v
offset	library\Zend\Db\Adapter\Pdo\Pgsql.php	/^        $offset = intval($offset);$/;"	v
primary	library\Zend\Db\Adapter\Pdo\Pgsql.php	/^                $primary = true;$/;"	v
primaryPosition	library\Zend\Db\Adapter\Pdo\Pgsql.php	/^                $primaryPosition = array_search($row[$attnum], explode(',', $row[$conkey])) + 1;$/;"	v
relname	library\Zend\Db\Adapter\Pdo\Pgsql.php	/^        $relname       = 2;$/;"	v
result	library\Zend\Db\Adapter\Pdo\Pgsql.php	/^        $result = $stmt->fetchAll(Zend_Db::FETCH_NUM);$/;"	v
sequenceName	library\Zend\Db\Adapter\Pdo\Pgsql.php	/^            $sequenceName = $tableName;$/;"	v
sequenceName	library\Zend\Db\Adapter\Pdo\Pgsql.php	/^        $sequenceName = str_replace($this->getQuoteIdentifierSymbol(), '', (string) $sequenceName);$/;"	v
sql	library\Zend\Db\Adapter\Pdo\Pgsql.php	/^            $sql = "SET NAMES '" . $this->_config['charset'] . "'";$/;"	v
sql	library\Zend\Db\Adapter\Pdo\Pgsql.php	/^        $sql = "SELECT c.relname AS table_name "$/;"	v
sql	library\Zend\Db\Adapter\Pdo\Pgsql.php	/^        $sql = "SELECT$/;"	v
stmt	library\Zend\Db\Adapter\Pdo\Pgsql.php	/^        $stmt = $this->query($sql);$/;"	v
type	library\Zend\Db\Adapter\Pdo\Pgsql.php	/^        $type          = 4;$/;"	v
value	library\Zend\Db\Adapter\Pdo\Pgsql.php	/^        $value = $this->fetchOne("SELECT CURRVAL("$/;"	v
value	library\Zend\Db\Adapter\Pdo\Pgsql.php	/^        $value = $this->fetchOne("SELECT NEXTVAL("$/;"	v
Zend_Db_Adapter_Pdo_Sqlite	library\Zend\Db\Adapter\Pdo\Sqlite.php	/^class Zend_Db_Adapter_Pdo_Sqlite extends Zend_Db_Adapter_Pdo_Abstract$/;"	c
cid	library\Zend\Db\Adapter\Pdo\Sqlite.php	/^        $cid        = 0;$/;"	v
count	library\Zend\Db\Adapter\Pdo\Sqlite.php	/^        $count = intval($count);$/;"	v
desc	library\Zend\Db\Adapter\Pdo\Sqlite.php	/^        $desc = array();$/;"	v
dflt_value	library\Zend\Db\Adapter\Pdo\Sqlite.php	/^        $dflt_value = 4;$/;"	v
error	library\Zend\Db\Adapter\Pdo\Sqlite.php	/^            $error = $this->_connection->errorInfo();$/;"	v
identity	library\Zend\Db\Adapter\Pdo\Sqlite.php	/^                $identity = (bool) ($row[$type] == 'INTEGER');$/;"	v
length	library\Zend\Db\Adapter\Pdo\Sqlite.php	/^                $length = $matches[2];$/;"	v
name	library\Zend\Db\Adapter\Pdo\Sqlite.php	/^        $name       = 1;$/;"	v
notnull	library\Zend\Db\Adapter\Pdo\Sqlite.php	/^        $notnull    = 3;$/;"	v
offset	library\Zend\Db\Adapter\Pdo\Sqlite.php	/^        $offset = intval($offset);$/;"	v
p	library\Zend\Db\Adapter\Pdo\Sqlite.php	/^        $p = 1;$/;"	v
pk	library\Zend\Db\Adapter\Pdo\Sqlite.php	/^        $pk         = 5;$/;"	v
precision	library\Zend\Db\Adapter\Pdo\Sqlite.php	/^                $precision = $matches[1];$/;"	v
primary	library\Zend\Db\Adapter\Pdo\Sqlite.php	/^                $primary = true;$/;"	v
primaryPosition	library\Zend\Db\Adapter\Pdo\Sqlite.php	/^                $primaryPosition = $p;$/;"	v
result	library\Zend\Db\Adapter\Pdo\Sqlite.php	/^        $result = $stmt->fetchAll(Zend_Db::FETCH_NUM);$/;"	v
retval	library\Zend\Db\Adapter\Pdo\Sqlite.php	/^        $retval = $this->_connection->exec('PRAGMA full_column_names=0');$/;"	v
retval	library\Zend\Db\Adapter\Pdo\Sqlite.php	/^        $retval = $this->_connection->exec('PRAGMA short_column_names=1');$/;"	v
scale	library\Zend\Db\Adapter\Pdo\Sqlite.php	/^                $scale = $matches[2];$/;"	v
sql	library\Zend\Db\Adapter\Pdo\Sqlite.php	/^        $sql = "SELECT name FROM sqlite_master WHERE type='table' "$/;"	v
sql	library\Zend\Db\Adapter\Pdo\Sqlite.php	/^        $sql = 'PRAGMA ';$/;"	v
stmt	library\Zend\Db\Adapter\Pdo\Sqlite.php	/^        $stmt = $this->query($sql);$/;"	v
type	library\Zend\Db\Adapter\Pdo\Sqlite.php	/^        $type       = 2;$/;"	v
Zend_Db_Adapter_Sqlsrv	library\Zend\Db\Adapter\Sqlsrv.php	/^class Zend_Db_Adapter_Sqlsrv extends Zend_Db_Adapter_Abstract$/;"	c
cols	library\Zend\Db\Adapter\Sqlsrv.php	/^        $cols = array();$/;"	v
column_def	library\Zend\Db\Adapter\Sqlsrv.php	/^        $column_def      = 12;$/;"	v
column_name	library\Zend\Db\Adapter\Sqlsrv.php	/^        $column_name     = 3;$/;"	v
column_position	library\Zend\Db\Adapter\Sqlsrv.php	/^        $column_position = 16;$/;"	v
connectionInfo	library\Zend\Db\Adapter\Sqlsrv.php	/^        $connectionInfo = array($/;"	v
constantName	library\Zend\Db\Adapter\Sqlsrv.php	/^                    $constantName = strtoupper($value);$/;"	v
count	library\Zend\Db\Adapter\Sqlsrv.php	/^        $count = intval($count);$/;"	v
desc	library\Zend\Db\Adapter\Sqlsrv.php	/^        $desc = array();$/;"	v
end	library\Zend\Db\Adapter\Sqlsrv.php	/^            $end = $offset + $count;$/;"	v
identity	library\Zend\Db\Adapter\Sqlsrv.php	/^                    $identity = (bool) preg_match('\/identity\/', $words[1]);$/;"	v
identity	library\Zend\Db\Adapter\Sqlsrv.php	/^            $identity = false;$/;"	v
isPrimary	library\Zend\Db\Adapter\Sqlsrv.php	/^            $isPrimary = array_key_exists($row[$column_name], $primaryKeyColumn);$/;"	v
length	library\Zend\Db\Adapter\Sqlsrv.php	/^        $length          = 7;$/;"	v
level	library\Zend\Db\Adapter\Sqlsrv.php	/^            $level = SQLSRV_TXN_READ_COMMITTED;$/;"	v
nullable	library\Zend\Db\Adapter\Sqlsrv.php	/^        $nullable        = 10;$/;"	v
offset	library\Zend\Db\Adapter\Sqlsrv.php	/^        $offset = intval($offset);$/;"	v
orderby	library\Zend\Db\Adapter\Sqlsrv.php	/^            $orderby = stristr($sql, 'ORDER BY');$/;"	v
over	library\Zend\Db\Adapter\Sqlsrv.php	/^                $over = 'ORDER BY (SELECT 0)';$/;"	v
over	library\Zend\Db\Adapter\Sqlsrv.php	/^                $over = preg_replace('\/\\"[^,]*\\".\\"([^,]*)\\"\/i', '"inner_tbl"."$1"', $orderby);$/;"	v
owner	library\Zend\Db\Adapter\Sqlsrv.php	/^        $owner           = 1;$/;"	v
p	library\Zend\Db\Adapter\Sqlsrv.php	/^        $p    = 1;$/;"	v
pkey_column_name	library\Zend\Db\Adapter\Sqlsrv.php	/^        $pkey_column_name = 3;$/;"	v
pkey_key_seq	library\Zend\Db\Adapter\Sqlsrv.php	/^        $pkey_key_seq     = 4;$/;"	v
port	library\Zend\Db\Adapter\Sqlsrv.php	/^            $port        = (integer) $this->_config['port'];$/;"	v
precision	library\Zend\Db\Adapter\Sqlsrv.php	/^        $precision       = 6;$/;"	v
primaryKeyColumn	library\Zend\Db\Adapter\Sqlsrv.php	/^        $primaryKeyColumn  = array();$/;"	v
primaryKeysResult	library\Zend\Db\Adapter\Sqlsrv.php	/^        $primaryKeysResult = $stmt->fetchAll(Zend_Db::FETCH_NUM);$/;"	v
primaryPosition	library\Zend\Db\Adapter\Sqlsrv.php	/^                $primaryPosition = $primaryKeyColumn[$row[$column_name]];$/;"	v
primaryPosition	library\Zend\Db\Adapter\Sqlsrv.php	/^                $primaryPosition = null;$/;"	v
result	library\Zend\Db\Adapter\Sqlsrv.php	/^        $result = $stmt->fetchAll(Zend_Db::FETCH_NUM);$/;"	v
result	library\Zend\Db\Adapter\Sqlsrv.php	/^        $result = $stmt->rowCount();$/;"	v
scale	library\Zend\Db\Adapter\Sqlsrv.php	/^        $scale           = 8;$/;"	v
serverInfo	library\Zend\Db\Adapter\Sqlsrv.php	/^        $serverInfo = sqlsrv_server_info($this->_connection);$/;"	v
serverName	library\Zend\Db\Adapter\Sqlsrv.php	/^        $serverName = $this->_config['host'];$/;"	v
sql	library\Zend\Db\Adapter\Sqlsrv.php	/^                $sql = "READ COMMITTED";$/;"	v
sql	library\Zend\Db\Adapter\Sqlsrv.php	/^                $sql = "READ UNCOMMITTED";$/;"	v
sql	library\Zend\Db\Adapter\Sqlsrv.php	/^                $sql = "REPEATABLE READ";$/;"	v
sql	library\Zend\Db\Adapter\Sqlsrv.php	/^                $sql = "SERIALIZABLE";$/;"	v
sql	library\Zend\Db\Adapter\Sqlsrv.php	/^                $sql = "SNAPSHOT";$/;"	v
sql	library\Zend\Db\Adapter\Sqlsrv.php	/^            $sql       = 'SELECT IDENT_CURRENT (' . $tableName . ') as Current_Identity';$/;"	v
sql	library\Zend\Db\Adapter\Sqlsrv.php	/^            $sql = "SELECT ROW_NUMBER() OVER ($over) AS \\"ZEND_DB_ROWNUM\\", * FROM ($sql) AS inner_tbl";$/;"	v
sql	library\Zend\Db\Adapter\Sqlsrv.php	/^            $sql = "WITH outer_tbl AS ($sql) SELECT * FROM outer_tbl WHERE \\"ZEND_DB_ROWNUM\\" BETWEEN $start AND $end";$/;"	v
sql	library\Zend\Db\Adapter\Sqlsrv.php	/^            $sql = preg_replace('\/\\s+ORDER BY(.*)\/', '', $sql);$/;"	v
sql	library\Zend\Db\Adapter\Sqlsrv.php	/^            $sql = preg_replace('\/^SELECT\\s\/i', 'SELECT TOP ' . $count . ' ', $sql);$/;"	v
sql	library\Zend\Db\Adapter\Sqlsrv.php	/^        $sql        = "exec sp_pkeys @table_owner = " . $tableOwner$/;"	v
sql	library\Zend\Db\Adapter\Sqlsrv.php	/^        $sql    = "exec sp_columns @table_name = " . $this->quoteIdentifier($tableName, true);$/;"	v
sql	library\Zend\Db\Adapter\Sqlsrv.php	/^        $sql = "INSERT INTO "$/;"	v
sql	library\Zend\Db\Adapter\Sqlsrv.php	/^        $sql = "SELECT name FROM sysobjects WHERE type = 'U' ORDER BY name";$/;"	v
sql	library\Zend\Db\Adapter\Sqlsrv.php	/^        $sql = $this->_lastInsertSQL;$/;"	v
sql	library\Zend\Db\Adapter\Sqlsrv.php	/^        $sql = null;$/;"	v
start	library\Zend\Db\Adapter\Sqlsrv.php	/^            $start = $offset + 1;$/;"	v
stmt	library\Zend\Db\Adapter\Sqlsrv.php	/^        $stmt       = $this->query($sql);$/;"	v
stmt	library\Zend\Db\Adapter\Sqlsrv.php	/^        $stmt   = $this->query($sql);$/;"	v
stmt	library\Zend\Db\Adapter\Sqlsrv.php	/^        $stmt   = $this->query($sql, array_values($bind));$/;"	v
stmt	library\Zend\Db\Adapter\Sqlsrv.php	/^        $stmt = new $stmtClass($this, $sql);$/;"	v
stmtClass	library\Zend\Db\Adapter\Sqlsrv.php	/^        $stmtClass = $this->_defaultStmtClass;$/;"	v
tableName	library\Zend\Db\Adapter\Sqlsrv.php	/^            $tableName = $this->quote($tableName);$/;"	v
tableOwner	library\Zend\Db\Adapter\Sqlsrv.php	/^        $tableOwner = $result[0][$owner];$/;"	v
table_name	library\Zend\Db\Adapter\Sqlsrv.php	/^        $table_name      = 2;$/;"	v
type	library\Zend\Db\Adapter\Sqlsrv.php	/^                $type = $words[0];$/;"	v
type_name	library\Zend\Db\Adapter\Sqlsrv.php	/^        $type_name       = 5;$/;"	v
vals	library\Zend\Db\Adapter\Sqlsrv.php	/^        $vals = array();$/;"	v
words	library\Zend\Db\Adapter\Sqlsrv.php	/^            $words    = explode(' ', $row[$type_name], 2);$/;"	v
Zend_Db_Adapter_Sqlsrv_Exception	library\Zend\Db\Adapter\Sqlsrv\Exception.php	/^class Zend_Db_Adapter_Sqlsrv_Exception extends Zend_Db_Adapter_Exception$/;"	c
code	library\Zend\Db\Adapter\Sqlsrv\Exception.php	/^            $code    = (int)    $message['code'];$/;"	v
message	library\Zend\Db\Adapter\Sqlsrv\Exception.php	/^                $message = $message[0];$/;"	v
message	library\Zend\Db\Adapter\Sqlsrv\Exception.php	/^            $message = (string) $message['message'];$/;"	v
Zend_Db_Exception	library\Zend\Db\Exception.php	/^class Zend_Db_Exception extends Zend_Exception$/;"	c
Zend_Db_Expr	library\Zend\Db\Expr.php	/^class Zend_Db_Expr$/;"	c
Zend_Db_Profiler	library\Zend\Db\Profiler.php	/^class Zend_Db_Profiler$/;"	c
condition	library\Zend\Db\Profiler.php	/^                $condition = ($qp->getQueryType() & $queryType);$/;"	v
condition	library\Zend\Db\Profiler.php	/^                $condition = true;$/;"	v
elapsedSecs	library\Zend\Db\Profiler.php	/^        $elapsedSecs = 0;$/;"	v
numQueries	library\Zend\Db\Profiler.php	/^        $numQueries = 0;$/;"	v
qp	library\Zend\Db\Profiler.php	/^        $qp = $this->_queryProfiles[$queryId];$/;"	v
queryProfiles	library\Zend\Db\Profiler.php	/^            $queryProfiles = false;$/;"	v
queryProfiles	library\Zend\Db\Profiler.php	/^        $queryProfiles = array();$/;"	v
queryType	library\Zend\Db\Profiler.php	/^                    $queryType = self::DELETE;$/;"	v
queryType	library\Zend\Db\Profiler.php	/^                    $queryType = self::INSERT;$/;"	v
queryType	library\Zend\Db\Profiler.php	/^                    $queryType = self::QUERY;$/;"	v
queryType	library\Zend\Db\Profiler.php	/^                    $queryType = self::SELECT;$/;"	v
queryType	library\Zend\Db\Profiler.php	/^                    $queryType = self::UPDATE;$/;"	v
Zend_Db_Profiler_Exception	library\Zend\Db\Profiler\Exception.php	/^class Zend_Db_Profiler_Exception extends Zend_Db_Exception$/;"	c
Zend_Db_Profiler_Firebug	library\Zend\Db\Profiler\Firebug.php	/^class Zend_Db_Profiler_Firebug extends Zend_Db_Profiler$/;"	c
profile	library\Zend\Db\Profiler\Firebug.php	/^        $profile = $this->getQueryProfile($queryId);$/;"	v
state	library\Zend\Db\Profiler\Firebug.php	/^        $state = parent::queryEnd($queryId);$/;"	v
Zend_Db_Profiler_Query	library\Zend\Db\Profiler\Query.php	/^class Zend_Db_Profiler_Query$/;"	c
Zend_Db_Select	library\Zend\Db\Select.php	/^class Zend_Db_Select$/;"	c
alias	library\Zend\Db\Select.php	/^                    $alias = $m[2];$/;"	v
alias	library\Zend\Db\Select.php	/^                    $alias = null;$/;"	v
c	library\Zend\Db\Select.php	/^            $c = $name . '_' . (string) $i;$/;"	v
c	library\Zend\Db\Select.php	/^            $c = ($dot === false) ? $name : substr($name, $dot+1);$/;"	v
c	library\Zend\Db\Select.php	/^            $c = end($name);$/;"	v
col	library\Zend\Db\Select.php	/^                    $col = $m[1];$/;"	v
col	library\Zend\Db\Select.php	/^                    $col = $m[2];$/;"	v
col	library\Zend\Db\Select.php	/^                    $col = new Zend_Db_Expr($col);$/;"	v
cols	library\Zend\Db\Select.php	/^            $cols = array($cols);$/;"	v
column	library\Zend\Db\Select.php	/^                    $column = new Zend_Db_Expr(self::SQL_WILDCARD);$/;"	v
columnValues	library\Zend\Db\Select.php	/^        $columnValues = array();$/;"	v
columns	library\Zend\Db\Select.php	/^        $columns = array();$/;"	v
cond	library\Zend\Db\Select.php	/^                $cond = self::SQL_AND . ' ';$/;"	v
cond	library\Zend\Db\Select.php	/^                $cond = self::SQL_OR . ' ';$/;"	v
cond	library\Zend\Db\Select.php	/^            $cond = $this->_adapter->quoteInto($cond, $value, $type);$/;"	v
cond	library\Zend\Db\Select.php	/^        $cond  = $cond1 . ' = ' . $cond2;$/;"	v
cond	library\Zend\Db\Select.php	/^        $cond = "";$/;"	v
cond1	library\Zend\Db\Select.php	/^        $cond1 = $from . '.' . $cond;$/;"	v
cond2	library\Zend\Db\Select.php	/^        $cond2 = $join . '.' . $cond;$/;"	v
condition	library\Zend\Db\Select.php	/^            $condition = $this->_adapter->quoteInto($condition, $value, $type);$/;"	v
correlationName	library\Zend\Db\Select.php	/^                    $correlationName = $_correlationName;$/;"	v
correlationName	library\Zend\Db\Select.php	/^                    $correlationName = $this->_uniqueCorrelation($tableName);$/;"	v
correlationName	library\Zend\Db\Select.php	/^            $correlationName = $m[2];$/;"	v
correlationName	library\Zend\Db\Select.php	/^            $correlationName = $tableName = '';$/;"	v
correlationName	library\Zend\Db\Select.php	/^            $correlationName = $this->_uniqueCorrelation($tableName);$/;"	v
correlationName	library\Zend\Db\Select.php	/^            $correlationName = $this->_uniqueCorrelation('t');$/;"	v
correlationName	library\Zend\Db\Select.php	/^            $correlationName = '';$/;"	v
correlationName	library\Zend\Db\Select.php	/^            $correlationName = current($correlationNameKeys);$/;"	v
correlationNameKeys	library\Zend\Db\Select.php	/^            $correlationNameKeys = array_keys($this->_parts[self::FROM]);$/;"	v
count	library\Zend\Db\Select.php	/^            $count = (int) $this->_parts[self::LIMIT_COUNT];$/;"	v
count	library\Zend\Db\Select.php	/^            $count = PHP_INT_MAX;$/;"	v
count	library\Zend\Db\Select.php	/^        $count = 0;$/;"	v
currentCorrelationName	library\Zend\Db\Select.php	/^                    $currentCorrelationName = $m[1];$/;"	v
currentCorrelationName	library\Zend\Db\Select.php	/^                    $currentCorrelationName = key($tmpFromParts);$/;"	v
currentCorrelationName	library\Zend\Db\Select.php	/^                $currentCorrelationName = key($tmpFromParts);$/;"	v
currentCorrelationName	library\Zend\Db\Select.php	/^            $currentCorrelationName = $correlationName;$/;"	v
direction	library\Zend\Db\Select.php	/^                    $direction = $matches[2];$/;"	v
direction	library\Zend\Db\Select.php	/^                $direction = self::SQL_ASC;$/;"	v
dot	library\Zend\Db\Select.php	/^            $dot = strrpos($name,'.');$/;"	v
expr	library\Zend\Db\Select.php	/^                $expr = $val->__toString();$/;"	v
fetchMode	library\Zend\Db\Select.php	/^            $fetchMode = $this->_adapter->getFetchMode();$/;"	v
from	library\Zend\Db\Select.php	/^        $from  = $this->_adapter->quoteIdentifier($this->_uniqueCorrelation($name), true);$/;"	v
from	library\Zend\Db\Select.php	/^        $from = array();$/;"	v
group	library\Zend\Db\Select.php	/^            $group = array();$/;"	v
join	library\Zend\Db\Select.php	/^        $join  = $this->_adapter->quoteIdentifier(key($this->_parts[self::FROM]), true);$/;"	v
joinType	library\Zend\Db\Select.php	/^            $joinType = ($table['joinType'] == self::FROM) ? self::INNER_JOIN : $table['joinType'];$/;"	v
lastFromCorrelationName	library\Zend\Db\Select.php	/^                    $lastFromCorrelationName = $currentCorrelationName;$/;"	v
lastFromCorrelationName	library\Zend\Db\Select.php	/^            $lastFromCorrelationName = true;$/;"	v
lastFromCorrelationName	library\Zend\Db\Select.php	/^        $lastFromCorrelationName = null;$/;"	v
matches	library\Zend\Db\Select.php	/^        $matches = array();$/;"	v
method	library\Zend\Db\Select.php	/^            $method = '_render' . ucfirst($part);$/;"	v
offset	library\Zend\Db\Select.php	/^            $offset = (int) $this->_parts[self::LIMIT_OFFSET];$/;"	v
offset	library\Zend\Db\Select.php	/^        $offset = 0;$/;"	v
order	library\Zend\Db\Select.php	/^            $order = array();$/;"	v
page	library\Zend\Db\Select.php	/^        $page     = ($page > 0)     ? $page     : 1;$/;"	v
part	library\Zend\Db\Select.php	/^        $part = strtolower($part);$/;"	v
parts	library\Zend\Db\Select.php	/^            $parts = count($this->_parts[self::UNION]);$/;"	v
rowCount	library\Zend\Db\Select.php	/^        $rowCount = ($rowCount > 0) ? $rowCount : 1;$/;"	v
spec	library\Zend\Db\Select.php	/^            $spec = array($spec);$/;"	v
sql	library\Zend\Db\Select.php	/^                $sql = $this->$method($sql);$/;"	v
sql	library\Zend\Db\Select.php	/^            $sql = $this->assemble();$/;"	v
sql	library\Zend\Db\Select.php	/^            $sql = '';$/;"	v
sql	library\Zend\Db\Select.php	/^            $sql = trim($this->_adapter->limit($sql, $count, $offset));$/;"	v
sql	library\Zend\Db\Select.php	/^        $sql = self::SQL_SELECT;$/;"	v
stmt	library\Zend\Db\Select.php	/^        $stmt = $this->_adapter->query($this);$/;"	v
tableName	library\Zend\Db\Select.php	/^                    $tableName = $_tableName;$/;"	v
tableName	library\Zend\Db\Select.php	/^            $tableName = $m[1];$/;"	v
tableName	library\Zend\Db\Select.php	/^            $tableName = $name;$/;"	v
target	library\Zend\Db\Select.php	/^                    $target = $target->assemble();$/;"	v
tmp	library\Zend\Db\Select.php	/^            $tmp = '';$/;"	v
tmpColumns	library\Zend\Db\Select.php	/^                $tmpColumns = $this->_parts[self::COLUMNS];$/;"	v
tmpColumns	library\Zend\Db\Select.php	/^                $tmpColumns = array();$/;"	v
tmpFromParts	library\Zend\Db\Select.php	/^                $tmpFromParts = $this->_parts[self::FROM];$/;"	v
tmpFromParts	library\Zend\Db\Select.php	/^                $tmpFromParts = array();$/;"	v
type	library\Zend\Db\Select.php	/^                $type = self::INNER_JOIN;$/;"	v
type	library\Zend\Db\Select.php	/^            $type = strtolower($matches[1]);$/;"	v
val	library\Zend\Db\Select.php	/^                    $val = new Zend_Db_Expr($val);$/;"	v
val	library\Zend\Db\Select.php	/^                    $val = trim($matches[1]);$/;"	v
val	library\Zend\Db\Select.php	/^                $val = new Zend_Db_Expr($val);$/;"	v
Zend_Db_Select_Exception	library\Zend\Db\Select\Exception.php	/^class Zend_Db_Select_Exception extends Zend_Db_Exception$/;"	c
col	library\Zend\Db\Statement.php	/^            $col = 0;$/;"	v
col	library\Zend\Db\Statement.php	/^        $col = (int) $col;$/;"	v
d	library\Zend\Db\Statement.php	/^        $d = $d[0];$/;"	v
d	library\Zend\Db\Statement.php	/^        $d = $this->_adapter->quoteIdentifier('a');$/;"	v
data	library\Zend\Db\Statement.php	/^        $data = array();$/;"	v
de	library\Zend\Db\Statement.php	/^        $de = $this->_adapter->quoteIdentifier($d);$/;"	v
de	library\Zend\Db\Statement.php	/^        $de = str_replace('\\\\', '\\\\\\\\', $de);$/;"	v
de	library\Zend\Db\Statement.php	/^        $de = substr($de, 1, 2);$/;"	v
obj	library\Zend\Db\Statement.php	/^        $obj = new $class($config);$/;"	v
parameter	library\Zend\Db\Statement.php	/^                $parameter = ':' . $parameter;$/;"	v
position	library\Zend\Db\Statement.php	/^                $position = $intval;$/;"	v
position	library\Zend\Db\Statement.php	/^                $position = $parameter;$/;"	v
position	library\Zend\Db\Statement.php	/^        $position = null;$/;"	v
prof	library\Zend\Db\Statement.php	/^        $prof = $this->_adapter->getProfiler();$/;"	v
q	library\Zend\Db\Statement.php	/^        $q = $q[0];$/;"	v
q	library\Zend\Db\Statement.php	/^        $q = $this->_adapter->quote('a');$/;"	v
qe	library\Zend\Db\Statement.php	/^        $qe = $this->_adapter->quote($q);$/;"	v
qe	library\Zend\Db\Statement.php	/^        $qe = str_replace('\\\\', '\\\\\\\\', $qe);$/;"	v
qe	library\Zend\Db\Statement.php	/^        $qe = substr($qe, 1, 2);$/;"	v
qp	library\Zend\Db\Statement.php	/^            $qp = $prof->getQueryProfile($this->_queryId);$/;"	v
qp	library\Zend\Db\Statement.php	/^        $qp = $prof->getQueryProfile($this->_queryId);$/;"	v
retval	library\Zend\Db\Statement.php	/^        $retval = $this->_execute($params);$/;"	v
row	library\Zend\Db\Statement.php	/^        $row = $this->fetch(Zend_Db::FETCH_ASSOC);$/;"	v
row	library\Zend\Db\Statement.php	/^        $row = $this->fetch(Zend_Db::FETCH_NUM);$/;"	v
sql	library\Zend\Db\Statement.php	/^            $sql = $sql->assemble();$/;"	v
sql	library\Zend\Db\Statement.php	/^            $sql = preg_replace("\/$q($qe|[^$q])*$q\/", '', $sql);$/;"	v
sql	library\Zend\Db\Statement.php	/^        $sql = $this->_stripQuoted($sql);$/;"	v
sql	library\Zend\Db\Statement.php	/^        $sql = preg_replace("\/$q($qe|\\\\\\\\{2}|[^$q])*$q\/", '', $sql);$/;"	v
Zend_Db_Statement_Db2	library\Zend\Db\Statement\Db2.php	/^class Zend_Db_Statement_Db2 extends Zend_Db_Statement$/;"	c
connection	library\Zend\Db\Statement\Db2.php	/^        $connection = $this->_adapter->getConnection();$/;"	v
data	library\Zend\Db\Statement\Db2.php	/^        $data = parent::fetchAll($style, $col);$/;"	v
datatype	library\Zend\Db\Statement\Db2.php	/^            $datatype = $options['data-type'];$/;"	v
datatype	library\Zend\Db\Statement\Db2.php	/^            $datatype = DB2_CHAR;$/;"	v
error	library\Zend\Db\Statement\Db2.php	/^        $error = $this->errorCode();$/;"	v
error	library\Zend\Db\Statement\Db2.php	/^        $error = db2_stmt_error();$/;"	v
name	library\Zend\Db\Statement\Db2.php	/^                $name = db2_field_name($this->_stmt, $i);$/;"	v
num	library\Zend\Db\Statement\Db2.php	/^        $num = @db2_num_rows($this->_stmt);$/;"	v
obj	library\Zend\Db\Statement\Db2.php	/^        $obj = $this->fetch(Zend_Db::FETCH_OBJ);$/;"	v
remove	library\Zend\Db\Statement\Db2.php	/^        $remove = $this->_adapter->foldCase('ZEND_DB_ROWNUM');$/;"	v
results	library\Zend\Db\Statement\Db2.php	/^        $results = array();$/;"	v
retval	library\Zend\Db\Statement\Db2.php	/^            $retval = @db2_execute($this->_stmt);$/;"	v
retval	library\Zend\Db\Statement\Db2.php	/^            $retval = @db2_execute($this->_stmt, $params);$/;"	v
retval	library\Zend\Db\Statement\Db2.php	/^        $retval = true;$/;"	v
row	library\Zend\Db\Statement\Db2.php	/^                $row = db2_fetch_array($this->_stmt);$/;"	v
row	library\Zend\Db\Statement\Db2.php	/^                $row = db2_fetch_assoc($this->_stmt);$/;"	v
row	library\Zend\Db\Statement\Db2.php	/^                $row = db2_fetch_both($this->_stmt);$/;"	v
row	library\Zend\Db\Statement\Db2.php	/^                $row = db2_fetch_object($this->_stmt);$/;"	v
style	library\Zend\Db\Statement\Db2.php	/^            $style = $this->_fetchMode;$/;"	v
type	library\Zend\Db\Statement\Db2.php	/^            $type = DB2_PARAM_IN;$/;"	v
Zend_Db_Statement_Db2_Exception	library\Zend\Db\Statement\Db2\Exception.php	/^class Zend_Db_Statement_Db2_Exception extends Zend_Db_Statement_Exception$/;"	c
__construct	library\Zend\Db\Statement\Db2\Exception.php	/^    function __construct($msg = 'unknown exception', $state = '00000')$/;"	f
Zend_Db_Statement_Exception	library\Zend\Db\Statement\Exception.php	/^class Zend_Db_Statement_Exception extends Zend_Db_Exception$/;"	c
Zend_Db_Statement_Mysqli	library\Zend\Db\Statement\Mysqli.php	/^class Zend_Db_Statement_Mysqli extends Zend_Db_Statement$/;"	c
assoc	library\Zend\Db\Statement\Mysqli.php	/^                $assoc = array_combine($this->_keys, $values);$/;"	v
mysqli	library\Zend\Db\Statement\Mysqli.php	/^            $mysqli = $this->_adapter->getConnection();$/;"	v
mysqli	library\Zend\Db\Statement\Mysqli.php	/^        $mysqli = $this->_adapter->getConnection();$/;"	v
params	library\Zend\Db\Statement\Mysqli.php	/^            $params = $this->_bindParam;$/;"	v
r	library\Zend\Db\Statement\Mysqli.php	/^            $r = $this->_stmt->close();$/;"	v
refs	library\Zend\Db\Statement\Mysqli.php	/^            $refs = array();$/;"	v
retval	library\Zend\Db\Statement\Mysqli.php	/^        $retval = $this->_stmt->execute();$/;"	v
retval	library\Zend\Db\Statement\Mysqli.php	/^        $retval = $this->_stmt->fetch();$/;"	v
row	library\Zend\Db\Statement\Mysqli.php	/^                $row = $values;$/;"	v
row	library\Zend\Db\Statement\Mysqli.php	/^                $row = (object) array_combine($this->_keys, $values);$/;"	v
row	library\Zend\Db\Statement\Mysqli.php	/^                $row = array_combine($this->_keys, $values);$/;"	v
row	library\Zend\Db\Statement\Mysqli.php	/^                $row = array_merge($values, $assoc);$/;"	v
row	library\Zend\Db\Statement\Mysqli.php	/^        $row = false;$/;"	v
stmtParams	library\Zend\Db\Statement\Mysqli.php	/^            $stmtParams = array();$/;"	v
style	library\Zend\Db\Statement\Mysqli.php	/^            $style = $this->_fetchMode;$/;"	v
values	library\Zend\Db\Statement\Mysqli.php	/^        $values = array();$/;"	v
Zend_Db_Statement_Mysqli_Exception	library\Zend\Db\Statement\Mysqli\Exception.php	/^class Zend_Db_Statement_Mysqli_Exception extends Zend_Db_Statement_Exception$/;"	c
Zend_Db_Statement_Oracle	library\Zend\Db\Statement\Oracle.php	/^class Zend_Db_Statement_Oracle extends Zend_Db_Statement$/;"	c
connection	library\Zend\Db\Statement\Oracle.php	/^        $connection = $this->_adapter->getConnection();$/;"	v
data	library\Zend\Db\Statement\Oracle.php	/^                $data = $data->read($data->size());$/;"	v
data	library\Zend\Db\Statement\Oracle.php	/^        $data = oci_result($this->_stmt, $col+1); \/\/1-based$/;"	v
error	library\Zend\Db\Statement\Oracle.php	/^                    $error = true;$/;"	v
error	library\Zend\Db\Statement\Oracle.php	/^            $error = false;$/;"	v
error	library\Zend\Db\Statement\Oracle.php	/^        $error = oci_error($this->_stmt);$/;"	v
flags	library\Zend\Db\Statement\Oracle.php	/^                $flags = $flags &~ OCI_FETCHSTATEMENT_BY_ROW;$/;"	v
flags	library\Zend\Db\Statement\Oracle.php	/^        $flags = OCI_FETCHSTATEMENT_BY_ROW;$/;"	v
length	library\Zend\Db\Statement\Oracle.php	/^            $length = -1;$/;"	v
lob_as_string	library\Zend\Db\Statement\Oracle.php	/^        $lob_as_string = $this->getLobAsString() ? OCI_RETURN_LOBS : 0;$/;"	v
name	library\Zend\Db\Statement\Oracle.php	/^                $name = oci_field_name($this->_stmt, $i);$/;"	v
num_rows	library\Zend\Db\Statement\Oracle.php	/^        $num_rows = oci_num_rows($this->_stmt);$/;"	v
obj	library\Zend\Db\Statement\Oracle.php	/^        $obj = oci_fetch_object($this->_stmt);$/;"	v
params	library\Zend\Db\Statement\Oracle.php	/^                $params = array($params);$/;"	v
result	library\Zend\Db\Statement\Oracle.php	/^                $result = $result[$col];$/;"	v
result	library\Zend\Db\Statement\Oracle.php	/^        $result = Array();$/;"	v
retval	library\Zend\Db\Statement\Oracle.php	/^        $retval = @oci_bind_by_name($this->_stmt, $parameter, $variable, $length, $type);$/;"	v
retval	library\Zend\Db\Statement\Oracle.php	/^        $retval = @oci_execute($this->_stmt, $this->_adapter->_getExecuteMode());$/;"	v
row	library\Zend\Db\Statement\Oracle.php	/^                $row = oci_fetch_array($this->_stmt, OCI_ASSOC | OCI_RETURN_NULLS | $lob_as_string);$/;"	v
row	library\Zend\Db\Statement\Oracle.php	/^                $row = oci_fetch_array($this->_stmt, OCI_BOTH | OCI_RETURN_NULLS | $lob_as_string);$/;"	v
row	library\Zend\Db\Statement\Oracle.php	/^                $row = oci_fetch_array($this->_stmt, OCI_NUM | OCI_RETURN_NULLS | $lob_as_string);$/;"	v
row	library\Zend\Db\Statement\Oracle.php	/^                $row = oci_fetch_object($this->_stmt);$/;"	v
style	library\Zend\Db\Statement\Oracle.php	/^            $style = $this->_fetchMode;$/;"	v
type	library\Zend\Db\Statement\Oracle.php	/^            $type = 'OCI-Lob';$/;"	v
type	library\Zend\Db\Statement\Oracle.php	/^            $type = SQLT_CHR;$/;"	v
Zend_Db_Statement_Oracle_Exception	library\Zend\Db\Statement\Oracle\Exception.php	/^class Zend_Db_Statement_Oracle_Exception extends Zend_Db_Statement_Exception$/;"	c
__construct	library\Zend\Db\Statement\Oracle\Exception.php	/^   function __construct($error = null, $code = 0)$/;"	f
Zend_Db_Statement_Pdo	library\Zend\Db\Statement\Pdo.php	/^class Zend_Db_Statement_Pdo extends Zend_Db_Statement implements IteratorAggregate$/;"	c
col	library\Zend\Db\Statement\Pdo.php	/^                    $col = 0;$/;"	v
parameter	library\Zend\Db\Statement\Pdo.php	/^            $parameter = ":$parameter";$/;"	v
style	library\Zend\Db\Statement\Pdo.php	/^            $style = $this->_fetchMode;$/;"	v
type	library\Zend\Db\Statement\Pdo.php	/^                    $type = PDO::PARAM_BOOL;$/;"	v
type	library\Zend\Db\Statement\Pdo.php	/^                    $type = PDO::PARAM_INT;$/;"	v
type	library\Zend\Db\Statement\Pdo.php	/^                    $type = PDO::PARAM_NULL;$/;"	v
type	library\Zend\Db\Statement\Pdo.php	/^                    $type = PDO::PARAM_STR;$/;"	v
Zend_Db_Statement_Pdo_Ibm	library\Zend\Db\Statement\Pdo\Ibm.php	/^class Zend_Db_Statement_Pdo_Ibm extends Zend_Db_Statement_Pdo$/;"	c
data	library\Zend\Db\Statement\Pdo\Ibm.php	/^        $data = parent::fetchAll($style, $col);$/;"	v
remove	library\Zend\Db\Statement\Pdo\Ibm.php	/^        $remove = $this->_adapter->foldCase('ZEND_DB_ROWNUM');$/;"	v
results	library\Zend\Db\Statement\Pdo\Ibm.php	/^        $results = array();$/;"	v
Zend_Db_Statement_Pdo_Oci	library\Zend\Db\Statement\Pdo\Oci.php	/^class Zend_Db_Statement_Pdo_Oci extends Zend_Db_Statement_Pdo$/;"	c
data	library\Zend\Db\Statement\Pdo\Oci.php	/^        $data = parent::fetchAll($style, $col);$/;"	v
remove	library\Zend\Db\Statement\Pdo\Oci.php	/^        $remove = $this->_adapter->foldCase('zend_db_rownum');$/;"	v
results	library\Zend\Db\Statement\Pdo\Oci.php	/^        $results = array();$/;"	v
row	library\Zend\Db\Statement\Pdo\Oci.php	/^        $row = parent::fetch($style, $cursor, $offset);$/;"	v
Zend_Db_Statement_Sqlsrv	library\Zend\Db\Statement\Sqlsrv.php	/^class Zend_Db_Statement_Sqlsrv extends Zend_Db_Statement$/;"	c
assoc	library\Zend\Db\Statement\Sqlsrv.php	/^                $assoc = array_combine($this->_keys, $values);$/;"	v
connection	library\Zend\Db\Statement\Sqlsrv.php	/^        $connection = $this->_adapter->getConnection();$/;"	v
data	library\Zend\Db\Statement\Sqlsrv.php	/^        $data = parent::fetchAll($style, $col);$/;"	v
data	library\Zend\Db\Statement\Sqlsrv.php	/^        $data = sqlsrv_get_field($this->_stmt, $col); \/\/0-based$/;"	v
error	library\Zend\Db\Statement\Sqlsrv.php	/^            $error = false;$/;"	v
error	library\Zend\Db\Statement\Sqlsrv.php	/^        $error = sqlsrv_errors();$/;"	v
fields	library\Zend\Db\Statement\Sqlsrv.php	/^        $fields = sqlsrv_field_metadata($this->_stmt);$/;"	v
i	library\Zend\Db\Statement\Sqlsrv.php	/^            $i       = 1;$/;"	v
num_rows	library\Zend\Db\Statement\Sqlsrv.php	/^        $num_rows = sqlsrv_rows_affected($this->_stmt);$/;"	v
obj	library\Zend\Db\Statement\Sqlsrv.php	/^        $obj = sqlsrv_fetch_object($this->_stmt);$/;"	v
params	library\Zend\Db\Statement\Sqlsrv.php	/^                $params = array($params);$/;"	v
params	library\Zend\Db\Statement\Sqlsrv.php	/^            $params = $params_;$/;"	v
params_	library\Zend\Db\Statement\Sqlsrv.php	/^            $params_ = array();$/;"	v
remove	library\Zend\Db\Statement\Sqlsrv.php	/^        $remove = $this->_adapter->foldCase('ZEND_DB_ROWNUM');$/;"	v
results	library\Zend\Db\Statement\Sqlsrv.php	/^        $results = array();$/;"	v
row	library\Zend\Db\Statement\Sqlsrv.php	/^                $row   = $this->_fetchBound($row);$/;"	v
row	library\Zend\Db\Statement\Sqlsrv.php	/^                $row   = array_merge($values, $assoc);$/;"	v
row	library\Zend\Db\Statement\Sqlsrv.php	/^                $row = $values;$/;"	v
row	library\Zend\Db\Statement\Sqlsrv.php	/^                $row = (object) array_combine($this->_keys, $values);$/;"	v
row	library\Zend\Db\Statement\Sqlsrv.php	/^                $row = array_combine($this->_keys, $values);$/;"	v
row	library\Zend\Db\Statement\Sqlsrv.php	/^        $row = false;$/;"	v
style	library\Zend\Db\Statement\Sqlsrv.php	/^            $style = $this->_fetchMode;$/;"	v
temp	library\Zend\Db\Statement\Sqlsrv.php	/^            $temp    = array();$/;"	v
values	library\Zend\Db\Statement\Sqlsrv.php	/^        $values = array_values($values);$/;"	v
values	library\Zend\Db\Statement\Sqlsrv.php	/^        $values = sqlsrv_fetch_array($this->_stmt, SQLSRV_FETCH_ASSOC);$/;"	v
Zend_Db_Statement_Sqlsrv_Exception	library\Zend\Db\Statement\Sqlsrv\Exception.php	/^class Zend_Db_Statement_Sqlsrv_Exception extends Zend_Db_Statement_Exception$/;"	c
code	library\Zend\Db\Statement\Sqlsrv\Exception.php	/^            $code    = (int)    $message['code'];$/;"	v
message	library\Zend\Db\Statement\Sqlsrv\Exception.php	/^                $message = $message[0];$/;"	v
message	library\Zend\Db\Statement\Sqlsrv\Exception.php	/^            $message = (string) $message['message'];$/;"	v
Zend_Db_Table	library\Zend\Db\Table.php	/^class Zend_Db_Table extends Zend_Db_Table_Abstract$/;"	c
config	library\Zend\Db\Table.php	/^                    $config = $definition->getTableConfig($config);$/;"	v
config	library\Zend\Db\Table.php	/^                    $config = array(self::NAME => $config);$/;"	v
config	library\Zend\Db\Table.php	/^                $config = array(self::ADAPTER => $config);$/;"	v
definition	library\Zend\Db\Table.php	/^            $definition = new Zend_Db_Table_Definition($definition);$/;"	v
args	library\Zend\Db\Table\Abstract.php	/^        $args = func_get_args();$/;"	v
cacheId	library\Zend\Db\Table\Abstract.php	/^            $cacheId = md5( \/\/ port:host\/dbname:schema.table (based on availabilty)$/;"	v
col	library\Zend\Db\Table\Abstract.php	/^                            $col = $this->_db->foldCase($map[self::COLUMNS][$i]);$/;"	v
cols	library\Zend\Db\Table\Abstract.php	/^        $cols     = $this->_getCols();$/;"	v
cols	library\Zend\Db\Table\Abstract.php	/^        $cols = $this->_getCols();$/;"	v
columnName	library\Zend\Db\Table\Abstract.php	/^                    $columnName = $this->_db->quoteIdentifier($keyNames[$keyPosition], true);$/;"	v
config	library\Zend\Db\Table\Abstract.php	/^            $config = array(self::ADAPTER => $config);$/;"	v
config	library\Zend\Db\Table\Abstract.php	/^        $config = array($/;"	v
data	library\Zend\Db\Table\Abstract.php	/^        $data  = array($/;"	v
data	library\Zend\Db\Table\Abstract.php	/^        $data = $stmt->fetchAll(Zend_Db::FETCH_ASSOC);$/;"	v
data	library\Zend\Db\Table\Abstract.php	/^        $data = array($/;"	v
db	library\Zend\Db\Table\Abstract.php	/^            $db = Zend_Registry::get($db);$/;"	v
dbConfig	library\Zend\Db\Table\Abstract.php	/^            $dbConfig = $this->_db->getConfig();$/;"	v
defaultSource	library\Zend\Db\Table\Abstract.php	/^            $defaultSource = $this->_defaultSource;$/;"	v
defaultSource	library\Zend\Db\Table\Abstract.php	/^            $defaultSource = self::DEFAULT_NONE;$/;"	v
defaults	library\Zend\Db\Table\Abstract.php	/^        $defaults = array_combine($cols, array_fill(0, count($cols), null));$/;"	v
host	library\Zend\Db\Table\Abstract.php	/^            $host = isset($dbConfig['options']['host'])$/;"	v
info	library\Zend\Db\Table\Abstract.php	/^        $info = array($/;"	v
isMetadataFromCache	library\Zend\Db\Table\Abstract.php	/^            $isMetadataFromCache = false;$/;"	v
isMetadataFromCache	library\Zend\Db\Table\Abstract.php	/^        $isMetadataFromCache = true;$/;"	v
keyNames	library\Zend\Db\Table\Abstract.php	/^        $keyNames = array_values((array) $this->_primary);$/;"	v
keyValues	library\Zend\Db\Table\Abstract.php	/^                $keyValues = array($keyValues);$/;"	v
keyValues	library\Zend\Db\Table\Abstract.php	/^            $keyValues = array_values($keyValues);$/;"	v
keyValuesCount	library\Zend\Db\Table\Abstract.php	/^            $keyValuesCount = count($keyValues);$/;"	v
metadata	library\Zend\Db\Table\Abstract.php	/^            $metadata = $this->_db->describeTable($this->_name, $this->_schema);$/;"	v
metadataCache	library\Zend\Db\Table\Abstract.php	/^            $metadataCache = Zend_Registry::get($metadataCache);$/;"	v
newRefs	library\Zend\Db\Table\Abstract.php	/^                        $newRefs = array();$/;"	v
numberTerms	library\Zend\Db\Table\Abstract.php	/^                $numberTerms = $keyValuesCount;$/;"	v
numberTerms	library\Zend\Db\Table\Abstract.php	/^        $numberTerms = 0;$/;"	v
onDelete	library\Zend\Db\Table\Abstract.php	/^                                 $onDelete = null, $onUpdate = null)$/;"	v
order	library\Zend\Db\Table\Abstract.php	/^            $order = array($order);$/;"	v
pkData	library\Zend\Db\Table\Abstract.php	/^        $pkData = array_intersect_key($data, array_flip($primary));$/;"	v
pkIdentity	library\Zend\Db\Table\Abstract.php	/^        $pkIdentity = $primary[(int) $this->_identity];$/;"	v
pkIdentity	library\Zend\Db\Table\Abstract.php	/^        $pkIdentity = $primary[(int)$this->_identity];$/;"	v
pkSuppliedBySequence	library\Zend\Db\Table\Abstract.php	/^            $pkSuppliedBySequence = true;$/;"	v
port	library\Zend\Db\Table\Abstract.php	/^            $port = isset($dbConfig['options']['port'])$/;"	v
primary	library\Zend\Db\Table\Abstract.php	/^        $primary    = (array) $this->_primary;$/;"	v
primary	library\Zend\Db\Table\Abstract.php	/^        $primary = (array) $this->_primary;$/;"	v
refCol	library\Zend\Db\Table\Abstract.php	/^                            $refCol = $this->_db->foldCase($map[self::REF_COLUMNS][$i]);$/;"	v
refMap	library\Zend\Db\Table\Abstract.php	/^        $refMap = $this->_getReferenceMapNormalized();$/;"	v
reference	library\Zend\Db\Table\Abstract.php	/^        $reference = array(self::COLUMNS         => (array) $columns,$/;"	v
referenceMapNormalized	library\Zend\Db\Table\Abstract.php	/^        $referenceMapNormalized = array();$/;"	v
row	library\Zend\Db\Table\Abstract.php	/^        $row = new $rowClass($config);$/;"	v
rowClass	library\Zend\Db\Table\Abstract.php	/^        $rowClass = $this->getRowClass();$/;"	v
rows	library\Zend\Db\Table\Abstract.php	/^        $rows = $this->_fetch($select);$/;"	v
rowsAffected	library\Zend\Db\Table\Abstract.php	/^        $rowsAffected = 0;$/;"	v
rowsetClass	library\Zend\Db\Table\Abstract.php	/^            $rowsetClass = $this->getRowsetClass();$/;"	v
rowsetClass	library\Zend\Db\Table\Abstract.php	/^        $rowsetClass = $this->getRowsetClass();$/;"	v
select	library\Zend\Db\Table\Abstract.php	/^            $select = $this->select();$/;"	v
select	library\Zend\Db\Table\Abstract.php	/^            $select = $where->limit(1, $where->getPart(Zend_Db_Select::LIMIT_OFFSET));$/;"	v
select	library\Zend\Db\Table\Abstract.php	/^            $select = $where;$/;"	v
select	library\Zend\Db\Table\Abstract.php	/^        $select = new Zend_Db_Table_Select($this);$/;"	v
stmt	library\Zend\Db\Table\Abstract.php	/^        $stmt = $this->_db->query($select);$/;"	v
tableName	library\Zend\Db\Table\Abstract.php	/^            $tableName = $this->_db->quoteTableAs($this->_name, null, true);$/;"	v
tableSpec	library\Zend\Db\Table\Abstract.php	/^        $tableSpec = ($this->_schema ? $this->_schema . '.' : '') . $this->_name;$/;"	v
thisClass	library\Zend\Db\Table\Abstract.php	/^            $thisClass = $this->_definitionConfigName;$/;"	v
thisClass	library\Zend\Db\Table\Abstract.php	/^        $thisClass = get_class($this);$/;"	v
type	library\Zend\Db\Table\Abstract.php	/^                            $type = $this->_metadata[$col]['DATA_TYPE'];$/;"	v
type	library\Zend\Db\Table\Abstract.php	/^                    $type = $this->_metadata[$keyNames[$keyPosition]]['DATA_TYPE'];$/;"	v
where	library\Zend\Db\Table\Abstract.php	/^                        $where = array();$/;"	v
where	library\Zend\Db\Table\Abstract.php	/^        $where = (array) $where;$/;"	v
whereAndTerms	library\Zend\Db\Table\Abstract.php	/^                $whereAndTerms = array();$/;"	v
whereClause	library\Zend\Db\Table\Abstract.php	/^            $whereClause = '(' . implode(' OR ', $whereOrTerms) . ')';$/;"	v
whereClause	library\Zend\Db\Table\Abstract.php	/^        $whereClause = null;$/;"	v
whereList	library\Zend\Db\Table\Abstract.php	/^        $whereList = array();$/;"	v
whereOrTerms	library\Zend\Db\Table\Abstract.php	/^            $whereOrTerms = array();$/;"	v
Zend_Db_Table_Definition	library\Zend\Db\Table\Definition.php	/^class Zend_Db_Table_Definition$/;"	c
Zend_Db_Table_Exception	library\Zend\Db\Table\Exception.php	/^class Zend_Db_Table_Exception extends Zend_Db_Exception$/;"	c
Zend_Db_Table_Row	library\Zend\Db\Table\Row.php	/^class Zend_Db_Table_Row extends Zend_Db_Table_Row_Abstract$/;"	c
array	library\Zend\Db\Table\Row\Abstract.php	/^            $array = array_intersect_key($this->_cleanData, $primary);$/;"	v
array	library\Zend\Db\Table\Row\Abstract.php	/^            $array = array_intersect_key($this->_data, $primary);$/;"	v
callerColumnName	library\Zend\Db\Table\Row\Abstract.php	/^            $callerColumnName = $db->foldCase($callerMap[Zend_Db_Table_Abstract::REF_COLUMNS][$i]);$/;"	v
callerMap	library\Zend\Db\Table\Row\Abstract.php	/^        $callerMap = $this->_prepareReference($intersectionTable, $this->_getTable(), $callerRefRule);$/;"	v
class	library\Zend\Db\Table\Row\Abstract.php	/^            $class    = $matches[1];$/;"	v
columnName	library\Zend\Db\Table\Row\Abstract.php	/^            $columnName = $db->quoteIdentifier($column, true);$/;"	v
columnName	library\Zend\Db\Table\Row\Abstract.php	/^        $columnName = $this->_transformColumn($columnName);$/;"	v
config	library\Zend\Db\Table\Row\Abstract.php	/^        $config = array($/;"	v
data	library\Zend\Db\Table\Row\Abstract.php	/^        $data = array_intersect_key($data, $this->_data);$/;"	v
data	library\Zend\Db\Table\Row\Abstract.php	/^        $data = array_intersect_key($this->_data, $this->_modifiedFields);$/;"	v
db	library\Zend\Db\Table\Row\Abstract.php	/^        $db = $this->_getTable()->getAdapter();$/;"	v
depTables	library\Zend\Db\Table\Row\Abstract.php	/^            $depTables = $this->_getTable()->getDependentTables();$/;"	v
depTables	library\Zend\Db\Table\Row\Abstract.php	/^        $depTables = $this->_getTable()->getDependentTables();$/;"	v
dependentColumn	library\Zend\Db\Table\Row\Abstract.php	/^            $dependentColumn = $dependentDb->quoteIdentifier($dependentColumnName, true);$/;"	v
dependentColumnName	library\Zend\Db\Table\Row\Abstract.php	/^            $dependentColumnName = $db->foldCase($map[Zend_Db_Table_Abstract::COLUMNS][$i]);$/;"	v
dependentColumnName	library\Zend\Db\Table\Row\Abstract.php	/^            $dependentColumnName = $dependentDb->foldCase($map[Zend_Db_Table_Abstract::COLUMNS][$i]);$/;"	v
dependentDb	library\Zend\Db\Table\Row\Abstract.php	/^            $dependentDb = $dependentTable->getAdapter();$/;"	v
dependentInfo	library\Zend\Db\Table\Row\Abstract.php	/^            $dependentInfo = $dependentTable->info();$/;"	v
dependentTable	library\Zend\Db\Table\Row\Abstract.php	/^            $dependentTable = $this->_getTableFromString($dependentTable);$/;"	v
diffData	library\Zend\Db\Table\Row\Abstract.php	/^        $diffData = array_intersect_key($this->_data, $this->_modifiedFields);$/;"	v
info	library\Zend\Db\Table\Row\Abstract.php	/^            $info = $table->info();$/;"	v
info	library\Zend\Db\Table\Row\Abstract.php	/^        $info = $this->_getTable()->info();$/;"	v
info	library\Zend\Db\Table\Row\Abstract.php	/^        $info = $this->_table->info();$/;"	v
interCol	library\Zend\Db\Table\Row\Abstract.php	/^            $interCol = $interDb->quoteIdentifier("i.$interColumnName", true);$/;"	v
interCol	library\Zend\Db\Table\Row\Abstract.php	/^            $interCol = $interDb->quoteIdentifier('i' . '.' . $matchMap[Zend_Db_Table_Abstract::COLUMNS][$i], true);$/;"	v
interColumnName	library\Zend\Db\Table\Row\Abstract.php	/^            $interColumnName = $interDb->foldCase($callerMap[Zend_Db_Table_Abstract::COLUMNS][$i]);$/;"	v
interDb	library\Zend\Db\Table\Row\Abstract.php	/^        $interDb   = $intersectionTable->getAdapter();$/;"	v
interInfo	library\Zend\Db\Table\Row\Abstract.php	/^            $interInfo = $intersectionTable->info();$/;"	v
interInfo	library\Zend\Db\Table\Row\Abstract.php	/^        $interInfo = $intersectionTable->info();$/;"	v
interName	library\Zend\Db\Table\Row\Abstract.php	/^        $interName = $interInfo['name'];$/;"	v
interSchema	library\Zend\Db\Table\Row\Abstract.php	/^        $interSchema = isset($interInfo['schema']) ? $interInfo['schema'] : null;$/;"	v
intersectionTable	library\Zend\Db\Table\Row\Abstract.php	/^            $intersectionTable = $this->_getTableFromString($intersectionTable);$/;"	v
joinCond	library\Zend\Db\Table\Row\Abstract.php	/^        $joinCond = implode(' AND ', $joinCond);$/;"	v
map	library\Zend\Db\Table\Row\Abstract.php	/^        $map = $dependentTable->getReference($parentTableName, $ruleKey);$/;"	v
map	library\Zend\Db\Table\Row\Abstract.php	/^        $map = $this->_prepareReference($dependentTable, $this->_getTable(), $ruleKey);$/;"	v
map	library\Zend\Db\Table\Row\Abstract.php	/^        $map = $this->_prepareReference($this->_getTable(), $parentTable, $ruleKey);$/;"	v
matchCol	library\Zend\Db\Table\Row\Abstract.php	/^            $matchCol = $interDb->quoteIdentifier('m' . '.' . $matchMap[Zend_Db_Table_Abstract::REF_COLUMNS][$i], true);$/;"	v
matchInfo	library\Zend\Db\Table\Row\Abstract.php	/^        $matchInfo = $matchTable->info();$/;"	v
matchMap	library\Zend\Db\Table\Row\Abstract.php	/^        $matchMap = $this->_prepareReference($intersectionTable, $matchTable, $matchRefRule);$/;"	v
matchName	library\Zend\Db\Table\Row\Abstract.php	/^        $matchName = $matchInfo['name'];$/;"	v
matchRefRule	library\Zend\Db\Table\Row\Abstract.php	/^                                         $matchRefRule = null, Zend_Db_Table_Select $select = null)$/;"	v
matchSchema	library\Zend\Db\Table\Row\Abstract.php	/^        $matchSchema = isset($matchInfo['schema']) ? $matchInfo['schema'] : null;$/;"	v
matchTable	library\Zend\Db\Table\Row\Abstract.php	/^            $matchTable = $this->_getTableFromString($matchTable);$/;"	v
matches	library\Zend\Db\Table\Row\Abstract.php	/^        $matches = array();$/;"	v
metadata	library\Zend\Db\Table\Row\Abstract.php	/^        $metadata = $info[Zend_Db_Table_Abstract::METADATA];$/;"	v
newPrimaryKey	library\Zend\Db\Table\Row\Abstract.php	/^            $newPrimaryKey = $primaryKey;$/;"	v
newPrimaryKey	library\Zend\Db\Table\Row\Abstract.php	/^            $newPrimaryKey = array(current($tempPrimaryKey) => $primaryKey);$/;"	v
nullable	library\Zend\Db\Table\Row\Abstract.php	/^            $nullable = $parentInfo[Zend_Db_Table_Abstract::METADATA][$parentColumnName]['NULLABLE'];$/;"	v
options	library\Zend\Db\Table\Row\Abstract.php	/^        $options = array();$/;"	v
parentColumn	library\Zend\Db\Table\Row\Abstract.php	/^            $parentColumn = $parentDb->quoteIdentifier($parentColumnName, true);$/;"	v
parentColumnName	library\Zend\Db\Table\Row\Abstract.php	/^            $parentColumnName = $db->foldCase($map[Zend_Db_Table_Abstract::REF_COLUMNS][$i]);$/;"	v
parentColumnName	library\Zend\Db\Table\Row\Abstract.php	/^            $parentColumnName = $parentDb->foldCase($map[Zend_Db_Table_Abstract::REF_COLUMNS][$i]);$/;"	v
parentDb	library\Zend\Db\Table\Row\Abstract.php	/^            $parentDb = $parentTable->getAdapter();$/;"	v
parentInfo	library\Zend\Db\Table\Row\Abstract.php	/^            $parentInfo = $parentTable->info();$/;"	v
parentTable	library\Zend\Db\Table\Row\Abstract.php	/^            $parentTable = $this->_getTableFromString($parentTable);$/;"	v
parentTableName	library\Zend\Db\Table\Row\Abstract.php	/^        $parentTableName = (get_class($parentTable) === 'Zend_Db_Table') ? $parentTable->getDefinitionConfigName() : get_class($parentTable);$/;"	v
pk	library\Zend\Db\Table\Row\Abstract.php	/^            $pk = $this->_getPrimaryKey();$/;"	v
pkDiffData	library\Zend\Db\Table\Row\Abstract.php	/^        $pkDiffData = array_intersect_key($diffData, array_flip((array)$this->_primary));$/;"	v
pkNew	library\Zend\Db\Table\Row\Abstract.php	/^                $pkNew = $this->_getPrimaryKey(true);$/;"	v
pkOld	library\Zend\Db\Table\Row\Abstract.php	/^                $pkOld = $this->_getPrimaryKey(false);$/;"	v
primary	library\Zend\Db\Table\Row\Abstract.php	/^        $primary = array_flip($this->_primary);$/;"	v
primaryKey	library\Zend\Db\Table\Row\Abstract.php	/^        $primaryKey = $this->_getPrimaryKey($useDirty);$/;"	v
primaryKey	library\Zend\Db\Table\Row\Abstract.php	/^        $primaryKey = $this->_getPrimaryKey(true);$/;"	v
primaryKey	library\Zend\Db\Table\Row\Abstract.php	/^        $primaryKey = $this->_getTable()->insert($data);$/;"	v
result	library\Zend\Db\Table\Row\Abstract.php	/^        $result = $this->_getTable()->delete($where);$/;"	v
row	library\Zend\Db\Table\Row\Abstract.php	/^        $row = $this->_getTable()->fetchRow($where);$/;"	v
rowset	library\Zend\Db\Table\Row\Abstract.php	/^        $rowset = new $rowsetClass($config);$/;"	v
rowsetClass	library\Zend\Db\Table\Row\Abstract.php	/^        $rowsetClass = $matchTable->getRowsetClass();$/;"	v
ruleKey1	library\Zend\Db\Table\Row\Abstract.php	/^            $ruleKey1 = isset($matches[2]) ? $matches[2] : null;$/;"	v
ruleKey1	library\Zend\Db\Table\Row\Abstract.php	/^            $ruleKey1 = isset($matches[3]) ? $matches[3] : null;$/;"	v
ruleKey2	library\Zend\Db\Table\Row\Abstract.php	/^            $ruleKey2 = isset($matches[4]) ? $matches[4] : null;$/;"	v
select	library\Zend\Db\Table\Row\Abstract.php	/^            $select = $args[0];$/;"	v
select	library\Zend\Db\Table\Row\Abstract.php	/^            $select = $dependentTable->select();$/;"	v
select	library\Zend\Db\Table\Row\Abstract.php	/^            $select = $matchTable->select();$/;"	v
select	library\Zend\Db\Table\Row\Abstract.php	/^            $select = $parentTable->select();$/;"	v
select	library\Zend\Db\Table\Row\Abstract.php	/^            $select = null;$/;"	v
stmt	library\Zend\Db\Table\Row\Abstract.php	/^        $stmt = $select->query();$/;"	v
t	library\Zend\Db\Table\Row\Abstract.php	/^                    $t = $this->_getTableFromString($tableClass);$/;"	v
t	library\Zend\Db\Table\Row\Abstract.php	/^                $t = $this->_getTableFromString($tableClass);$/;"	v
tableClass	library\Zend\Db\Table\Row\Abstract.php	/^        $tableClass = get_class($table);$/;"	v
tableDefinition	library\Zend\Db\Table\Row\Abstract.php	/^            $tableDefinition = $this->_table->getDefinition();$/;"	v
tableName	library\Zend\Db\Table\Row\Abstract.php	/^            $tableName = $db->quoteIdentifier($info[Zend_Db_Table_Abstract::NAME], true);$/;"	v
tempPrimaryKey	library\Zend\Db\Table\Row\Abstract.php	/^            $tempPrimaryKey = (array) $this->_primary;$/;"	v
type	library\Zend\Db\Table\Row\Abstract.php	/^                $type = get_class($dependentTable);$/;"	v
type	library\Zend\Db\Table\Row\Abstract.php	/^                $type = get_class($intersectionTable);$/;"	v
type	library\Zend\Db\Table\Row\Abstract.php	/^                $type = get_class($matchTable);$/;"	v
type	library\Zend\Db\Table\Row\Abstract.php	/^                $type = get_class($parentTable);$/;"	v
type	library\Zend\Db\Table\Row\Abstract.php	/^            $type     = $parentInfo[Zend_Db_Table_Abstract::METADATA][$parentColumnName]['DATA_TYPE'];$/;"	v
type	library\Zend\Db\Table\Row\Abstract.php	/^            $type = $dependentInfo[Zend_Db_Table_Abstract::METADATA][$dependentColumnName]['DATA_TYPE'];$/;"	v
type	library\Zend\Db\Table\Row\Abstract.php	/^            $type = $interInfo[Zend_Db_Table_Abstract::METADATA][$interColumnName]['DATA_TYPE'];$/;"	v
type	library\Zend\Db\Table\Row\Abstract.php	/^            $type = $metadata[$column]['DATA_TYPE'];$/;"	v
type	library\Zend\Db\Table\Row\Abstract.php	/^            $type = gettype($dependentTable);$/;"	v
type	library\Zend\Db\Table\Row\Abstract.php	/^            $type = gettype($intersectionTable);$/;"	v
type	library\Zend\Db\Table\Row\Abstract.php	/^            $type = gettype($matchTable);$/;"	v
type	library\Zend\Db\Table\Row\Abstract.php	/^            $type = gettype($parentTable);$/;"	v
value	library\Zend\Db\Table\Row\Abstract.php	/^            $value = $this->_data[$callerColumnName];$/;"	v
value	library\Zend\Db\Table\Row\Abstract.php	/^            $value = $this->_data[$dependentColumnName];$/;"	v
value	library\Zend\Db\Table\Row\Abstract.php	/^            $value = $this->_data[$parentColumnName];$/;"	v
viaClass	library\Zend\Db\Table\Row\Abstract.php	/^            $viaClass = $matches[2];$/;"	v
where	library\Zend\Db\Table\Row\Abstract.php	/^        $where = $this->_getWhereQuery();$/;"	v
where	library\Zend\Db\Table\Row\Abstract.php	/^        $where = $this->_getWhereQuery(false);$/;"	v
where	library\Zend\Db\Table\Row\Abstract.php	/^        $where = array();$/;"	v
Zend_Db_Table_Row_Exception	library\Zend\Db\Table\Row\Exception.php	/^class Zend_Db_Table_Row_Exception extends Zend_Db_Table_Exception$/;"	c
Zend_Db_Table_Rowset	library\Zend\Db\Table\Rowset.php	/^class Zend_Db_Table_Rowset extends Zend_Db_Table_Rowset_Abstract$/;"	c
connected	library\Zend\Db\Table\Rowset\Abstract.php	/^            $connected = $row->setTable($table);$/;"	v
offset	library\Zend\Db\Table\Rowset\Abstract.php	/^        $offset = (int) $offset;$/;"	v
position	library\Zend\Db\Table\Rowset\Abstract.php	/^        $position = (int) $position;$/;"	v
row	library\Zend\Db\Table\Rowset\Abstract.php	/^            $row = $this->_loadAndReturnRow($position);$/;"	v
Zend_Db_Table_Rowset_Exception	library\Zend\Db\Table\Rowset\Exception.php	/^class Zend_Db_Table_Rowset_Exception extends Zend_Db_Table_Exception$/;"	c
Zend_Db_Table_Select	library\Zend\Db\Table\Select.php	/^class Zend_Db_Table_Select extends Zend_Db_Select$/;"	c
alias	library\Zend\Db\Table\Select.php	/^            $alias = $columnEntry[2];$/;"	v
cols	library\Zend\Db\Table\Select.php	/^        $cols     = $this->_info[Zend_Db_Table_Abstract::COLS];$/;"	v
column	library\Zend\Db\Table\Select.php	/^                $column = $alias;$/;"	v
column	library\Zend\Db\Table\Select.php	/^            $column = $columnEntry[1];$/;"	v
fields	library\Zend\Db\Table\Select.php	/^                $fields = $this->getPart(Zend_Db_Table_Select::COLUMNS);$/;"	v
fields	library\Zend\Db\Table\Select.php	/^        $fields   = $this->getPart(Zend_Db_Table_Select::COLUMNS);$/;"	v
fields	library\Zend\Db\Table\Select.php	/^        $fields  = $this->getPart(Zend_Db_Table_Select::COLUMNS);$/;"	v
from	library\Zend\Db\Table\Select.php	/^            $from = $this->getPart(Zend_Db_Table_Select::FROM);$/;"	v
info	library\Zend\Db\Table\Select.php	/^            $info = $name->info();$/;"	v
name	library\Zend\Db\Table\Select.php	/^            $name = $info[Zend_Db_Table_Abstract::NAME];$/;"	v
primary	library\Zend\Db\Table\Select.php	/^        $primary = $this->_info[Zend_Db_Table_Abstract::NAME];$/;"	v
readOnly	library\Zend\Db\Table\Select.php	/^                    $readOnly = true;$/;"	v
readOnly	library\Zend\Db\Table\Select.php	/^        $readOnly = false;$/;"	v
schema	library\Zend\Db\Table\Select.php	/^                $schema = $info[Zend_Db_Table_Abstract::SCHEMA];$/;"	v
schema	library\Zend\Db\Table\Select.php	/^        $schema  = $this->_info[Zend_Db_Table_Abstract::SCHEMA];$/;"	v
Zend_Db_Table_Select_Exception	library\Zend\Db\Table\Select\Exception.php	/^class Zend_Db_Table_Select_Exception extends Zend_Db_Select_Exception$/;"	c
Zend_Debug	library\Zend\Debug.php	/^class Zend_Debug$/;"	c
label	library\Zend\Debug.php	/^        $label = ($label===null) ? '' : rtrim($label) . ' ';$/;"	v
output	library\Zend\Debug.php	/^                $output = htmlspecialchars($output, ENT_QUOTES);$/;"	v
output	library\Zend\Debug.php	/^            $output = '<pre>'$/;"	v
output	library\Zend\Debug.php	/^            $output = PHP_EOL . $label$/;"	v
output	library\Zend\Debug.php	/^        $output = ob_get_clean();$/;"	v
output	library\Zend\Debug.php	/^        $output = preg_replace("\/\\]\\=\\>\\n(\\s+)\/m", "] => ", $output);$/;"	v
Zend_Dojo	library\Zend\Dojo.php	/^class Zend_Dojo$/;"	c
Zend_Dojo_BuildLayer	library\Zend\Dojo\BuildLayer.php	/^class Zend_Dojo_BuildLayer$/;"	c
content	library\Zend\Dojo\BuildLayer.php	/^        $content = 'dojo.provide("' . $layerName . '");' . "\\n\\n(function(){\\n";$/;"	v
helper	library\Zend\Dojo\BuildLayer.php	/^            $helper = $this->getDojoHelper();$/;"	v
helper	library\Zend\Dojo\BuildLayer.php	/^            $helper = $view->getHelper('dojo');$/;"	v
helper	library\Zend\Dojo\BuildLayer.php	/^        $helper        = $this->getDojoHelper();$/;"	v
javascript	library\Zend\Dojo\BuildLayer.php	/^            $javascript = implode("\\n", $helper->getJavascript());$/;"	v
javascript	library\Zend\Dojo\BuildLayer.php	/^        $javascript    = $helper->getJavascript();$/;"	v
layerName	library\Zend\Dojo\BuildLayer.php	/^        $layerName       = $this->getLayerName();$/;"	v
layerName	library\Zend\Dojo\BuildLayer.php	/^        $layerName     = $this->getLayerName();$/;"	v
layerName	library\Zend\Dojo\BuildLayer.php	/^        $layerName = $this->getLayerName();$/;"	v
layerScriptPath	library\Zend\Dojo\BuildLayer.php	/^        $layerScriptPath = $this->getLayerScriptPath();$/;"	v
method	library\Zend\Dojo\BuildLayer.php	/^            $method = 'set' . ucfirst($key);$/;"	v
methods	library\Zend\Dojo\BuildLayer.php	/^        $methods = get_class_methods($this);$/;"	v
modulePaths	library\Zend\Dojo\BuildLayer.php	/^        $modulePaths   = $helper->getModulePaths();$/;"	v
modules	library\Zend\Dojo\BuildLayer.php	/^                $modules = $helper->getModules();$/;"	v
modules	library\Zend\Dojo\BuildLayer.php	/^        $modules       = $helper->getModules();$/;"	v
onLoadActions	library\Zend\Dojo\BuildLayer.php	/^        $onLoadActions = $helper->getOnLoadActions();$/;"	v
options	library\Zend\Dojo\BuildLayer.php	/^                $options = $options->toArray();$/;"	v
path	library\Zend\Dojo\BuildLayer.php	/^            $path = '..\/' . $prefix;$/;"	v
prefix	library\Zend\Dojo\BuildLayer.php	/^                    $prefix = $this->_getPrefix($module);$/;"	v
prefix	library\Zend\Dojo\BuildLayer.php	/^            $prefix    = $this->_getPrefix($layerName);$/;"	v
profile	library\Zend\Dojo\BuildLayer.php	/^        $profile = $profileOptions;$/;"	v
profile	library\Zend\Dojo\BuildLayer.php	/^        $profile = Zend_Json::encode($profile);$/;"	v
profile	library\Zend\Dojo\BuildLayer.php	/^        $profile = preg_replace('\/' . preg_quote('\\\\') . '\/', '', $profile);$/;"	v
profile	library\Zend\Dojo\BuildLayer.php	/^        $profile = trim($profile, '"');$/;"	v
profileOptions	library\Zend\Dojo\BuildLayer.php	/^        $profileOptions  = $this->getProfileOptions();$/;"	v
profilePrefixes	library\Zend\Dojo\BuildLayer.php	/^        $profilePrefixes = $this->getProfilePrefixes();$/;"	v
segments	library\Zend\Dojo\BuildLayer.php	/^        $segments  = explode('.', $module, 2);$/;"	v
view	library\Zend\Dojo\BuildLayer.php	/^        $view = $this->getView();$/;"	v
Zend_Dojo_Data	library\Zend\Dojo\Data.php	/^class Zend_Dojo_Data implements ArrayAccess,Iterator,Countable$/;"	c
array	library\Zend\Dojo\Data.php	/^        $array = array($/;"	v
data	library\Zend\Dojo\Data.php	/^        $data = Zend_Json::decode($json);$/;"	v
id	library\Zend\Dojo\Data.php	/^            $id = $item[$identifier];$/;"	v
item	library\Zend\Dojo\Data.php	/^                $item = $item->toArray();$/;"	v
item	library\Zend\Dojo\Data.php	/^                $item = get_object_vars($item);$/;"	v
item	library\Zend\Dojo\Data.php	/^        $item = $this->_normalizeItem($item, $id);$/;"	v
metadata	library\Zend\Dojo\Data.php	/^        $metadata = $this->getMetadata();$/;"	v
Zend_Dojo_Exception	library\Zend\Dojo\Exception.php	/^class Zend_Dojo_Exception extends Zend_Exception$/;"	c
Zend_Dojo_Form	library\Zend\Dojo\Form.php	/^class Zend_Dojo_Form extends Zend_Form$/;"	c
decorators	library\Zend\Dojo\Form.php	/^        $decorators = $this->getDecorators();$/;"	v
Zend_Dojo_Form_Decorator_AccordionContainer	library\Zend\Dojo\Form\Decorator\AccordionContainer.php	/^class Zend_Dojo_Form_Decorator_AccordionContainer extends Zend_Dojo_Form_Decorator_DijitContainer$/;"	c
Zend_Dojo_Form_Decorator_AccordionPane	library\Zend\Dojo\Form\Decorator\AccordionPane.php	/^class Zend_Dojo_Form_Decorator_AccordionPane extends Zend_Dojo_Form_Decorator_DijitContainer$/;"	c
Zend_Dojo_Form_Decorator_BorderContainer	library\Zend\Dojo\Form\Decorator\BorderContainer.php	/^class Zend_Dojo_Form_Decorator_BorderContainer extends Zend_Dojo_Form_Decorator_DijitContainer$/;"	c
Zend_Dojo_Form_Decorator_ContentPane	library\Zend\Dojo\Form\Decorator\ContentPane.php	/^class Zend_Dojo_Form_Decorator_ContentPane extends Zend_Dojo_Form_Decorator_DijitContainer$/;"	c
attribs	library\Zend\Dojo\Form\Decorator\DijitContainer.php	/^            $attribs = $this->getElement()->getAttribs();$/;"	v
attribs	library\Zend\Dojo\Form\Decorator\DijitContainer.php	/^        $attribs     = array_merge($this->getAttribs(), $this->getOptions());$/;"	v
base	library\Zend\Dojo\Form\Decorator\DijitContainer.php	/^            $base = $id;$/;"	v
dijitParams	library\Zend\Dojo\Form\Decorator\DijitContainer.php	/^        $dijitParams = $this->getDijitParams();$/;"	v
element	library\Zend\Dojo\Form\Decorator\DijitContainer.php	/^        $element = $this->getElement();$/;"	v
helper	library\Zend\Dojo\Form\Decorator\DijitContainer.php	/^        $helper      = $this->getHelper();$/;"	v
id	library\Zend\Dojo\Form\Decorator\DijitContainer.php	/^                $id = $base . '-' . uniqid();$/;"	v
id	library\Zend\Dojo\Form\Decorator\DijitContainer.php	/^        $id          = $element->getId() . '-' . $helper;$/;"	v
options	library\Zend\Dojo\Form\Decorator\DijitContainer.php	/^            $options = $this->getOptions();$/;"	v
title	library\Zend\Dojo\Form\Decorator\DijitContainer.php	/^                    $title = $element->getLegend();$/;"	v
title	library\Zend\Dojo\Form\Decorator\DijitContainer.php	/^                    $title = $translator->translate($title);$/;"	v
title	library\Zend\Dojo\Form\Decorator\DijitContainer.php	/^            $title = null;$/;"	v
view	library\Zend\Dojo\Form\Decorator\DijitContainer.php	/^        $view    = $element->getView();$/;"	v
Zend_Dojo_Form_Decorator_DijitElement	library\Zend\Dojo\Form\Decorator\DijitElement.php	/^class Zend_Dojo_Form_Decorator_DijitElement extends Zend_Form_Decorator_ViewHelper$/;"	c
attribs	library\Zend\Dojo\Form\Decorator\DijitElement.php	/^        $attribs   = $this->getElementAttribs();$/;"	v
base	library\Zend\Dojo\Form\Decorator\DijitElement.php	/^            $base = $id;$/;"	v
dijitParams	library\Zend\Dojo\Form\Decorator\DijitElement.php	/^        $dijitParams = $this->getDijitParams();$/;"	v
element	library\Zend\Dojo\Form\Decorator\DijitElement.php	/^        $element = $this->getElement();$/;"	v
elementContent	library\Zend\Dojo\Form\Decorator\DijitElement.php	/^        $elementContent = $view->$helper($name, $value, $dijitParams, $attribs, $options);$/;"	v
helper	library\Zend\Dojo\Form\Decorator\DijitElement.php	/^        $helper    = $this->getHelper();$/;"	v
id	library\Zend\Dojo\Form\Decorator\DijitElement.php	/^                $id = $base . '-' . uniqid();$/;"	v
id	library\Zend\Dojo\Form\Decorator\DijitElement.php	/^        $id = $element->getId();$/;"	v
key	library\Zend\Dojo\Form\Decorator\DijitElement.php	/^        $key = (string) $key;$/;"	v
name	library\Zend\Dojo\Form\Decorator\DijitElement.php	/^        $name      = $element->getFullyQualifiedName();$/;"	v
options	library\Zend\Dojo\Form\Decorator\DijitElement.php	/^               $options = $attribs['options'];$/;"	v
options	library\Zend\Dojo\Form\Decorator\DijitElement.php	/^        $options = null;$/;"	v
separator	library\Zend\Dojo\Form\Decorator\DijitElement.php	/^        $separator = $this->getSeparator();$/;"	v
value	library\Zend\Dojo\Form\Decorator\DijitElement.php	/^        $value     = $this->getValue($element);$/;"	v
view	library\Zend\Dojo\Form\Decorator\DijitElement.php	/^        $view = $element->getView();$/;"	v
Zend_Dojo_Form_Decorator_DijitForm	library\Zend\Dojo\Form\Decorator\DijitForm.php	/^class Zend_Dojo_Form_Decorator_DijitForm extends Zend_Dojo_Form_Decorator_DijitContainer$/;"	c
attribs	library\Zend\Dojo\Form\Decorator\DijitForm.php	/^        $attribs     = array_merge($this->getAttribs(), $this->getOptions());$/;"	v
dijitParams	library\Zend\Dojo\Form\Decorator\DijitForm.php	/^        $dijitParams = $this->getDijitParams();$/;"	v
element	library\Zend\Dojo\Form\Decorator\DijitForm.php	/^        $element = $this->getElement();$/;"	v
view	library\Zend\Dojo\Form\Decorator\DijitForm.php	/^        $view    = $element->getView();$/;"	v
Zend_Dojo_Form_Decorator_SplitContainer	library\Zend\Dojo\Form\Decorator\SplitContainer.php	/^class Zend_Dojo_Form_Decorator_SplitContainer extends Zend_Dojo_Form_Decorator_DijitContainer$/;"	c
Zend_Dojo_Form_Decorator_StackContainer	library\Zend\Dojo\Form\Decorator\StackContainer.php	/^class Zend_Dojo_Form_Decorator_StackContainer extends Zend_Dojo_Form_Decorator_DijitContainer$/;"	c
Zend_Dojo_Form_Decorator_TabContainer	library\Zend\Dojo\Form\Decorator\TabContainer.php	/^class Zend_Dojo_Form_Decorator_TabContainer extends Zend_Dojo_Form_Decorator_DijitContainer$/;"	c
Zend_Dojo_Form_DisplayGroup	library\Zend\Dojo\Form\DisplayGroup.php	/^class Zend_Dojo_Form_DisplayGroup extends Zend_Form_DisplayGroup$/;"	c
Zend_Dojo_Form_Element_Button	library\Zend\Dojo\Form\Element\Button.php	/^class Zend_Dojo_Form_Element_Button extends Zend_Dojo_Form_Element_Dijit$/;"	c
decorators	library\Zend\Dojo\Form\Element\Button.php	/^        $decorators = $this->getDecorators();$/;"	v
options	library\Zend\Dojo\Form\Element\Button.php	/^            $options = array('label' => $options);$/;"	v
value	library\Zend\Dojo\Form\Element\Button.php	/^            $value = $this->getName();$/;"	v
value	library\Zend\Dojo\Form\Element\Button.php	/^        $value = $this->getValue();$/;"	v
value	library\Zend\Dojo\Form\Element\Button.php	/^        $value = parent::getLabel();$/;"	v
Zend_Dojo_Form_Element_CheckBox	library\Zend\Dojo\Form\Element\CheckBox.php	/^class Zend_Dojo_Form_Element_CheckBox extends Zend_Dojo_Form_Element_Dijit$/;"	c
curValue	library\Zend\Dojo\Form\Element\CheckBox.php	/^        $curValue = $this->getValue();$/;"	v
test	library\Zend\Dojo\Form\Element\CheckBox.php	/^        $test     = array($this->getCheckedValue(), $this->getUncheckedValue());$/;"	v
Zend_Dojo_Form_Element_ComboBox	library\Zend\Dojo\Form\Element\ComboBox.php	/^class Zend_Dojo_Form_Element_ComboBox extends Zend_Dojo_Form_Element_DijitMulti$/;"	c
store	library\Zend\Dojo\Form\Element\ComboBox.php	/^        $store = $this->getStoreInfo();$/;"	v
storeInfo	library\Zend\Dojo\Form\Element\ComboBox.php	/^        $storeInfo = $this->getStoreInfo();$/;"	v
Zend_Dojo_Form_Element_CurrencyTextBox	library\Zend\Dojo\Form\Element\CurrencyTextBox.php	/^class Zend_Dojo_Form_Element_CurrencyTextBox extends Zend_Dojo_Form_Element_NumberTextBox$/;"	c
length	library\Zend\Dojo\Form\Element\CurrencyTextBox.php	/^        $length = strlen($symbol);$/;"	v
symbol	library\Zend\Dojo\Form\Element\CurrencyTextBox.php	/^            $symbol = substr($symbol, 0, 3);$/;"	v
symbol	library\Zend\Dojo\Form\Element\CurrencyTextBox.php	/^        $symbol = strtoupper((string) $symbol);$/;"	v
Zend_Dojo_Form_Element_DateTextBox	library\Zend\Dojo\Form\Element\DateTextBox.php	/^class Zend_Dojo_Form_Element_DateTextBox extends Zend_Dojo_Form_Element_ValidationTextBox$/;"	c
formatLength	library\Zend\Dojo\Form\Element\DateTextBox.php	/^        $formatLength = strtolower($formatLength);$/;"	v
selector	library\Zend\Dojo\Form\Element\DateTextBox.php	/^        $selector = strtolower($selector);$/;"	v
decorators	library\Zend\Dojo\Form\Element\Dijit.php	/^        $decorators = $this->getDecorators();$/;"	v
key	library\Zend\Dojo\Form\Element\Dijit.php	/^        $key = (string) $key;$/;"	v
option	library\Zend\Dojo\Form\Element\DijitMulti.php	/^        $option  = (string) $option;$/;"	v
options	library\Zend\Dojo\Form\Element\DijitMulti.php	/^                $options = $this->getMultiOptions();$/;"	v
Zend_Dojo_Form_Element_Editor	library\Zend\Dojo\Form\Element\Editor.php	/^class Zend_Dojo_Form_Element_Editor extends Zend_Dojo_Form_Element_Dijit$/;"	c
captureEvents	library\Zend\Dojo\Form\Element\Editor.php	/^        $captureEvents = $this->getCaptureEvents();$/;"	v
event	library\Zend\Dojo\Form\Element\Editor.php	/^        $event = (string) $event;$/;"	v
events	library\Zend\Dojo\Form\Element\Editor.php	/^        $events = $this->getEvents();$/;"	v
plugin	library\Zend\Dojo\Form\Element\Editor.php	/^        $plugin = (string) $plugin;$/;"	v
plugins	library\Zend\Dojo\Form\Element\Editor.php	/^        $plugins = $this->getPlugins();$/;"	v
styleSheets	library\Zend\Dojo\Form\Element\Editor.php	/^        $styleSheets = $this->getStyleSheets();$/;"	v
styleSheets	library\Zend\Dojo\Form\Element\Editor.php	/^        $styleSheets = explode(';', $styleSheets);$/;"	v
stylesheets	library\Zend\Dojo\Form\Element\Editor.php	/^            $stylesheets = (array) $stylesheets;$/;"	v
stylesheets	library\Zend\Dojo\Form\Element\Editor.php	/^            $stylesheets = array();$/;"	v
stylesheets	library\Zend\Dojo\Form\Element\Editor.php	/^            $stylesheets = explode(';', $stylesheets);$/;"	v
stylesheets	library\Zend\Dojo\Form\Element\Editor.php	/^        $stylesheets = $this->getStyleSheets();$/;"	v
Zend_Dojo_Form_Element_FilteringSelect	library\Zend\Dojo\Form\Element\FilteringSelect.php	/^class Zend_Dojo_Form_Element_FilteringSelect extends Zend_Dojo_Form_Element_ComboBox$/;"	c
Zend_Dojo_Form_Element_HorizontalSlider	library\Zend\Dojo\Form\Element\HorizontalSlider.php	/^class Zend_Dojo_Form_Element_HorizontalSlider extends Zend_Dojo_Form_Element_Slider$/;"	c
decoration	library\Zend\Dojo\Form\Element\HorizontalSlider.php	/^        $decoration = $this->getBottomDecoration();$/;"	v
decoration	library\Zend\Dojo\Form\Element\HorizontalSlider.php	/^        $decoration = $this->getTopDecoration();$/;"	v
Zend_Dojo_Form_Element_NumberSpinner	library\Zend\Dojo\Form\Element\NumberSpinner.php	/^class Zend_Dojo_Form_Element_NumberSpinner extends Zend_Dojo_Form_Element_ValidationTextBox$/;"	c
constraints	library\Zend\Dojo\Form\Element\NumberSpinner.php	/^            $constraints = $this->getDijitParam('constraints');$/;"	v
constraints	library\Zend\Dojo\Form\Element\NumberSpinner.php	/^        $constraints = $this->getDijitParam('constraints');$/;"	v
constraints	library\Zend\Dojo\Form\Element\NumberSpinner.php	/^        $constraints = array();$/;"	v
Zend_Dojo_Form_Element_NumberTextBox	library\Zend\Dojo\Form\Element\NumberTextBox.php	/^class Zend_Dojo_Form_Element_NumberTextBox extends Zend_Dojo_Form_Element_ValidationTextBox$/;"	c
type	library\Zend\Dojo\Form\Element\NumberTextBox.php	/^        $type = strtolower($type);$/;"	v
Zend_Dojo_Form_Element_PasswordTextBox	library\Zend\Dojo\Form\Element\PasswordTextBox.php	/^class Zend_Dojo_Form_Element_PasswordTextBox extends Zend_Dojo_Form_Element_ValidationTextBox$/;"	c
Zend_Dojo_Form_Element_RadioButton	library\Zend\Dojo\Form\Element\RadioButton.php	/^class Zend_Dojo_Form_Element_RadioButton extends Zend_Dojo_Form_Element_DijitMulti$/;"	c
Zend_Dojo_Form_Element_SimpleTextarea	library\Zend\Dojo\Form\Element\SimpleTextarea.php	/^class Zend_Dojo_Form_Element_SimpleTextarea extends Zend_Dojo_Form_Element_Dijit$/;"	c
Zend_Dojo_Form_Element_SubmitButton	library\Zend\Dojo\Form\Element\SubmitButton.php	/^class Zend_Dojo_Form_Element_SubmitButton extends Zend_Dojo_Form_Element_Button$/;"	c
Zend_Dojo_Form_Element_TextBox	library\Zend\Dojo\Form\Element\TextBox.php	/^class Zend_Dojo_Form_Element_TextBox extends Zend_Dojo_Form_Element_Dijit$/;"	c
Zend_Dojo_Form_Element_Textarea	library\Zend\Dojo\Form\Element\Textarea.php	/^class Zend_Dojo_Form_Element_Textarea extends Zend_Dojo_Form_Element_Dijit$/;"	c
Zend_Dojo_Form_Element_TimeTextBox	library\Zend\Dojo\Form\Element\TimeTextBox.php	/^class Zend_Dojo_Form_Element_TimeTextBox extends Zend_Dojo_Form_Element_DateTextBox$/;"	c
format	library\Zend\Dojo\Form\Element\TimeTextBox.php	/^        $format = (string) $format;$/;"	v
Zend_Dojo_Form_Element_ValidationTextBox	library\Zend\Dojo\Form\Element\ValidationTextBox.php	/^class Zend_Dojo_Form_Element_ValidationTextBox extends Zend_Dojo_Form_Element_TextBox$/;"	c
constraints	library\Zend\Dojo\Form\Element\ValidationTextBox.php	/^        $constraints = $this->getConstraints();$/;"	v
constraints	library\Zend\Dojo\Form\Element\ValidationTextBox.php	/^        $constraints = array_merge($tmp, $constraints);$/;"	v
item	library\Zend\Dojo\Form\Element\ValidationTextBox.php	/^            $item = ($item) ? 'true' : 'false';$/;"	v
key	library\Zend\Dojo\Form\Element\ValidationTextBox.php	/^        $key = (string) $key;$/;"	v
tmp	library\Zend\Dojo\Form\Element\ValidationTextBox.php	/^        $tmp = $this->getConstraints();$/;"	v
Zend_Dojo_Form_Element_VerticalSlider	library\Zend\Dojo\Form\Element\VerticalSlider.php	/^class Zend_Dojo_Form_Element_VerticalSlider extends Zend_Dojo_Form_Element_Slider$/;"	c
decoration	library\Zend\Dojo\Form\Element\VerticalSlider.php	/^        $decoration = $this->getLeftDecoration();$/;"	v
decoration	library\Zend\Dojo\Form\Element\VerticalSlider.php	/^        $decoration = $this->getRightDecoration();$/;"	v
Zend_Dojo_Form_SubForm	library\Zend\Dojo\Form\SubForm.php	/^class Zend_Dojo_Form_SubForm extends Zend_Form_SubForm$/;"	c
decorators	library\Zend\Dojo\Form\SubForm.php	/^        $decorators = $this->getDecorators();$/;"	v
view	library\Zend\Dojo\Form\SubForm.php	/^        $view = parent::getView();$/;"	v
Zend_Dojo_View_Exception	library\Zend\Dojo\View\Exception.php	/^class Zend_Dojo_View_Exception extends Zend_Dojo_Exception$/;"	c
Zend_Dojo_View_Helper_AccordionContainer	library\Zend\Dojo\View\Helper\AccordionContainer.php	/^class Zend_Dojo_View_Helper_AccordionContainer extends Zend_Dojo_View_Helper_DijitContainer$/;"	c
Zend_Dojo_View_Helper_AccordionPane	library\Zend\Dojo\View\Helper\AccordionPane.php	/^class Zend_Dojo_View_Helper_AccordionPane extends Zend_Dojo_View_Helper_DijitContainer$/;"	c
Zend_Dojo_View_Helper_BorderContainer	library\Zend\Dojo\View\Helper\BorderContainer.php	/^class Zend_Dojo_View_Helper_BorderContainer extends Zend_Dojo_View_Helper_DijitContainer$/;"	c
Zend_Dojo_View_Helper_Button	library\Zend\Dojo\View\Helper\Button.php	/^class Zend_Dojo_View_Helper_Button extends Zend_Dojo_View_Helper_Dijit$/;"	c
attribs	library\Zend\Dojo\View\Helper\Button.php	/^        $attribs = $this->_prepareDijit($attribs, $params, 'element');$/;"	v
Zend_Dojo_View_Helper_CheckBox	library\Zend\Dojo\View\Helper\CheckBox.php	/^class Zend_Dojo_View_Helper_CheckBox extends Zend_Dojo_View_Helper_Dijit$/;"	c
attribs	library\Zend\Dojo\View\Helper\CheckBox.php	/^        $attribs = $this->_prepareDijit($attribs, $params, 'element');$/;"	v
checkboxInfo	library\Zend\Dojo\View\Helper\CheckBox.php	/^        $checkboxInfo = Zend_View_Helper_FormCheckbox::determineCheckboxInfo($value, $checked, $checkedOptions);$/;"	v
checked	library\Zend\Dojo\View\Helper\CheckBox.php	/^            $checked = false;$/;"	v
checked	library\Zend\Dojo\View\Helper\CheckBox.php	/^            $checked = true;$/;"	v
checked	library\Zend\Dojo\View\Helper\CheckBox.php	/^        $checked = false;$/;"	v
html	library\Zend\Dojo\View\Helper\CheckBox.php	/^        $html = '';$/;"	v
Zend_Dojo_View_Helper_ComboBox	library\Zend\Dojo\View\Helper\ComboBox.php	/^class Zend_Dojo_View_Helper_ComboBox extends Zend_Dojo_View_Helper_Dijit$/;"	c
attribs	library\Zend\Dojo\View\Helper\ComboBox.php	/^        $attribs = $this->_prepareDijit($attribs, $params, 'element');$/;"	v
extraParams	library\Zend\Dojo\View\Helper\ComboBox.php	/^            $extraParams = $params['params'];$/;"	v
extraParams	library\Zend\Dojo\View\Helper\ComboBox.php	/^        $extraParams = array();$/;"	v
html	library\Zend\Dojo\View\Helper\ComboBox.php	/^        $html = '';$/;"	v
js	library\Zend\Dojo\View\Helper\ComboBox.php	/^                $js = "function() {\\n$js\\n}";$/;"	v
js	library\Zend\Dojo\View\Helper\ComboBox.php	/^                $js = $storeParams['jsId'] . ' = '$/;"	v
storeParams	library\Zend\Dojo\View\Helper\ComboBox.php	/^                $storeParams = array($/;"	v
storeParams	library\Zend\Dojo\View\Helper\ComboBox.php	/^            $storeParams = array_merge($storeParams, $params['params']);$/;"	v
storeParams	library\Zend\Dojo\View\Helper\ComboBox.php	/^        $storeParams = array($/;"	v
Zend_Dojo_View_Helper_ContentPane	library\Zend\Dojo\View\Helper\ContentPane.php	/^class Zend_Dojo_View_Helper_ContentPane extends Zend_Dojo_View_Helper_DijitContainer$/;"	c
Zend_Dojo_View_Helper_CurrencyTextBox	library\Zend\Dojo\View\Helper\CurrencyTextBox.php	/^class Zend_Dojo_View_Helper_CurrencyTextBox extends Zend_Dojo_View_Helper_Dijit$/;"	c
Zend_Dojo_View_Helper_CustomDijit	library\Zend\Dojo\View\Helper\CustomDijit.php	/^class Zend_Dojo_View_Helper_CustomDijit extends Zend_Dojo_View_Helper_DijitContainer$/;"	c
Zend_Dojo_View_Helper_DateTextBox	library\Zend\Dojo\View\Helper\DateTextBox.php	/^class Zend_Dojo_View_Helper_DateTextBox extends Zend_Dojo_View_Helper_Dijit$/;"	c
attribs	library\Zend\Dojo\View\Helper\Dijit.php	/^            $attribs = array_merge($attribs, $params);$/;"	v
attribs	library\Zend\Dojo\View\Helper\Dijit.php	/^        $attribs = $this->_prepareDijit($attribs, $params, 'element', $dijit);$/;"	v
attribs	library\Zend\Dojo\View\Helper\Dijit.php	/^        $attribs = $this->_prepareDijit($attribs, $params, 'layout', $dijit);$/;"	v
dijit	library\Zend\Dojo\View\Helper\Dijit.php	/^        $dijit = (null === $dijit) ? $this->_dijit : $dijit;$/;"	v
function	library\Zend\Dojo\View\Helper\Dijit.php	/^        $function =<<<EOJ$/;"	v
hiddenAttribs	library\Zend\Dojo\View\Helper\Dijit.php	/^        $hiddenAttribs = array($/;"	v
html	library\Zend\Dojo\View\Helper\Dijit.php	/^        $html = '<' . $nodeType . $this->_htmlAttribs($attribs) . '>'$/;"	v
html	library\Zend\Dojo\View\Helper\Dijit.php	/^        $html = '<input'$/;"	v
item	library\Zend\Dojo\View\Helper\Dijit.php	/^        $item = ($item) ? "true" : "false";$/;"	v
nodeType	library\Zend\Dojo\View\Helper\Dijit.php	/^        $nodeType = $this->getRootNode();$/;"	v
stripParams	library\Zend\Dojo\View\Helper\Dijit.php	/^                $stripParams = array('id');$/;"	v
stripParams	library\Zend\Dojo\View\Helper\Dijit.php	/^                $stripParams = array('id', 'name', 'type', 'degrade');$/;"	v
stripParams	library\Zend\Dojo\View\Helper\Dijit.php	/^                $stripParams = array('id', 'name', 'value', 'type');$/;"	v
values	library\Zend\Dojo\View\Helper\Dijit.php	/^                    $values = (array) $params[$param];$/;"	v
values	library\Zend\Dojo\View\Helper\Dijit.php	/^                    $values = array();$/;"	v
values	library\Zend\Dojo\View\Helper\Dijit.php	/^                    $values = str_replace('"', "'", $values);$/;"	v
values	library\Zend\Dojo\View\Helper\Dijit.php	/^                $values = Zend_Json::encode($values);$/;"	v
content	library\Zend\Dojo\View\Helper\DijitContainer.php	/^        $content = ob_get_clean();$/;"	v
Zend_Dojo_View_Helper_Dojo	library\Zend\Dojo\View\Helper\Dojo.php	/^class Zend_Dojo_View_Helper_Dojo$/;"	c
container	library\Zend\Dojo\View\Helper\Dojo.php	/^            $container = new Zend_Dojo_View_Helper_Dojo_Container();$/;"	v
registry	library\Zend\Dojo\View\Helper\Dojo.php	/^        $registry = Zend_Registry::getInstance();$/;"	v
style	library\Zend\Dojo\View\Helper\Dojo.php	/^            $style = self::PROGRAMMATIC_SCRIPT;$/;"	v
Zend_Dojo_View_Helper_Dojo_Container	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^class Zend_Dojo_View_Helper_Dojo_Container$/;"	c
base	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^            $base = $this->_getLocalRelativePath();$/;"	v
base	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^            $base = $this->getCdnBase()$/;"	v
content	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^        $content = '';$/;"	v
data	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^        $data               = ob_get_clean();$/;"	v
djConfigValues	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^        $djConfigValues = $this->getDjConfig();$/;"	v
enc	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^            $enc = $this->view->getEncoding();$/;"	v
enc	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^        $enc = 'UTF-8';$/;"	v
html	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^        $html  = $this->_renderStylesheets() . PHP_EOL$/;"	v
html	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^        $html = '<script type="text\/javascript">' . PHP_EOL$/;"	v
html	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^        $html = array();$/;"	v
javascript	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^        $javascript = implode("\\n    ", $this->getJavascript());$/;"	v
js	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^            $js =<<<EOJ$/;"	v
js	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^        $js = array();$/;"	v
js	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^        $js = trim($js);$/;"	v
key	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^            $key = strtolower($key);$/;"	v
layers	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^        $layers = $this->getLayers();$/;"	v
layers	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^        $layers = array_flip($this->_layers);$/;"	v
localPath	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^            $localPath = $this->getLocalPath();$/;"	v
localPath	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^            $localPath = preg_replace('|[\/\\\\\\\\]dojo[\/\\\\\\\\]dojo.js[^\/\\\\\\\\]*$|i', '', $localPath);$/;"	v
modulePaths	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^        $modulePaths = $this->getModulePaths();$/;"	v
modules	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^        $modules = $this->getModules();$/;"	v
modules	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^        $modules = (array) $modules;$/;"	v
onLoadActions	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^        $onLoadActions = array();$/;"	v
option	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^        $option = (string) $option;$/;"	v
options	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^            $options = $options->toArray();$/;"	v
path	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^        $path = (string) $path;$/;"	v
registeredStylesheets	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^        $registeredStylesheets = $this->getStylesheetModules();$/;"	v
scriptTag	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^        $scriptTag = '<script type="text\/javascript" src="' . $source . '"><\/script>';$/;"	v
scriptTag	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^        $scriptTag = '<script type="text\/javascript">' . PHP_EOL$/;"	v
source	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^            $source = $this->getCdnBase()$/;"	v
source	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^            $source = $this->getLocalPath();$/;"	v
style	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^        $style = '<style type="text\/css">' . PHP_EOL$/;"	v
stylesheet	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^            $stylesheet    = str_replace('.', '\/', $stylesheet);$/;"	v
themeName	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^            $themeName     = substr($stylesheet, strrpos($stylesheet, '.') + 1);$/;"	v
value	library\Zend\Dojo\View\Helper\Dojo\Container.php	/^                    $value = (array) $value;$/;"	v
Zend_Dojo_View_Helper_Editor	library\Zend\Dojo\View\Helper\Editor.php	/^class Zend_Dojo_View_Helper_Editor extends Zend_Dojo_View_Helper_Dijit$/;"	c
attribs	library\Zend\Dojo\View\Helper\Editor.php	/^        $attribs = $this->_prepareDijit($attribs, $params, 'textarea');$/;"	v
hiddenAttribs	library\Zend\Dojo\View\Helper\Editor.php	/^        $hiddenAttribs = array($/;"	v
hiddenId	library\Zend\Dojo\View\Helper\Editor.php	/^            $hiddenId = $attribs['id'];$/;"	v
hiddenId	library\Zend\Dojo\View\Helper\Editor.php	/^            $hiddenId = $hiddenName;$/;"	v
hiddenId	library\Zend\Dojo\View\Helper\Editor.php	/^        $hiddenId = $this->_normalizeId($hiddenId);$/;"	v
hiddenName	library\Zend\Dojo\View\Helper\Editor.php	/^        $hiddenName = $id;$/;"	v
html	library\Zend\Dojo\View\Helper\Editor.php	/^        $html  = '<div' . $this->_htmlAttribs($attribs) . '>'$/;"	v
modules	library\Zend\Dojo\View\Helper\Editor.php	/^        $modules = array();$/;"	v
name	library\Zend\Dojo\View\Helper\Editor.php	/^            $name = substr($name, 0, strlen($name) - 2);$/;"	v
pluginName	library\Zend\Dojo\View\Helper\Editor.php	/^                $pluginName = $this->_pluginsModules[$commandName];$/;"	v
textareaId	library\Zend\Dojo\View\Helper\Editor.php	/^        $textareaId   = $hiddenId . '-Editor';$/;"	v
textareaName	library\Zend\Dojo\View\Helper\Editor.php	/^        $textareaName = $this->_normalizeEditorName($hiddenName);$/;"	v
Zend_Dojo_View_Helper_FilteringSelect	library\Zend\Dojo\View\Helper\FilteringSelect.php	/^class Zend_Dojo_View_Helper_FilteringSelect extends Zend_Dojo_View_Helper_ComboBox$/;"	c
Zend_Dojo_View_Helper_Form	library\Zend\Dojo\View\Helper\Form.php	/^class Zend_Dojo_View_Helper_Form extends Zend_Dojo_View_Helper_Dijit$/;"	c
attribs	library\Zend\Dojo\View\Helper\Form.php	/^            $attribs = (array) $attribs;$/;"	v
attribs	library\Zend\Dojo\View\Helper\Form.php	/^        $attribs = $this->_prepareDijit($attribs, array(), 'layout');$/;"	v
Zend_Dojo_View_Helper_HorizontalSlider	library\Zend\Dojo\View\Helper\HorizontalSlider.php	/^class Zend_Dojo_View_Helper_HorizontalSlider extends Zend_Dojo_View_Helper_Slider$/;"	c
Zend_Dojo_View_Helper_NumberSpinner	library\Zend\Dojo\View\Helper\NumberSpinner.php	/^class Zend_Dojo_View_Helper_NumberSpinner extends Zend_Dojo_View_Helper_Dijit$/;"	c
constraints	library\Zend\Dojo\View\Helper\NumberSpinner.php	/^            $constraints = array();$/;"	v
Zend_Dojo_View_Helper_NumberTextBox	library\Zend\Dojo\View\Helper\NumberTextBox.php	/^class Zend_Dojo_View_Helper_NumberTextBox extends Zend_Dojo_View_Helper_Dijit$/;"	c
Zend_Dojo_View_Helper_PasswordTextBox	library\Zend\Dojo\View\Helper\PasswordTextBox.php	/^class Zend_Dojo_View_Helper_PasswordTextBox extends Zend_Dojo_View_Helper_ValidationTextBox$/;"	c
Zend_Dojo_View_Helper_RadioButton	library\Zend\Dojo\View\Helper\RadioButton.php	/^class Zend_Dojo_View_Helper_RadioButton extends Zend_Dojo_View_Helper_Dijit$/;"	c
attribs	library\Zend\Dojo\View\Helper\RadioButton.php	/^        $attribs = $this->_prepareDijit($attribs, $params, 'element');$/;"	v
baseId	library\Zend\Dojo\View\Helper\RadioButton.php	/^                $baseId = $attribs['id'];$/;"	v
baseId	library\Zend\Dojo\View\Helper\RadioButton.php	/^            $baseId = $id;$/;"	v
filter	library\Zend\Dojo\View\Helper\RadioButton.php	/^            $filter = new Zend_Filter_Alnum();$/;"	v
listsep	library\Zend\Dojo\View\Helper\RadioButton.php	/^        $listsep = "<br \/>\\n"$/;"	v
optId	library\Zend\Dojo\View\Helper\RadioButton.php	/^                $optId = $baseId . '-' . $filter->filter($key);$/;"	v
value	library\Zend\Dojo\View\Helper\RadioButton.php	/^        $value = null,$/;"	v
Zend_Dojo_View_Helper_SimpleTextarea	library\Zend\Dojo\View\Helper\SimpleTextarea.php	/^class Zend_Dojo_View_Helper_SimpleTextarea extends Zend_Dojo_View_Helper_Dijit$/;"	c
attribs	library\Zend\Dojo\View\Helper\SimpleTextarea.php	/^        $attribs = $this->_prepareDijit($attribs, $params, 'textarea');$/;"	v
html	library\Zend\Dojo\View\Helper\SimpleTextarea.php	/^        $html = '<textarea' . $this->_htmlAttribs($attribs) . '>'$/;"	v
attribs	library\Zend\Dojo\View\Helper\Slider.php	/^            $attribs = $decInfo['attribs'];$/;"	v
attribs	library\Zend\Dojo\View\Helper\Slider.php	/^        $attribs = $this->_prepareDijit($attribs, $params, 'layout', $dijit);$/;"	v
attribs	library\Zend\Dojo\View\Helper\Slider.php	/^        $attribs = array();$/;"	v
containerAttribs	library\Zend\Dojo\View\Helper\Slider.php	/^            $containerAttribs = $attribs;$/;"	v
containerAttribs	library\Zend\Dojo\View\Helper\Slider.php	/^            $containerAttribs = $attribs['container'];$/;"	v
containerAttribs	library\Zend\Dojo\View\Helper\Slider.php	/^        $containerAttribs = $this->_prepareDijit($containerAttribs, $containerParams, 'layout', $dijit);$/;"	v
containerAttribs	library\Zend\Dojo\View\Helper\Slider.php	/^        $containerAttribs = null;$/;"	v
containerHtml	library\Zend\Dojo\View\Helper\Slider.php	/^        $containerHtml = '<div' . $this->_htmlAttribs($containerAttribs) . "><\/div>\\n";$/;"	v
containerParams	library\Zend\Dojo\View\Helper\Slider.php	/^            $containerParams = $params;$/;"	v
containerParams	library\Zend\Dojo\View\Helper\Slider.php	/^            $containerParams = $params['container'];$/;"	v
containerParams	library\Zend\Dojo\View\Helper\Slider.php	/^        $containerParams = null;$/;"	v
content	library\Zend\Dojo\View\Helper\Slider.php	/^        $content = '';$/;"	v
dijit	library\Zend\Dojo\View\Helper\Slider.php	/^                $dijit = 'dijit.form.' . $dijit;$/;"	v
dijit	library\Zend\Dojo\View\Helper\Slider.php	/^            $dijit = $decInfo['dijit'];$/;"	v
dijit	library\Zend\Dojo\View\Helper\Slider.php	/^            $dijit = 'dijit.form.' . ucfirst($this->_sliderType) . 'Rule';$/;"	v
dijit	library\Zend\Dojo\View\Helper\Slider.php	/^        $dijit = 'dijit.form.' . ucfirst($this->_sliderType) . 'Rule';$/;"	v
dijit	library\Zend\Dojo\View\Helper\Slider.php	/^        $dijit = 'dijit.form.' . ucfirst($this->_sliderType) . 'RuleLabels';$/;"	v
hidden	library\Zend\Dojo\View\Helper\Slider.php	/^        $hidden = $this->_renderHiddenElement($id, $value);$/;"	v
hidden	library\Zend\Dojo\View\Helper\Slider.php	/^        $hidden = preg_replace('\/(name=")([^"]*)"\/', 'id="$2" $1$2"', $hidden);$/;"	v
id	library\Zend\Dojo\View\Helper\Slider.php	/^        $id  = rtrim($id, '-');$/;"	v
id	library\Zend\Dojo\View\Helper\Slider.php	/^        $id  = str_replace('][', '-', $id);$/;"	v
id	library\Zend\Dojo\View\Helper\Slider.php	/^        $id  = str_replace(array('[', ']'), '-', $id);$/;"	v
labelList	library\Zend\Dojo\View\Helper\Slider.php	/^        $labelList = $this->_prepareLabelsList($id, $labelsParams, $labelsAttribs, $labels);$/;"	v
labels	library\Zend\Dojo\View\Helper\Slider.php	/^        $labels  = $decInfo['labels'];$/;"	v
labelsAttribs	library\Zend\Dojo\View\Helper\Slider.php	/^            $labelsAttribs = $attribs;$/;"	v
labelsAttribs	library\Zend\Dojo\View\Helper\Slider.php	/^            $labelsAttribs = $attribs['labels'];$/;"	v
labelsParams	library\Zend\Dojo\View\Helper\Slider.php	/^            $labelsParams = $params;$/;"	v
labelsParams	library\Zend\Dojo\View\Helper\Slider.php	/^            $labelsParams = $params['labels'];$/;"	v
params	library\Zend\Dojo\View\Helper\Slider.php	/^            $params = $decInfo['params'];$/;"	v
params	library\Zend\Dojo\View\Helper\Slider.php	/^        $params  = array();$/;"	v
Zend_Dojo_View_Helper_SplitContainer	library\Zend\Dojo\View\Helper\SplitContainer.php	/^class Zend_Dojo_View_Helper_SplitContainer extends Zend_Dojo_View_Helper_DijitContainer$/;"	c
Zend_Dojo_View_Helper_StackContainer	library\Zend\Dojo\View\Helper\StackContainer.php	/^class Zend_Dojo_View_Helper_StackContainer extends Zend_Dojo_View_Helper_DijitContainer$/;"	c
Zend_Dojo_View_Helper_SubmitButton	library\Zend\Dojo\View\Helper\SubmitButton.php	/^class Zend_Dojo_View_Helper_SubmitButton extends Zend_Dojo_View_Helper_Button$/;"	c
value	library\Zend\Dojo\View\Helper\SubmitButton.php	/^            $value = $attribs['content'];$/;"	v
value	library\Zend\Dojo\View\Helper\SubmitButton.php	/^            $value = $params['content'];$/;"	v
Zend_Dojo_View_Helper_TabContainer	library\Zend\Dojo\View\Helper\TabContainer.php	/^class Zend_Dojo_View_Helper_TabContainer extends Zend_Dojo_View_Helper_DijitContainer$/;"	c
Zend_Dojo_View_Helper_TextBox	library\Zend\Dojo\View\Helper\TextBox.php	/^class Zend_Dojo_View_Helper_TextBox extends Zend_Dojo_View_Helper_Dijit$/;"	c
Zend_Dojo_View_Helper_Textarea	library\Zend\Dojo\View\Helper\Textarea.php	/^class Zend_Dojo_View_Helper_Textarea extends Zend_Dojo_View_Helper_Dijit$/;"	c
attribs	library\Zend\Dojo\View\Helper\Textarea.php	/^        $attribs = $this->_prepareDijit($attribs, $params, 'textarea');$/;"	v
html	library\Zend\Dojo\View\Helper\Textarea.php	/^        $html = '<textarea' . $this->_htmlAttribs($attribs) . '>'$/;"	v
Zend_Dojo_View_Helper_TimeTextBox	library\Zend\Dojo\View\Helper\TimeTextBox.php	/^class Zend_Dojo_View_Helper_TimeTextBox extends Zend_Dojo_View_Helper_Dijit$/;"	c
Zend_Dojo_View_Helper_ValidationTextBox	library\Zend\Dojo\View\Helper\ValidationTextBox.php	/^class Zend_Dojo_View_Helper_ValidationTextBox extends Zend_Dojo_View_Helper_Dijit$/;"	c
Zend_Dojo_View_Helper_VerticalSlider	library\Zend\Dojo\View\Helper\VerticalSlider.php	/^class Zend_Dojo_View_Helper_VerticalSlider extends Zend_Dojo_View_Helper_Slider$/;"	c
Zend_Dom_Exception	library\Zend\Dom\Exception.php	/^class Zend_Dom_Exception extends Zend_Exception$/;"	c
Zend_Dom_Query	library\Zend\Dom\Query.php	/^class Zend_Dom_Query$/;"	c
attr	library\Zend\Dom\Query.php	/^                    $attr = $node->attributes->getNamedItem($attributeName);$/;"	v
attributeName	library\Zend\Dom\Query.php	/^                $attributeName = substr($attribute, 1);$/;"	v
domDoc	library\Zend\Dom\Query.php	/^            $domDoc = new DOMDocument('1.0');$/;"	v
domDoc	library\Zend\Dom\Query.php	/^            $domDoc = new DOMDocument('1.0', $encoding);$/;"	v
encoding	library\Zend\Dom\Query.php	/^        $encoding = $this->getEncoding();$/;"	v
errors	library\Zend\Dom\Query.php	/^        $errors = libxml_get_errors();$/;"	v
nodeList	library\Zend\Dom\Query.php	/^        $nodeList   = $this->_getNodeList($domDoc, $xpathQuery);$/;"	v
nodes	library\Zend\Dom\Query.php	/^                $nodes = $xpath->query($queryString);$/;"	v
queryString	library\Zend\Dom\Query.php	/^                $queryString = '\/\/*[' . $attribute . ']';$/;"	v
success	library\Zend\Dom\Query.php	/^                $success = $domDoc->loadHTML($document);$/;"	v
success	library\Zend\Dom\Query.php	/^                $success = $domDoc->loadXML($document);$/;"	v
type	library\Zend\Dom\Query.php	/^        $type   = $this->getDocumentType();$/;"	v
xpath	library\Zend\Dom\Query.php	/^        $xpath      = new DOMXPath($document);$/;"	v
xpathQuery	library\Zend\Dom\Query.php	/^        $xpathQuery = (string) $xpathQuery;$/;"	v
xpathQuery	library\Zend\Dom\Query.php	/^        $xpathQuery = Zend_Dom_Query_Css2Xpath::transform($query);$/;"	v
Zend_Dom_Query_Css2Xpath	library\Zend\Dom\Query\Css2Xpath.php	/^class Zend_Dom_Query_Css2Xpath$/;"	c
expression	library\Zend\Dom\Query\Css2Xpath.php	/^        $expression = preg_replace($/;"	v
expression	library\Zend\Dom\Query\Css2Xpath.php	/^        $expression = preg_replace('|#([a-z][a-z0-9_-]*)|i', '[@id=\\'$1\\']', $expression);$/;"	v
expression	library\Zend\Dom\Query\Css2Xpath.php	/^        $expression = preg_replace('|(?<![a-z0-9_-])(\\[@id=)|i', '*$1', $expression);$/;"	v
expression	library\Zend\Dom\Query\Css2Xpath.php	/^        $expression = preg_replace_callback($/;"	v
expression	library\Zend\Dom\Query\Css2Xpath.php	/^        $expression = str_replace('**', '*', $expression);$/;"	v
expression	library\Zend\Dom\Query\Css2Xpath.php	/^        $expression = str_replace('>', '\/', $expression);$/;"	v
expressions	library\Zend\Dom\Query\Css2Xpath.php	/^                    $expressions = array_merge($expressions, $xpath);$/;"	v
expressions	library\Zend\Dom\Query\Css2Xpath.php	/^            $expressions = array();$/;"	v
path	library\Zend\Dom\Query\Css2Xpath.php	/^        $path     = preg_replace('|\\s+>\\s+|', '>', $path);$/;"	v
path	library\Zend\Dom\Query\Css2Xpath.php	/^        $path = (string) $path;$/;"	v
pathSegment	library\Zend\Dom\Query\Css2Xpath.php	/^            $pathSegment = self::_tokenize($segment);$/;"	v
paths	library\Zend\Dom\Query\Css2Xpath.php	/^            $paths       = explode(',', $path);$/;"	v
paths	library\Zend\Dom\Query\Css2Xpath.php	/^        $paths    = array('\/\/');$/;"	v
segments	library\Zend\Dom\Query\Css2Xpath.php	/^        $segments = preg_split('\/\\s+\/', $path);$/;"	v
xpath	library\Zend\Dom\Query\Css2Xpath.php	/^                $xpath = self::transform(trim($path));$/;"	v
Zend_Dom_Query_Result	library\Zend\Dom\Query\Result.php	/^class Zend_Dom_Query_Result implements Iterator,Countable$/;"	c
Zend_Exception	library\Zend\Exception.php	/^class Zend_Exception extends Exception$/;"	c
Zend_Feed	library\Zend\Feed.php	/^class Zend_Feed$/;"	c
attributes	library\Zend\Feed.php	/^                $attributes = $xml->attributes();$/;"	v
client	library\Zend\Feed.php	/^        $client = self::getHttpClient();$/;"	v
contents	library\Zend\Feed.php	/^        $contents = $response->getBody();$/;"	v
doc	library\Zend\Feed.php	/^        $doc = new DOMDocument;$/;"	v
error	library\Zend\Feed.php	/^            $error = libxml_get_last_error();$/;"	v
errormsg	library\Zend\Feed.php	/^                $errormsg = "DOMDocument cannot parse XML";$/;"	v
errormsg	library\Zend\Feed.php	/^                $errormsg = "DOMDocument cannot parse XML: {$error->message}";$/;"	v
feed	library\Zend\Feed.php	/^                    $feed = self::import($uri);$/;"	v
feed	library\Zend\Feed.php	/^        $feed = $response->getBody();$/;"	v
feed	library\Zend\Feed.php	/^        $feed = @file_get_contents($filename);$/;"	v
feeds	library\Zend\Feed.php	/^        $feeds = array();$/;"	v
libxml_errflag	library\Zend\Feed.php	/^        $libxml_errflag = libxml_use_internal_errors(true);$/;"	v
link	library\Zend\Feed.php	/^                    $link = mb_convert_encoding($link, 'UTF-8');$/;"	v
obj	library\Zend\Feed.php	/^        $obj = 'Zend_Feed_' . ucfirst(strtolower($format));$/;"	v
path	library\Zend\Feed.php	/^                            $path = rtrim($client->getUri()->getPath(), '\/') . '\/' . $path;$/;"	v
path	library\Zend\Feed.php	/^                        $path = (string) $attributes['href'];$/;"	v
pattern	library\Zend\Feed.php	/^        $pattern = '~(<link[^>]+)\/?>~i';$/;"	v
query	library\Zend\Feed.php	/^                        $query = $fragment = '';$/;"	v
response	library\Zend\Feed.php	/^        $response = $client->request('GET');$/;"	v
response	library\Zend\Feed.php	/^        $response = $client->request();$/;"	v
result	library\Zend\Feed.php	/^        $result = @preg_match_all($pattern, $contents, $matches);$/;"	v
status	library\Zend\Feed.php	/^        $status = $doc->loadXML($string);$/;"	v
uri	library\Zend\Feed.php	/^                        $uri = Zend_Uri::factory($client->getUri(true));$/;"	v
uri	library\Zend\Feed.php	/^                        $uri = Zend_Uri::factory((string) $attributes['href']);$/;"	v
xml	library\Zend\Feed.php	/^                $xml = @simplexml_load_string(rtrim($link, ' \/') . ' \/>');$/;"	v
client	library\Zend\Feed\Abstract.php	/^            $client = Zend_Feed::getHttpClient();$/;"	v
doc	library\Zend\Feed\Abstract.php	/^        $doc = new DOMDocument;$/;"	v
header	library\Zend\Feed\Abstract.php	/^            $header = $builder->getHeader();$/;"	v
php_errormsg	library\Zend\Feed\Abstract.php	/^                    $php_errormsg = '(error message not available)';$/;"	v
php_errormsg	library\Zend\Feed\Abstract.php	/^                    $php_errormsg = '(error message not available, when XDebug is running)';$/;"	v
response	library\Zend\Feed\Abstract.php	/^            $response = $client->request('GET');$/;"	v
root	library\Zend\Feed\Abstract.php	/^            $root = $this->_mapFeedHeaders($header);$/;"	v
status	library\Zend\Feed\Abstract.php	/^        $status = @$doc->loadXML($this->_element);$/;"	v
Zend_Feed_Atom	library\Zend\Feed\Atom.php	/^class Zend_Feed_Atom extends Zend_Feed_Abstract$/;"	c
author	library\Zend\Feed\Atom.php	/^            $author = $this->_element->createElement('author');$/;"	v
comments	library\Zend\Feed\Atom.php	/^                $comments = $this->_element->createElementNS('http:\/\/wellformedweb.org\/CommentAPI\/',$/;"	v
content	library\Zend\Feed\Atom.php	/^                $content = $this->_element->createElement('content');$/;"	v
copyright	library\Zend\Feed\Atom.php	/^            $copyright = $this->_element->createElement('rights', $array->copyright);$/;"	v
doc	library\Zend\Feed\Atom.php	/^            $doc = new DOMDocument($this->_element->version,$/;"	v
doc	library\Zend\Feed\Atom.php	/^        $doc = new DOMDocument($this->_element->ownerDocument->version,$/;"	v
element	library\Zend\Feed\Atom.php	/^            $element = $feed;$/;"	v
element	library\Zend\Feed\Atom.php	/^            $element = $this->_element->getElementsByTagName($this->_entryElementName)->item(0);$/;"	v
element	library\Zend\Feed\Atom.php	/^        $element = $this->_element->getElementsByTagName('feed')->item(0);$/;"	v
email	library\Zend\Feed\Atom.php	/^                $email = $this->_element->createElement('email', $array->email);$/;"	v
entry	library\Zend\Feed\Atom.php	/^            $entry = $this->_element->createElement('entry');$/;"	v
feed	library\Zend\Feed\Atom.php	/^            $feed = $doc->appendChild($doc->createElement('feed'));$/;"	v
feed	library\Zend\Feed\Atom.php	/^        $feed = $this->_element->createElement('feed');$/;"	v
generator	library\Zend\Feed\Atom.php	/^        $generator = !empty($array->generator) ? $array->generator : 'Zend_Feed';$/;"	v
generator	library\Zend\Feed\Atom.php	/^        $generator = $this->_element->createElement('generator', $generator);$/;"	v
id	library\Zend\Feed\Atom.php	/^            $id = $this->_element->createElement('id', isset($dataentry->guid) ? $dataentry->guid : $dataentry->link);$/;"	v
id	library\Zend\Feed\Atom.php	/^        $id = $this->_element->createElement('id', $array->link);$/;"	v
image	library\Zend\Feed\Atom.php	/^            $image = $this->_element->createElement('logo', $array->image);$/;"	v
link	library\Zend\Feed\Atom.php	/^                $link = $this->_element->createElement('link', $dataentry->source['title']);$/;"	v
link	library\Zend\Feed\Atom.php	/^            $link = $this->_element->createElement('link');$/;"	v
link	library\Zend\Feed\Atom.php	/^        $link = $this->_element->createElement('link');$/;"	v
links	library\Zend\Feed\Atom.php	/^                $links = array($links);$/;"	v
links	library\Zend\Feed\Atom.php	/^        $links = parent::__get('link');$/;"	v
name	library\Zend\Feed\Atom.php	/^            $name = $this->_element->createElement('name', $array->author);$/;"	v
node	library\Zend\Feed\Atom.php	/^                    $node = $this->_element->createElement('category');$/;"	v
node	library\Zend\Feed\Atom.php	/^                    $node = $this->_element->createElement('link');$/;"	v
published	library\Zend\Feed\Atom.php	/^            $published = $this->_element->createElement('published', date(DATE_ATOM, $array->published));$/;"	v
source	library\Zend\Feed\Atom.php	/^                $source = $this->_element->createElement('source');$/;"	v
subtitle	library\Zend\Feed\Atom.php	/^            $subtitle = $this->_element->createElement('subtitle');$/;"	v
summary	library\Zend\Feed\Atom.php	/^            $summary = $this->_element->createElement('summary');$/;"	v
title	library\Zend\Feed\Atom.php	/^                $title = $this->_element->createElement('title', $dataentry->source['title']);$/;"	v
title	library\Zend\Feed\Atom.php	/^            $title = $this->_element->createElement('title');$/;"	v
title	library\Zend\Feed\Atom.php	/^        $title = $this->_element->createElement('title');$/;"	v
updated	library\Zend\Feed\Atom.php	/^            $updated = $this->_element->createElement('updated', date(DATE_ATOM, $updated));$/;"	v
updated	library\Zend\Feed\Atom.php	/^            $updated = isset($dataentry->lastUpdate) ? $dataentry->lastUpdate : time();$/;"	v
updated	library\Zend\Feed\Atom.php	/^        $updated = $this->_element->createElement('updated', date(DATE_ATOM, $updated));$/;"	v
updated	library\Zend\Feed\Atom.php	/^        $updated = isset($array->lastUpdate) ? $array->lastUpdate : time();$/;"	v
Zend_Feed_Builder	library\Zend\Feed\Builder.php	/^class Zend_Feed_Builder implements Zend_Feed_Builder_Interface$/;"	c
email	library\Zend\Feed\Builder.php	/^                $email = isset($data['itunes']['owner']['email']) ? $data['itunes']['owner']['email'] : '';$/;"	v
entry	library\Zend\Feed\Builder.php	/^            $entry = new Zend_Feed_Builder_Entry($row['title'], $row['link'], $row['description']);$/;"	v
itunes	library\Zend\Feed\Builder.php	/^            $itunes = new Zend_Feed_Builder_Header_Itunes($data['itunes']['category']);$/;"	v
mandatories	library\Zend\Feed\Builder.php	/^                $mandatories = array('title', 'url');$/;"	v
mandatories	library\Zend\Feed\Builder.php	/^            $mandatories = array('domain', 'path', 'registerProcedure', 'protocol');$/;"	v
mandatories	library\Zend\Feed\Builder.php	/^            $mandatories = array('title', 'description', 'name', 'link');$/;"	v
mandatories	library\Zend\Feed\Builder.php	/^            $mandatories = array('title', 'link', 'description');$/;"	v
mandatories	library\Zend\Feed\Builder.php	/^        $mandatories = array('title', 'link', 'charset');$/;"	v
name	library\Zend\Feed\Builder.php	/^                $name = isset($data['itunes']['owner']['name']) ? $data['itunes']['owner']['name'] : '';$/;"	v
uri_str	library\Zend\Feed\Builder.php	/^            $uri_str = 'http:\/\/' . $data['cloud']['domain'] . $data['cloud']['path'];$/;"	v
Zend_Feed_Builder_Entry	library\Zend\Feed\Builder\Entry.php	/^class Zend_Feed_Builder_Entry extends ArrayObject$/;"	c
categories	library\Zend\Feed\Builder\Entry.php	/^            $categories = $this->offsetGet('category');$/;"	v
categories	library\Zend\Feed\Builder\Entry.php	/^            $categories = array($category);$/;"	v
enclosure	library\Zend\Feed\Builder\Entry.php	/^            $enclosure = $this->offsetGet('enclosure');$/;"	v
enclosure	library\Zend\Feed\Builder\Entry.php	/^            $enclosure = array();$/;"	v
length	library\Zend\Feed\Builder\Entry.php	/^            $length = isset($enclosure['length']) ? $enclosure['length'] : '';$/;"	v
type	library\Zend\Feed\Builder\Entry.php	/^            $type = isset($enclosure['type']) ? $enclosure['type'] : '';$/;"	v
Zend_Feed_Builder_Exception	library\Zend\Feed\Builder\Exception.php	/^class Zend_Feed_Builder_Exception extends Zend_Feed_Exception$/;"	c
Zend_Feed_Builder_Header	library\Zend\Feed\Builder\Header.php	/^class Zend_Feed_Builder_Header extends ArrayObject$/;"	c
uri	library\Zend\Feed\Builder\Header.php	/^            $uri = Zend_Uri::factory($uri);$/;"	v
valid	library\Zend\Feed\Builder\Header.php	/^        $valid = array('monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday');$/;"	v
validate	library\Zend\Feed\Builder\Header.php	/^        $validate = new Zend_Validate_EmailAddress();$/;"	v
validate	library\Zend\Feed\Builder\Header.php	/^        $validate = new Zend_Validate_Int();$/;"	v
Zend_Feed_Builder_Header_Itunes	library\Zend\Feed\Builder\Header\Itunes.php	/^class Zend_Feed_Builder_Header_Itunes extends ArrayObject$/;"	c
block	library\Zend\Feed\Builder\Header\Itunes.php	/^        $block = strtolower($block);$/;"	v
explicit	library\Zend\Feed\Builder\Header\Itunes.php	/^        $explicit = strtolower($explicit);$/;"	v
nb	library\Zend\Feed\Builder\Header\Itunes.php	/^        $nb = count($categories);$/;"	v
validate	library\Zend\Feed\Builder\Header\Itunes.php	/^            $validate = new Zend_Validate_EmailAddress();$/;"	v
Zend_Feed_Element	library\Zend\Feed\Element.php	/^class Zend_Feed_Element implements ArrayAccess$/;"	c
doc	library\Zend\Feed\Element.php	/^        $doc = new DOMDocument($this->_element->ownerDocument->version,$/;"	v
found	library\Zend\Feed\Element.php	/^        $found = array();$/;"	v
length	library\Zend\Feed\Element.php	/^        $length = count($nodes);$/;"	v
node	library\Zend\Feed\Element.php	/^                $node = $this->_element->ownerDocument->createElement($var);$/;"	v
node	library\Zend\Feed\Element.php	/^                $node = $this->_element->ownerDocument->createElement($var,$/;"	v
node	library\Zend\Feed\Element.php	/^                $node = $this->_element->ownerDocument->createElementNS(Zend_Feed::lookupNamespace($ns), $elt);$/;"	v
node	library\Zend\Feed\Element.php	/^                $node = $this->_element->ownerDocument->createElementNS(Zend_Feed::lookupNamespace($ns),$/;"	v
node	library\Zend\Feed\Element.php	/^            $node = new self($node);$/;"	v
nodes	library\Zend\Feed\Element.php	/^        $nodes = $this->_children($var);$/;"	v
parent	library\Zend\Feed\Element.php	/^            $parent = $node->parentNode;$/;"	v
doc	library\Zend\Feed\Entry\Abstract.php	/^                $doc = new DOMDocument('1.0', 'utf-8');$/;"	v
doc	library\Zend\Feed\Entry\Abstract.php	/^                $doc = new DOMDocument();$/;"	v
element	library\Zend\Feed\Entry\Abstract.php	/^                    $element = $doc->createElement($this->_rootElement);$/;"	v
element	library\Zend\Feed\Entry\Abstract.php	/^                    $element = $doc->createElementNS(Zend_Feed::lookupNamespace($this->_rootNamespace), $this->_rootElement);$/;"	v
element	library\Zend\Feed\Entry\Abstract.php	/^                $element = $doc->getElementsByTagName($this->_rootElement)->item(0);$/;"	v
php_errormsg	library\Zend\Feed\Entry\Abstract.php	/^                            $php_errormsg = '(error message not available)';$/;"	v
php_errormsg	library\Zend\Feed\Entry\Abstract.php	/^                            $php_errormsg = '(error message not available, when XDebug is running)';$/;"	v
status	library\Zend\Feed\Entry\Abstract.php	/^                $status = @$doc->loadXML($element);$/;"	v
Zend_Feed_Entry_Atom	library\Zend\Feed\Entry\Atom.php	/^class Zend_Feed_Entry_Atom extends Zend_Feed_Entry_Abstract$/;"	c
client	library\Zend\Feed\Entry\Atom.php	/^            $client = Zend_Feed::getHttpClient();$/;"	v
client	library\Zend\Feed\Entry\Atom.php	/^        $client = Zend_Feed::getHttpClient();$/;"	v
deleteUri	library\Zend\Feed\Entry\Atom.php	/^                    $deleteUri = $response->getHeader('Location');$/;"	v
deleteUri	library\Zend\Feed\Entry\Atom.php	/^        $deleteUri = $this->link('edit');$/;"	v
editUri	library\Zend\Feed\Entry\Atom.php	/^            $editUri = $this->link('edit');$/;"	v
httpStatus	library\Zend\Feed\Entry\Atom.php	/^            $httpStatus = $response->getStatus();$/;"	v
links	library\Zend\Feed\Entry\Atom.php	/^                $links = array($links);$/;"	v
links	library\Zend\Feed\Entry\Atom.php	/^        $links = parent::__get('link');$/;"	v
newEntry	library\Zend\Feed\Entry\Atom.php	/^        $newEntry = $newEntry->getElementsByTagName($this->_rootElement)->item(0);$/;"	v
newEntry	library\Zend\Feed\Entry\Atom.php	/^        $newEntry = new DOMDocument;$/;"	v
oldElement	library\Zend\Feed\Entry\Atom.php	/^            $oldElement = $this->_element;$/;"	v
php_errormsg	library\Zend\Feed\Entry\Atom.php	/^                    $php_errormsg = '(error message not available)';$/;"	v
php_errormsg	library\Zend\Feed\Entry\Atom.php	/^                    $php_errormsg = '(error message not available, when XDebug is running)';$/;"	v
response	library\Zend\Feed\Entry\Atom.php	/^                $response = $client->request('DELETE');$/;"	v
response	library\Zend\Feed\Entry\Atom.php	/^                $response = $client->request('POST');$/;"	v
response	library\Zend\Feed\Entry\Atom.php	/^                $response = $client->request('PUT');$/;"	v
response	library\Zend\Feed\Entry\Atom.php	/^            $response = $client->request('POST');$/;"	v
status	library\Zend\Feed\Entry\Atom.php	/^        $status = @$newEntry->loadXML($response->getBody());$/;"	v
Zend_Feed_Entry_Rss	library\Zend\Feed\Entry\Rss.php	/^class Zend_Feed_Entry_Rss extends Zend_Feed_Entry_Abstract$/;"	c
prefix	library\Zend\Feed\Entry\Rss.php	/^                $prefix = $this->_element->lookupPrefix('http:\/\/purl.org\/rss\/1.0\/modules\/content\/');$/;"	v
Zend_Feed_Exception	library\Zend\Feed\Exception.php	/^class Zend_Feed_Exception extends Zend_Exception$/;"	c
Zend_Feed_Pubsubhubbub	library\Zend\Feed\Pubsubhubbub.php	/^class Zend_Feed_Pubsubhubbub$/;"	c
feed	library\Zend\Feed\Pubsubhubbub.php	/^            $feed = $source;$/;"	v
feed	library\Zend\Feed\Pubsubhubbub.php	/^            $feed = Zend_Feed_Reader::import($source);$/;"	v
feed	library\Zend\Feed\Pubsubhubbub.php	/^            $feed = Zend_Feed_Reader::importFeed($source);$/;"	v
rawencoded	library\Zend\Feed\Pubsubhubbub.php	/^        $rawencoded = rawurlencode($string);$/;"	v
rfcencoded	library\Zend\Feed\Pubsubhubbub.php	/^        $rfcencoded = str_replace('%7E', '~', $rawencoded);$/;"	v
body	library\Zend\Feed\Pubsubhubbub\CallbackAbstract.php	/^            $body = $GLOBALS['HTTP_RAW_POST_DATA'];$/;"	v
body	library\Zend\Feed\Pubsubhubbub\CallbackAbstract.php	/^        $body = file_get_contents('php:\/\/input');$/;"	v
callbackUrl	library\Zend\Feed\Pubsubhubbub\CallbackAbstract.php	/^                $callbackUrl = substr($callbackUrl, strlen($schemeAndHttpHost));$/;"	v
callbackUrl	library\Zend\Feed\Pubsubhubbub\CallbackAbstract.php	/^            $callbackUrl = $_SERVER['HTTP_X_REWRITE_URL'];$/;"	v
callbackUrl	library\Zend\Feed\Pubsubhubbub\CallbackAbstract.php	/^            $callbackUrl = $_SERVER['REQUEST_URI'];$/;"	v
callbackUrl	library\Zend\Feed\Pubsubhubbub\CallbackAbstract.php	/^            $callbackUrl= $_SERVER['ORIG_PATH_INFO'];$/;"	v
callbackUrl	library\Zend\Feed\Pubsubhubbub\CallbackAbstract.php	/^        $callbackUrl = '';$/;"	v
config	library\Zend\Feed\Pubsubhubbub\CallbackAbstract.php	/^            $config = $config->toArray();$/;"	v
count	library\Zend\Feed\Pubsubhubbub\CallbackAbstract.php	/^        $count = intval($count);$/;"	v
headers	library\Zend\Feed\Pubsubhubbub\CallbackAbstract.php	/^            $headers = apache_request_headers();$/;"	v
name	library\Zend\Feed\Pubsubhubbub\CallbackAbstract.php	/^        $name = $_SERVER['SERVER_NAME'];$/;"	v
port	library\Zend\Feed\Pubsubhubbub\CallbackAbstract.php	/^        $port = $_SERVER['SERVER_PORT'];$/;"	v
scheme	library\Zend\Feed\Pubsubhubbub\CallbackAbstract.php	/^                $scheme = 'https';$/;"	v
scheme	library\Zend\Feed\Pubsubhubbub\CallbackAbstract.php	/^            $scheme = 'http';$/;"	v
scheme	library\Zend\Feed\Pubsubhubbub\CallbackAbstract.php	/^            $scheme = 'https';$/;"	v
scheme	library\Zend\Feed\Pubsubhubbub\CallbackAbstract.php	/^        $scheme = 'http';$/;"	v
schemeAndHttpHost	library\Zend\Feed\Pubsubhubbub\CallbackAbstract.php	/^            $schemeAndHttpHost = $scheme . ':\/\/' . $this->_getHttpHost();$/;"	v
temp	library\Zend\Feed\Pubsubhubbub\CallbackAbstract.php	/^        $temp = 'HTTP_' . strtoupper(str_replace('-', '_', $header));$/;"	v
temp	library\Zend\Feed\Pubsubhubbub\CallbackAbstract.php	/^        $temp = strtoupper(str_replace('-', '_', $header));$/;"	v
Zend_Feed_Pubsubhubbub_Exception	library\Zend\Feed\Pubsubhubbub\Exception.php	/^class Zend_Feed_Pubsubhubbub_Exception extends Zend_Exception$/;"	c
Zend_Feed_Pubsubhubbub_HttpResponse	library\Zend\Feed\Pubsubhubbub\HttpResponse.php	/^class Zend_Feed_Pubsubhubbub_HttpResponse$/;"	c
filtered	library\Zend\Feed\Pubsubhubbub\HttpResponse.php	/^        $filtered = str_replace(' ', '-', $filtered);$/;"	v
filtered	library\Zend\Feed\Pubsubhubbub\HttpResponse.php	/^        $filtered = str_replace(array('-', '_'), ' ', (string) $name);$/;"	v
filtered	library\Zend\Feed\Pubsubhubbub\HttpResponse.php	/^        $filtered = ucwords(strtolower($filtered));$/;"	v
httpCodeSent	library\Zend\Feed\Pubsubhubbub\HttpResponse.php	/^                $httpCodeSent = true;$/;"	v
httpCodeSent	library\Zend\Feed\Pubsubhubbub\HttpResponse.php	/^            $httpCodeSent = true;$/;"	v
httpCodeSent	library\Zend\Feed\Pubsubhubbub\HttpResponse.php	/^        $httpCodeSent = false;$/;"	v
name	library\Zend\Feed\Pubsubhubbub\HttpResponse.php	/^        $name  = $this->_normalizeHeader($name);$/;"	v
name	library\Zend\Feed\Pubsubhubbub\HttpResponse.php	/^        $name = $this->_normalizeHeader($name);$/;"	v
ok	library\Zend\Feed\Pubsubhubbub\HttpResponse.php	/^        $ok = headers_sent($file, $line);$/;"	v
value	library\Zend\Feed\Pubsubhubbub\HttpResponse.php	/^        $value = (string) $value;$/;"	v
Zend_Feed_Pubsubhubbub_Model_ModelAbstract	library\Zend\Feed\Pubsubhubbub\Model\ModelAbstract.php	/^class Zend_Feed_Pubsubhubbub_Model_ModelAbstract$/;"	c
parts	library\Zend\Feed\Pubsubhubbub\Model\ModelAbstract.php	/^            $parts = explode('_', get_class($this));$/;"	v
table	library\Zend\Feed\Pubsubhubbub\Model\ModelAbstract.php	/^            $table = strtolower(array_pop($parts));$/;"	v
Zend_Feed_Pubsubhubbub_Model_Subscription	library\Zend\Feed\Pubsubhubbub\Model\Subscription.php	/^class Zend_Feed_Pubsubhubbub_Model_Subscription$/;"	c
now	library\Zend\Feed\Pubsubhubbub\Model\Subscription.php	/^            $now = new Zend_Date;$/;"	v
result	library\Zend\Feed\Pubsubhubbub\Model\Subscription.php	/^        $result = $this->_db->find($data['id']);$/;"	v
result	library\Zend\Feed\Pubsubhubbub\Model\Subscription.php	/^        $result = $this->_db->find($key);$/;"	v
Zend_Feed_Pubsubhubbub_Publisher	library\Zend\Feed\Pubsubhubbub\Publisher.php	/^class Zend_Feed_Pubsubhubbub_Publisher$/;"	c
client	library\Zend\Feed\Pubsubhubbub\Publisher.php	/^        $client = $this->_getHttpClient();$/;"	v
client	library\Zend\Feed\Pubsubhubbub\Publisher.php	/^        $client = Zend_Feed_Pubsubhubbub::getHttpClient();$/;"	v
config	library\Zend\Feed\Pubsubhubbub\Publisher.php	/^            $config = $config->toArray();$/;"	v
hubs	library\Zend\Feed\Pubsubhubbub\Publisher.php	/^        $hubs   = $this->getHubUrls();$/;"	v
key	library\Zend\Feed\Pubsubhubbub\Publisher.php	/^        $key = array_search($url, $this->_hubUrls);$/;"	v
key	library\Zend\Feed\Pubsubhubbub\Publisher.php	/^        $key = array_search($url, $this->_updatedTopicUrls);$/;"	v
optParams	library\Zend\Feed\Pubsubhubbub\Publisher.php	/^        $optParams = $this->getParameters();$/;"	v
paramString	library\Zend\Feed\Pubsubhubbub\Publisher.php	/^        $paramString = implode('&', $params);$/;"	v
params	library\Zend\Feed\Pubsubhubbub\Publisher.php	/^        $params   = array();$/;"	v
response	library\Zend\Feed\Pubsubhubbub\Publisher.php	/^            $response = $client->request();$/;"	v
response	library\Zend\Feed\Pubsubhubbub\Publisher.php	/^        $response = $client->request();$/;"	v
topics	library\Zend\Feed\Pubsubhubbub\Publisher.php	/^        $topics   = $this->getUpdatedTopicUrls();$/;"	v
Zend_Feed_Pubsubhubbub_Subscriber	library\Zend\Feed\Pubsubhubbub\Subscriber.php	/^class Zend_Feed_Pubsubhubbub_Subscriber$/;"	c
auth	library\Zend\Feed\Pubsubhubbub\Subscriber.php	/^                $auth = $this->_authentications[$url];$/;"	v
client	library\Zend\Feed\Pubsubhubbub\Subscriber.php	/^        $client = $this->_getHttpClient();$/;"	v
client	library\Zend\Feed\Pubsubhubbub\Subscriber.php	/^        $client = Zend_Feed_Pubsubhubbub::getHttpClient();$/;"	v
config	library\Zend\Feed\Pubsubhubbub\Subscriber.php	/^            $config = $config->toArray();$/;"	v
data	library\Zend\Feed\Pubsubhubbub\Subscriber.php	/^        $data = array($/;"	v
ekey	library\Zend\Feed\Pubsubhubbub\Subscriber.php	/^                $ekey = Zend_Feed_Pubsubhubbub::urlencode($key);$/;"	v
encoded	library\Zend\Feed\Pubsubhubbub\Subscriber.php	/^        $encoded = array();$/;"	v
expires	library\Zend\Feed\Pubsubhubbub\Subscriber.php	/^            $expires = $now->add($params['hub.lease_seconds'], Zend_Date::SECOND)$/;"	v
expires	library\Zend\Feed\Pubsubhubbub\Subscriber.php	/^        $expires = null;$/;"	v
hubs	library\Zend\Feed\Pubsubhubbub\Subscriber.php	/^        $hubs   = $this->getHubUrls();$/;"	v
key	library\Zend\Feed\Pubsubhubbub\Subscriber.php	/^        $key     = md5($keyBase);$/;"	v
key	library\Zend\Feed\Pubsubhubbub\Subscriber.php	/^        $key   = $this->_generateSubscriptionKey($params, $hubUrl);$/;"	v
key	library\Zend\Feed\Pubsubhubbub\Subscriber.php	/^        $key = array_search($url, $this->_hubUrls);$/;"	v
keyBase	library\Zend\Feed\Pubsubhubbub\Subscriber.php	/^        $keyBase = $params['hub.topic'] . $hubUrl;$/;"	v
now	library\Zend\Feed\Pubsubhubbub\Subscriber.php	/^        $now = new Zend_Date;$/;"	v
optParams	library\Zend\Feed\Pubsubhubbub\Subscriber.php	/^        $optParams = $this->getParameters();$/;"	v
params	library\Zend\Feed\Pubsubhubbub\Subscriber.php	/^        $params = array($/;"	v
response	library\Zend\Feed\Pubsubhubbub\Subscriber.php	/^            $response = $client->request();$/;"	v
return	library\Zend\Feed\Pubsubhubbub\Subscriber.php	/^        $return = array();$/;"	v
seconds	library\Zend\Feed\Pubsubhubbub\Subscriber.php	/^        $seconds = intval($seconds);$/;"	v
token	library\Zend\Feed\Pubsubhubbub\Subscriber.php	/^        $token = $this->_generateVerifyToken();$/;"	v
vmodes	library\Zend\Feed\Pubsubhubbub\Subscriber.php	/^            $vmodes = array($/;"	v
Zend_Feed_Pubsubhubbub_Subscriber_Callback	library\Zend\Feed\Pubsubhubbub\Subscriber\Callback.php	/^class Zend_Feed_Pubsubhubbub_Subscriber_Callback$/;"	c
contentType	library\Zend\Feed\Pubsubhubbub\Subscriber\Callback.php	/^        $contentType = $this->_getHeader('Content-Type');$/;"	v
data	library\Zend\Feed\Pubsubhubbub\Subscriber\Callback.php	/^            $data = $this->_currentSubscriptionData;$/;"	v
data	library\Zend\Feed\Pubsubhubbub\Subscriber\Callback.php	/^            $data = $this->getStorage()->getSubscription($verifyTokenKey);$/;"	v
httpGetData	library\Zend\Feed\Pubsubhubbub\Subscriber\Callback.php	/^            $httpGetData = $_GET;$/;"	v
key	library\Zend\Feed\Pubsubhubbub\Subscriber\Callback.php	/^            $key   = rawurldecode($pair[0]);$/;"	v
pair	library\Zend\Feed\Pubsubhubbub\Subscriber\Callback.php	/^            $pair  = explode('=', $kvpair);$/;"	v
params	library\Zend\Feed\Pubsubhubbub\Subscriber\Callback.php	/^        $params      = array();$/;"	v
params	library\Zend\Feed\Pubsubhubbub\Subscriber\Callback.php	/^        $params = $this->_parseQueryString();$/;"	v
parts	library\Zend\Feed\Pubsubhubbub\Subscriber\Callback.php	/^        $parts = explode('&', $queryString);$/;"	v
queryString	library\Zend\Feed\Pubsubhubbub\Subscriber\Callback.php	/^            $queryString = $_SERVER['QUERY_STRING'];$/;"	v
queryString	library\Zend\Feed\Pubsubhubbub\Subscriber\Callback.php	/^        $queryString = '';$/;"	v
required	library\Zend\Feed\Pubsubhubbub\Subscriber\Callback.php	/^        $required = array($/;"	v
value	library\Zend\Feed\Pubsubhubbub\Subscriber\Callback.php	/^            $value = rawurldecode($pair[1]);$/;"	v
verifyToken	library\Zend\Feed\Pubsubhubbub\Subscriber\Callback.php	/^            $verifyToken = $data['verify_token'];$/;"	v
verifyTokenExists	library\Zend\Feed\Pubsubhubbub\Subscriber\Callback.php	/^        $verifyTokenExists = $this->getStorage()->hasSubscription($verifyTokenKey);$/;"	v
verifyTokenKey	library\Zend\Feed\Pubsubhubbub\Subscriber\Callback.php	/^        $verifyTokenKey = $this->_detectVerifyTokenKey($httpGetData);$/;"	v
Zend_Feed_Reader	library\Zend\Feed\Reader.php	/^class Zend_Feed_Reader$/;"	c
array	library\Zend\Feed\Reader.php	/^        $array = array_unique($array);$/;"	v
cache	library\Zend\Feed\Reader.php	/^        $cache       = self::getCache();$/;"	v
cacheId	library\Zend\Feed\Reader.php	/^        $cacheId = 'Zend_Feed_Reader_' . md5($uri);$/;"	v
client	library\Zend\Feed\Reader.php	/^        $client      = self::getHttpClient();$/;"	v
client	library\Zend\Feed\Reader.php	/^        $client = self::getHttpClient();$/;"	v
data	library\Zend\Feed\Reader.php	/^            $data = $cache->load($cacheId);$/;"	v
dom	library\Zend\Feed\Reader.php	/^            $dom = $feed->getDomDocument();$/;"	v
dom	library\Zend\Feed\Reader.php	/^            $dom = $feed;$/;"	v
dom	library\Zend\Feed\Reader.php	/^            $dom = new DOMDocument;$/;"	v
dom	library\Zend\Feed\Reader.php	/^        $dom  = $feed->getDOM()->ownerDocument;$/;"	v
dom	library\Zend\Feed\Reader.php	/^        $dom = new DOMDocument;$/;"	v
entryName	library\Zend\Feed\Reader.php	/^        $entryName = $extensionName . '_Entry';$/;"	v
entryName	library\Zend\Feed\Reader.php	/^        $entryName = $name . '_Entry';$/;"	v
error	library\Zend\Feed\Reader.php	/^            $error = libxml_get_last_error();$/;"	v
errormsg	library\Zend\Feed\Reader.php	/^                $errormsg = "DOMDocument cannot parse HTML: Please check the XML document's validity";$/;"	v
errormsg	library\Zend\Feed\Reader.php	/^                $errormsg = "DOMDocument cannot parse HTML: {$error->message}";$/;"	v
errormsg	library\Zend\Feed\Reader.php	/^                $errormsg = "DOMDocument cannot parse XML: Please check the XML document's validity";$/;"	v
errormsg	library\Zend\Feed\Reader.php	/^                $errormsg = "DOMDocument cannot parse XML: {$error->message}";$/;"	v
etag	library\Zend\Feed\Reader.php	/^                    $etag = $cache->load($cacheId.'_etag');$/;"	v
feed	library\Zend\Feed\Reader.php	/^        $feed        = null;$/;"	v
feed	library\Zend\Feed\Reader.php	/^        $feed = @file_get_contents($filename);$/;"	v
feedName	library\Zend\Feed\Reader.php	/^        $feedName  = $extensionName . '_Feed';$/;"	v
feedName	library\Zend\Feed\Reader.php	/^        $feedName  = $name . '_Feed';$/;"	v
feedSet	library\Zend\Feed\Reader.php	/^        $feedSet = new Zend_Feed_Reader_FeedSet;$/;"	v
lastModified	library\Zend\Feed\Reader.php	/^                    $lastModified = $cache->load($cacheId.'_lastmodified');;$/;"	v
libxml_errflag	library\Zend\Feed\Reader.php	/^        $libxml_errflag = libxml_use_internal_errors(true);$/;"	v
links	library\Zend\Feed\Reader.php	/^        $links = $dom->getElementsByTagName('link');$/;"	v
path	library\Zend\Feed\Reader.php	/^        $path   = rtrim($path, DIRECTORY_SEPARATOR);$/;"	v
php_errormsg	library\Zend\Feed\Reader.php	/^                        $php_errormsg = '(error message not available)';$/;"	v
php_errormsg	library\Zend\Feed\Reader.php	/^                        $php_errormsg = '(error message not available, when XDebug is running)';$/;"	v
prefix	library\Zend\Feed\Reader.php	/^        $prefix = rtrim($prefix, '_');$/;"	v
reader	library\Zend\Feed\Reader.php	/^            $reader = new Zend_Feed_Reader_Entry_Atom($dom->documentElement, 0, Zend_Feed_Reader::TYPE_ATOM_10);$/;"	v
reader	library\Zend\Feed\Reader.php	/^            $reader = new Zend_Feed_Reader_Feed_Atom($dom, $type);$/;"	v
reader	library\Zend\Feed\Reader.php	/^            $reader = new Zend_Feed_Reader_Feed_Rss($dom, $type);$/;"	v
reader	library\Zend\Feed\Reader.php	/^            $reader = self::importString($responseXml);$/;"	v
response	library\Zend\Feed\Reader.php	/^            $response = $client->request('GET');$/;"	v
response	library\Zend\Feed\Reader.php	/^        $response = $client->request();$/;"	v
responseHtml	library\Zend\Feed\Reader.php	/^        $responseHtml = $response->getBody();$/;"	v
responseXml	library\Zend\Feed\Reader.php	/^                $responseXml = $data;$/;"	v
responseXml	library\Zend\Feed\Reader.php	/^                $responseXml = $response->getBody();$/;"	v
responseXml	library\Zend\Feed\Reader.php	/^            $responseXml = $response->getBody();$/;"	v
responseXml	library\Zend\Feed\Reader.php	/^        $responseXml = '';$/;"	v
status	library\Zend\Feed\Reader.php	/^            $status = @$dom->loadXML($feed);$/;"	v
status	library\Zend\Feed\Reader.php	/^        $status = $dom->loadHTML($responseHtml);$/;"	v
status	library\Zend\Feed\Reader.php	/^        $status = $dom->loadXML($string);$/;"	v
type	library\Zend\Feed\Reader.php	/^                        $type = self::TYPE_RSS_091;$/;"	v
type	library\Zend\Feed\Reader.php	/^                        $type = self::TYPE_RSS_092;$/;"	v
type	library\Zend\Feed\Reader.php	/^                        $type = self::TYPE_RSS_093;$/;"	v
type	library\Zend\Feed\Reader.php	/^                        $type = self::TYPE_RSS_094;$/;"	v
type	library\Zend\Feed\Reader.php	/^                        $type = self::TYPE_RSS_20;$/;"	v
type	library\Zend\Feed\Reader.php	/^            $type = self::TYPE_RSS_ANY;$/;"	v
type	library\Zend\Feed\Reader.php	/^        $type = self::TYPE_ATOM_ANY;$/;"	v
type	library\Zend\Feed\Reader.php	/^        $type = self::detectType($dom);$/;"	v
value	library\Zend\Feed\Reader.php	/^            $value = serialize($value);$/;"	v
value	library\Zend\Feed\Reader.php	/^            $value = unserialize($value);$/;"	v
version	library\Zend\Feed\Reader.php	/^            $version = $xpath->evaluate('string(\/rss\/@version)');$/;"	v
xpath	library\Zend\Feed\Reader.php	/^        $xpath = new DOMXPath($dom);$/;"	v
Zend_Feed_Reader_Collection	library\Zend\Feed\Reader\Collection.php	/^class Zend_Feed_Reader_Collection extends ArrayObject$/;"	c
Zend_Feed_Reader_Collection_Author	library\Zend\Feed\Reader\Collection\Author.php	/^class Zend_Feed_Reader_Collection_Author$/;"	c
authors	library\Zend\Feed\Reader\Collection\Author.php	/^        $authors = array();$/;"	v
Zend_Feed_Reader_Collection_Category	library\Zend\Feed\Reader\Collection\Category.php	/^class Zend_Feed_Reader_Collection_Category$/;"	c
categories	library\Zend\Feed\Reader\Collection\Category.php	/^        $categories = array();$/;"	v
all	library\Zend\Feed\Reader\EntryAbstract.php	/^        $all = Zend_Feed_Reader::getExtensions();$/;"	v
assumed	library\Zend\Feed\Reader\EntryAbstract.php	/^            $assumed = 'UTF-8';$/;"	v
assumed	library\Zend\Feed\Reader\EntryAbstract.php	/^        $assumed = $this->getDomDocument()->encoding;$/;"	v
className	library\Zend\Feed\Reader\EntryAbstract.php	/^            $className = Zend_Feed_Reader::getPluginLoader()->getClassName($extension);$/;"	v
dom	library\Zend\Feed\Reader\EntryAbstract.php	/^        $dom = new DOMDocument('1.0', $this->getEncoding());$/;"	v
entry	library\Zend\Feed\Reader\EntryAbstract.php	/^        $entry = $dom->importNode($this->getElement(), true);$/;"	v
feed	library\Zend\Feed\Reader\EntryAbstract.php	/^        $feed = $all['entry'];$/;"	v
Zend_Feed_Reader_Entry_Atom	library\Zend\Feed\Reader\Entry\Atom.php	/^class Zend_Feed_Reader_Entry_Atom extends Zend_Feed_Reader_EntryAbstract implements Zend_Feed_Reader_EntryInterface$/;"	c
atomClass	library\Zend\Feed\Reader\Entry\Atom.php	/^        $atomClass = Zend_Feed_Reader::getPluginLoader()->getClassName('Atom_Entry');$/;"	v
authors	library\Zend\Feed\Reader\Entry\Atom.php	/^        $authors = $this->getAuthors();$/;"	v
categoryCollection	library\Zend\Feed\Reader\Entry\Atom.php	/^            $categoryCollection = $this->getExtension('DublinCore')->getCategories();$/;"	v
categoryCollection	library\Zend\Feed\Reader\Entry\Atom.php	/^        $categoryCollection = $this->getExtension('Atom')->getCategories();$/;"	v
commentcount	library\Zend\Feed\Reader\Entry\Atom.php	/^            $commentcount = $this->getExtension('Atom')->getCommentCount();$/;"	v
commentcount	library\Zend\Feed\Reader\Entry\Atom.php	/^        $commentcount = $this->getExtension('Thread')->getCommentCount();$/;"	v
commentfeedlink	library\Zend\Feed\Reader\Entry\Atom.php	/^        $commentfeedlink = $this->getExtension('Atom')->getCommentFeedLink();$/;"	v
commentlink	library\Zend\Feed\Reader\Entry\Atom.php	/^        $commentlink = $this->getExtension('Atom')->getCommentLink();$/;"	v
content	library\Zend\Feed\Reader\Entry\Atom.php	/^        $content = $this->getExtension('Atom')->getContent();$/;"	v
dateCreated	library\Zend\Feed\Reader\Entry\Atom.php	/^        $dateCreated = $this->getExtension('Atom')->getDateCreated();$/;"	v
dateModified	library\Zend\Feed\Reader\Entry\Atom.php	/^        $dateModified = $this->getExtension('Atom')->getDateModified();$/;"	v
description	library\Zend\Feed\Reader\Entry\Atom.php	/^        $description = $this->getExtension('Atom')->getDescription();$/;"	v
enclosure	library\Zend\Feed\Reader\Entry\Atom.php	/^        $enclosure = $this->getExtension('Atom')->getEnclosure();$/;"	v
id	library\Zend\Feed\Reader\Entry\Atom.php	/^        $id = $this->getExtension('Atom')->getId();$/;"	v
links	library\Zend\Feed\Reader\Entry\Atom.php	/^        $links = $this->getExtension('Atom')->getLinks();$/;"	v
people	library\Zend\Feed\Reader\Entry\Atom.php	/^        $people = $this->getExtension('Atom')->getAuthors();$/;"	v
source	library\Zend\Feed\Reader\Entry\Atom.php	/^        $source = $this->getExtension('Atom')->getSource();$/;"	v
threadClass	library\Zend\Feed\Reader\Entry\Atom.php	/^        $threadClass = Zend_Feed_Reader::getPluginLoader()->getClassName('DublinCore_Entry');$/;"	v
threadClass	library\Zend\Feed\Reader\Entry\Atom.php	/^        $threadClass = Zend_Feed_Reader::getPluginLoader()->getClassName('Thread_Entry');$/;"	v
title	library\Zend\Feed\Reader\Entry\Atom.php	/^        $title = $this->getExtension('Atom')->getTitle();$/;"	v
Zend_Feed_Reader_Entry_Rss	library\Zend\Feed\Reader\Entry\Rss.php	/^class Zend_Feed_Reader_Entry_Rss extends Zend_Feed_Reader_EntryAbstract implements Zend_Feed_Reader_EntryInterface$/;"	c
atomClass	library\Zend\Feed\Reader\Entry\Rss.php	/^        $atomClass   = $pluginLoader->getClassName('Atom_Entry');$/;"	v
authors	library\Zend\Feed\Reader\Entry\Rss.php	/^            $authors = $this->getExtension('Atom')->getAuthors();$/;"	v
authors	library\Zend\Feed\Reader\Entry\Rss.php	/^            $authors = new Zend_Feed_Reader_Collection_Author($/;"	v
authors	library\Zend\Feed\Reader\Entry\Rss.php	/^            $authors = null;$/;"	v
authors	library\Zend\Feed\Reader\Entry\Rss.php	/^        $authors = $this->getAuthors();$/;"	v
authors	library\Zend\Feed\Reader\Entry\Rss.php	/^        $authors = array();$/;"	v
authors_dc	library\Zend\Feed\Reader\Entry\Rss.php	/^        $authors_dc = $this->getExtension('DublinCore')->getAuthors();$/;"	v
categoryCollection	library\Zend\Feed\Reader\Entry\Rss.php	/^            $categoryCollection = $this->getExtension('Atom')->getCategories();$/;"	v
categoryCollection	library\Zend\Feed\Reader\Entry\Rss.php	/^            $categoryCollection = $this->getExtension('DublinCore')->getCategories();$/;"	v
categoryCollection	library\Zend\Feed\Reader\Entry\Rss.php	/^            $categoryCollection = new Zend_Feed_Reader_Collection_Category;$/;"	v
commentcount	library\Zend\Feed\Reader\Entry\Rss.php	/^            $commentcount = $this->getExtension('Atom')->getCommentCount();$/;"	v
commentcount	library\Zend\Feed\Reader\Entry\Rss.php	/^            $commentcount = $this->getExtension('Thread')->getCommentCount();$/;"	v
commentcount	library\Zend\Feed\Reader\Entry\Rss.php	/^            $commentcount = null;$/;"	v
commentcount	library\Zend\Feed\Reader\Entry\Rss.php	/^        $commentcount = $this->getExtension('Slash')->getCommentCount();$/;"	v
commentfeedlink	library\Zend\Feed\Reader\Entry\Rss.php	/^            $commentfeedlink = $this->getExtension('Atom')->getCommentFeedLink('rdf');$/;"	v
commentfeedlink	library\Zend\Feed\Reader\Entry\Rss.php	/^            $commentfeedlink = $this->getExtension('Atom')->getCommentFeedLink('rss');$/;"	v
commentfeedlink	library\Zend\Feed\Reader\Entry\Rss.php	/^            $commentfeedlink = null;$/;"	v
commentfeedlink	library\Zend\Feed\Reader\Entry\Rss.php	/^        $commentfeedlink = $this->getExtension('WellFormedWeb')->getCommentFeedLink();$/;"	v
commentlink	library\Zend\Feed\Reader\Entry\Rss.php	/^            $commentlink = $this->_xpath->evaluate('string('.$this->_xpathQueryRss.'\/comments)');$/;"	v
commentlink	library\Zend\Feed\Reader\Entry\Rss.php	/^            $commentlink = $this->getExtension('Atom')->getCommentLink();$/;"	v
commentlink	library\Zend\Feed\Reader\Entry\Rss.php	/^            $commentlink = null;$/;"	v
commentlink	library\Zend\Feed\Reader\Entry\Rss.php	/^        $commentlink = null;$/;"	v
content	library\Zend\Feed\Reader\Entry\Rss.php	/^            $content = $this->getDescription();$/;"	v
content	library\Zend\Feed\Reader\Entry\Rss.php	/^            $content = $this->getExtension('Atom')->getContent();$/;"	v
content	library\Zend\Feed\Reader\Entry\Rss.php	/^        $content = $this->getExtension('Content')->getContent();$/;"	v
contentClass	library\Zend\Feed\Reader\Entry\Rss.php	/^        $contentClass   = $pluginLoader->getClassName('Content_Entry');$/;"	v
data	library\Zend\Feed\Reader\Entry\Rss.php	/^                $data = array();$/;"	v
date	library\Zend\Feed\Reader\Entry\Rss.php	/^                    $date = new Zend_Date($dateModifiedParsed);$/;"	v
date	library\Zend\Feed\Reader\Entry\Rss.php	/^                    $date = new Zend_Date;$/;"	v
date	library\Zend\Feed\Reader\Entry\Rss.php	/^            $date = $this->getExtension('Atom')->getDateModified();$/;"	v
date	library\Zend\Feed\Reader\Entry\Rss.php	/^            $date = $this->getExtension('DublinCore')->getDate();$/;"	v
date	library\Zend\Feed\Reader\Entry\Rss.php	/^            $date = null;$/;"	v
date	library\Zend\Feed\Reader\Entry\Rss.php	/^        $date = null;$/;"	v
dateModified	library\Zend\Feed\Reader\Entry\Rss.php	/^            $dateModified = $this->_xpath->evaluate('string('.$this->_xpathQueryRss.'\/pubDate)');$/;"	v
dateModified	library\Zend\Feed\Reader\Entry\Rss.php	/^        $dateModified = null;$/;"	v
dateModifiedParsed	library\Zend\Feed\Reader\Entry\Rss.php	/^                $dateModifiedParsed = strtotime($dateModified);$/;"	v
dateStandards	library\Zend\Feed\Reader\Entry\Rss.php	/^                    $dateStandards = array(Zend_Date::RSS, Zend_Date::RFC_822,$/;"	v
description	library\Zend\Feed\Reader\Entry\Rss.php	/^            $description = $this->_xpath->evaluate('string('.$this->_xpathQueryRdf.'\/rss:description)');$/;"	v
description	library\Zend\Feed\Reader\Entry\Rss.php	/^            $description = $this->_xpath->evaluate('string('.$this->_xpathQueryRss.'\/description)');$/;"	v
description	library\Zend\Feed\Reader\Entry\Rss.php	/^            $description = $this->getExtension('Atom')->getDescription();$/;"	v
description	library\Zend\Feed\Reader\Entry\Rss.php	/^            $description = $this->getExtension('DublinCore')->getDescription();$/;"	v
description	library\Zend\Feed\Reader\Entry\Rss.php	/^            $description = null;$/;"	v
description	library\Zend\Feed\Reader\Entry\Rss.php	/^        $description = null;$/;"	v
dublinCoreClass	library\Zend\Feed\Reader\Entry\Rss.php	/^        $dublinCoreClass = $pluginLoader->getClassName('DublinCore_Entry');$/;"	v
email	library\Zend\Feed\Reader\Entry\Rss.php	/^                $email = null;$/;"	v
enclosure	library\Zend\Feed\Reader\Entry\Rss.php	/^                $enclosure = new stdClass();$/;"	v
enclosure	library\Zend\Feed\Reader\Entry\Rss.php	/^            $enclosure = $this->getExtension('Atom')->getEnclosure();$/;"	v
enclosure	library\Zend\Feed\Reader\Entry\Rss.php	/^        $enclosure = null;$/;"	v
id	library\Zend\Feed\Reader\Entry\Rss.php	/^                $id = $this->getPermalink();$/;"	v
id	library\Zend\Feed\Reader\Entry\Rss.php	/^                $id = $this->getTitle();$/;"	v
id	library\Zend\Feed\Reader\Entry\Rss.php	/^                $id = null;$/;"	v
id	library\Zend\Feed\Reader\Entry\Rss.php	/^            $id = $this->_xpath->evaluate('string('.$this->_xpathQueryRss.'\/guid)');$/;"	v
id	library\Zend\Feed\Reader\Entry\Rss.php	/^            $id = $this->getExtension('Atom')->getId();$/;"	v
id	library\Zend\Feed\Reader\Entry\Rss.php	/^            $id = $this->getExtension('DublinCore')->getId();$/;"	v
id	library\Zend\Feed\Reader\Entry\Rss.php	/^        $id = null;$/;"	v
links	library\Zend\Feed\Reader\Entry\Rss.php	/^            $links = $this->getExtension('Atom')->getLinks();$/;"	v
links	library\Zend\Feed\Reader\Entry\Rss.php	/^        $links = array();$/;"	v
list	library\Zend\Feed\Reader\Entry\Rss.php	/^            $list = $this->_xpath->query($this->_xpathQueryRdf . '\/\/rss:author');$/;"	v
list	library\Zend\Feed\Reader\Entry\Rss.php	/^            $list = $this->_xpath->query($this->_xpathQueryRdf.'\/\/rss:category');$/;"	v
list	library\Zend\Feed\Reader\Entry\Rss.php	/^            $list = $this->_xpath->query($this->_xpathQueryRdf.'\/\/rss:link');$/;"	v
list	library\Zend\Feed\Reader\Entry\Rss.php	/^            $list = $this->_xpath->query($this->_xpathQueryRss . '\/\/author');$/;"	v
list	library\Zend\Feed\Reader\Entry\Rss.php	/^            $list = $this->_xpath->query($this->_xpathQueryRss.'\/\/category');$/;"	v
list	library\Zend\Feed\Reader\Entry\Rss.php	/^            $list = $this->_xpath->query($this->_xpathQueryRss.'\/\/link');$/;"	v
name	library\Zend\Feed\Reader\Entry\Rss.php	/^                $name = null;$/;"	v
nodeList	library\Zend\Feed\Reader\Entry\Rss.php	/^            $nodeList = $this->_xpath->query($this->_xpathQueryRss . '\/enclosure');$/;"	v
pluginLoader	library\Zend\Feed\Reader\Entry\Rss.php	/^        $pluginLoader = Zend_Feed_Reader::getPluginLoader();$/;"	v
slashClass	library\Zend\Feed\Reader\Entry\Rss.php	/^        $slashClass   = $pluginLoader->getClassName('Slash_Entry');$/;"	v
string	library\Zend\Feed\Reader\Entry\Rss.php	/^                $string = trim($author->nodeValue);$/;"	v
threadClass	library\Zend\Feed\Reader\Entry\Rss.php	/^        $threadClass   = $pluginLoader->getClassName('Thread_Entry');$/;"	v
title	library\Zend\Feed\Reader\Entry\Rss.php	/^            $title = $this->_xpath->evaluate('string('.$this->_xpathQueryRdf.'\/rss:title)');$/;"	v
title	library\Zend\Feed\Reader\Entry\Rss.php	/^            $title = $this->_xpath->evaluate('string('.$this->_xpathQueryRss.'\/title)');$/;"	v
title	library\Zend\Feed\Reader\Entry\Rss.php	/^            $title = $this->getExtension('Atom')->getTitle();$/;"	v
title	library\Zend\Feed\Reader\Entry\Rss.php	/^            $title = $this->getExtension('DublinCore')->getTitle();$/;"	v
title	library\Zend\Feed\Reader\Entry\Rss.php	/^            $title = null;$/;"	v
title	library\Zend\Feed\Reader\Entry\Rss.php	/^        $title = null;$/;"	v
wfwClass	library\Zend\Feed\Reader\Entry\Rss.php	/^        $wfwClass   = $pluginLoader->getClassName('WellFormedWeb_Entry');$/;"	v
Zend_Feed_Reader_Extension_Atom_Entry	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^class Zend_Feed_Reader_Extension_Atom_Entry$/;"	c
author	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^                $author = $this->_getAuthor($author);$/;"	v
author	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^        $author = array();$/;"	v
authors	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^            $authors = new Zend_Feed_Reader_Collection_Author($/;"	v
authors	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^            $authors = null;$/;"	v
authors	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^        $authors = $this->getAuthors();$/;"	v
authors	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^        $authors = array();$/;"	v
baseUrl	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^            $baseUrl = $this->getXpath()->evaluate('string(\/\/@xml:base[1])');$/;"	v
baseUrl	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^            $baseUrl = null;$/;"	v
baseUrl	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^        $baseUrl = $this->getXpath()->evaluate('string('$/;"	v
categoryCollection	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^            $categoryCollection = new Zend_Feed_Reader_Collection_Category;$/;"	v
content	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^                    $content = $el->nodeValue;$/;"	v
content	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^                    $content = $this->_collectXhtml($/;"	v
content	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^            $content = $this->getDescription();$/;"	v
content	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^        $content = null;$/;"	v
count	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^            $count = $list->item(0)->value;$/;"	v
count	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^        $count = null;$/;"	v
d	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^                    $d = new DOMDocument('1.0', $this->getEncoding());$/;"	v
date	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^            $date = new Zend_Date;$/;"	v
date	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^        $date = null;$/;"	v
dateCreated	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^            $dateCreated = $this->getXpath()->evaluate('string(' . $this->getXpathPrefix() . '\/atom:created)');$/;"	v
dateCreated	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^            $dateCreated = $this->getXpath()->evaluate('string(' . $this->getXpathPrefix() . '\/atom:published)');$/;"	v
dateModified	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^            $dateModified = $this->getXpath()->evaluate('string(' . $this->getXpathPrefix() . '\/atom:modified)');$/;"	v
dateModified	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^            $dateModified = $this->getXpath()->evaluate('string(' . $this->getXpathPrefix() . '\/atom:updated)');$/;"	v
description	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^            $description = null;$/;"	v
description	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^        $description = $this->getXpath()->evaluate('string(' . $this->getXpathPrefix() . '\/atom:summary)');$/;"	v
dom	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^        $dom = $this->getDomDocument();$/;"	v
el	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^            $el = $el->item(0);$/;"	v
el	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^        $el = $this->getXpath()->query($this->getXpathPrefix() . '\/atom:content');$/;"	v
element	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^                $element = $list->item(0);$/;"	v
emailNode	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^        $emailNode = $element->getElementsByTagName('email');$/;"	v
enclosure	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^            $enclosure = new stdClass();$/;"	v
enclosure	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^        $enclosure = null;$/;"	v
id	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^                $id = $this->getPermalink();$/;"	v
id	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^                $id = $this->getTitle();$/;"	v
id	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^                $id = null;$/;"	v
id	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^        $id = $this->getXpath()->evaluate('string(' . $this->getXpathPrefix() . '\/atom:id)');$/;"	v
link	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^                    $link = null;$/;"	v
link	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^                $link = $this->getBaseUrl() . $link;$/;"	v
link	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^            $link = $list->item(0)->value;$/;"	v
link	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^            $link = $this->_absolutiseUri($link);$/;"	v
link	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^        $link = null;$/;"	v
links	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^        $links = array();$/;"	v
list	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^            $list = $this->getXpath()->query($this->getXpathPrefix() . '\/\/atom10:category');$/;"	v
list	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^            $list = $this->getXpath()->query($this->getXpathPrefix() . '\/\/atom:category');$/;"	v
list	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^            $list = $this->getXpath()->query($this->getXpathPrefix() . '\/atom:source[1]');$/;"	v
list	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^            $list = $this->getXpath()->query('\/\/atom:author');$/;"	v
list	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^        $list = $this->getXpath()->query($/;"	v
list	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^        $list = $this->getXpath()->query($this->getXpathPrefix() . '\/\/atom:author');$/;"	v
matches	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^        $matches = array($/;"	v
nameNode	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^        $nameNode  = $element->getElementsByTagName('name');$/;"	v
nodeList	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^        $nodeList = $this->getXpath()->query($this->getXpathPrefix() . '\/atom:link[@rel="enclosure"]');$/;"	v
prefixAtom03	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^        $prefixAtom03 = $dom->lookupPrefix(Zend_Feed_Reader::NAMESPACE_ATOM_03);$/;"	v
prefixAtom10	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^        $prefixAtom10 = $dom->lookupPrefix(Zend_Feed_Reader::NAMESPACE_ATOM_10);$/;"	v
source	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^                $source = new Zend_Feed_Reader_Feed_Atom_Source($element, $this->getXpathPrefix());$/;"	v
source	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^        $source = null;$/;"	v
title	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^            $title = null;$/;"	v
title	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^        $title = $this->getXpath()->evaluate('string(' . $this->getXpathPrefix() . '\/atom:title)');$/;"	v
type	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^            $type = $el->getAttribute('type');$/;"	v
uriNode	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^        $uriNode   = $element->getElementsByTagName('uri');$/;"	v
xhtml	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^                    $xhtml = $this->getXpath()->query($/;"	v
xhtml	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^            $xhtml = preg_replace("\/(<[\\\/]?)" . $prefix . "([a-zA-Z]+)\/", '$1$2', $xhtml);$/;"	v
xhtml	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^        $xhtml = preg_replace($matches, '', $xhtml);$/;"	v
xhtmls	library\Zend\Feed\Reader\Extension\Atom\Entry.php	/^                    $xhtmls = $d->importNode($xhtml, true);$/;"	v
Zend_Feed_Reader_Extension_Atom_Feed	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^class Zend_Feed_Reader_Extension_Atom_Feed$/;"	c
atomDetected	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^        $atomDetected = $this->_getAtomType();$/;"	v
author	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^                $author = $this->_getAuthor($author);$/;"	v
author	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^        $author = array();$/;"	v
authors	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^            $authors = new Zend_Feed_Reader_Collection_Author($/;"	v
authors	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^            $authors = null;$/;"	v
authors	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^        $authors = $this->getAuthors();$/;"	v
authors	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^        $authors = array();$/;"	v
baseUrl	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^            $baseUrl = null;$/;"	v
baseUrl	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^        $baseUrl = $this->_xpath->evaluate('string(\/\/@xml:base[1])');$/;"	v
categoryCollection	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^            $categoryCollection = new Zend_Feed_Reader_Collection_Category;$/;"	v
copyright	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^            $copyright = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/atom:copyright)');$/;"	v
copyright	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^            $copyright = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/atom:rights)');$/;"	v
copyright	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^            $copyright = null;$/;"	v
copyright	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^        $copyright = null;$/;"	v
date	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^            $date = new Zend_Date;$/;"	v
date	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^        $date = null;$/;"	v
dateCreated	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^            $dateCreated = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/atom:created)');$/;"	v
dateCreated	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^            $dateCreated = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/atom:published)');$/;"	v
dateModified	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^            $dateModified = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/atom:modified)');$/;"	v
dateModified	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^            $dateModified = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/atom:updated)');$/;"	v
description	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^            $description = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/atom:subtitle)');$/;"	v
description	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^            $description = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/atom:tagline)'); \/\/ TODO: Is this the same as subtitle?$/;"	v
description	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^            $description = null;$/;"	v
description	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^        $description = null;$/;"	v
dom	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^        $dom = $this->getDomDocument();$/;"	v
emailNode	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^        $emailNode = $element->getElementsByTagName('email');$/;"	v
generator	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^            $generator = null;$/;"	v
generator	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^        $generator = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/atom:generator)');$/;"	v
hubs	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^            $hubs = null;$/;"	v
hubs	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^        $hubs = array();$/;"	v
id	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^                $id = $this->getLink();$/;"	v
id	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^                $id = $this->getTitle();$/;"	v
id	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^                $id = null;$/;"	v
id	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^        $id = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/atom:id)');$/;"	v
image	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^            $image = array('uri'=>$imageUrl);$/;"	v
image	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^            $image = null;$/;"	v
imageUrl	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^        $imageUrl = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/atom:icon)');$/;"	v
imageUrl	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^        $imageUrl = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/atom:logo)');$/;"	v
language	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^            $language = $this->_xpath->evaluate('string(\/\/@xml:lang[1])');$/;"	v
language	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^            $language = null;$/;"	v
language	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^        $language = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/atom:lang)');$/;"	v
link	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^                    $link = null;$/;"	v
link	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^                $link = $this->getBaseUrl() . $link;$/;"	v
link	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^            $link = $list->item(0)->nodeValue;$/;"	v
link	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^            $link = $this->_absolutiseUri($link);$/;"	v
link	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^        $link = $this->_absolutiseUri($link);$/;"	v
link	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^        $link = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/atom:link[@rel="self"]\/@href)');$/;"	v
link	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^        $link = null;$/;"	v
list	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^            $list = $this->_xpath->query($this->getXpathPrefix() . '\/atom10:category');$/;"	v
list	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^            $list = $this->_xpath->query($this->getXpathPrefix() . '\/atom:category');$/;"	v
list	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^        $list = $this->_xpath->query($/;"	v
list	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^        $list = $this->_xpath->query($this->getXpathPrefix()$/;"	v
list	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^        $list = $this->_xpath->query('\/\/atom:author');$/;"	v
nameNode	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^        $nameNode  = $element->getElementsByTagName('name');$/;"	v
prefixAtom03	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^        $prefixAtom03 = $dom->lookupPrefix(Zend_Feed_Reader::NAMESPACE_ATOM_03);$/;"	v
prefixAtom10	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^        $prefixAtom10 = $dom->lookupPrefix(Zend_Feed_Reader::NAMESPACE_ATOM_10);$/;"	v
title	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^            $title = null;$/;"	v
title	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^        $title = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/atom:title)');$/;"	v
uriNode	library\Zend\Feed\Reader\Extension\Atom\Feed.php	/^        $uriNode   = $element->getElementsByTagName('uri');$/;"	v
Zend_Feed_Reader_Extension_Content_Entry	library\Zend\Feed\Reader\Extension\Content\Entry.php	/^class Zend_Feed_Reader_Extension_Content_Entry$/;"	c
content	library\Zend\Feed\Reader\Extension\Content\Entry.php	/^            $content = $this->_xpath->evaluate('string('.$this->getXpathPrefix().'\/content:encoded)');$/;"	v
Zend_Feed_Reader_Extension_CreativeCommons_Entry	library\Zend\Feed\Reader\Extension\CreativeCommons\Entry.php	/^class Zend_Feed_Reader_Extension_CreativeCommons_Entry extends Zend_Feed_Reader_Extension_EntryAbstract$/;"	c
cc	library\Zend\Feed\Reader\Extension\CreativeCommons\Entry.php	/^            $cc = new Zend_Feed_Reader_Extension_CreativeCommons_Feed($/;"	v
licenses	library\Zend\Feed\Reader\Extension\CreativeCommons\Entry.php	/^            $licenses = $cc->getLicenses();$/;"	v
licenses	library\Zend\Feed\Reader\Extension\CreativeCommons\Entry.php	/^            $licenses = array_unique($licenses);$/;"	v
licenses	library\Zend\Feed\Reader\Extension\CreativeCommons\Entry.php	/^        $licenses = $this->getLicenses();$/;"	v
licenses	library\Zend\Feed\Reader\Extension\CreativeCommons\Entry.php	/^        $licenses = array();$/;"	v
list	library\Zend\Feed\Reader\Extension\CreativeCommons\Entry.php	/^        $list = $this->_xpath->evaluate($this->getXpathPrefix() . '\/\/cc:license');$/;"	v
name	library\Zend\Feed\Reader\Extension\CreativeCommons\Entry.php	/^        $name = 'licenses';$/;"	v
Zend_Feed_Reader_Extension_CreativeCommons_Feed	library\Zend\Feed\Reader\Extension\CreativeCommons\Feed.php	/^class Zend_Feed_Reader_Extension_CreativeCommons_Feed$/;"	c
licenses	library\Zend\Feed\Reader\Extension\CreativeCommons\Feed.php	/^            $licenses = array_unique($licenses);$/;"	v
licenses	library\Zend\Feed\Reader\Extension\CreativeCommons\Feed.php	/^        $licenses = $this->getLicenses();$/;"	v
licenses	library\Zend\Feed\Reader\Extension\CreativeCommons\Feed.php	/^        $licenses = array();$/;"	v
list	library\Zend\Feed\Reader\Extension\CreativeCommons\Feed.php	/^        $list = $this->_xpath->evaluate('channel\/cc:license');$/;"	v
name	library\Zend\Feed\Reader\Extension\CreativeCommons\Feed.php	/^        $name = 'licenses';$/;"	v
Zend_Feed_Reader_Extension_DublinCore_Entry	library\Zend\Feed\Reader\Extension\DublinCore\Entry.php	/^class Zend_Feed_Reader_Extension_DublinCore_Entry$/;"	c
authors	library\Zend\Feed\Reader\Extension\DublinCore\Entry.php	/^            $authors = new Zend_Feed_Reader_Collection_Author($/;"	v
authors	library\Zend\Feed\Reader\Extension\DublinCore\Entry.php	/^            $authors = null;$/;"	v
authors	library\Zend\Feed\Reader\Extension\DublinCore\Entry.php	/^        $authors = $this->getAuthors();$/;"	v
authors	library\Zend\Feed\Reader\Extension\DublinCore\Entry.php	/^        $authors = array();$/;"	v
categoryCollection	library\Zend\Feed\Reader\Extension\DublinCore\Entry.php	/^            $categoryCollection = new Zend_Feed_Reader_Collection_Category;$/;"	v
d	library\Zend\Feed\Reader\Extension\DublinCore\Entry.php	/^            $d = new Zend_Date;$/;"	v
d	library\Zend\Feed\Reader\Extension\DublinCore\Entry.php	/^        $d    = null;$/;"	v
date	library\Zend\Feed\Reader\Extension\DublinCore\Entry.php	/^            $date = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/dc10:date)');$/;"	v
date	library\Zend\Feed\Reader\Extension\DublinCore\Entry.php	/^        $date = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/dc11:date)');$/;"	v
description	library\Zend\Feed\Reader\Extension\DublinCore\Entry.php	/^            $description = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/dc10:description)');$/;"	v
description	library\Zend\Feed\Reader\Extension\DublinCore\Entry.php	/^            $description = null;$/;"	v
description	library\Zend\Feed\Reader\Extension\DublinCore\Entry.php	/^        $description = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/dc11:description)');$/;"	v
description	library\Zend\Feed\Reader\Extension\DublinCore\Entry.php	/^        $description = null;$/;"	v
id	library\Zend\Feed\Reader\Extension\DublinCore\Entry.php	/^            $id = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/dc10:identifier)');$/;"	v
id	library\Zend\Feed\Reader\Extension\DublinCore\Entry.php	/^        $id = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/dc11:identifier)');$/;"	v
id	library\Zend\Feed\Reader\Extension\DublinCore\Entry.php	/^        $id = null;$/;"	v
list	library\Zend\Feed\Reader\Extension\DublinCore\Entry.php	/^                $list = $this->_xpath->evaluate($this->getXpathPrefix() . '\/\/dc10:publisher');$/;"	v
list	library\Zend\Feed\Reader\Extension\DublinCore\Entry.php	/^            $list = $this->_xpath->evaluate($this->getXpathPrefix() . '\/\/dc10:creator');$/;"	v
list	library\Zend\Feed\Reader\Extension\DublinCore\Entry.php	/^            $list = $this->_xpath->evaluate($this->getXpathPrefix() . '\/\/dc10:subject');$/;"	v
list	library\Zend\Feed\Reader\Extension\DublinCore\Entry.php	/^            $list = $this->_xpath->evaluate($this->getXpathPrefix() . '\/\/dc11:publisher');$/;"	v
list	library\Zend\Feed\Reader\Extension\DublinCore\Entry.php	/^        $list = $this->_xpath->evaluate($this->getXpathPrefix() . '\/\/dc11:creator');$/;"	v
list	library\Zend\Feed\Reader\Extension\DublinCore\Entry.php	/^        $list = $this->_xpath->evaluate($this->getXpathPrefix() . '\/\/dc11:subject');$/;"	v
title	library\Zend\Feed\Reader\Extension\DublinCore\Entry.php	/^            $title = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/dc10:title)');$/;"	v
title	library\Zend\Feed\Reader\Extension\DublinCore\Entry.php	/^            $title = null;$/;"	v
title	library\Zend\Feed\Reader\Extension\DublinCore\Entry.php	/^        $title = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/dc11:title)');$/;"	v
title	library\Zend\Feed\Reader\Extension\DublinCore\Entry.php	/^        $title = null;$/;"	v
Zend_Feed_Reader_Extension_DublinCore_Feed	library\Zend\Feed\Reader\Extension\DublinCore\Feed.php	/^class Zend_Feed_Reader_Extension_DublinCore_Feed$/;"	c
authors	library\Zend\Feed\Reader\Extension\DublinCore\Feed.php	/^            $authors = new Zend_Feed_Reader_Collection_Author($/;"	v
authors	library\Zend\Feed\Reader\Extension\DublinCore\Feed.php	/^            $authors = null;$/;"	v
authors	library\Zend\Feed\Reader\Extension\DublinCore\Feed.php	/^        $authors = $this->getAuthors();$/;"	v
authors	library\Zend\Feed\Reader\Extension\DublinCore\Feed.php	/^        $authors = array();$/;"	v
categoryCollection	library\Zend\Feed\Reader\Extension\DublinCore\Feed.php	/^            $categoryCollection = new Zend_Feed_Reader_Collection_Category;$/;"	v
copyright	library\Zend\Feed\Reader\Extension\DublinCore\Feed.php	/^            $copyright = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/dc10:rights)');$/;"	v
copyright	library\Zend\Feed\Reader\Extension\DublinCore\Feed.php	/^            $copyright = null;$/;"	v
copyright	library\Zend\Feed\Reader\Extension\DublinCore\Feed.php	/^        $copyright = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/dc11:rights)');$/;"	v
copyright	library\Zend\Feed\Reader\Extension\DublinCore\Feed.php	/^        $copyright = null;$/;"	v
d	library\Zend\Feed\Reader\Extension\DublinCore\Feed.php	/^            $d = new Zend_Date;$/;"	v
d	library\Zend\Feed\Reader\Extension\DublinCore\Feed.php	/^        $d = null;$/;"	v
date	library\Zend\Feed\Reader\Extension\DublinCore\Feed.php	/^            $date = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/dc10:date)');$/;"	v
date	library\Zend\Feed\Reader\Extension\DublinCore\Feed.php	/^        $date = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/dc11:date)');$/;"	v
description	library\Zend\Feed\Reader\Extension\DublinCore\Feed.php	/^            $description = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/dc10:description)');$/;"	v
description	library\Zend\Feed\Reader\Extension\DublinCore\Feed.php	/^            $description = null;$/;"	v
description	library\Zend\Feed\Reader\Extension\DublinCore\Feed.php	/^        $description = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/dc11:description)');$/;"	v
description	library\Zend\Feed\Reader\Extension\DublinCore\Feed.php	/^        $description = null;$/;"	v
id	library\Zend\Feed\Reader\Extension\DublinCore\Feed.php	/^            $id = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/dc10:identifier)');$/;"	v
id	library\Zend\Feed\Reader\Extension\DublinCore\Feed.php	/^        $id = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/dc11:identifier)');$/;"	v
id	library\Zend\Feed\Reader\Extension\DublinCore\Feed.php	/^        $id = null;$/;"	v
language	library\Zend\Feed\Reader\Extension\DublinCore\Feed.php	/^            $language = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/dc10:language)');$/;"	v
language	library\Zend\Feed\Reader\Extension\DublinCore\Feed.php	/^            $language = null;$/;"	v
language	library\Zend\Feed\Reader\Extension\DublinCore\Feed.php	/^        $language = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/dc11:language)');$/;"	v
language	library\Zend\Feed\Reader\Extension\DublinCore\Feed.php	/^        $language = null;$/;"	v
list	library\Zend\Feed\Reader\Extension\DublinCore\Feed.php	/^                $list = $this->_xpath->query('\/\/dc10:publisher');$/;"	v
list	library\Zend\Feed\Reader\Extension\DublinCore\Feed.php	/^            $list = $this->_xpath->evaluate($this->getXpathPrefix() . '\/\/dc10:subject');$/;"	v
list	library\Zend\Feed\Reader\Extension\DublinCore\Feed.php	/^            $list = $this->_xpath->query('\/\/dc10:creator');$/;"	v
list	library\Zend\Feed\Reader\Extension\DublinCore\Feed.php	/^            $list = $this->_xpath->query('\/\/dc11:publisher');$/;"	v
list	library\Zend\Feed\Reader\Extension\DublinCore\Feed.php	/^        $list    = $this->_xpath->query('\/\/dc11:creator');$/;"	v
list	library\Zend\Feed\Reader\Extension\DublinCore\Feed.php	/^        $list = $this->_xpath->evaluate($this->getXpathPrefix() . '\/\/dc11:subject');$/;"	v
title	library\Zend\Feed\Reader\Extension\DublinCore\Feed.php	/^            $title = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/dc10:title)');$/;"	v
title	library\Zend\Feed\Reader\Extension\DublinCore\Feed.php	/^            $title = null;$/;"	v
title	library\Zend\Feed\Reader\Extension\DublinCore\Feed.php	/^        $title = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/dc11:title)');$/;"	v
title	library\Zend\Feed\Reader\Extension\DublinCore\Feed.php	/^        $title = null;$/;"	v
assumed	library\Zend\Feed\Reader\Extension\EntryAbstract.php	/^        $assumed = $this->getDomDocument()->encoding;$/;"	v
assumed	library\Zend\Feed\Reader\Extension\FeedAbstract.php	/^        $assumed = $this->getDomDocument()->encoding;$/;"	v
Zend_Feed_Reader_Extension_Podcast_Entry	library\Zend\Feed\Reader\Extension\Podcast\Entry.php	/^class Zend_Feed_Reader_Extension_Podcast_Entry extends Zend_Feed_Reader_Extension_EntryAbstract$/;"	c
author	library\Zend\Feed\Reader\Extension\Podcast\Entry.php	/^            $author = null;$/;"	v
author	library\Zend\Feed\Reader\Extension\Podcast\Entry.php	/^        $author = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/itunes:author)');$/;"	v
block	library\Zend\Feed\Reader\Extension\Podcast\Entry.php	/^            $block = null;$/;"	v
block	library\Zend\Feed\Reader\Extension\Podcast\Entry.php	/^        $block = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/itunes:block)');$/;"	v
duration	library\Zend\Feed\Reader\Extension\Podcast\Entry.php	/^            $duration = null;$/;"	v
duration	library\Zend\Feed\Reader\Extension\Podcast\Entry.php	/^        $duration = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/itunes:duration)');$/;"	v
explicit	library\Zend\Feed\Reader\Extension\Podcast\Entry.php	/^            $explicit = null;$/;"	v
explicit	library\Zend\Feed\Reader\Extension\Podcast\Entry.php	/^        $explicit = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/itunes:explicit)');$/;"	v
keywords	library\Zend\Feed\Reader\Extension\Podcast\Entry.php	/^            $keywords = null;$/;"	v
keywords	library\Zend\Feed\Reader\Extension\Podcast\Entry.php	/^        $keywords = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/itunes:keywords)');$/;"	v
subtitle	library\Zend\Feed\Reader\Extension\Podcast\Entry.php	/^            $subtitle = null;$/;"	v
subtitle	library\Zend\Feed\Reader\Extension\Podcast\Entry.php	/^        $subtitle = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/itunes:subtitle)');$/;"	v
summary	library\Zend\Feed\Reader\Extension\Podcast\Entry.php	/^            $summary = null;$/;"	v
summary	library\Zend\Feed\Reader\Extension\Podcast\Entry.php	/^        $summary = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/itunes:summary)');$/;"	v
Zend_Feed_Reader_Extension_Podcast_Feed	library\Zend\Feed\Reader\Extension\Podcast\Feed.php	/^class Zend_Feed_Reader_Extension_Podcast_Feed extends Zend_Feed_Reader_Extension_FeedAbstract$/;"	c
author	library\Zend\Feed\Reader\Extension\Podcast\Feed.php	/^            $author = null;$/;"	v
author	library\Zend\Feed\Reader\Extension\Podcast\Feed.php	/^        $author = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/itunes:author)');$/;"	v
block	library\Zend\Feed\Reader\Extension\Podcast\Feed.php	/^            $block = null;$/;"	v
block	library\Zend\Feed\Reader\Extension\Podcast\Feed.php	/^        $block = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/itunes:block)');$/;"	v
categories	library\Zend\Feed\Reader\Extension\Podcast\Feed.php	/^            $categories = null;$/;"	v
categories	library\Zend\Feed\Reader\Extension\Podcast\Feed.php	/^        $categories = array();$/;"	v
categoryList	library\Zend\Feed\Reader\Extension\Podcast\Feed.php	/^        $categoryList = $this->_xpath->query($this->getXpathPrefix() . '\/itunes:category');$/;"	v
children	library\Zend\Feed\Reader\Extension\Podcast\Feed.php	/^                    $children = array();$/;"	v
children	library\Zend\Feed\Reader\Extension\Podcast\Feed.php	/^                $children = null;$/;"	v
email	library\Zend\Feed\Reader\Extension\Podcast\Feed.php	/^        $email = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/itunes:owner\/itunes:email)');$/;"	v
explicit	library\Zend\Feed\Reader\Extension\Podcast\Feed.php	/^            $explicit = null;$/;"	v
explicit	library\Zend\Feed\Reader\Extension\Podcast\Feed.php	/^        $explicit = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/itunes:explicit)');$/;"	v
image	library\Zend\Feed\Reader\Extension\Podcast\Feed.php	/^            $image = null;$/;"	v
image	library\Zend\Feed\Reader\Extension\Podcast\Feed.php	/^        $image = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/itunes:image\/@href)');$/;"	v
keywords	library\Zend\Feed\Reader\Extension\Podcast\Feed.php	/^            $keywords = null;$/;"	v
keywords	library\Zend\Feed\Reader\Extension\Podcast\Feed.php	/^        $keywords = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/itunes:keywords)');$/;"	v
name	library\Zend\Feed\Reader\Extension\Podcast\Feed.php	/^        $name  = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/itunes:owner\/itunes:name)');$/;"	v
newFeedUrl	library\Zend\Feed\Reader\Extension\Podcast\Feed.php	/^            $newFeedUrl = null;$/;"	v
newFeedUrl	library\Zend\Feed\Reader\Extension\Podcast\Feed.php	/^        $newFeedUrl = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/itunes:new-feed-url)');$/;"	v
owner	library\Zend\Feed\Reader\Extension\Podcast\Feed.php	/^            $owner = $email . (empty($name) ? '' : ' (' . $name . ')');$/;"	v
owner	library\Zend\Feed\Reader\Extension\Podcast\Feed.php	/^            $owner = $name;$/;"	v
owner	library\Zend\Feed\Reader\Extension\Podcast\Feed.php	/^            $owner = null;$/;"	v
owner	library\Zend\Feed\Reader\Extension\Podcast\Feed.php	/^        $owner = null;$/;"	v
subtitle	library\Zend\Feed\Reader\Extension\Podcast\Feed.php	/^            $subtitle = null;$/;"	v
subtitle	library\Zend\Feed\Reader\Extension\Podcast\Feed.php	/^        $subtitle = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/itunes:subtitle)');$/;"	v
summary	library\Zend\Feed\Reader\Extension\Podcast\Feed.php	/^            $summary = null;$/;"	v
summary	library\Zend\Feed\Reader\Extension\Podcast\Feed.php	/^        $summary = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/itunes:summary)');$/;"	v
Zend_Feed_Reader_Extension_Slash_Entry	library\Zend\Feed\Reader\Extension\Slash\Entry.php	/^class Zend_Feed_Reader_Extension_Slash_Entry$/;"	c
comments	library\Zend\Feed\Reader\Extension\Slash\Entry.php	/^        $comments = $this->_getData($name, 'string');$/;"	v
data	library\Zend\Feed\Reader\Extension\Slash\Entry.php	/^            $data = null;$/;"	v
data	library\Zend\Feed\Reader\Extension\Slash\Entry.php	/^        $data = $this->_xpath->evaluate($type . '(' . $this->getXpathPrefix() . '\/slash10:' . $name . ')');$/;"	v
hitParade	library\Zend\Feed\Reader\Extension\Slash\Entry.php	/^        $hitParade    = array();$/;"	v
name	library\Zend\Feed\Reader\Extension\Slash\Entry.php	/^        $name = 'comments';$/;"	v
name	library\Zend\Feed\Reader\Extension\Slash\Entry.php	/^        $name = 'hit_parade';$/;"	v
stringParade	library\Zend\Feed\Reader\Extension\Slash\Entry.php	/^            $stringParade = explode(',', $stringParade);$/;"	v
stringParade	library\Zend\Feed\Reader\Extension\Slash\Entry.php	/^        $stringParade = $this->_getData($name);$/;"	v
Zend_Feed_Reader_Extension_Syndication_Feed	library\Zend\Feed\Reader\Extension\Syndication\Feed.php	/^class Zend_Feed_Reader_Extension_Syndication_Feed$/;"	c
data	library\Zend\Feed\Reader\Extension\Syndication\Feed.php	/^            $data = null;$/;"	v
data	library\Zend\Feed\Reader\Extension\Syndication\Feed.php	/^        $data = $this->_xpath->evaluate($type . '(' . $this->getXpathPrefix() . '\/syn10:' . $name . ')');$/;"	v
date	library\Zend\Feed\Reader\Extension\Syndication\Feed.php	/^            $date = new Zend_Date;$/;"	v
date	library\Zend\Feed\Reader\Extension\Syndication\Feed.php	/^        $date = null;$/;"	v
freq	library\Zend\Feed\Reader\Extension\Syndication\Feed.php	/^            $freq = 1;$/;"	v
freq	library\Zend\Feed\Reader\Extension\Syndication\Feed.php	/^        $freq = $this->_getData($name, 'number');$/;"	v
name	library\Zend\Feed\Reader\Extension\Syndication\Feed.php	/^        $name = 'updateFrequency';$/;"	v
name	library\Zend\Feed\Reader\Extension\Syndication\Feed.php	/^        $name = 'updatePeriod';$/;"	v
period	library\Zend\Feed\Reader\Extension\Syndication\Feed.php	/^        $period = $this->_getData($name);$/;"	v
period	library\Zend\Feed\Reader\Extension\Syndication\Feed.php	/^        $period = $this->getUpdatePeriod();$/;"	v
ticks	library\Zend\Feed\Reader\Extension\Syndication\Feed.php	/^        $ticks = 1;$/;"	v
updateBase	library\Zend\Feed\Reader\Extension\Syndication\Feed.php	/^        $updateBase = $this->_getData('updateBase');$/;"	v
Zend_Feed_Reader_Extension_Thread_Entry	library\Zend\Feed\Reader\Extension\Thread\Entry.php	/^class Zend_Feed_Reader_Extension_Thread_Entry$/;"	c
data	library\Zend\Feed\Reader\Extension\Thread\Entry.php	/^            $data = null;$/;"	v
data	library\Zend\Feed\Reader\Extension\Thread\Entry.php	/^        $data = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/thread10:' . $name . ')');$/;"	v
Zend_Feed_Reader_Extension_WellFormedWeb_Entry	library\Zend\Feed\Reader\Extension\WellFormedWeb\Entry.php	/^class Zend_Feed_Reader_Extension_WellFormedWeb_Entry$/;"	c
data	library\Zend\Feed\Reader\Extension\WellFormedWeb\Entry.php	/^            $data = null;$/;"	v
data	library\Zend\Feed\Reader\Extension\WellFormedWeb\Entry.php	/^        $data = $this->_xpath->evaluate('string(' . $this->getXpathPrefix() . '\/wfw:' . $name . ')');$/;"	v
name	library\Zend\Feed\Reader\Extension\WellFormedWeb\Entry.php	/^        $name = 'commentRss';$/;"	v
all	library\Zend\Feed\Reader\FeedAbstract.php	/^        $all = Zend_Feed_Reader::getExtensions();$/;"	v
assumed	library\Zend\Feed\Reader\FeedAbstract.php	/^            $assumed = 'UTF-8';$/;"	v
assumed	library\Zend\Feed\Reader\FeedAbstract.php	/^        $assumed = $this->getDomDocument()->encoding;$/;"	v
className	library\Zend\Feed\Reader\FeedAbstract.php	/^            $className = Zend_Feed_Reader::getPluginLoader()->getClassName($extension);$/;"	v
feed	library\Zend\Feed\Reader\FeedAbstract.php	/^        $feed = $all['feed'];$/;"	v
reader	library\Zend\Feed\Reader\FeedAbstract.php	/^            $reader = new Zend_Feed_Reader_Entry_Atom($this->_entries[$this->key()], $this->key(), $this->getType());$/;"	v
reader	library\Zend\Feed\Reader\FeedAbstract.php	/^            $reader = new Zend_Feed_Reader_Entry_Rss($this->_entries[$this->key()], $this->key(), $this->getType());$/;"	v
Zend_Feed_Reader_FeedSet	library\Zend\Feed\Reader\FeedSet.php	/^class Zend_Feed_Reader_FeedSet extends ArrayObject$/;"	c
absolutes	library\Zend\Feed\Reader\FeedSet.php	/^        $absolutes = array();$/;"	v
feed	library\Zend\Feed\Reader\FeedSet.php	/^            $feed = Zend_Feed_Reader::import($this->offsetGet('href'));$/;"	v
link	library\Zend\Feed\Reader\FeedSet.php	/^                    $link = $uri->getPath() . '\/' . $link;$/;"	v
link	library\Zend\Feed\Reader\FeedSet.php	/^                    $link = null;$/;"	v
link	library\Zend\Feed\Reader\FeedSet.php	/^                $link = $uri->getScheme() . ':\/\/' . $uri->getHost() . '\/' . $this->_canonicalizePath($link);$/;"	v
parts	library\Zend\Feed\Reader\FeedSet.php	/^        $parts = array_filter(explode('\/', $path));$/;"	v
uri	library\Zend\Feed\Reader\FeedSet.php	/^                $uri = Zend_Uri::factory($uri);$/;"	v
Zend_Feed_Reader_Feed_Atom	library\Zend\Feed\Reader\Feed\Atom.php	/^class Zend_Feed_Reader_Feed_Atom extends Zend_Feed_Reader_FeedAbstract$/;"	c
atomClass	library\Zend\Feed\Reader\Feed\Atom.php	/^        $atomClass = Zend_Feed_Reader::getPluginLoader()->getClassName('Atom_Feed');$/;"	v
atomClass	library\Zend\Feed\Reader\Feed\Atom.php	/^        $atomClass = Zend_Feed_Reader::getPluginLoader()->getClassName('DublinCore_Feed');$/;"	v
authors	library\Zend\Feed\Reader\Feed\Atom.php	/^        $authors = $this->getAuthors();$/;"	v
authors	library\Zend\Feed\Reader\Feed\Atom.php	/^        $authors = $this->getExtension('Atom')->getAuthors();$/;"	v
baseUrl	library\Zend\Feed\Reader\Feed\Atom.php	/^        $baseUrl = $this->getExtension('Atom')->getBaseUrl();$/;"	v
categoryCollection	library\Zend\Feed\Reader\Feed\Atom.php	/^            $categoryCollection = $this->getExtension('DublinCore')->getCategories();$/;"	v
categoryCollection	library\Zend\Feed\Reader\Feed\Atom.php	/^        $categoryCollection = $this->getExtension('Atom')->getCategories();$/;"	v
copyright	library\Zend\Feed\Reader\Feed\Atom.php	/^            $copyright = null;$/;"	v
copyright	library\Zend\Feed\Reader\Feed\Atom.php	/^        $copyright = $this->getExtension('Atom')->getCopyright();$/;"	v
dateCreated	library\Zend\Feed\Reader\Feed\Atom.php	/^            $dateCreated = null;$/;"	v
dateCreated	library\Zend\Feed\Reader\Feed\Atom.php	/^        $dateCreated = $this->getExtension('Atom')->getDateCreated();$/;"	v
dateModified	library\Zend\Feed\Reader\Feed\Atom.php	/^            $dateModified = null;$/;"	v
dateModified	library\Zend\Feed\Reader\Feed\Atom.php	/^        $dateModified = $this->getExtension('Atom')->getDateModified();$/;"	v
description	library\Zend\Feed\Reader\Feed\Atom.php	/^            $description = null;$/;"	v
description	library\Zend\Feed\Reader\Feed\Atom.php	/^        $description = $this->getExtension('Atom')->getDescription();$/;"	v
entries	library\Zend\Feed\Reader\Feed\Atom.php	/^            $entries = $this->_xpath->evaluate('\/\/atom:entry');$/;"	v
entries	library\Zend\Feed\Reader\Feed\Atom.php	/^            $entries = array();$/;"	v
generator	library\Zend\Feed\Reader\Feed\Atom.php	/^        $generator = $this->getExtension('Atom')->getGenerator();$/;"	v
hubs	library\Zend\Feed\Reader\Feed\Atom.php	/^        $hubs = $this->getExtension('Atom')->getHubs();$/;"	v
id	library\Zend\Feed\Reader\Feed\Atom.php	/^        $id = $this->getExtension('Atom')->getId();$/;"	v
language	library\Zend\Feed\Reader\Feed\Atom.php	/^            $language = $this->_xpath->evaluate('string(\/\/@xml:lang[1])');$/;"	v
language	library\Zend\Feed\Reader\Feed\Atom.php	/^            $language = null;$/;"	v
language	library\Zend\Feed\Reader\Feed\Atom.php	/^        $language = $this->getExtension('Atom')->getLanguage();$/;"	v
link	library\Zend\Feed\Reader\Feed\Atom.php	/^            $link = $this->getOriginalSourceUri();$/;"	v
link	library\Zend\Feed\Reader\Feed\Atom.php	/^        $link = $this->getExtension('Atom')->getFeedLink();$/;"	v
link	library\Zend\Feed\Reader\Feed\Atom.php	/^        $link = $this->getExtension('Atom')->getImage();$/;"	v
link	library\Zend\Feed\Reader\Feed\Atom.php	/^        $link = $this->getExtension('Atom')->getLink();$/;"	v
title	library\Zend\Feed\Reader\Feed\Atom.php	/^        $title = $this->getExtension('Atom')->getTitle();$/;"	v
Zend_Feed_Reader_Feed_Atom_Source	library\Zend\Feed\Reader\Feed\Atom\Source.php	/^class Zend_Feed_Reader_Feed_Atom_Source extends Zend_Feed_Reader_Feed_Atom$/;"	c
atomClass	library\Zend\Feed\Reader\Feed\Atom\Source.php	/^        $atomClass = Zend_Feed_Reader::getPluginLoader()->getClassName('Atom_Feed');$/;"	v
atomClass	library\Zend\Feed\Reader\Feed\Atom\Source.php	/^        $atomClass = Zend_Feed_Reader::getPluginLoader()->getClassName('DublinCore_Feed');$/;"	v
Zend_Feed_Reader_Feed_Rss	library\Zend\Feed\Reader\Feed\Rss.php	/^class Zend_Feed_Reader_Feed_Rss extends Zend_Feed_Reader_FeedAbstract$/;"	c
atomClass	library\Zend\Feed\Reader\Feed\Rss.php	/^        $atomClass = Zend_Feed_Reader::getPluginLoader()->getClassName('Atom_Feed');$/;"	v
authors	library\Zend\Feed\Reader\Feed\Rss.php	/^            $authors = $this->getExtension('Atom')->getAuthors();$/;"	v
authors	library\Zend\Feed\Reader\Feed\Rss.php	/^            $authors = new Zend_Feed_Reader_Collection_Author($/;"	v
authors	library\Zend\Feed\Reader\Feed\Rss.php	/^            $authors = null;$/;"	v
authors	library\Zend\Feed\Reader\Feed\Rss.php	/^        $authors = $this->getAuthors();$/;"	v
authors	library\Zend\Feed\Reader\Feed\Rss.php	/^        $authors = array();$/;"	v
authors_dc	library\Zend\Feed\Reader\Feed\Rss.php	/^        $authors_dc = $this->getExtension('DublinCore')->getAuthors();$/;"	v
categoryCollection	library\Zend\Feed\Reader\Feed\Rss.php	/^            $categoryCollection = $this->getExtension('Atom')->getCategories();$/;"	v
categoryCollection	library\Zend\Feed\Reader\Feed\Rss.php	/^            $categoryCollection = $this->getExtension('DublinCore')->getCategories();$/;"	v
categoryCollection	library\Zend\Feed\Reader\Feed\Rss.php	/^            $categoryCollection = new Zend_Feed_Reader_Collection_Category;$/;"	v
copyright	library\Zend\Feed\Reader\Feed\Rss.php	/^            $copyright = $this->_xpath->evaluate('string(\/rss\/channel\/copyright)');$/;"	v
copyright	library\Zend\Feed\Reader\Feed\Rss.php	/^            $copyright = $this->getExtension('Atom')->getCopyright();$/;"	v
copyright	library\Zend\Feed\Reader\Feed\Rss.php	/^            $copyright = $this->getExtension('DublinCore')->getCopyright();$/;"	v
copyright	library\Zend\Feed\Reader\Feed\Rss.php	/^            $copyright = null;$/;"	v
copyright	library\Zend\Feed\Reader\Feed\Rss.php	/^        $copyright = null;$/;"	v
data	library\Zend\Feed\Reader\Feed\Rss.php	/^                $data = array();$/;"	v
date	library\Zend\Feed\Reader\Feed\Rss.php	/^                    $date = new Zend_Date($dateModifiedParsed);$/;"	v
date	library\Zend\Feed\Reader\Feed\Rss.php	/^                    $date = new Zend_Date($lastBuildDateParsed);$/;"	v
date	library\Zend\Feed\Reader\Feed\Rss.php	/^                    $date = new Zend_Date;$/;"	v
date	library\Zend\Feed\Reader\Feed\Rss.php	/^            $date = $this->getExtension('Atom')->getDateModified();$/;"	v
date	library\Zend\Feed\Reader\Feed\Rss.php	/^            $date = $this->getExtension('DublinCore')->getDate();$/;"	v
date	library\Zend\Feed\Reader\Feed\Rss.php	/^            $date = null;$/;"	v
date	library\Zend\Feed\Reader\Feed\Rss.php	/^        $date = null;$/;"	v
dateModified	library\Zend\Feed\Reader\Feed\Rss.php	/^                $dateModified = $this->_xpath->evaluate('string(\/rss\/channel\/lastBuildDate)');$/;"	v
dateModified	library\Zend\Feed\Reader\Feed\Rss.php	/^            $dateModified = $this->_xpath->evaluate('string(\/rss\/channel\/pubDate)');$/;"	v
dateModified	library\Zend\Feed\Reader\Feed\Rss.php	/^        $dateModified = null;$/;"	v
dateModifiedParsed	library\Zend\Feed\Reader\Feed\Rss.php	/^                $dateModifiedParsed = strtotime($dateModified);$/;"	v
dateStandards	library\Zend\Feed\Reader\Feed\Rss.php	/^                    $dateStandards = array(Zend_Date::RSS, Zend_Date::RFC_822,$/;"	v
description	library\Zend\Feed\Reader\Feed\Rss.php	/^            $description = $this->_xpath->evaluate('string(\/rdf:RDF\/rss:channel\/rss:description)');$/;"	v
description	library\Zend\Feed\Reader\Feed\Rss.php	/^            $description = $this->_xpath->evaluate('string(\/rss\/channel\/description)');$/;"	v
description	library\Zend\Feed\Reader\Feed\Rss.php	/^            $description = $this->getExtension('Atom')->getDescription();$/;"	v
description	library\Zend\Feed\Reader\Feed\Rss.php	/^            $description = $this->getExtension('DublinCore')->getDescription();$/;"	v
description	library\Zend\Feed\Reader\Feed\Rss.php	/^            $description = null;$/;"	v
description	library\Zend\Feed\Reader\Feed\Rss.php	/^        $description = null;$/;"	v
dublinCoreClass	library\Zend\Feed\Reader\Feed\Rss.php	/^        $dublinCoreClass = Zend_Feed_Reader::getPluginLoader()->getClassName('DublinCore_Feed');$/;"	v
email	library\Zend\Feed\Reader\Feed\Rss.php	/^                $email = null;$/;"	v
entries	library\Zend\Feed\Reader\Feed\Rss.php	/^            $entries = $this->_xpath->evaluate('\/\/item');$/;"	v
entries	library\Zend\Feed\Reader\Feed\Rss.php	/^            $entries = $this->_xpath->evaluate('\/\/rss:item');$/;"	v
entries	library\Zend\Feed\Reader\Feed\Rss.php	/^        $entries = array();$/;"	v
generator	library\Zend\Feed\Reader\Feed\Rss.php	/^                $generator = $this->_xpath->evaluate('string(\/rdf:RDF\/rss:channel\/atom:generator)');$/;"	v
generator	library\Zend\Feed\Reader\Feed\Rss.php	/^                $generator = $this->_xpath->evaluate('string(\/rss\/channel\/atom:generator)');$/;"	v
generator	library\Zend\Feed\Reader\Feed\Rss.php	/^            $generator = $this->_xpath->evaluate('string(\/rss\/channel\/generator)');$/;"	v
generator	library\Zend\Feed\Reader\Feed\Rss.php	/^            $generator = $this->getExtension('Atom')->getGenerator();$/;"	v
generator	library\Zend\Feed\Reader\Feed\Rss.php	/^            $generator = null;$/;"	v
generator	library\Zend\Feed\Reader\Feed\Rss.php	/^        $generator = null;$/;"	v
hubs	library\Zend\Feed\Reader\Feed\Rss.php	/^            $hubs = array_unique($hubs);$/;"	v
hubs	library\Zend\Feed\Reader\Feed\Rss.php	/^            $hubs = null;$/;"	v
hubs	library\Zend\Feed\Reader\Feed\Rss.php	/^        $hubs = $this->getExtension('Atom')->getHubs();$/;"	v
id	library\Zend\Feed\Reader\Feed\Rss.php	/^                $id = $this->getLink();$/;"	v
id	library\Zend\Feed\Reader\Feed\Rss.php	/^                $id = $this->getTitle();$/;"	v
id	library\Zend\Feed\Reader\Feed\Rss.php	/^                $id = null;$/;"	v
id	library\Zend\Feed\Reader\Feed\Rss.php	/^            $id = $this->_xpath->evaluate('string(\/rss\/channel\/guid)');$/;"	v
id	library\Zend\Feed\Reader\Feed\Rss.php	/^            $id = $this->getExtension('Atom')->getId();$/;"	v
id	library\Zend\Feed\Reader\Feed\Rss.php	/^            $id = $this->getExtension('DublinCore')->getId();$/;"	v
id	library\Zend\Feed\Reader\Feed\Rss.php	/^        $id = null;$/;"	v
image	library\Zend\Feed\Reader\Feed\Rss.php	/^            $image = array();$/;"	v
image	library\Zend\Feed\Reader\Feed\Rss.php	/^            $image = null;$/;"	v
language	library\Zend\Feed\Reader\Feed\Rss.php	/^            $language = $this->_xpath->evaluate('string(\/\/@xml:lang[1])');$/;"	v
language	library\Zend\Feed\Reader\Feed\Rss.php	/^            $language = $this->_xpath->evaluate('string(\/rss\/channel\/language)');$/;"	v
language	library\Zend\Feed\Reader\Feed\Rss.php	/^            $language = $this->getExtension('Atom')->getLanguage();$/;"	v
language	library\Zend\Feed\Reader\Feed\Rss.php	/^            $language = $this->getExtension('DublinCore')->getLanguage();$/;"	v
language	library\Zend\Feed\Reader\Feed\Rss.php	/^            $language = null;$/;"	v
language	library\Zend\Feed\Reader\Feed\Rss.php	/^        $language = null;$/;"	v
lastBuildDate	library\Zend\Feed\Reader\Feed\Rss.php	/^            $lastBuildDate = $this->_xpath->evaluate('string(\/rss\/channel\/lastBuildDate)');$/;"	v
lastBuildDate	library\Zend\Feed\Reader\Feed\Rss.php	/^        $lastBuildDate = null;$/;"	v
lastBuildDateParsed	library\Zend\Feed\Reader\Feed\Rss.php	/^                $lastBuildDateParsed = strtotime($lastBuildDate);$/;"	v
link	library\Zend\Feed\Reader\Feed\Rss.php	/^            $link = $this->_xpath->evaluate('string(\/rdf:RDF\/rss:channel\/rss:link)');$/;"	v
link	library\Zend\Feed\Reader\Feed\Rss.php	/^            $link = $this->_xpath->evaluate('string(\/rss\/channel\/link)');$/;"	v
link	library\Zend\Feed\Reader\Feed\Rss.php	/^            $link = $this->getExtension('Atom')->getLink();$/;"	v
link	library\Zend\Feed\Reader\Feed\Rss.php	/^            $link = $this->getOriginalSourceUri();$/;"	v
link	library\Zend\Feed\Reader\Feed\Rss.php	/^            $link = null;$/;"	v
link	library\Zend\Feed\Reader\Feed\Rss.php	/^        $link = $this->getExtension('Atom')->getFeedLink();$/;"	v
link	library\Zend\Feed\Reader\Feed\Rss.php	/^        $link = null;$/;"	v
list	library\Zend\Feed\Reader\Feed\Rss.php	/^            $list = $this->_xpath->query('\/\/author');$/;"	v
list	library\Zend\Feed\Reader\Feed\Rss.php	/^            $list = $this->_xpath->query('\/\/rss:author');$/;"	v
list	library\Zend\Feed\Reader\Feed\Rss.php	/^            $list = $this->_xpath->query('\/rdf:RDF\/rss:channel\/\/rss:category');$/;"	v
list	library\Zend\Feed\Reader\Feed\Rss.php	/^            $list = $this->_xpath->query('\/rdf:RDF\/rss:channel\/rss:image');$/;"	v
list	library\Zend\Feed\Reader\Feed\Rss.php	/^            $list = $this->_xpath->query('\/rss\/channel\/\/category');$/;"	v
list	library\Zend\Feed\Reader\Feed\Rss.php	/^            $list = $this->_xpath->query('\/rss\/channel\/image');$/;"	v
name	library\Zend\Feed\Reader\Feed\Rss.php	/^                $name = null;$/;"	v
prefix	library\Zend\Feed\Reader\Feed\Rss.php	/^            $prefix = '\/rdf:RDF\/rss:channel\/rss:image[1]';$/;"	v
prefix	library\Zend\Feed\Reader\Feed\Rss.php	/^            $prefix = '\/rss\/channel\/image[1]';$/;"	v
string	library\Zend\Feed\Reader\Feed\Rss.php	/^                $string = trim($author->nodeValue);$/;"	v
title	library\Zend\Feed\Reader\Feed\Rss.php	/^            $title = $this->_xpath->evaluate('string(\/rdf:RDF\/rss:channel\/rss:title)');$/;"	v
title	library\Zend\Feed\Reader\Feed\Rss.php	/^            $title = $this->_xpath->evaluate('string(\/rss\/channel\/title)');$/;"	v
title	library\Zend\Feed\Reader\Feed\Rss.php	/^            $title = $this->getExtension('Atom')->getTitle();$/;"	v
title	library\Zend\Feed\Reader\Feed\Rss.php	/^            $title = $this->getExtension('DublinCore')->getTitle();$/;"	v
title	library\Zend\Feed\Reader\Feed\Rss.php	/^            $title = null;$/;"	v
title	library\Zend\Feed\Reader\Feed\Rss.php	/^        $title = null;$/;"	v
value	library\Zend\Feed\Reader\Feed\Rss.php	/^            $value = $this->_xpath->evaluate('string(' . $prefix . '\/description)');$/;"	v
value	library\Zend\Feed\Reader\Feed\Rss.php	/^            $value = $this->_xpath->evaluate('string(' . $prefix . '\/height)');$/;"	v
value	library\Zend\Feed\Reader\Feed\Rss.php	/^            $value = $this->_xpath->evaluate('string(' . $prefix . '\/link)');$/;"	v
value	library\Zend\Feed\Reader\Feed\Rss.php	/^            $value = $this->_xpath->evaluate('string(' . $prefix . '\/title)');$/;"	v
value	library\Zend\Feed\Reader\Feed\Rss.php	/^            $value = $this->_xpath->evaluate('string(' . $prefix . '\/url)');$/;"	v
value	library\Zend\Feed\Reader\Feed\Rss.php	/^            $value = $this->_xpath->evaluate('string(' . $prefix . '\/width)');$/;"	v
xpathPrefix	library\Zend\Feed\Reader\Feed\Rss.php	/^            $xpathPrefix = '\/rdf:RDF\/rss:channel';$/;"	v
xpathPrefix	library\Zend\Feed\Reader\Feed\Rss.php	/^            $xpathPrefix = '\/rss\/channel';$/;"	v
Zend_Feed_Rss	library\Zend\Feed\Rss.php	/^class Zend_Feed_Rss extends Zend_Feed_Abstract$/;"	c
add_end_category	library\Zend\Feed\Rss.php	/^                    $add_end_category = true;$/;"	v
add_end_category	library\Zend\Feed\Rss.php	/^                $add_end_category = false;$/;"	v
author	library\Zend\Feed\Rss.php	/^                $author = $array->itunes->owner['name'];$/;"	v
author	library\Zend\Feed\Rss.php	/^                $author = $this->_element->createElement('author', $dataentry->author);$/;"	v
author	library\Zend\Feed\Rss.php	/^            $author = $array->author;$/;"	v
author	library\Zend\Feed\Rss.php	/^            $author = $array->itunes->author;$/;"	v
author	library\Zend\Feed\Rss.php	/^            $author = $this->_element->createElement('managingEditor', ltrim($editor));$/;"	v
author	library\Zend\Feed\Rss.php	/^        $author = '';$/;"	v
category	library\Zend\Feed\Rss.php	/^            $category = $this->_element->createElement('category', $array->category);$/;"	v
channel	library\Zend\Feed\Rss.php	/^        $channel = $this->_element->createElement('channel');$/;"	v
cloud	library\Zend\Feed\Rss.php	/^            $cloud = $this->_element->createElement('cloud');$/;"	v
comments	library\Zend\Feed\Rss.php	/^                $comments = $this->_element->createElement('comments', $dataentry->comments);$/;"	v
comments	library\Zend\Feed\Rss.php	/^                $comments = $this->_element->createElementNS('http:\/\/wellformedweb.org\/CommentAPI\/',$/;"	v
content	library\Zend\Feed\Rss.php	/^                $content = $this->_element->createElement('content:encoded');$/;"	v
copyright	library\Zend\Feed\Rss.php	/^            $copyright = $this->_element->createElement('copyright', $array->copyright);$/;"	v
desc	library\Zend\Feed\Rss.php	/^        $desc = isset($array->description) ? $array->description : '';$/;"	v
description	library\Zend\Feed\Rss.php	/^            $description = $this->_element->createElement('description');$/;"	v
description	library\Zend\Feed\Rss.php	/^        $description = $this->_element->createElement('description');$/;"	v
doc	library\Zend\Feed\Rss.php	/^        $doc = $this->_element->createElement('docs', 'http:\/\/blogs.law.harvard.edu\/tech\/rss');$/;"	v
doc	library\Zend\Feed\Rss.php	/^        $doc = new DOMDocument($this->_element->ownerDocument->version,$/;"	v
editor	library\Zend\Feed\Rss.php	/^        $editor = '';$/;"	v
email	library\Zend\Feed\Rss.php	/^                $email = $array->itunes->owner['email'];$/;"	v
email	library\Zend\Feed\Rss.php	/^            $email = $array->email;$/;"	v
email	library\Zend\Feed\Rss.php	/^        $email = '';$/;"	v
generator	library\Zend\Feed\Rss.php	/^        $generator = !empty($array->generator) ? $array->generator : 'Zend_Feed';$/;"	v
generator	library\Zend\Feed\Rss.php	/^        $generator = $this->_element->createElement('generator', $generator);$/;"	v
guid	library\Zend\Feed\Rss.php	/^                $guid = $this->_element->createElement('guid', $dataentry->guid);$/;"	v
image	library\Zend\Feed\Rss.php	/^            $image = $array->image;$/;"	v
image	library\Zend\Feed\Rss.php	/^            $image = $array->itunes->image;$/;"	v
image	library\Zend\Feed\Rss.php	/^            $image = $this->_element->createElement('image');$/;"	v
image	library\Zend\Feed\Rss.php	/^        $image = '';$/;"	v
imagelink	library\Zend\Feed\Rss.php	/^            $imagelink = $this->_element->createElement('link', $array->link);$/;"	v
imagetitle	library\Zend\Feed\Rss.php	/^            $imagetitle = $this->_element->createElement('title');$/;"	v
item	library\Zend\Feed\Rss.php	/^            $item = $this->_element->createElement('item');$/;"	v
language	library\Zend\Feed\Rss.php	/^            $language = $this->_element->createElement('language', $array->language);$/;"	v
lastBuildDate	library\Zend\Feed\Rss.php	/^            $lastBuildDate = $this->_element->createElement('lastBuildDate', date(DATE_RSS, $array->published));$/;"	v
link	library\Zend\Feed\Rss.php	/^            $link = $this->_element->createElement('link', $dataentry->link);$/;"	v
link	library\Zend\Feed\Rss.php	/^        $link = $this->_element->createElement('link', $array->link);$/;"	v
node	library\Zend\Feed\Rss.php	/^                    $node = $this->_element->createElement('category', $category['term']);$/;"	v
node	library\Zend\Feed\Rss.php	/^                    $node = $this->_element->createElement('enclosure');$/;"	v
node	library\Zend\Feed\Rss.php	/^                    $node = $this->_element->createElementNS('http:\/\/www.itunes.com\/DTDs\/Podcast-1.0.dtd', 'itunes:category');$/;"	v
node	library\Zend\Feed\Rss.php	/^                $node = $this->_element->createElementNS('http:\/\/www.itunes.com\/DTDs\/Podcast-1.0.dtd', 'itunes:category');$/;"	v
node	library\Zend\Feed\Rss.php	/^                $node = $this->_element->createElementNS('http:\/\/www.itunes.com\/DTDs\/Podcast-1.0.dtd', 'itunes:email', $email);$/;"	v
node	library\Zend\Feed\Rss.php	/^                $node = $this->_element->createElementNS('http:\/\/www.itunes.com\/DTDs\/Podcast-1.0.dtd', 'itunes:name', $author);$/;"	v
node	library\Zend\Feed\Rss.php	/^            $node = $this->_element->createElementNS('http:\/\/www.itunes.com\/DTDs\/Podcast-1.0.dtd', 'itunes:author', $author);$/;"	v
node	library\Zend\Feed\Rss.php	/^            $node = $this->_element->createElementNS('http:\/\/www.itunes.com\/DTDs\/Podcast-1.0.dtd', 'itunes:block', $array->itunes->block);$/;"	v
node	library\Zend\Feed\Rss.php	/^            $node = $this->_element->createElementNS('http:\/\/www.itunes.com\/DTDs\/Podcast-1.0.dtd', 'itunes:explicit', $array->itunes->explicit);$/;"	v
node	library\Zend\Feed\Rss.php	/^            $node = $this->_element->createElementNS('http:\/\/www.itunes.com\/DTDs\/Podcast-1.0.dtd', 'itunes:image');$/;"	v
node	library\Zend\Feed\Rss.php	/^            $node = $this->_element->createElementNS('http:\/\/www.itunes.com\/DTDs\/Podcast-1.0.dtd', 'itunes:keywords', $array->itunes->keywords);$/;"	v
node	library\Zend\Feed\Rss.php	/^            $node = $this->_element->createElementNS('http:\/\/www.itunes.com\/DTDs\/Podcast-1.0.dtd', 'itunes:new-feed-url', $array->itunes->new_feed_url);$/;"	v
node	library\Zend\Feed\Rss.php	/^            $node = $this->_element->createElementNS('http:\/\/www.itunes.com\/DTDs\/Podcast-1.0.dtd', 'itunes:subtitle', $subtitle);$/;"	v
node	library\Zend\Feed\Rss.php	/^            $node = $this->_element->createElementNS('http:\/\/www.itunes.com\/DTDs\/Podcast-1.0.dtd', 'itunes:summary', $summary);$/;"	v
owner	library\Zend\Feed\Rss.php	/^            $owner = $this->_element->createElementNS('http:\/\/www.itunes.com\/DTDs\/Podcast-1.0.dtd', 'itunes:owner');$/;"	v
pubdate	library\Zend\Feed\Rss.php	/^            $pubdate = $this->_element->createElement('pubDate', date(DATE_RSS, $pubdate));$/;"	v
pubdate	library\Zend\Feed\Rss.php	/^            $pubdate = isset($dataentry->lastUpdate) ? $dataentry->lastUpdate : time();$/;"	v
pubdate	library\Zend\Feed\Rss.php	/^        $pubdate = $this->_element->createElement('pubDate', date(DATE_RSS, $pubdate));$/;"	v
pubdate	library\Zend\Feed\Rss.php	/^        $pubdate = isset($array->lastUpdate) ? $array->lastUpdate : time();$/;"	v
rating	library\Zend\Feed\Rss.php	/^            $rating = $this->_element->createElement('rating', $array->rating);$/;"	v
rdfTags	library\Zend\Feed\Rss.php	/^        $rdfTags = $this->_element->getElementsByTagNameNS('http:\/\/www.w3.org\/1999\/02\/22-rdf-syntax-ns#', 'RDF');$/;"	v
root	library\Zend\Feed\Rss.php	/^        $root = $doc->createElement('rss');$/;"	v
skipDays	library\Zend\Feed\Rss.php	/^            $skipDays = $this->_element->createElement('skipDays');$/;"	v
skipHours	library\Zend\Feed\Rss.php	/^            $skipHours = $this->_element->createElement('skipHours');$/;"	v
source	library\Zend\Feed\Rss.php	/^                $source = $this->_element->createElement('source', $dataentry->source['title']);$/;"	v
subtitle	library\Zend\Feed\Rss.php	/^            $subtitle = $array->description;$/;"	v
subtitle	library\Zend\Feed\Rss.php	/^            $subtitle = $array->itunes->subtitle;$/;"	v
subtitle	library\Zend\Feed\Rss.php	/^        $subtitle = '';$/;"	v
summary	library\Zend\Feed\Rss.php	/^            $summary = $array->description;$/;"	v
summary	library\Zend\Feed\Rss.php	/^            $summary = $array->itunes->summary;$/;"	v
summary	library\Zend\Feed\Rss.php	/^        $summary = '';$/;"	v
textinput	library\Zend\Feed\Rss.php	/^            $textinput = $this->_element->createElement('textInput');$/;"	v
title	library\Zend\Feed\Rss.php	/^            $title = $this->_element->createElement('title');$/;"	v
title	library\Zend\Feed\Rss.php	/^        $title = $this->_element->createElement('title');$/;"	v
ttl	library\Zend\Feed\Rss.php	/^            $ttl = $this->_element->createElement('ttl', $array->ttl);$/;"	v
url	library\Zend\Feed\Rss.php	/^            $url = $this->_element->createElement('url', $array->image);$/;"	v
Zend_Feed_Writer	library\Zend\Feed\Writer.php	/^class Zend_Feed_Writer$/;"	c
entryName	library\Zend\Feed\Writer.php	/^        $entryName = $extensionName . '_Entry';$/;"	v
entryName	library\Zend\Feed\Writer.php	/^        $entryName = $name . '_Entry';$/;"	v
entryRendererName	library\Zend\Feed\Writer.php	/^        $entryRendererName = $extensionName . '_Renderer_Entry';$/;"	v
entryRendererName	library\Zend\Feed\Writer.php	/^        $entryRendererName = $name . '_Renderer_Entry';$/;"	v
feedName	library\Zend\Feed\Writer.php	/^        $feedName  = $extensionName . '_Feed';$/;"	v
feedName	library\Zend\Feed\Writer.php	/^        $feedName  = $name . '_Feed';$/;"	v
feedRendererName	library\Zend\Feed\Writer.php	/^        $feedRendererName  = $extensionName . '_Renderer_Feed';$/;"	v
feedRendererName	library\Zend\Feed\Writer.php	/^        $feedRendererName  = $name . '_Renderer_Feed';$/;"	v
path	library\Zend\Feed\Writer.php	/^        $path   = rtrim($path, DIRECTORY_SEPARATOR);$/;"	v
prefix	library\Zend\Feed\Writer.php	/^        $prefix = rtrim($prefix, '_');$/;"	v
Zend_Feed_Writer_Deleted	library\Zend\Feed\Writer\Deleted.php	/^class Zend_Feed_Writer_Deleted$/;"	c
author	library\Zend\Feed\Writer\Deleted.php	/^        $author = array();$/;"	v
zdate	library\Zend\Feed\Writer\Deleted.php	/^            $zdate = $date;$/;"	v
zdate	library\Zend\Feed\Writer\Deleted.php	/^            $zdate = new Zend_Date($date, Zend_Date::TIMESTAMP);$/;"	v
zdate	library\Zend\Feed\Writer\Deleted.php	/^            $zdate = new Zend_Date;$/;"	v
zdate	library\Zend\Feed\Writer\Deleted.php	/^        $zdate = null;$/;"	v
Zend_Feed_Writer_Entry	library\Zend\Feed\Writer\Entry.php	/^class Zend_Feed_Writer_Entry$/;"	c
all	library\Zend\Feed\Writer\Entry.php	/^        $all = Zend_Feed_Writer::getExtensions();$/;"	v
author	library\Zend\Feed\Writer\Entry.php	/^        $author = array();$/;"	v
className	library\Zend\Feed\Writer\Entry.php	/^            $className = Zend_Feed_Writer::getPluginLoader()->getClassName($ext);$/;"	v
exts	library\Zend\Feed\Writer\Entry.php	/^        $exts = $all['entry'];$/;"	v
source	library\Zend\Feed\Writer\Entry.php	/^        $source = new Zend_Feed_Writer_Source;$/;"	v
zdate	library\Zend\Feed\Writer\Entry.php	/^            $zdate = $date;$/;"	v
zdate	library\Zend\Feed\Writer\Entry.php	/^            $zdate = new Zend_Date($date, Zend_Date::TIMESTAMP);$/;"	v
zdate	library\Zend\Feed\Writer\Entry.php	/^            $zdate = new Zend_Date;$/;"	v
zdate	library\Zend\Feed\Writer\Entry.php	/^        $zdate = null;$/;"	v
Zend_Feed_Writer_Exception_InvalidMethodException	library\Zend\Feed\Writer\Exception\InvalidMethodException.php	/^class Zend_Feed_Writer_Exception_InvalidMethodException extends Zend_Exception$/;"	c
Zend_Feed_Writer_Extension_Atom_Renderer_Feed	library\Zend\Feed\Writer\Extension\Atom\Renderer\Feed.php	/^class Zend_Feed_Writer_Extension_Atom_Renderer_Feed$/;"	c
flink	library\Zend\Feed\Writer\Extension\Atom\Renderer\Feed.php	/^            $flink = $dom->createElement('atom:link');$/;"	v
flinks	library\Zend\Feed\Writer\Extension\Atom\Renderer\Feed.php	/^        $flinks = $this->getDataContainer()->getFeedLinks();$/;"	v
hub	library\Zend\Feed\Writer\Extension\Atom\Renderer\Feed.php	/^            $hub = $dom->createElement('atom:link');$/;"	v
hubs	library\Zend\Feed\Writer\Extension\Atom\Renderer\Feed.php	/^        $hubs = $this->getDataContainer()->getHubs();$/;"	v
mime	library\Zend\Feed\Writer\Extension\Atom\Renderer\Feed.php	/^            $mime  = 'application\/' . strtolower($type) . '+xml';$/;"	v
Zend_Feed_Writer_Extension_Content_Renderer_Entry	library\Zend\Feed\Writer\Extension\Content\Renderer\Entry.php	/^class Zend_Feed_Writer_Extension_Content_Renderer_Entry$/;"	c
cdata	library\Zend\Feed\Writer\Extension\Content\Renderer\Entry.php	/^        $cdata = $dom->createCDATASection($content);$/;"	v
content	library\Zend\Feed\Writer\Extension\Content\Renderer\Entry.php	/^        $content = $this->getDataContainer()->getContent();$/;"	v
element	library\Zend\Feed\Writer\Extension\Content\Renderer\Entry.php	/^        $element = $dom->createElement('content:encoded');$/;"	v
Zend_Feed_Writer_Extension_DublinCore_Renderer_Entry	library\Zend\Feed\Writer\Extension\DublinCore\Renderer\Entry.php	/^class Zend_Feed_Writer_Extension_DublinCore_Renderer_Entry$/;"	c
author	library\Zend\Feed\Writer\Extension\DublinCore\Renderer\Entry.php	/^            $author = $this->_dom->createElement('dc:creator');$/;"	v
authors	library\Zend\Feed\Writer\Extension\DublinCore\Renderer\Entry.php	/^        $authors = $this->getDataContainer()->getAuthors();$/;"	v
text	library\Zend\Feed\Writer\Extension\DublinCore\Renderer\Entry.php	/^                $text = $dom->createTextNode($data['name']);$/;"	v
Zend_Feed_Writer_Extension_DublinCore_Renderer_Feed	library\Zend\Feed\Writer\Extension\DublinCore\Renderer\Feed.php	/^class Zend_Feed_Writer_Extension_DublinCore_Renderer_Feed$/;"	c
author	library\Zend\Feed\Writer\Extension\DublinCore\Renderer\Feed.php	/^            $author = $this->_dom->createElement('dc:creator');$/;"	v
authors	library\Zend\Feed\Writer\Extension\DublinCore\Renderer\Feed.php	/^        $authors = $this->getDataContainer()->getAuthors();$/;"	v
text	library\Zend\Feed\Writer\Extension\DublinCore\Renderer\Feed.php	/^                $text = $dom->createTextNode($data['name']);$/;"	v
Zend_Feed_Writer_Extension_ITunes_Entry	library\Zend\Feed\Writer\Extension\ITunes\Entry.php	/^class Zend_Feed_Writer_Extension_ITunes_Entry$/;"	c
concat	library\Zend\Feed\Writer\Extension\ITunes\Entry.php	/^        $concat = implode(',', $value);$/;"	v
point	library\Zend\Feed\Writer\Extension\ITunes\Entry.php	/^        $point = Zend_Feed_Writer::lcfirst(substr($method, 9));$/;"	v
value	library\Zend\Feed\Writer\Extension\ITunes\Entry.php	/^        $value = (string) $value;$/;"	v
Zend_Feed_Writer_Extension_ITunes_Feed	library\Zend\Feed\Writer\Extension\ITunes\Feed.php	/^class Zend_Feed_Writer_Extension_ITunes_Feed$/;"	c
concat	library\Zend\Feed\Writer\Extension\ITunes\Feed.php	/^        $concat = implode(',', $value);$/;"	v
point	library\Zend\Feed\Writer\Extension\ITunes\Feed.php	/^        $point = Zend_Feed_Writer::lcfirst(substr($method, 9));$/;"	v
value	library\Zend\Feed\Writer\Extension\ITunes\Feed.php	/^        $value = (string) $value;$/;"	v
Zend_Feed_Writer_Extension_ITunes_Renderer_Entry	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Entry.php	/^class Zend_Feed_Writer_Extension_ITunes_Renderer_Entry$/;"	c
authors	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Entry.php	/^        $authors = $this->getDataContainer()->getItunesAuthors();$/;"	v
block	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Entry.php	/^        $block = $this->getDataContainer()->getItunesBlock();$/;"	v
duration	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Entry.php	/^        $duration = $this->getDataContainer()->getItunesDuration();$/;"	v
el	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Entry.php	/^            $el = $dom->createElement('itunes:author');$/;"	v
el	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Entry.php	/^        $el = $dom->createElement('itunes:block');$/;"	v
el	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Entry.php	/^        $el = $dom->createElement('itunes:duration');$/;"	v
el	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Entry.php	/^        $el = $dom->createElement('itunes:explicit');$/;"	v
el	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Entry.php	/^        $el = $dom->createElement('itunes:keywords');$/;"	v
el	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Entry.php	/^        $el = $dom->createElement('itunes:subtitle');$/;"	v
el	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Entry.php	/^        $el = $dom->createElement('itunes:summary');$/;"	v
explicit	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Entry.php	/^        $explicit = $this->getDataContainer()->getItunesExplicit();$/;"	v
keywords	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Entry.php	/^        $keywords = $this->getDataContainer()->getItunesKeywords();$/;"	v
subtitle	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Entry.php	/^        $subtitle = $this->getDataContainer()->getItunesSubtitle();$/;"	v
summary	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Entry.php	/^        $summary = $this->getDataContainer()->getItunesSummary();$/;"	v
text	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Entry.php	/^            $text = $dom->createTextNode($author);$/;"	v
text	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Entry.php	/^        $text = $dom->createTextNode($block);$/;"	v
text	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Entry.php	/^        $text = $dom->createTextNode($duration);$/;"	v
text	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Entry.php	/^        $text = $dom->createTextNode($explicit);$/;"	v
text	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Entry.php	/^        $text = $dom->createTextNode($subtitle);$/;"	v
text	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Entry.php	/^        $text = $dom->createTextNode($summary);$/;"	v
text	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Entry.php	/^        $text = $dom->createTextNode(implode(',', $keywords));$/;"	v
Zend_Feed_Writer_Extension_ITunes_Renderer_Feed	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^class Zend_Feed_Writer_Extension_ITunes_Renderer_Feed$/;"	c
authors	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^        $authors = $this->getDataContainer()->getItunesAuthors();$/;"	v
block	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^        $block = $this->getDataContainer()->getItunesBlock();$/;"	v
cats	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^        $cats = $this->getDataContainer()->getItunesCategories();$/;"	v
duration	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^        $duration = $this->getDataContainer()->getItunesDuration();$/;"	v
el	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^                $el = $dom->createElement('itunes:category');$/;"	v
el	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^            $el = $dom->createElement('itunes:author');$/;"	v
el	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^            $el = $dom->createElement('itunes:owner');$/;"	v
el	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^        $el = $dom->createElement('itunes:block');$/;"	v
el	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^        $el = $dom->createElement('itunes:duration');$/;"	v
el	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^        $el = $dom->createElement('itunes:explicit');$/;"	v
el	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^        $el = $dom->createElement('itunes:image');$/;"	v
el	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^        $el = $dom->createElement('itunes:keywords');$/;"	v
el	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^        $el = $dom->createElement('itunes:new-feed-url');$/;"	v
el	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^        $el = $dom->createElement('itunes:subtitle');$/;"	v
el	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^        $el = $dom->createElement('itunes:summary');$/;"	v
el2	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^                    $el2 = $dom->createElement('itunes:category');$/;"	v
email	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^            $email = $dom->createElement('itunes:email');$/;"	v
explicit	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^        $explicit = $this->getDataContainer()->getItunesExplicit();$/;"	v
image	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^        $image = $this->getDataContainer()->getItunesImage();$/;"	v
keywords	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^        $keywords = $this->getDataContainer()->getItunesKeywords();$/;"	v
name	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^            $name = $dom->createElement('itunes:name');$/;"	v
owners	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^        $owners = $this->getDataContainer()->getItunesOwners();$/;"	v
subtitle	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^        $subtitle = $this->getDataContainer()->getItunesSubtitle();$/;"	v
summary	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^        $summary = $this->getDataContainer()->getItunesSummary();$/;"	v
text	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^            $text = $dom->createTextNode($author);$/;"	v
text	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^            $text = $dom->createTextNode($owner['email']);$/;"	v
text	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^            $text = $dom->createTextNode($owner['name']);$/;"	v
text	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^        $text = $dom->createTextNode($block);$/;"	v
text	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^        $text = $dom->createTextNode($duration);$/;"	v
text	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^        $text = $dom->createTextNode($explicit);$/;"	v
text	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^        $text = $dom->createTextNode($subtitle);$/;"	v
text	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^        $text = $dom->createTextNode($summary);$/;"	v
text	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^        $text = $dom->createTextNode($url);$/;"	v
text	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^        $text = $dom->createTextNode(implode(',', $keywords));$/;"	v
url	library\Zend\Feed\Writer\Extension\ITunes\Renderer\Feed.php	/^        $url = $this->getDataContainer()->getItunesNewFeedUrl();$/;"	v
Zend_Feed_Writer_Extension_Slash_Renderer_Entry	library\Zend\Feed\Writer\Extension\Slash\Renderer\Entry.php	/^class Zend_Feed_Writer_Extension_Slash_Renderer_Entry$/;"	c
count	library\Zend\Feed\Writer\Extension\Slash\Renderer\Entry.php	/^        $count = $this->getDataContainer()->getCommentCount();$/;"	v
tcount	library\Zend\Feed\Writer\Extension\Slash\Renderer\Entry.php	/^        $tcount = $this->_dom->createElement('slash:comments');$/;"	v
Zend_Feed_Writer_Extension_Threading_Renderer_Entry	library\Zend\Feed\Writer\Extension\Threading\Renderer\Entry.php	/^class Zend_Feed_Writer_Extension_Threading_Renderer_Entry$/;"	c
clink	library\Zend\Feed\Writer\Extension\Threading\Renderer\Entry.php	/^        $clink = $this->_dom->createElement('link');$/;"	v
count	library\Zend\Feed\Writer\Extension\Threading\Renderer\Entry.php	/^            $count = $this->getDataContainer()->getCommentCount();$/;"	v
count	library\Zend\Feed\Writer\Extension\Threading\Renderer\Entry.php	/^        $count = $this->getDataContainer()->getCommentCount();$/;"	v
flink	library\Zend\Feed\Writer\Extension\Threading\Renderer\Entry.php	/^            $flink = $this->_dom->createElement('link');$/;"	v
link	library\Zend\Feed\Writer\Extension\Threading\Renderer\Entry.php	/^        $link = $this->getDataContainer()->getCommentLink();$/;"	v
links	library\Zend\Feed\Writer\Extension\Threading\Renderer\Entry.php	/^        $links = $this->getDataContainer()->getCommentFeedLinks();$/;"	v
tcount	library\Zend\Feed\Writer\Extension\Threading\Renderer\Entry.php	/^        $tcount = $this->_dom->createElement('thr:total');$/;"	v
Zend_Feed_Writer_Extension_WellFormedWeb_Renderer_Entry	library\Zend\Feed\Writer\Extension\WellFormedWeb\Renderer\Entry.php	/^class Zend_Feed_Writer_Extension_WellFormedWeb_Renderer_Entry$/;"	c
flink	library\Zend\Feed\Writer\Extension\WellFormedWeb\Renderer\Entry.php	/^                $flink = $this->_dom->createElement('wfw:commentRss');$/;"	v
links	library\Zend\Feed\Writer\Extension\WellFormedWeb\Renderer\Entry.php	/^        $links = $this->getDataContainer()->getCommentFeedLinks();$/;"	v
text	library\Zend\Feed\Writer\Extension\WellFormedWeb\Renderer\Entry.php	/^                $text = $dom->createTextNode($link['uri']);$/;"	v
Zend_Feed_Writer_Feed	library\Zend\Feed\Writer\Feed.php	/^class Zend_Feed_Writer_Feed extends Zend_Feed_Writer_Feed_FeedAbstract$/;"	c
deleted	library\Zend\Feed\Writer\Feed.php	/^        $deleted = new Zend_Feed_Writer_Deleted;$/;"	v
entries	library\Zend\Feed\Writer\Feed.php	/^        $entries = array();$/;"	v
entry	library\Zend\Feed\Writer\Feed.php	/^        $entry = new Zend_Feed_Writer_Entry;$/;"	v
renderClass	library\Zend\Feed\Writer\Feed.php	/^        $renderClass = 'Zend_Feed_Writer_Renderer_Feed_' . $type;$/;"	v
renderer	library\Zend\Feed\Writer\Feed.php	/^        $renderer = new $renderClass($this);$/;"	v
timestamp	library\Zend\Feed\Writer\Feed.php	/^                $timestamp = (int) $entry->getDateCreated()->get(Zend_Date::TIMESTAMP);$/;"	v
timestamp	library\Zend\Feed\Writer\Feed.php	/^                $timestamp = (int) $entry->getDateModified()->get(Zend_Date::TIMESTAMP);$/;"	v
timestamp	library\Zend\Feed\Writer\Feed.php	/^        $timestamp = time();$/;"	v
type	library\Zend\Feed\Writer\Feed.php	/^        $type = ucfirst($this->getType());$/;"	v
Zend_Feed_Writer_Feed_FeedAbstract	library\Zend\Feed\Writer\Feed\FeedAbstract.php	/^class Zend_Feed_Writer_Feed_FeedAbstract$/;"	c
all	library\Zend\Feed\Writer\Feed\FeedAbstract.php	/^        $all = Zend_Feed_Writer::getExtensions();$/;"	v
author	library\Zend\Feed\Writer\Feed\FeedAbstract.php	/^        $author = array();$/;"	v
className	library\Zend\Feed\Writer\Feed\FeedAbstract.php	/^            $className = Zend_Feed_Writer::getPluginLoader()->getClassName($ext);$/;"	v
d6	library\Zend\Feed\Writer\Feed\FeedAbstract.php	/^            $d6 = strtotime($date);$/;"	v
data	library\Zend\Feed\Writer\Feed\FeedAbstract.php	/^            $data = $name;$/;"	v
date	library\Zend\Feed\Writer\Feed\FeedAbstract.php	/^            $date = $matches['date'];$/;"	v
dvalid	library\Zend\Feed\Writer\Feed\FeedAbstract.php	/^                $dvalid = true;$/;"	v
dvalid	library\Zend\Feed\Writer\Feed\FeedAbstract.php	/^            $dvalid = false;$/;"	v
exts	library\Zend\Feed\Writer\Feed\FeedAbstract.php	/^        $exts = $all['feed'];$/;"	v
generator	library\Zend\Feed\Writer\Feed\FeedAbstract.php	/^            $generator = array('name' => $data['name']);$/;"	v
generator	library\Zend\Feed\Writer\Feed\FeedAbstract.php	/^            $generator = array('name' => $name);$/;"	v
nvalid	library\Zend\Feed\Writer\Feed\FeedAbstract.php	/^                $nvalid = $validator->isValid('info@' . $matches['name']);$/;"	v
nvalid	library\Zend\Feed\Writer\Feed\FeedAbstract.php	/^                $nvalid = true;$/;"	v
nvalid	library\Zend\Feed\Writer\Feed\FeedAbstract.php	/^            $nvalid = false;$/;"	v
validator	library\Zend\Feed\Writer\Feed\FeedAbstract.php	/^            $validator = new Zend_Validate_EmailAddress;$/;"	v
zdate	library\Zend\Feed\Writer\Feed\FeedAbstract.php	/^            $zdate = $date;$/;"	v
zdate	library\Zend\Feed\Writer\Feed\FeedAbstract.php	/^            $zdate = new Zend_Date($date, Zend_Date::TIMESTAMP);$/;"	v
zdate	library\Zend\Feed\Writer\Feed\FeedAbstract.php	/^            $zdate = new Zend_Date;$/;"	v
zdate	library\Zend\Feed\Writer\Feed\FeedAbstract.php	/^        $zdate = null;$/;"	v
Zend_Feed_Writer_Renderer_Entry_Atom	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^class Zend_Feed_Writer_Renderer_Entry_Atom$/;"	c
author	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^            $author = $this->_dom->createElement('author');$/;"	v
authors	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^        $authors = $this->_container->getAuthors();$/;"	v
categories	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^        $categories = $this->getDataContainer()->getCategories();$/;"	v
category	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^            $category = $dom->createElement('category');$/;"	v
cdata	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^        $cdata = $dom->createCDATASection($/;"	v
cdata	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^        $cdata = $dom->createCDATASection($this->getDataContainer()->getTitle());$/;"	v
config	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^            $config = array($/;"	v
content	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^        $content = $this->getDataContainer()->getContent();$/;"	v
d6	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^            $d6 = strtotime($date);$/;"	v
data	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^        $data = $this->_container->getEnclosure();$/;"	v
date	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^            $date = $matches['date'];$/;"	v
dom	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^        $dom = new DOMDocument('1.0', $this->getEncoding());$/;"	v
dvalid	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^                $dvalid = true;$/;"	v
dvalid	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^            $dvalid = false;$/;"	v
el	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^        $el = $dom->createElement('published');$/;"	v
element	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^        $element = $dom->createElement('content');$/;"	v
element	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^        $element = $renderer->render()->getElement();$/;"	v
email	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^                $email = $this->_dom->createElement('email');$/;"	v
enclosure	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^        $enclosure = $this->_dom->createElement('link');$/;"	v
encoding	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^            $encoding = str_replace('-', '', $this->getEncoding());$/;"	v
entry	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^        $entry = $this->_dom->createElementNS(Zend_Feed_Writer::NAMESPACE_ATOM_10, 'entry');$/;"	v
exception	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^            $exception = new Zend_Feed_Exception($message);$/;"	v
id	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^        $id = $dom->createElement('id');$/;"	v
imported	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^        $imported = $dom->importNode($element, true);$/;"	v
link	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^        $link = $dom->createElement('link');$/;"	v
message	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^            $message = 'Atom 1.0 entry elements MUST contain exactly one '$/;"	v
message	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^            $message = 'Atom 1.0 entry elements MUST contain exactly one'$/;"	v
name	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^            $name = $this->_dom->createElement('name');$/;"	v
nvalid	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^                $nvalid = $validator->isValid('info@' . $matches['name']);$/;"	v
nvalid	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^                $nvalid = true;$/;"	v
nvalid	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^            $nvalid = false;$/;"	v
renderer	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^        $renderer = new Zend_Feed_Writer_Renderer_Feed_Atom_Source($source);$/;"	v
source	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^        $source = $this->getDataContainer()->getSource();$/;"	v
subtitle	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^        $subtitle = $dom->createElement('summary');$/;"	v
text	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^                $text = $dom->createTextNode($data['email']);$/;"	v
text	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^                $text = $dom->createTextNode($data['uri']);$/;"	v
text	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^            $text = $dom->createTextNode($data['name']);$/;"	v
text	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^        $text = $dom->createTextNode($/;"	v
text	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^        $text = $dom->createTextNode($this->getDataContainer()->getId());$/;"	v
tidy	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^            $tidy = new tidy;$/;"	v
title	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^        $title = $dom->createElement('title');$/;"	v
updated	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^        $updated = $dom->createElement('updated');$/;"	v
uri	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^                $uri = $this->_dom->createElement('uri');$/;"	v
validator	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^            $validator = new Zend_Validate_EmailAddress;$/;"	v
xhtml	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^            $xhtml = $content;$/;"	v
xhtml	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^            $xhtml = (string) $tidy;$/;"	v
xhtml	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^        $xhtml = $dom->importNode($xhtmlElement, true);$/;"	v
xhtml	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^        $xhtml = '';$/;"	v
xhtml	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^        $xhtml = preg_replace(array($/;"	v
xhtmlElement	library\Zend\Feed\Writer\Renderer\Entry\Atom.php	/^        $xhtmlElement = $this->_loadXhtml($content);$/;"	v
Zend_Feed_Writer_Renderer_Entry_Atom_Deleted	library\Zend\Feed\Writer\Renderer\Entry\Atom\Deleted.php	/^class Zend_Feed_Writer_Renderer_Entry_Atom_Deleted$/;"	c
author	library\Zend\Feed\Writer\Renderer\Entry\Atom\Deleted.php	/^        $author = $this->_dom->createElement('at:by');$/;"	v
c	library\Zend\Feed\Writer\Renderer\Entry\Atom\Deleted.php	/^        $c = $dom->createElement('at:comment');$/;"	v
cdata	library\Zend\Feed\Writer\Renderer\Entry\Atom\Deleted.php	/^        $cdata = $dom->createCDATASection($this->getDataContainer()->getComment());$/;"	v
data	library\Zend\Feed\Writer\Renderer\Entry\Atom\Deleted.php	/^        $data = $this->_container->getBy();$/;"	v
email	library\Zend\Feed\Writer\Renderer\Entry\Atom\Deleted.php	/^            $email = $this->_dom->createElement('email');$/;"	v
entry	library\Zend\Feed\Writer\Renderer\Entry\Atom\Deleted.php	/^        $entry = $this->_dom->createElement('at:deleted-entry');$/;"	v
name	library\Zend\Feed\Writer\Renderer\Entry\Atom\Deleted.php	/^        $name = $this->_dom->createElement('name');$/;"	v
text	library\Zend\Feed\Writer\Renderer\Entry\Atom\Deleted.php	/^            $text = $dom->createTextNode($data['email']);$/;"	v
text	library\Zend\Feed\Writer\Renderer\Entry\Atom\Deleted.php	/^            $text = $dom->createTextNode($data['uri']);$/;"	v
text	library\Zend\Feed\Writer\Renderer\Entry\Atom\Deleted.php	/^        $text = $dom->createTextNode($data['name']);$/;"	v
uri	library\Zend\Feed\Writer\Renderer\Entry\Atom\Deleted.php	/^            $uri = $this->_dom->createElement('uri');$/;"	v
Zend_Feed_Writer_Renderer_Entry_Rss	library\Zend\Feed\Writer\Renderer\Entry\Rss.php	/^class Zend_Feed_Writer_Renderer_Entry_Rss$/;"	c
author	library\Zend\Feed\Writer\Renderer\Entry\Rss.php	/^            $author = $this->_dom->createElement('author');$/;"	v
authors	library\Zend\Feed\Writer\Renderer\Entry\Rss.php	/^        $authors = $this->_container->getAuthors();$/;"	v
categories	library\Zend\Feed\Writer\Renderer\Entry\Rss.php	/^        $categories = $this->getDataContainer()->getCategories();$/;"	v
category	library\Zend\Feed\Writer\Renderer\Entry\Rss.php	/^            $category = $dom->createElement('category');$/;"	v
clink	library\Zend\Feed\Writer\Renderer\Entry\Rss.php	/^        $clink = $this->_dom->createElement('comments');$/;"	v
data	library\Zend\Feed\Writer\Renderer\Entry\Rss.php	/^        $data = $this->_container->getEnclosure();$/;"	v
enclosure	library\Zend\Feed\Writer\Renderer\Entry\Rss.php	/^        $enclosure = $this->_dom->createElement('enclosure');$/;"	v
entry	library\Zend\Feed\Writer\Renderer\Entry\Rss.php	/^        $entry = $this->_dom->createElement('item');$/;"	v
exception	library\Zend\Feed\Writer\Renderer\Entry\Rss.php	/^            $exception = new Zend_Feed_Exception($message);$/;"	v
exception	library\Zend\Feed\Writer\Renderer\Entry\Rss.php	/^            $exception = new Zend_Feed_Exception('Enclosure "length" is not set');$/;"	v
exception	library\Zend\Feed\Writer\Renderer\Entry\Rss.php	/^            $exception = new Zend_Feed_Exception('Enclosure "length" must be an integer'$/;"	v
exception	library\Zend\Feed\Writer\Renderer\Entry\Rss.php	/^            $exception = new Zend_Feed_Exception('Enclosure "type" is not set');$/;"	v
id	library\Zend\Feed\Writer\Renderer\Entry\Rss.php	/^        $id = $dom->createElement('guid');$/;"	v
link	library\Zend\Feed\Writer\Renderer\Entry\Rss.php	/^        $link = $dom->createElement('link');$/;"	v
link	library\Zend\Feed\Writer\Renderer\Entry\Rss.php	/^        $link = $this->getDataContainer()->getCommentLink();$/;"	v
message	library\Zend\Feed\Writer\Renderer\Entry\Rss.php	/^            $message = 'RSS 2.0 entry elements SHOULD contain exactly one'$/;"	v
name	library\Zend\Feed\Writer\Renderer\Entry\Rss.php	/^                $name = $data['email'] . ' (' . $data['name'] . ')';$/;"	v
name	library\Zend\Feed\Writer\Renderer\Entry\Rss.php	/^            $name = $data['name'];$/;"	v
subtitle	library\Zend\Feed\Writer\Renderer\Entry\Rss.php	/^        $subtitle = $dom->createElement('description');$/;"	v
text	library\Zend\Feed\Writer\Renderer\Entry\Rss.php	/^            $text = $dom->createCDATASection($cat['term']);$/;"	v
text	library\Zend\Feed\Writer\Renderer\Entry\Rss.php	/^            $text = $dom->createTextNode($name);$/;"	v
text	library\Zend\Feed\Writer\Renderer\Entry\Rss.php	/^        $text = $dom->createCDATASection($this->getDataContainer()->getDescription());$/;"	v
text	library\Zend\Feed\Writer\Renderer\Entry\Rss.php	/^        $text = $dom->createTextNode($/;"	v
text	library\Zend\Feed\Writer\Renderer\Entry\Rss.php	/^        $text = $dom->createTextNode($link);$/;"	v
text	library\Zend\Feed\Writer\Renderer\Entry\Rss.php	/^        $text = $dom->createTextNode($this->getDataContainer()->getId());$/;"	v
text	library\Zend\Feed\Writer\Renderer\Entry\Rss.php	/^        $text = $dom->createTextNode($this->getDataContainer()->getLink());$/;"	v
text	library\Zend\Feed\Writer\Renderer\Entry\Rss.php	/^        $text = $dom->createTextNode($this->getDataContainer()->getTitle());$/;"	v
title	library\Zend\Feed\Writer\Renderer\Entry\Rss.php	/^        $title = $dom->createElement('title');$/;"	v
updated	library\Zend\Feed\Writer\Renderer\Entry\Rss.php	/^        $updated = $dom->createElement('pubDate');$/;"	v
Zend_Feed_Writer_Renderer_Feed_Atom	library\Zend\Feed\Writer\Renderer\Feed\Atom.php	/^class Zend_Feed_Writer_Renderer_Feed_Atom$/;"	c
element	library\Zend\Feed\Writer\Renderer\Feed\Atom.php	/^            $element = $renderer->getElement();$/;"	v
imported	library\Zend\Feed\Writer\Renderer\Feed\Atom.php	/^            $imported = $this->_dom->importNode($element, true);$/;"	v
renderer	library\Zend\Feed\Writer\Renderer\Feed\Atom.php	/^                $renderer = new Zend_Feed_Writer_Renderer_Entry_Atom($entry);$/;"	v
renderer	library\Zend\Feed\Writer\Renderer\Feed\Atom.php	/^                $renderer = new Zend_Feed_Writer_Renderer_Entry_Atom_Deleted($entry);$/;"	v
root	library\Zend\Feed\Writer\Renderer\Feed\Atom.php	/^        $root = $this->_dom->createElementNS($/;"	v
Zend_Feed_Writer_Renderer_Feed_Atom_AtomAbstract	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^class Zend_Feed_Writer_Renderer_Feed_Atom_AtomAbstract$/;"	c
author	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^            $author = $this->_dom->createElement('author');$/;"	v
authors	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^        $authors = $this->_container->getAuthors();$/;"	v
baseUrl	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^        $baseUrl = $this->getDataContainer()->getBaseUrl();$/;"	v
categories	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^        $categories = $this->getDataContainer()->getCategories();$/;"	v
category	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^            $category = $dom->createElement('category');$/;"	v
copy	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^        $copy = $dom->createElement('rights');$/;"	v
copyright	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^        $copyright = $this->getDataContainer()->getCopyright();$/;"	v
email	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^                $email = $this->_dom->createElement('email');$/;"	v
exception	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^            $exception = new Zend_Feed_Exception($message);$/;"	v
flink	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^            $flink = $dom->createElement('link');$/;"	v
flinks	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^        $flinks = $this->getDataContainer()->getFeedLinks();$/;"	v
gdata	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^        $gdata = $this->getDataContainer()->getGenerator();$/;"	v
generator	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^        $generator = $dom->createElement('generator');$/;"	v
hub	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^            $hub = $dom->createElement('link');$/;"	v
hubs	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^        $hubs = $this->getDataContainer()->getHubs();$/;"	v
id	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^        $id = $dom->createElement('id');$/;"	v
image	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^        $image = $this->getDataContainer()->getIcon();$/;"	v
image	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^        $image = $this->getDataContainer()->getImage();$/;"	v
img	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^        $img = $dom->createElement('icon');$/;"	v
img	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^        $img = $dom->createElement('logo');$/;"	v
link	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^        $link = $dom->createElement('link');$/;"	v
message	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^            $message = 'Atom 1.0 feed elements MUST contain exactly one '$/;"	v
message	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^            $message = 'Atom 1.0 feed elements MUST contain exactly one'$/;"	v
message	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^            $message = 'Atom 1.0 feed elements SHOULD contain one atom:link '$/;"	v
mime	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^            $mime = 'application\/' . strtolower($type) . '+xml';$/;"	v
name	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^            $name = $this->_dom->createElement('name');$/;"	v
subtitle	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^        $subtitle = $dom->createElement('subtitle');$/;"	v
text	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^                $text = $dom->createTextNode($data['email']);$/;"	v
text	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^                $text = $dom->createTextNode($data['uri']);$/;"	v
text	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^            $text = $dom->createTextNode($data['name']);$/;"	v
text	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^        $text = $dom->createTextNode($/;"	v
text	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^        $text = $dom->createTextNode($copyright);$/;"	v
text	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^        $text = $dom->createTextNode($gdata['name']);$/;"	v
text	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^        $text = $dom->createTextNode($image['uri']);$/;"	v
text	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^        $text = $dom->createTextNode($this->getDataContainer()->getDescription());$/;"	v
text	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^        $text = $dom->createTextNode($this->getDataContainer()->getId());$/;"	v
text	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^        $text = $dom->createTextNode($this->getDataContainer()->getTitle());$/;"	v
title	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^        $title = $dom->createElement('title');$/;"	v
updated	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^        $updated = $dom->createElement('updated');$/;"	v
uri	library\Zend\Feed\Writer\Renderer\Feed\Atom\AtomAbstract.php	/^                $uri = $this->_dom->createElement('uri');$/;"	v
Zend_Feed_Writer_Renderer_Feed_Atom_Source	library\Zend\Feed\Writer\Renderer\Feed\Atom\Source.php	/^class Zend_Feed_Writer_Renderer_Feed_Atom_Source$/;"	c
gdata	library\Zend\Feed\Writer\Renderer\Feed\Atom\Source.php	/^        $gdata = $this->getDataContainer()->getGenerator();$/;"	v
generator	library\Zend\Feed\Writer\Renderer\Feed\Atom\Source.php	/^        $generator = $dom->createElement('generator');$/;"	v
root	library\Zend\Feed\Writer\Renderer\Feed\Atom\Source.php	/^        $root = $this->_dom->createElement('source');$/;"	v
text	library\Zend\Feed\Writer\Renderer\Feed\Atom\Source.php	/^        $text = $dom->createTextNode($gdata['name']);$/;"	v
Zend_Feed_Writer_Renderer_Feed_Rss	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^class Zend_Feed_Writer_Renderer_Feed_Rss$/;"	c
author	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^            $author = $this->_dom->createElement('author');$/;"	v
authors	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^        $authors = $this->getDataContainer()->getAuthors();$/;"	v
baseUrl	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^        $baseUrl = $this->getDataContainer()->getBaseUrl();$/;"	v
categories	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^        $categories = $this->getDataContainer()->getCategories();$/;"	v
category	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^            $category = $dom->createElement('category');$/;"	v
channel	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^        $channel = $this->_dom->createElement('channel');$/;"	v
copy	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^        $copy = $dom->createElement('copyright');$/;"	v
copyright	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^        $copyright = $this->getDataContainer()->getCopyright();$/;"	v
desc	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^            $desc = $dom->createElement('description');$/;"	v
element	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^            $element = $renderer->getElement();$/;"	v
exception	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^                $exception = new Zend_Feed_Exception($message);$/;"	v
exception	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^            $exception = new Zend_Feed_Exception($message);$/;"	v
gdata	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^        $gdata = $this->getDataContainer()->getGenerator();$/;"	v
generator	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^        $generator = $dom->createElement('generator');$/;"	v
height	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^            $height = $dom->createElement('height');$/;"	v
image	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^        $image = $this->getDataContainer()->getImage();$/;"	v
img	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^        $img = $dom->createElement('image');$/;"	v
imported	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^            $imported = $this->_dom->importNode($element, true);$/;"	v
lang	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^        $lang = $this->getDataContainer()->getLanguage();$/;"	v
language	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^        $language = $dom->createElement('language');$/;"	v
lastBuildDate	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^        $lastBuildDate = $dom->createElement('lastBuildDate');$/;"	v
link	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^        $link = $dom->createElement('link');$/;"	v
message	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^                $message = 'Invalid parameter: parameter \\'description\\''$/;"	v
message	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^                $message = 'Invalid parameter: parameter \\'height\\''$/;"	v
message	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^                $message = 'Invalid parameter: parameter \\'width\\''$/;"	v
message	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^            $message = 'Invalid parameter: parameter \\'link\\''$/;"	v
message	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^            $message = 'RSS 2.0 feed elements MUST contain exactly one'$/;"	v
message	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^            $message = 'RSS 2.0 feed images must include a title';$/;"	v
name	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^                $name = $data['email'] . ' (' . $data['name'] . ')';$/;"	v
name	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^            $name = $data['name'];$/;"	v
name	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^        $name = $gdata['name'];$/;"	v
renderer	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^                $renderer = new Zend_Feed_Writer_Renderer_Entry_Rss($entry);$/;"	v
rss	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^        $rss = $this->_dom->createElement('rss');$/;"	v
subtitle	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^        $subtitle = $dom->createElement('description');$/;"	v
text	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^            $text = $dom->createTextNode($cat['term']);$/;"	v
text	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^            $text = $dom->createTextNode($image['description']);$/;"	v
text	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^            $text = $dom->createTextNode($image['height']);$/;"	v
text	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^            $text = $dom->createTextNode($image['width']);$/;"	v
text	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^            $text = $dom->createTextNode($name);$/;"	v
text	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^        $text = $dom->createTextNode($/;"	v
text	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^        $text = $dom->createTextNode($copyright);$/;"	v
text	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^        $text = $dom->createTextNode($image['link']);$/;"	v
text	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^        $text = $dom->createTextNode($image['title']);$/;"	v
text	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^        $text = $dom->createTextNode($image['uri']);$/;"	v
text	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^        $text = $dom->createTextNode($name);$/;"	v
text	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^        $text = $dom->createTextNode($this->getDataContainer()->getDescription());$/;"	v
text	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^        $text = $dom->createTextNode($this->getDataContainer()->getTitle());$/;"	v
text	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^        $text = $dom->createTextNode($value);$/;"	v
title	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^        $title = $dom->createElement('title');$/;"	v
updated	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^        $updated = $dom->createElement('pubDate');$/;"	v
url	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^        $url = $dom->createElement('url');$/;"	v
value	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^        $value = $this->getDataContainer()->getLink();$/;"	v
width	library\Zend\Feed\Writer\Renderer\Feed\Rss.php	/^            $width = $dom->createElement('width');$/;"	v
Zend_Feed_Writer_Renderer_RendererAbstract	library\Zend\Feed\Writer\Renderer\RendererAbstract.php	/^class Zend_Feed_Writer_Renderer_RendererAbstract$/;"	c
all	library\Zend\Feed\Writer\Renderer\RendererAbstract.php	/^        $all = Zend_Feed_Writer::getExtensions();$/;"	v
className	library\Zend\Feed\Writer\Renderer\RendererAbstract.php	/^            $className = Zend_Feed_Writer::getPluginLoader()->getClassName($extension);$/;"	v
exts	library\Zend\Feed\Writer\Renderer\RendererAbstract.php	/^            $exts = $all['entryRenderer'];$/;"	v
exts	library\Zend\Feed\Writer\Renderer\RendererAbstract.php	/^            $exts = $all['feedRenderer'];$/;"	v
Zend_Feed_Writer_Source	library\Zend\Feed\Writer\Source.php	/^class Zend_Feed_Writer_Source extends Zend_Feed_Writer_Feed_FeedAbstract$/;"	c
Zend_File_Transfer	library\Zend\File\Transfer.php	/^class Zend_File_Transfer$/;"	c
adapter	library\Zend\File\Transfer.php	/^            $adapter = 'Zend_File_Transfer_Adapter_' . ucfirst($adapter);$/;"	v
direction	library\Zend\File\Transfer.php	/^            $direction = (integer) $options['direction'];$/;"	v
direction	library\Zend\File\Transfer.php	/^            $direction = 0;$/;"	v
direction	library\Zend\File\Transfer.php	/^        $direction = (integer) $direction;$/;"	v
argc	library\Zend\File\Transfer\Adapter\Abstract.php	/^                $argc                = count($validatorInfo);$/;"	v
break	library\Zend\File\Transfer\Adapter\Abstract.php	/^                        $break = true;$/;"	v
break	library\Zend\File\Transfer\Adapter\Abstract.php	/^        $break           = false;$/;"	v
breakChainOnFailure	library\Zend\File\Transfer\Adapter\Abstract.php	/^                                $breakChainOnFailure = array_shift($validatorInfo);$/;"	v
breakChainOnFailure	library\Zend\File\Transfer\Adapter\Abstract.php	/^                        $breakChainOnFailure = $validatorInfo['breakChainOnFailure'];$/;"	v
breakChainOnFailure	library\Zend\File\Transfer\Adapter\Abstract.php	/^                $breakChainOnFailure = false;$/;"	v
cType	library\Zend\File\Transfer\Adapter\Abstract.php	/^                    $cType        = ucfirst(strtolower($type));$/;"	v
check	library\Zend\File\Transfer\Adapter\Abstract.php	/^            $check = $this->_files;$/;"	v
check	library\Zend\File\Transfer\Adapter\Abstract.php	/^            $check = array_keys($check);$/;"	v
check	library\Zend\File\Transfer\Adapter\Abstract.php	/^        $check           = $this->_getFiles($files);$/;"	v
check	library\Zend\File\Transfer\Adapter\Abstract.php	/^        $check = $this->_getFiles($files, false, true);$/;"	v
check	library\Zend\File\Transfer\Adapter\Abstract.php	/^        $check = array();$/;"	v
checkit	library\Zend\File\Transfer\Adapter\Abstract.php	/^                    $checkit = $content['destination'];$/;"	v
checkit	library\Zend\File\Transfer\Adapter\Abstract.php	/^                    $checkit = dirname($content['tmp_name']);$/;"	v
class	library\Zend\File\Transfer\Adapter\Abstract.php	/^            $class  = $this->getPluginLoader(self::FILTER)->load($filter);$/;"	v
class	library\Zend\File\Transfer\Adapter\Abstract.php	/^            $class = get_class($filter);$/;"	v
const	library\Zend\File\Transfer\Adapter\Abstract.php	/^            $const = defined('FILEINFO_MIME_TYPE') ? FILEINFO_MIME_TYPE : FILEINFO_MIME;$/;"	v
count	library\Zend\File\Transfer\Adapter\Abstract.php	/^                $count     = $content;$/;"	v
destination	library\Zend\File\Transfer\Adapter\Abstract.php	/^        $destination = rtrim($destination, "\/\\\\");$/;"	v
destinations	library\Zend\File\Transfer\Adapter\Abstract.php	/^            $destinations = $this->_getTmpDir();$/;"	v
destinations	library\Zend\File\Transfer\Adapter\Abstract.php	/^            $destinations = current($destinations);$/;"	v
destinations	library\Zend\File\Transfer\Adapter\Abstract.php	/^        $destinations = array();$/;"	v
directory	library\Zend\File\Transfer\Adapter\Abstract.php	/^                $directory = $this->getDestination($file) . DIRECTORY_SEPARATOR;$/;"	v
directory	library\Zend\File\Transfer\Adapter\Abstract.php	/^        $directory = "";$/;"	v
file	library\Zend\File\Transfer\Adapter\Abstract.php	/^                                    $file = array_shift($validatorInfo);$/;"	v
file	library\Zend\File\Transfer\Adapter\Abstract.php	/^                        $file = $files;$/;"	v
file	library\Zend\File\Transfer\Adapter\Abstract.php	/^            $file = $value['name'];$/;"	v
file	library\Zend\File\Transfer\Adapter\Abstract.php	/^            $file = $value['tmp_name'];$/;"	v
file	library\Zend\File\Transfer\Adapter\Abstract.php	/^        $file = $this->_getFiles($files, false, true);$/;"	v
fileerrors	library\Zend\File\Transfer\Adapter\Abstract.php	/^            $fileerrors  = array();$/;"	v
files	library\Zend\File\Transfer\Adapter\Abstract.php	/^            $files = $this->_getFiles($files, true, true);$/;"	v
files	library\Zend\File\Transfer\Adapter\Abstract.php	/^            $files = array($files);$/;"	v
files	library\Zend\File\Transfer\Adapter\Abstract.php	/^        $files                    = $this->_getFiles($files, true, true);$/;"	v
files	library\Zend\File\Transfer\Adapter\Abstract.php	/^        $files                  = $this->_getFiles($files, true, true);$/;"	v
files	library\Zend\File\Transfer\Adapter\Abstract.php	/^        $files      = $this->_getFiles($files, true, true);$/;"	v
files	library\Zend\File\Transfer\Adapter\Abstract.php	/^        $files     = $this->_getFiles($file, true, true);$/;"	v
files	library\Zend\File\Transfer\Adapter\Abstract.php	/^        $files   = $this->_getFiles($files, true, true);$/;"	v
files	library\Zend\File\Transfer\Adapter\Abstract.php	/^        $files  = $this->_getFiles($files);$/;"	v
files	library\Zend\File\Transfer\Adapter\Abstract.php	/^        $files = $this->_getFiles($files, false, true);$/;"	v
filter	library\Zend\File\Transfer\Adapter\Abstract.php	/^                    $filter = $spec['filter'];$/;"	v
filter	library\Zend\File\Transfer\Adapter\Abstract.php	/^                    $filter = $this->_filters[$class];$/;"	v
filter	library\Zend\File\Transfer\Adapter\Abstract.php	/^            $filter = new $class($options);$/;"	v
filters	library\Zend\File\Transfer\Adapter\Abstract.php	/^        $filters = array();$/;"	v
filters	library\Zend\File\Transfer\Adapter\Abstract.php	/^        $filters = array_unique($filters);$/;"	v
found	library\Zend\File\Transfer\Adapter\Abstract.php	/^                $found = array();$/;"	v
index	library\Zend\File\Transfer\Adapter\Abstract.php	/^            $index = array_search($key, $this->_files[$file]['filters']);$/;"	v
index	library\Zend\File\Transfer\Adapter\Abstract.php	/^            $index = array_search($key, $this->_files[$file]['validators']);$/;"	v
keys	library\Zend\File\Transfer\Adapter\Abstract.php	/^            $keys  = array_keys($check);$/;"	v
loader	library\Zend\File\Transfer\Adapter\Abstract.php	/^                    $loader       = $this->getPluginLoader($type);$/;"	v
loader	library\Zend\File\Transfer\Adapter\Abstract.php	/^                    $loader = $this->_loaders[$type];$/;"	v
loader	library\Zend\File\Transfer\Adapter\Abstract.php	/^                $loader = $this->getPluginLoader($type);$/;"	v
mime	library\Zend\File\Transfer\Adapter\Abstract.php	/^                $mime = @finfo_open($const);$/;"	v
mime	library\Zend\File\Transfer\Adapter\Abstract.php	/^                $mime = @finfo_open($const, $value['options']['magicFile']);$/;"	v
name	library\Zend\File\Transfer\Adapter\Abstract.php	/^            $name      = $this->getPluginLoader(self::VALIDATE)->load($validator);$/;"	v
name	library\Zend\File\Transfer\Adapter\Abstract.php	/^            $name = get_class($validator);$/;"	v
options	library\Zend\File\Transfer\Adapter\Abstract.php	/^                                $options = array_shift($validatorInfo);$/;"	v
options	library\Zend\File\Transfer\Adapter\Abstract.php	/^                        $options   = $validatorInfo;$/;"	v
options	library\Zend\File\Transfer\Adapter\Abstract.php	/^                        $options = $validatorInfo['options'];$/;"	v
options	library\Zend\File\Transfer\Adapter\Abstract.php	/^                $options             = array();$/;"	v
orig	library\Zend\File\Transfer\Adapter\Abstract.php	/^        $orig  = $files;$/;"	v
orig	library\Zend\File\Transfer\Adapter\Abstract.php	/^        $orig = $files;$/;"	v
path	library\Zend\File\Transfer\Adapter\Abstract.php	/^                $path   = rtrim($path, DIRECTORY_SEPARATOR);$/;"	v
pathSegment	library\Zend\File\Transfer\Adapter\Abstract.php	/^                $pathSegment   = $prefixSegment;$/;"	v
paths	library\Zend\File\Transfer\Adapter\Abstract.php	/^                    $paths         = array($/;"	v
pluginPath	library\Zend\File\Transfer\Adapter\Abstract.php	/^                    $pluginPath   = $path . DIRECTORY_SEPARATOR . $cType . DIRECTORY_SEPARATOR;$/;"	v
pluginPrefix	library\Zend\File\Transfer\Adapter\Abstract.php	/^                    $pluginPrefix = $prefix . '_' . $cType;$/;"	v
prefix	library\Zend\File\Transfer\Adapter\Abstract.php	/^                    $prefix = 'Zend_' . $prefixSegment . '_File_';$/;"	v
prefix	library\Zend\File\Transfer\Adapter\Abstract.php	/^                $prefix = rtrim($prefix, '_');$/;"	v
prefixSegment	library\Zend\File\Transfer\Adapter\Abstract.php	/^                $prefixSegment = ucfirst(strtolower($type));$/;"	v
result	library\Zend\File\Transfer\Adapter\Abstract.php	/^                        $result = $filter->filter($this->getFileName($name));$/;"	v
result	library\Zend\File\Transfer\Adapter\Abstract.php	/^                $result = finfo_file($mime, $file);$/;"	v
result	library\Zend\File\Transfer\Adapter\Abstract.php	/^            $result = 'application\/octet-stream';$/;"	v
result	library\Zend\File\Transfer\Adapter\Abstract.php	/^            $result = mime_content_type($file);$/;"	v
result	library\Zend\File\Transfer\Adapter\Abstract.php	/^            $result = sprintf("%u", @filesize($value['name']));$/;"	v
result	library\Zend\File\Transfer\Adapter\Abstract.php	/^            $result = sprintf("%u", @filesize($value['tmp_name']));$/;"	v
result	library\Zend\File\Transfer\Adapter\Abstract.php	/^        $result     = array();$/;"	v
result	library\Zend\File\Transfer\Adapter\Abstract.php	/^        $result    = array();$/;"	v
result	library\Zend\File\Transfer\Adapter\Abstract.php	/^        $result  = array();$/;"	v
result	library\Zend\File\Transfer\Adapter\Abstract.php	/^        $result = @file_put_contents($tempFile, 'TEST');$/;"	v
result	library\Zend\File\Transfer\Adapter\Abstract.php	/^        $result = @unlink($tempFile);$/;"	v
result	library\Zend\File\Transfer\Adapter\Abstract.php	/^        $result = array();$/;"	v
sizes	library\Zend\File\Transfer\Adapter\Abstract.php	/^        $sizes = array('B', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB');$/;"	v
temp	library\Zend\File\Transfer\Adapter\Abstract.php	/^                $temp = $this->_files[$file]['validators'];$/;"	v
tempFile	library\Zend\File\Transfer\Adapter\Abstract.php	/^                $tempFile = tempnam(md5(uniqid(rand(), TRUE)), '');$/;"	v
tempFile	library\Zend\File\Transfer\Adapter\Abstract.php	/^        $tempFile = rtrim($path, "\/\\\\");$/;"	v
tmpdir	library\Zend\File\Transfer\Adapter\Abstract.php	/^                $tmpdir = $this->_getTmpDir();$/;"	v
tmpdir	library\Zend\File\Transfer\Adapter\Abstract.php	/^            $tmpdir = array();$/;"	v
tocheck	library\Zend\File\Transfer\Adapter\Abstract.php	/^                        $tocheck = $content['tmp_name'];$/;"	v
tocheck	library\Zend\File\Transfer\Adapter\Abstract.php	/^                        $tocheck = $key;$/;"	v
translator	library\Zend\File\Transfer\Adapter\Abstract.php	/^        $translator      = $this->getTranslator();$/;"	v
type	library\Zend\File\Transfer\Adapter\Abstract.php	/^                        $type = $paths['type'];$/;"	v
type	library\Zend\File\Transfer\Adapter\Abstract.php	/^                $type = null;$/;"	v
type	library\Zend\File\Transfer\Adapter\Abstract.php	/^        $type = strtoupper($type);$/;"	v
upload	library\Zend\File\Transfer\Adapter\Abstract.php	/^            $upload = ini_get('upload_tmp_dir');$/;"	v
validator	library\Zend\File\Transfer\Adapter\Abstract.php	/^                                $validator  = array_shift($validatorInfo);$/;"	v
validator	library\Zend\File\Transfer\Adapter\Abstract.php	/^                        $validator = $name;$/;"	v
validator	library\Zend\File\Transfer\Adapter\Abstract.php	/^                    $validator = $this->_validators[$class];$/;"	v
validator	library\Zend\File\Transfer\Adapter\Abstract.php	/^                    $validator = $validatorInfo['validator'];$/;"	v
validator	library\Zend\File\Transfer\Adapter\Abstract.php	/^                $validator = $this->_validators['Zend_Validate_File_Count'];$/;"	v
validator	library\Zend\File\Transfer\Adapter\Abstract.php	/^            $validator = new $name($options);$/;"	v
validators	library\Zend\File\Transfer\Adapter\Abstract.php	/^        $validators = array();$/;"	v
validators	library\Zend\File\Transfer\Adapter\Abstract.php	/^        $validators = array_unique($validators);$/;"	v
Zend_File_Transfer_Adapter_Http	library\Zend\File\Transfer\Adapter\Http.php	/^class Zend_File_Transfer_Adapter_Http extends Zend_File_Transfer_Adapter_Abstract$/;"	c
adapter	library\Zend\File\Transfer\Adapter\Http.php	/^                $adapter = $id['progress'];$/;"	v
adapter	library\Zend\File\Transfer\Adapter\Http.php	/^                $adapter = new Zend_ProgressBar($adapter, 0, $status['total'], $session);$/;"	v
adapter	library\Zend\File\Transfer\Adapter\Http.php	/^            $adapter = $id;$/;"	v
call	library\Zend\File\Transfer\Adapter\Http.php	/^                $call = call_user_func(self::$_callbackApc, ini_get('apc.rfc1867_prefix') . $id);$/;"	v
call	library\Zend\File\Transfer\Adapter\Http.php	/^                $call = call_user_func(self::$_callbackUploadProgress, $id);$/;"	v
check	library\Zend\File\Transfer\Adapter\Http.php	/^        $check = $this->_getFiles($files);$/;"	v
content	library\Zend\File\Transfer\Adapter\Http.php	/^            $content = $_SERVER['CONTENT_LENGTH'];$/;"	v
content	library\Zend\File\Transfer\Adapter\Http.php	/^            $content = serialize($_POST);$/;"	v
content	library\Zend\File\Transfer\Adapter\Http.php	/^        $content = 0;$/;"	v
destination	library\Zend\File\Transfer\Adapter\Http.php	/^                $destination = $this->getDestination($file);$/;"	v
directory	library\Zend\File\Transfer\Adapter\Http.php	/^                    $directory = $destination . DIRECTORY_SEPARATOR;$/;"	v
directory	library\Zend\File\Transfer\Adapter\Http.php	/^                $directory   = '';$/;"	v
filename	library\Zend\File\Transfer\Adapter\Http.php	/^                        $filename = $directory . $filename;$/;"	v
filename	library\Zend\File\Transfer\Adapter\Http.php	/^                        $filename = $tmp;$/;"	v
filename	library\Zend\File\Transfer\Adapter\Http.php	/^                $filename = $directory . $content['name'];$/;"	v
files	library\Zend\File\Transfer\Adapter\Http.php	/^                $files = current($files);$/;"	v
files	library\Zend\File\Transfer\Adapter\Http.php	/^        $files = $this->_getFiles($files, false, true);$/;"	v
filesize	library\Zend\File\Transfer\Adapter\Http.php	/^                    $filesize = $this->_detectFileSize($this->_files[$value]);$/;"	v
filesize	library\Zend\File\Transfer\Adapter\Http.php	/^                $filesize = $this->_detectFileSize($this->_files[$form]);$/;"	v
id	library\Zend\File\Transfer\Adapter\Http.php	/^                $id = $_GET['progress_key'];$/;"	v
id	library\Zend\File\Transfer\Adapter\Http.php	/^                $id = $id['id'];$/;"	v
key	library\Zend\File\Transfer\Adapter\Http.php	/^                    $key = array_search(get_class($rename), $this->_files[$file]['filters']);$/;"	v
mimetype	library\Zend\File\Transfer\Adapter\Http.php	/^                    $mimetype = $this->_detectMimeType($this->_files[$value]);$/;"	v
mimetype	library\Zend\File\Transfer\Adapter\Http.php	/^                $mimetype = $this->_detectMimeType($this->_files[$form]);$/;"	v
rename	library\Zend\File\Transfer\Adapter\Http.php	/^                $rename   = $this->getFilter('Rename');$/;"	v
session	library\Zend\File\Transfer\Adapter\Http.php	/^                $session = $id['session'];$/;"	v
session	library\Zend\File\Transfer\Adapter\Http.php	/^        $session = 'Zend_File_Transfer_Adapter_Http_ProgressBar';$/;"	v
status	library\Zend\File\Transfer\Adapter\Http.php	/^                    $status = $call + $status;$/;"	v
status	library\Zend\File\Transfer\Adapter\Http.php	/^        $status  = array($/;"	v
temp	library\Zend\File\Transfer\Adapter\Http.php	/^            $temp = array($files => array($/;"	v
tmp	library\Zend\File\Transfer\Adapter\Http.php	/^                    $tmp = $rename->getNewName($content['tmp_name']);$/;"	v
validator	library\Zend\File\Transfer\Adapter\Http.php	/^            $validator = $this->_validators['Zend_Validate_File_Upload'];$/;"	v
Zend_File_Transfer_Exception	library\Zend\File\Transfer\Exception.php	/^class Zend_File_Transfer_Exception extends Zend_Exception$/;"	c
Zend_Filter	library\Zend\Filter.php	/^class Zend_Filter implements Zend_Filter_Interface$/;"	c
class	library\Zend\Filter.php	/^            $class = new ReflectionClass($className);$/;"	v
className	library\Zend\Filter.php	/^            $className = $namespace . '_' . ucfirst($classBaseName);$/;"	v
file	library\Zend\Filter.php	/^                    $file = str_replace('_', DIRECTORY_SEPARATOR, $className) . '.php';$/;"	v
namespace	library\Zend\Filter.php	/^            $namespace = array((string) $namespace);$/;"	v
namespaces	library\Zend\Filter.php	/^        $namespaces = array_merge((array) $namespaces, self::$_defaultNamespaces, array('Zend_Filter'));$/;"	v
object	library\Zend\Filter.php	/^                    $object = $class->newInstance();$/;"	v
object	library\Zend\Filter.php	/^                    $object = $class->newInstanceArgs($args);$/;"	v
valueFiltered	library\Zend\Filter.php	/^            $valueFiltered = $filter->filter($valueFiltered);$/;"	v
valueFiltered	library\Zend\Filter.php	/^        $valueFiltered = $value;$/;"	v
Zend_Filter_Alnum	library\Zend\Filter\Alnum.php	/^class Zend_Filter_Alnum implements Zend_Filter_Interface$/;"	c
allowWhiteSpace	library\Zend\Filter\Alnum.php	/^                $allowWhiteSpace = $allowWhiteSpace['allowwhitespace'];$/;"	v
allowWhiteSpace	library\Zend\Filter\Alnum.php	/^                $allowWhiteSpace = false;$/;"	v
allowWhiteSpace	library\Zend\Filter\Alnum.php	/^            $allowWhiteSpace = $allowWhiteSpace->toArray();$/;"	v
pattern	library\Zend\Filter\Alnum.php	/^            $pattern = '\/[^\\p{L}\\p{N}' . $whiteSpace . ']\/u';$/;"	v
pattern	library\Zend\Filter\Alnum.php	/^            $pattern = '\/[^a-zA-Z0-9'  . $whiteSpace . ']\/u';$/;"	v
pattern	library\Zend\Filter\Alnum.php	/^            $pattern = '\/[^a-zA-Z0-9' . $whiteSpace . ']\/';$/;"	v
whiteSpace	library\Zend\Filter\Alnum.php	/^        $whiteSpace = $this->allowWhiteSpace ? '\\s' : '';$/;"	v
Zend_Filter_Alpha	library\Zend\Filter\Alpha.php	/^class Zend_Filter_Alpha implements Zend_Filter_Interface$/;"	c
allowWhiteSpace	library\Zend\Filter\Alpha.php	/^                $allowWhiteSpace = $allowWhiteSpace['allowwhitespace'];$/;"	v
allowWhiteSpace	library\Zend\Filter\Alpha.php	/^                $allowWhiteSpace = false;$/;"	v
allowWhiteSpace	library\Zend\Filter\Alpha.php	/^            $allowWhiteSpace = $allowWhiteSpace->toArray();$/;"	v
pattern	library\Zend\Filter\Alpha.php	/^            $pattern = '\/[^\\p{L}' . $whiteSpace . ']\/u';$/;"	v
pattern	library\Zend\Filter\Alpha.php	/^            $pattern = '\/[^a-zA-Z'  . $whiteSpace . ']\/u';$/;"	v
pattern	library\Zend\Filter\Alpha.php	/^            $pattern = '\/[^a-zA-Z' . $whiteSpace . ']\/';$/;"	v
whiteSpace	library\Zend\Filter\Alpha.php	/^        $whiteSpace = $this->allowWhiteSpace ? '\\s' : '';$/;"	v
Zend_Filter_BaseName	library\Zend\Filter\BaseName.php	/^class Zend_Filter_BaseName implements Zend_Filter_Interface$/;"	c
Zend_Filter_Boolean	library\Zend\Filter\Boolean.php	/^class Zend_Filter_Boolean implements Zend_Filter_Interface$/;"	c
casting	library\Zend\Filter\Boolean.php	/^        $casting = $this->getCasting();$/;"	v
detected	library\Zend\Filter\Boolean.php	/^            $detected = 0;$/;"	v
locale	library\Zend\Filter\Boolean.php	/^            $locale = array($locale);$/;"	v
locale	library\Zend\Filter\Boolean.php	/^            $locale = array($locale->toString());$/;"	v
locales	library\Zend\Filter\Boolean.php	/^                $locales = $this->getLocale();$/;"	v
options	library\Zend\Filter\Boolean.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Filter\Boolean.php	/^            $options = $temp;$/;"	v
options	library\Zend\Filter\Boolean.php	/^            $options = func_get_args();$/;"	v
question	library\Zend\Filter\Boolean.php	/^            $question = 'no';$/;"	v
question	library\Zend\Filter\Boolean.php	/^            $question = 'yes';$/;"	v
return	library\Zend\Filter\Boolean.php	/^            $return   = false;$/;"	v
return	library\Zend\Filter\Boolean.php	/^            $return   = true;$/;"	v
str	library\Zend\Filter\Boolean.php	/^        $str = Zend_Locale::getTranslation($question, 'question', $locale);$/;"	v
str	library\Zend\Filter\Boolean.php	/^        $str = explode(':', $str);$/;"	v
temp	library\Zend\Filter\Boolean.php	/^            $temp    = array();$/;"	v
type	library\Zend\Filter\Boolean.php	/^            $type = $detected;$/;"	v
type	library\Zend\Filter\Boolean.php	/^            $type = array_search($type, $this->_constants);$/;"	v
type	library\Zend\Filter\Boolean.php	/^        $type    = $this->getType();$/;"	v
Zend_Filter_Callback	library\Zend\Filter\Callback.php	/^class Zend_Filter_Callback implements Zend_Filter_Interface$/;"	c
options	library\Zend\Filter\Callback.php	/^                $options = $this->_options;$/;"	v
options	library\Zend\Filter\Callback.php	/^                $options = array($this->_options);$/;"	v
options	library\Zend\Filter\Callback.php	/^            $options          = func_get_args();$/;"	v
options	library\Zend\Filter\Callback.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Filter\Callback.php	/^            $options = $temp;$/;"	v
options	library\Zend\Filter\Callback.php	/^        $options = array();$/;"	v
Zend_Filter_Compress	library\Zend\Filter\Compress.php	/^class Zend_Filter_Compress implements Zend_Filter_Interface$/;"	c
adapter	library\Zend\Filter\Compress.php	/^                $adapter = 'Zend_Filter_Compress_' . ucfirst($adapter);$/;"	v
adapter	library\Zend\Filter\Compress.php	/^        $adapter = $this->_adapter;$/;"	v
adapter	library\Zend\Filter\Compress.php	/^        $adapter = $this->getAdapter();$/;"	v
key	library\Zend\Filter\Compress.php	/^                $key = 'adapterOptions';$/;"	v
method	library\Zend\Filter\Compress.php	/^            $method = 'set' . ucfirst($key);$/;"	v
options	library\Zend\Filter\Compress.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Filter\Compress.php	/^        $options = $this->getAdapterOptions();$/;"	v
Zend_Filter_Compress_Bz2	library\Zend\Filter\Compress\Bz2.php	/^class Zend_Filter_Compress_Bz2 extends Zend_Filter_Compress_CompressAbstract$/;"	c
archive	library\Zend\Filter\Compress\Bz2.php	/^            $archive = $content;$/;"	v
archive	library\Zend\Filter\Compress\Bz2.php	/^        $archive = $this->getArchive();$/;"	v
compressed	library\Zend\Filter\Compress\Bz2.php	/^            $compressed = bzcompress($content, $this->getBlocksize());$/;"	v
compressed	library\Zend\Filter\Compress\Bz2.php	/^            $compressed = bzdecompress($content);$/;"	v
compressed	library\Zend\Filter\Compress\Bz2.php	/^            $compressed = bzread($file);$/;"	v
compressed	library\Zend\Filter\Compress\Bz2.php	/^            $compressed = true;$/;"	v
file	library\Zend\Filter\Compress\Bz2.php	/^            $file = bzopen($archive, 'r');$/;"	v
file	library\Zend\Filter\Compress\Bz2.php	/^            $file = bzopen($archive, 'w');$/;"	v
method	library\Zend\Filter\Compress\CompressAbstract.php	/^            $method = 'set' . $key;$/;"	v
options	library\Zend\Filter\Compress\CompressAbstract.php	/^            $options = $options->toArray();$/;"	v
Zend_Filter_Compress_Gz	library\Zend\Filter\Compress\Gz.php	/^class Zend_Filter_Compress_Gz extends Zend_Filter_Compress_CompressAbstract$/;"	c
archive	library\Zend\Filter\Compress\Gz.php	/^            $archive = $content;$/;"	v
archive	library\Zend\Filter\Compress\Gz.php	/^        $archive = $this->getArchive();$/;"	v
bytes	library\Zend\Filter\Compress\Gz.php	/^            $bytes  = unpack("V", $packet);$/;"	v
compressed	library\Zend\Filter\Compress\Gz.php	/^            $compressed = gzcompress($content, $this->getLevel());$/;"	v
compressed	library\Zend\Filter\Compress\Gz.php	/^            $compressed = gzdeflate($content, $this->getLevel());$/;"	v
compressed	library\Zend\Filter\Compress\Gz.php	/^            $compressed = gzinflate($content);$/;"	v
compressed	library\Zend\Filter\Compress\Gz.php	/^            $compressed = gzread($file, $size);$/;"	v
compressed	library\Zend\Filter\Compress\Gz.php	/^            $compressed = gzuncompress($content);$/;"	v
compressed	library\Zend\Filter\Compress\Gz.php	/^            $compressed = true;$/;"	v
file	library\Zend\Filter\Compress\Gz.php	/^            $file       = gzopen($archive, 'r');$/;"	v
file	library\Zend\Filter\Compress\Gz.php	/^            $file = gzopen($archive, 'w' . $this->getLevel());$/;"	v
handler	library\Zend\Filter\Compress\Gz.php	/^            $handler = fopen($archive, "rb");$/;"	v
mode	library\Zend\Filter\Compress\Gz.php	/^        $mode    = $this->getMode();$/;"	v
packet	library\Zend\Filter\Compress\Gz.php	/^            $packet = fread($handler, 4);$/;"	v
size	library\Zend\Filter\Compress\Gz.php	/^            $size   = end($bytes);$/;"	v
Zend_Filter_Compress_Lzf	library\Zend\Filter\Compress\Lzf.php	/^class Zend_Filter_Compress_Lzf implements Zend_Filter_Compress_CompressInterface$/;"	c
compressed	library\Zend\Filter\Compress\Lzf.php	/^        $compressed = lzf_compress($content);$/;"	v
compressed	library\Zend\Filter\Compress\Lzf.php	/^        $compressed = lzf_decompress($content);$/;"	v
Zend_Filter_Compress_Rar	library\Zend\Filter\Compress\Rar.php	/^class Zend_Filter_Compress_Rar extends Zend_Filter_Compress_CompressAbstract$/;"	c
archive	library\Zend\Filter\Compress\Rar.php	/^            $archive = rar_open($archive);$/;"	v
archive	library\Zend\Filter\Compress\Rar.php	/^            $archive = rar_open($archive, $password);$/;"	v
archive	library\Zend\Filter\Compress\Rar.php	/^            $archive = str_replace(array('\/', '\\\\'), DIRECTORY_SEPARATOR, realpath($content));$/;"	v
archive	library\Zend\Filter\Compress\Rar.php	/^        $archive = $this->getArchive();$/;"	v
archive	library\Zend\Filter\Compress\Rar.php	/^        $archive = str_replace(array('\/', '\\\\'), DIRECTORY_SEPARATOR, $archive);$/;"	v
callback	library\Zend\Filter\Compress\Rar.php	/^        $callback = $this->getCallback();$/;"	v
filelist	library\Zend\Filter\Compress\Rar.php	/^        $filelist = rar_list($archive);$/;"	v
options	library\Zend\Filter\Compress\Rar.php	/^        $options = $this->getOptions();$/;"	v
password	library\Zend\Filter\Compress\Rar.php	/^        $password = $this->getPassword();$/;"	v
result	library\Zend\Filter\Compress\Rar.php	/^        $result = call_user_func($callback, $options, $content);$/;"	v
target	library\Zend\Filter\Compress\Rar.php	/^            $target = dirname($target);$/;"	v
target	library\Zend\Filter\Compress\Rar.php	/^        $target = $this->getTarget();$/;"	v
target	library\Zend\Filter\Compress\Rar.php	/^        $target = str_replace(array('\/', '\\\\'), DIRECTORY_SEPARATOR, $target);$/;"	v
Zend_Filter_Compress_Tar	library\Zend\Filter\Compress\Tar.php	/^class Zend_Filter_Compress_Tar extends Zend_Filter_Compress_CompressAbstract$/;"	c
archive	library\Zend\Filter\Compress\Tar.php	/^            $archive = str_replace(array('\/', '\\\\'), DIRECTORY_SEPARATOR, realpath($content));$/;"	v
archive	library\Zend\Filter\Compress\Tar.php	/^        $archive = $this->getArchive();$/;"	v
archive	library\Zend\Filter\Compress\Tar.php	/^        $archive = new Archive_Tar($archive, $this->getMode());$/;"	v
archive	library\Zend\Filter\Compress\Tar.php	/^        $archive = new Archive_Tar($this->getArchive(), $this->getMode());$/;"	v
archive	library\Zend\Filter\Compress\Tar.php	/^        $archive = str_replace(array('\/', '\\\\'), DIRECTORY_SEPARATOR, $archive);$/;"	v
content	library\Zend\Filter\Compress\Tar.php	/^            $content = $file;$/;"	v
file	library\Zend\Filter\Compress\Tar.php	/^            $file = $this->getTarget();$/;"	v
mode	library\Zend\Filter\Compress\Tar.php	/^        $mode = ucfirst(strtolower($mode));$/;"	v
result	library\Zend\Filter\Compress\Tar.php	/^            $result = file_put_contents($file, $content);$/;"	v
result	library\Zend\Filter\Compress\Tar.php	/^        $result  = $archive->create($content);$/;"	v
result	library\Zend\Filter\Compress\Tar.php	/^        $result = $archive->extract($target);$/;"	v
target	library\Zend\Filter\Compress\Tar.php	/^            $target = dirname($target);$/;"	v
target	library\Zend\Filter\Compress\Tar.php	/^        $target  = $this->getTarget();$/;"	v
target	library\Zend\Filter\Compress\Tar.php	/^        $target = str_replace(array('\/', '\\\\'), DIRECTORY_SEPARATOR, $target);$/;"	v
Zend_Filter_Compress_Zip	library\Zend\Filter\Compress\Zip.php	/^class Zend_Filter_Compress_Zip extends Zend_Filter_Compress_CompressAbstract$/;"	c
archive	library\Zend\Filter\Compress\Zip.php	/^            $archive = str_replace(array('\/', '\\\\'), DIRECTORY_SEPARATOR, realpath($content));$/;"	v
archive	library\Zend\Filter\Compress\Zip.php	/^        $archive = $this->getArchive();$/;"	v
archive	library\Zend\Filter\Compress\Zip.php	/^        $archive = str_replace(array('\/', '\\\\'), DIRECTORY_SEPARATOR, $archive);$/;"	v
basename	library\Zend\Filter\Compress\Zip.php	/^            $basename = substr($content, strrpos($content, DIRECTORY_SEPARATOR) + 1);$/;"	v
content	library\Zend\Filter\Compress\Zip.php	/^            $content  = str_replace(array('\/', '\\\\'), DIRECTORY_SEPARATOR, realpath($content));$/;"	v
currName	library\Zend\Filter\Compress\Zip.php	/^                $currName = $statIndex['name'];$/;"	v
current	library\Zend\Filter\Compress\Zip.php	/^                    $current = array_pop($stack);$/;"	v
dir	library\Zend\Filter\Compress\Zip.php	/^                    $dir = dir($current);$/;"	v
file	library\Zend\Filter\Compress\Zip.php	/^                $file = "zip.tmp";$/;"	v
file	library\Zend\Filter\Compress\Zip.php	/^                $file = basename($file);$/;"	v
file	library\Zend\Filter\Compress\Zip.php	/^            $file = $this->getTarget();$/;"	v
files	library\Zend\Filter\Compress\Zip.php	/^                    $files   = array();$/;"	v
index	library\Zend\Filter\Compress\Zip.php	/^                $index    = strrpos($content, DIRECTORY_SEPARATOR) + 1;$/;"	v
local	library\Zend\Filter\Compress\Zip.php	/^                    $local = substr($current, $index);$/;"	v
res	library\Zend\Filter\Compress\Zip.php	/^                $res = $zip->addFile($content, $basename);$/;"	v
res	library\Zend\Filter\Compress\Zip.php	/^            $res = $zip->addFromString($file, $content);$/;"	v
res	library\Zend\Filter\Compress\Zip.php	/^        $res = $zip->open($archive);$/;"	v
res	library\Zend\Filter\Compress\Zip.php	/^        $res = $zip->open($this->getArchive(), ZipArchive::CREATE | ZipArchive::OVERWRITE);$/;"	v
res	library\Zend\Filter\Compress\Zip.php	/^        $res = @$zip->extractTo($target);$/;"	v
stack	library\Zend\Filter\Compress\Zip.php	/^                $stack    = array($content);$/;"	v
statIndex	library\Zend\Filter\Compress\Zip.php	/^                $statIndex = $zip->statIndex($i);$/;"	v
target	library\Zend\Filter\Compress\Zip.php	/^            $target = dirname($target);$/;"	v
target	library\Zend\Filter\Compress\Zip.php	/^            $target = rtrim($target, '\/\\\\') . DIRECTORY_SEPARATOR;$/;"	v
target	library\Zend\Filter\Compress\Zip.php	/^        $target = $this->getTarget();$/;"	v
target	library\Zend\Filter\Compress\Zip.php	/^        $target = str_replace(array('\/', '\\\\'), DIRECTORY_SEPARATOR, $target);$/;"	v
zip	library\Zend\Filter\Compress\Zip.php	/^        $zip = new ZipArchive();$/;"	v
Zend_Filter_Decompress	library\Zend\Filter\Decompress.php	/^class Zend_Filter_Decompress extends Zend_Filter_Compress$/;"	c
Zend_Filter_Decrypt	library\Zend\Filter\Decrypt.php	/^class Zend_Filter_Decrypt extends Zend_Filter_Encrypt$/;"	c
Zend_Filter_Digits	library\Zend\Filter\Digits.php	/^class Zend_Filter_Digits implements Zend_Filter_Interface$/;"	c
pattern	library\Zend\Filter\Digits.php	/^            $pattern = '\/[\\p{^N}]\/';$/;"	v
pattern	library\Zend\Filter\Digits.php	/^            $pattern = '\/[^0-9]\/';$/;"	v
pattern	library\Zend\Filter\Digits.php	/^            $pattern = '\/[^[:digit:]]\/';$/;"	v
Zend_Filter_Dir	library\Zend\Filter\Dir.php	/^class Zend_Filter_Dir implements Zend_Filter_Interface$/;"	c
Zend_Filter_Encrypt	library\Zend\Filter\Encrypt.php	/^class Zend_Filter_Encrypt implements Zend_Filter_Interface$/;"	c
adapter	library\Zend\Filter\Encrypt.php	/^            $adapter = $options;$/;"	v
adapter	library\Zend\Filter\Encrypt.php	/^            $adapter = $options['adapter'];$/;"	v
adapter	library\Zend\Filter\Encrypt.php	/^            $adapter = 'Mcrypt';$/;"	v
adapter	library\Zend\Filter\Encrypt.php	/^            $adapter = 'Zend_Filter_Encrypt_' . ucfirst($adapter);$/;"	v
options	library\Zend\Filter\Encrypt.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Filter\Encrypt.php	/^            $options = array();$/;"	v
part	library\Zend\Filter\Encrypt.php	/^        $part = substr($method, 0, 3);$/;"	v
Zend_Filter_Encrypt_Mcrypt	library\Zend\Filter\Encrypt\Mcrypt.php	/^class Zend_Filter_Encrypt_Mcrypt implements Zend_Filter_Encrypt_Interface$/;"	c
algorithms	library\Zend\Filter\Encrypt\Mcrypt.php	/^        $algorithms = mcrypt_list_algorithms($options['algorithm_directory']);$/;"	v
cipher	library\Zend\Filter\Encrypt\Mcrypt.php	/^        $cipher  = $this->_openCipher();$/;"	v
cipher	library\Zend\Filter\Encrypt\Mcrypt.php	/^        $cipher = $this->_openCipher();$/;"	v
cipher	library\Zend\Filter\Encrypt\Mcrypt.php	/^        $cipher = mcrypt_module_open($/;"	v
compress	library\Zend\Filter\Encrypt\Mcrypt.php	/^            $compress = new Zend_Filter_Compress($this->_compression);$/;"	v
compression	library\Zend\Filter\Encrypt\Mcrypt.php	/^            $compression = array('adapter' => $compression);$/;"	v
decompress	library\Zend\Filter\Encrypt\Mcrypt.php	/^            $decompress = new Zend_Filter_Decompress($this->_compression);$/;"	v
decrypted	library\Zend\Filter\Encrypt\Mcrypt.php	/^            $decrypted  = $decompress->filter($decrypted);$/;"	v
decrypted	library\Zend\Filter\Encrypt\Mcrypt.php	/^        $decrypted = mdecrypt_generic($cipher, $value);$/;"	v
encrypted	library\Zend\Filter\Encrypt\Mcrypt.php	/^        $encrypted = mcrypt_generic($cipher, $value);$/;"	v
key	library\Zend\Filter\Encrypt\Mcrypt.php	/^            $key     = substr(md5($key), 0, $keysize);$/;"	v
key	library\Zend\Filter\Encrypt\Mcrypt.php	/^        $key = $this->_encryption['key'];$/;"	v
keysize	library\Zend\Filter\Encrypt\Mcrypt.php	/^            $keysize = mcrypt_enc_get_key_size($cipher);$/;"	v
keysizes	library\Zend\Filter\Encrypt\Mcrypt.php	/^        $keysizes = mcrypt_enc_get_supported_key_sizes($cipher);$/;"	v
method	library\Zend\Filter\Encrypt\Mcrypt.php	/^                    $method = MCRYPT_DEV_RANDOM;$/;"	v
method	library\Zend\Filter\Encrypt\Mcrypt.php	/^                    $method = MCRYPT_DEV_URANDOM;$/;"	v
method	library\Zend\Filter\Encrypt\Mcrypt.php	/^                    $method = MCRYPT_RAND;$/;"	v
method	library\Zend\Filter\Encrypt\Mcrypt.php	/^                $method = MCRYPT_RAND;$/;"	v
modes	library\Zend\Filter\Encrypt\Mcrypt.php	/^        $modes = mcrypt_list_modes($options['mode_directory']);$/;"	v
options	library\Zend\Filter\Encrypt\Mcrypt.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Filter\Encrypt\Mcrypt.php	/^            $options = array('key' => $options);$/;"	v
options	library\Zend\Filter\Encrypt\Mcrypt.php	/^        $options = $options + $this->getEncryption();$/;"	v
result	library\Zend\Filter\Encrypt\Mcrypt.php	/^        $result = mcrypt_generic_init($cipher, $key, $this->_encryption['vector']);$/;"	v
size	library\Zend\Filter\Encrypt\Mcrypt.php	/^        $size   = mcrypt_enc_get_iv_size($cipher);$/;"	v
value	library\Zend\Filter\Encrypt\Mcrypt.php	/^            $value    = $compress->filter($value);$/;"	v
vector	library\Zend\Filter\Encrypt\Mcrypt.php	/^            $vector = mcrypt_create_iv($size, $method);$/;"	v
Zend_Filter_Encrypt_Openssl	library\Zend\Filter\Encrypt\Openssl.php	/^class Zend_Filter_Encrypt_Openssl implements Zend_Filter_Encrypt_Interface$/;"	c
cert	library\Zend\Filter\Encrypt\Openssl.php	/^                $cert = $key;$/;"	v
cert	library\Zend\Filter\Encrypt\Openssl.php	/^                $cert = fread($file, 8192);$/;"	v
compress	library\Zend\Filter\Encrypt\Openssl.php	/^            $compress = new Zend_Filter_Compress($this->_compression);$/;"	v
compression	library\Zend\Filter\Encrypt\Openssl.php	/^            $compression = array('adapter' => $compression);$/;"	v
count	library\Zend\Filter\Encrypt\Openssl.php	/^            $count = $count['count'];$/;"	v
count	library\Zend\Filter\Encrypt\Openssl.php	/^            $count = unpack('ncount', $value);$/;"	v
count	library\Zend\Filter\Encrypt\Openssl.php	/^        $count        = -1;$/;"	v
crypt	library\Zend\Filter\Encrypt\Openssl.php	/^        $crypt  = openssl_open($value, $decrypted, $envelope, $keys);$/;"	v
crypt	library\Zend\Filter\Encrypt\Openssl.php	/^        $crypt  = openssl_seal($value, $encrypted, $encryptedkeys, $keys);$/;"	v
decompress	library\Zend\Filter\Encrypt\Openssl.php	/^            $decompress = new Zend_Filter_Decompress($this->_compression);$/;"	v
decrypted	library\Zend\Filter\Encrypt\Openssl.php	/^            $decrypted  = $decompress->filter($decrypted);$/;"	v
decrypted	library\Zend\Filter\Encrypt\Openssl.php	/^        $decrypted = "";$/;"	v
details	library\Zend\Filter\Encrypt\Openssl.php	/^                    $details = array('key' => 'ZendFramework');$/;"	v
details	library\Zend\Filter\Encrypt\Openssl.php	/^                $details = openssl_pkey_get_details($keys[$key]);$/;"	v
details	library\Zend\Filter\Encrypt\Openssl.php	/^            $details = openssl_pkey_get_details($keys);$/;"	v
encrypted	library\Zend\Filter\Encrypt\Openssl.php	/^            $encrypted = $header . $encrypted;$/;"	v
encrypted	library\Zend\Filter\Encrypt\Openssl.php	/^        $encrypted     = array();$/;"	v
encryptedkeys	library\Zend\Filter\Encrypt\Openssl.php	/^        $encryptedkeys = array();$/;"	v
envelope	library\Zend\Filter\Encrypt\Openssl.php	/^                    $envelope = substr($value, $length, $header['size']);$/;"	v
envelope	library\Zend\Filter\Encrypt\Openssl.php	/^        $envelope  = current($this->getEnvelopeKey());$/;"	v
file	library\Zend\Filter\Encrypt\Openssl.php	/^                $file = fopen($key, 'r');$/;"	v
fingerprint	library\Zend\Filter\Encrypt\Openssl.php	/^                $fingerprint = md5("ZendFramework");$/;"	v
fingerprint	library\Zend\Filter\Encrypt\Openssl.php	/^                $fingerprint = md5($details['key']);$/;"	v
fingerprints	library\Zend\Filter\Encrypt\Openssl.php	/^        $fingerprints = array();$/;"	v
header	library\Zend\Filter\Encrypt\Openssl.php	/^                $header = unpack('H32print\/nsize', substr($value, $length, 18));$/;"	v
header	library\Zend\Filter\Encrypt\Openssl.php	/^            $header = pack('n', count($this->_keys['envelope']));$/;"	v
key	library\Zend\Filter\Encrypt\Openssl.php	/^                $key  = count($this->_keys[$type]);$/;"	v
key	library\Zend\Filter\Encrypt\Openssl.php	/^            $key = array('envelope' => $key);$/;"	v
key	library\Zend\Filter\Encrypt\Openssl.php	/^            $key = array('private' => $key);$/;"	v
key	library\Zend\Filter\Encrypt\Openssl.php	/^            $key = array('public' => $key);$/;"	v
key	library\Zend\Filter\Encrypt\Openssl.php	/^        $key = $this->_keys['envelope'];$/;"	v
key	library\Zend\Filter\Encrypt\Openssl.php	/^        $key = $this->_keys['private'];$/;"	v
key	library\Zend\Filter\Encrypt\Openssl.php	/^        $key = $this->_keys['public'];$/;"	v
keys	library\Zend\Filter\Encrypt\Openssl.php	/^            $keys = openssl_pkey_get_private($cert, $this->getPassphrase());$/;"	v
keys	library\Zend\Filter\Encrypt\Openssl.php	/^        $keys         = array();$/;"	v
length	library\Zend\Filter\Encrypt\Openssl.php	/^            $length  = 2;$/;"	v
options	library\Zend\Filter\Encrypt\Openssl.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Filter\Encrypt\Openssl.php	/^            $options = array('public' => $options);$/;"	v
test	library\Zend\Filter\Encrypt\Openssl.php	/^                    $test = openssl_pkey_get_private($cert, $this->_passphrase);$/;"	v
test	library\Zend\Filter\Encrypt\Openssl.php	/^                    $test = openssl_pkey_get_public($cert);$/;"	v
value	library\Zend\Filter\Encrypt\Openssl.php	/^            $value    = $compress->filter($value);$/;"	v
value	library\Zend\Filter\Encrypt\Openssl.php	/^            $value = substr($value, $length);$/;"	v
Zend_Filter_Exception	library\Zend\Filter\Exception.php	/^class Zend_Filter_Exception extends Zend_Exception$/;"	c
Zend_Filter_File_Decrypt	library\Zend\Filter\File\Decrypt.php	/^class Zend_Filter_File_Decrypt extends Zend_Filter_Decrypt$/;"	c
content	library\Zend\Filter\File\Decrypt.php	/^        $content = file_get_contents($value);$/;"	v
decrypted	library\Zend\Filter\File\Decrypt.php	/^        $decrypted = parent::filter($content);$/;"	v
result	library\Zend\Filter\File\Decrypt.php	/^        $result    = file_put_contents($this->_filename, $decrypted);$/;"	v
Zend_Filter_File_Encrypt	library\Zend\Filter\File\Encrypt.php	/^class Zend_Filter_File_Encrypt extends Zend_Filter_Encrypt$/;"	c
content	library\Zend\Filter\File\Encrypt.php	/^        $content = file_get_contents($value);$/;"	v
encrypted	library\Zend\Filter\File\Encrypt.php	/^        $encrypted = parent::filter($content);$/;"	v
result	library\Zend\Filter\File\Encrypt.php	/^        $result    = file_put_contents($this->_filename, $encrypted);$/;"	v
Zend_Filter_File_LowerCase	library\Zend\Filter\File\LowerCase.php	/^class Zend_Filter_File_LowerCase extends Zend_Filter_StringToLower$/;"	c
content	library\Zend\Filter\File\LowerCase.php	/^        $content = file_get_contents($value);$/;"	v
content	library\Zend\Filter\File\LowerCase.php	/^        $content = parent::filter($content);$/;"	v
result	library\Zend\Filter\File\LowerCase.php	/^        $result  = file_put_contents($value, $content);$/;"	v
Zend_Filter_File_Rename	library\Zend\Filter\File\Rename.php	/^class Zend_Filter_File_Rename implements Zend_Filter_Interface$/;"	c
argv	library\Zend\Filter\File\Rename.php	/^            $argv = func_get_args();$/;"	v
count	library\Zend\Filter\File\Rename.php	/^            $count                = count($this->_files);$/;"	v
file	library\Zend\Filter\File\Rename.php	/^        $file   = $this->getNewName($value, true);$/;"	v
file	library\Zend\Filter\File\Rename.php	/^        $file = $this->_getFileName($value);$/;"	v
files	library\Zend\Filter\File\Rename.php	/^        $files = array();$/;"	v
found	library\Zend\Filter\File\Rename.php	/^                $found              = true;$/;"	v
found	library\Zend\Filter\File\Rename.php	/^        $found = false;$/;"	v
last	library\Zend\Filter\File\Rename.php	/^            $last = $rename['target'][strlen($rename['target']) - 1];$/;"	v
name	library\Zend\Filter\File\Rename.php	/^            $name = basename($rename['source']);$/;"	v
options	library\Zend\Filter\File\Rename.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Filter\File\Rename.php	/^            $options = array('target' => $options);$/;"	v
overwrite	library\Zend\Filter\File\Rename.php	/^                $overwrite = array_shift($argv);$/;"	v
overwrite	library\Zend\Filter\File\Rename.php	/^            $overwrite = false;$/;"	v
rename	library\Zend\Filter\File\Rename.php	/^                    $rename           = $value;$/;"	v
rename	library\Zend\Filter\File\Rename.php	/^                $rename = $value;$/;"	v
rename	library\Zend\Filter\File\Rename.php	/^        $rename = array();$/;"	v
result	library\Zend\Filter\File\Rename.php	/^        $result = rename($file['source'], $file['target']);$/;"	v
source	library\Zend\Filter\File\Rename.php	/^            $source    = array_shift($argv);$/;"	v
Zend_Filter_File_UpperCase	library\Zend\Filter\File\UpperCase.php	/^class Zend_Filter_File_UpperCase extends Zend_Filter_StringToUpper$/;"	c
content	library\Zend\Filter\File\UpperCase.php	/^        $content = file_get_contents($value);$/;"	v
content	library\Zend\Filter\File\UpperCase.php	/^        $content = parent::filter($content);$/;"	v
result	library\Zend\Filter\File\UpperCase.php	/^        $result  = file_put_contents($value, $content);$/;"	v
Zend_Filter_HtmlEntities	library\Zend\Filter\HtmlEntities.php	/^class Zend_Filter_HtmlEntities implements Zend_Filter_Interface$/;"	c
enc	library\Zend\Filter\HtmlEntities.php	/^            $enc      = $this->getEncoding();$/;"	v
filtered	library\Zend\Filter\HtmlEntities.php	/^            $filtered = htmlentities($value, $this->getQuoteStyle(), $enc, $this->getDoubleQuote());$/;"	v
filtered	library\Zend\Filter\HtmlEntities.php	/^        $filtered = htmlentities((string) $value, $this->getQuoteStyle(), $this->getEncoding(), $this->getDoubleQuote());$/;"	v
options	library\Zend\Filter\HtmlEntities.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Filter\HtmlEntities.php	/^            $options = $temp;$/;"	v
options	library\Zend\Filter\HtmlEntities.php	/^            $options = func_get_args();$/;"	v
value	library\Zend\Filter\HtmlEntities.php	/^            $value    = iconv('', $enc . '\/\/IGNORE', (string) $value);$/;"	v
Zend_Filter_Inflector	library\Zend\Filter\Inflector.php	/^class Zend_Filter_Inflector implements Zend_Filter_Interface$/;"	c
className	library\Zend\Filter\Inflector.php	/^        $className  = $this->getPluginLoader()->load($rule);$/;"	v
inflectedTarget	library\Zend\Filter\Inflector.php	/^        $inflectedTarget = preg_replace(array_keys($processedParts), array_values($processedParts), $this->_target);$/;"	v
keys	library\Zend\Filter\Inflector.php	/^        $keys = array_keys($rules);$/;"	v
name	library\Zend\Filter\Inflector.php	/^        $name = $this->_normalizeSpec($name);$/;"	v
options	library\Zend\Filter\Inflector.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Filter\Inflector.php	/^            $options = $temp;$/;"	v
options	library\Zend\Filter\Inflector.php	/^            $options = func_get_args();$/;"	v
pregQuotedTargetReplacementIdentifier	library\Zend\Filter\Inflector.php	/^        $pregQuotedTargetReplacementIdentifier = preg_quote($this->_targetReplacementIdentifier, '#');$/;"	v
processedPart	library\Zend\Filter\Inflector.php	/^                        $processedPart = $ruleFilter->filter($processedPart);$/;"	v
processedPart	library\Zend\Filter\Inflector.php	/^                    $processedPart = $source[$ruleName];$/;"	v
processedParts	library\Zend\Filter\Inflector.php	/^        $processedParts = array();$/;"	v
rule	library\Zend\Filter\Inflector.php	/^        $rule = (string) $rule;$/;"	v
ruleObject	library\Zend\Filter\Inflector.php	/^        $ruleObject = new $className();$/;"	v
ruleSet	library\Zend\Filter\Inflector.php	/^            $ruleSet = array($ruleSet);$/;"	v
spec	library\Zend\Filter\Inflector.php	/^            $spec = $this->_normalizeSpec($spec);$/;"	v
spec	library\Zend\Filter\Inflector.php	/^        $spec = $this->_normalizeSpec($spec);$/;"	v
temp	library\Zend\Filter\Inflector.php	/^            $temp    = array();$/;"	v
temp	library\Zend\Filter\Inflector.php	/^            $temp = $this->_rules[$spec];$/;"	v
Zend_Filter_Input	library\Zend\Filter\Input.php	/^class Zend_Filter_Input$/;"	c
args	library\Zend\Filter\Input.php	/^            $args = $classBaseName;$/;"	v
args	library\Zend\Filter\Input.php	/^        $args = array();$/;"	v
class	library\Zend\Filter\Input.php	/^        $class = new ReflectionClass($className);$/;"	v
classBaseName	library\Zend\Filter\Input.php	/^            $classBaseName = array_shift($args);$/;"	v
className	library\Zend\Filter\Input.php	/^        $className = $this->getPluginLoader($type)->load(ucfirst($classBaseName));$/;"	v
collectedMessages	library\Zend\Filter\Input.php	/^                        $collectedMessages = $this->_invalidMessages[$validatorRule[self::RULE]];$/;"	v
collectedMessages	library\Zend\Filter\Input.php	/^                        $collectedMessages = array();$/;"	v
data	library\Zend\Filter\Input.php	/^        $data = array();$/;"	v
element	library\Zend\Filter\Input.php	/^            $element = $this->_escapeRecursive($element);$/;"	v
emptyFieldsFound	library\Zend\Filter\Input.php	/^                        $emptyFieldsFound = true;$/;"	v
emptyFieldsFound	library\Zend\Filter\Input.php	/^                $emptyFieldsFound = false;$/;"	v
errorsList	library\Zend\Filter\Input.php	/^                $errorsList       = array();$/;"	v
escapeFilter	library\Zend\Filter\Input.php	/^            $escapeFilter = $this->_getFilter($escapeFilter);$/;"	v
failed	library\Zend\Filter\Input.php	/^                    $failed = true;$/;"	v
failed	library\Zend\Filter\Input.php	/^            $failed = false;$/;"	v
field	library\Zend\Filter\Input.php	/^                $field = array($field);$/;"	v
field	library\Zend\Filter\Input.php	/^            $field     = reset($data);$/;"	v
field	library\Zend\Filter\Input.php	/^        $field = $filterRule[self::FIELDS];$/;"	v
fieldName	library\Zend\Filter\Input.php	/^            $fieldName = reset($fieldNames);$/;"	v
fieldNames	library\Zend\Filter\Input.php	/^            $fieldNames = array_keys($data);$/;"	v
filter	library\Zend\Filter\Input.php	/^                        $filter = $this->_getFilter($filter);$/;"	v
filterList	library\Zend\Filter\Input.php	/^            $filterList = array();$/;"	v
filterRule	library\Zend\Filter\Input.php	/^                $filterRule = array($filterRule);$/;"	v
foundNotEmptyValidator	library\Zend\Filter\Input.php	/^                        $foundNotEmptyValidator = true;$/;"	v
foundNotEmptyValidator	library\Zend\Filter\Input.php	/^                $foundNotEmptyValidator = false;$/;"	v
interfaceName	library\Zend\Filter\Input.php	/^        $interfaceName = 'Zend_' . ucfirst($type) . '_Interface';$/;"	v
message	library\Zend\Filter\Input.php	/^                $message = $translator->translate($message);$/;"	v
message	library\Zend\Filter\Input.php	/^                $message = $translator->translate(self::MISSING_MESSAGE);$/;"	v
message	library\Zend\Filter\Input.php	/^                $message = $translator->translate(self::NOT_EMPTY_MESSAGE);$/;"	v
message	library\Zend\Filter\Input.php	/^        $message = $this->_defaults[self::MISSING_MESSAGE];$/;"	v
message	library\Zend\Filter\Input.php	/^        $message = $this->_defaults[self::NOT_EMPTY_MESSAGE];$/;"	v
message	library\Zend\Filter\Input.php	/^        $message = str_replace('%field%', $field, $message);$/;"	v
message	library\Zend\Filter\Input.php	/^        $message = str_replace('%rule%', $rule, $message);$/;"	v
messages	library\Zend\Filter\Input.php	/^                $messages         = array();$/;"	v
namespaces	library\Zend\Filter\Input.php	/^            $namespaces = array($namespaces);$/;"	v
notEmptyValidator	library\Zend\Filter\Input.php	/^                        $notEmptyValidator = $this->_getValidator('NotEmpty');$/;"	v
notEmptyValidator	library\Zend\Filter\Input.php	/^                $notEmptyValidator = $this->_getValidator('NotEmpty');$/;"	v
object	library\Zend\Filter\Input.php	/^            $object = $class->newInstance();$/;"	v
object	library\Zend\Filter\Input.php	/^            $object = $class->newInstanceArgs($args);$/;"	v
path	library\Zend\Filter\Input.php	/^            $path = str_replace('_', DIRECTORY_SEPARATOR, $prefix);$/;"	v
pathSegment	library\Zend\Filter\Input.php	/^                    $pathSegment   = 'Zend\/Filter\/';$/;"	v
pathSegment	library\Zend\Filter\Input.php	/^                    $pathSegment   = 'Zend\/Validate\/';$/;"	v
prefix	library\Zend\Filter\Input.php	/^            $prefix = $namespace;$/;"	v
prefixSegment	library\Zend\Filter\Input.php	/^                    $prefixSegment = 'Zend_Filter_';$/;"	v
prefixSegment	library\Zend\Filter\Input.php	/^                    $prefixSegment = 'Zend_Validate_';$/;"	v
preserveDefaultNotEmptyMessage	library\Zend\Filter\Input.php	/^        $preserveDefaultNotEmptyMessage = $this->_defaults[self::NOT_EMPTY_MESSAGE];$/;"	v
temp	library\Zend\Filter\Input.php	/^                                $temp = $value; \/\/ keep the original value$/;"	v
translator	library\Zend\Filter\Input.php	/^                $translator = Zend_Registry::get('Zend_Translate');$/;"	v
type	library\Zend\Filter\Input.php	/^        $type = strtolower($type);$/;"	v
unifiedMessages	library\Zend\Filter\Input.php	/^                $unifiedMessages = $validatorRule[self::MESSAGES];$/;"	v
validator	library\Zend\Filter\Input.php	/^                        $validator = $this->_getValidator($validator);$/;"	v
validatorChain	library\Zend\Filter\Input.php	/^                $validatorChain = $validatorRule[self::VALIDATOR_CHAIN];$/;"	v
validatorChain	library\Zend\Filter\Input.php	/^                $validatorChain = new Zend_Validate();$/;"	v
validatorList	library\Zend\Filter\Input.php	/^            $validatorList = array();$/;"	v
validatorRule	library\Zend\Filter\Input.php	/^                $validatorRule = array($validatorRule);$/;"	v
value	library\Zend\Filter\Input.php	/^                        $value = $validatorRule[self::MESSAGES][$key];$/;"	v
value	library\Zend\Filter\Input.php	/^                        $value = array($value);$/;"	v
Zend_Filter_Int	library\Zend\Filter\Int.php	/^class Zend_Filter_Int implements Zend_Filter_Interface$/;"	c
Zend_Filter_LocalizedToNormalized	library\Zend\Filter\LocalizedToNormalized.php	/^class Zend_Filter_LocalizedToNormalized implements Zend_Filter_Interface$/;"	c
options	library\Zend\Filter\LocalizedToNormalized.php	/^            $options = $options->toArray();$/;"	v
Zend_Filter_NormalizedToLocalized	library\Zend\Filter\NormalizedToLocalized.php	/^class Zend_Filter_NormalizedToLocalized implements Zend_Filter_Interface$/;"	c
date	library\Zend\Filter\NormalizedToLocalized.php	/^            $date = new Zend_Date($value, $this->_options['locale']);$/;"	v
options	library\Zend\Filter\NormalizedToLocalized.php	/^            $options = $options->toArray();$/;"	v
Zend_Filter_Null	library\Zend\Filter\Null.php	/^class Zend_Filter_Null implements Zend_Filter_Interface$/;"	c
detected	library\Zend\Filter\Null.php	/^            $detected = 0;$/;"	v
options	library\Zend\Filter\Null.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Filter\Null.php	/^            $options = $options['type'];$/;"	v
options	library\Zend\Filter\Null.php	/^            $options = $temp;$/;"	v
options	library\Zend\Filter\Null.php	/^            $options = func_get_args();$/;"	v
temp	library\Zend\Filter\Null.php	/^                $temp = array_shift($options);$/;"	v
temp	library\Zend\Filter\Null.php	/^            $temp    = array();$/;"	v
type	library\Zend\Filter\Null.php	/^                $type = array_search($type, $this->_constants);$/;"	v
type	library\Zend\Filter\Null.php	/^            $type = $detected;$/;"	v
type	library\Zend\Filter\Null.php	/^        $type = $this->getType();$/;"	v
Zend_Filter_PregReplace	library\Zend\Filter\PregReplace.php	/^class Zend_Filter_PregReplace implements Zend_Filter_Interface$/;"	c
options	library\Zend\Filter\PregReplace.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Filter\PregReplace.php	/^            $options = $temp;$/;"	v
options	library\Zend\Filter\PregReplace.php	/^            $options = func_get_args();$/;"	v
temp	library\Zend\Filter\PregReplace.php	/^            $temp    = array();$/;"	v
Zend_Filter_RealPath	library\Zend\Filter\RealPath.php	/^class Zend_Filter_RealPath implements Zend_Filter_Interface$/;"	c
cwd	library\Zend\Filter\RealPath.php	/^                $cwd   = getcwd();$/;"	v
drive	library\Zend\Filter\RealPath.php	/^                $drive = substr($cwd, 0, 2);$/;"	v
drive	library\Zend\Filter\RealPath.php	/^        $drive = '';$/;"	v
exists	library\Zend\Filter\RealPath.php	/^                $exists = (boolean) $exists['exists'];$/;"	v
exists	library\Zend\Filter\RealPath.php	/^            $exists = $exists->toArray();$/;"	v
parts	library\Zend\Filter\RealPath.php	/^        $parts = explode(DIRECTORY_SEPARATOR, $path);$/;"	v
path	library\Zend\Filter\RealPath.php	/^                    $path = substr($cwd, 3) . DIRECTORY_SEPARATOR . $path;$/;"	v
path	library\Zend\Filter\RealPath.php	/^            $path = getcwd() . DIRECTORY_SEPARATOR . $path;$/;"	v
path	library\Zend\Filter\RealPath.php	/^            $path = preg_replace('\/[\\\\\\\\\\\/]\/', DIRECTORY_SEPARATOR, $path);$/;"	v
path	library\Zend\Filter\RealPath.php	/^        $path = (string) $value;$/;"	v
realpath	library\Zend\Filter\RealPath.php	/^        $realpath = @realpath($path);$/;"	v
stack	library\Zend\Filter\RealPath.php	/^        $stack = array();$/;"	v
Zend_Filter_StringToLower	library\Zend\Filter\StringToLower.php	/^class Zend_Filter_StringToLower implements Zend_Filter_Interface$/;"	c
encoding	library\Zend\Filter\StringToLower.php	/^            $encoding = (string) $encoding;$/;"	v
options	library\Zend\Filter\StringToLower.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Filter\StringToLower.php	/^            $options = $temp;$/;"	v
options	library\Zend\Filter\StringToLower.php	/^            $options = func_get_args();$/;"	v
temp	library\Zend\Filter\StringToLower.php	/^            $temp    = array();$/;"	v
Zend_Filter_StringToUpper	library\Zend\Filter\StringToUpper.php	/^class Zend_Filter_StringToUpper implements Zend_Filter_Interface$/;"	c
encoding	library\Zend\Filter\StringToUpper.php	/^            $encoding = (string) $encoding;$/;"	v
options	library\Zend\Filter\StringToUpper.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Filter\StringToUpper.php	/^            $options = $temp;$/;"	v
options	library\Zend\Filter\StringToUpper.php	/^            $options = func_get_args();$/;"	v
temp	library\Zend\Filter\StringToUpper.php	/^            $temp    = array();$/;"	v
Zend_Filter_StringTrim	library\Zend\Filter\StringTrim.php	/^class Zend_Filter_StringTrim implements Zend_Filter_Interface$/;"	c
chars	library\Zend\Filter\StringTrim.php	/^        $chars = preg_replace($/;"	v
options	library\Zend\Filter\StringTrim.php	/^            $options          = $temp;$/;"	v
options	library\Zend\Filter\StringTrim.php	/^            $options          = func_get_args();$/;"	v
options	library\Zend\Filter\StringTrim.php	/^            $options = $options->toArray();$/;"	v
pattern	library\Zend\Filter\StringTrim.php	/^        $pattern = '^[' . $chars . ']*|[' . $chars . ']*$';$/;"	v
Zend_Filter_StripNewlines	library\Zend\Filter\StripNewlines.php	/^class Zend_Filter_StripNewlines implements Zend_Filter_Interface$/;"	c
Zend_Filter_StripTags	library\Zend\Filter\StripTags.php	/^class Zend_Filter_StripTags implements Zend_Filter_Interface$/;"	c
attributeDelimiter	library\Zend\Filter\StripTags.php	/^                $attributeDelimiter = empty($matches[2][$index]) ? $matches[4][$index] : $matches[2][$index];$/;"	v
attributeName	library\Zend\Filter\StripTags.php	/^                        $attributeName = strtolower($attribute);$/;"	v
attributeName	library\Zend\Filter\StripTags.php	/^                $attributeName      = strtolower($attributeName);$/;"	v
attributeName	library\Zend\Filter\StripTags.php	/^                $attributeName = strtolower($attribute);$/;"	v
attributeValue	library\Zend\Filter\StripTags.php	/^                $attributeValue     = empty($matches[3][$index]) ? $matches[5][$index] : $matches[3][$index];$/;"	v
attributesAllowed	library\Zend\Filter\StripTags.php	/^            $attributesAllowed = array($attributesAllowed);$/;"	v
dataFiltered	library\Zend\Filter\StripTags.php	/^        $dataFiltered = '';$/;"	v
element	library\Zend\Filter\StripTags.php	/^                    $element = array($element);$/;"	v
isMatch	library\Zend\Filter\StripTags.php	/^        $isMatch = preg_match('~(<\/?)(\\w*)((\/(?!>)|[^\/>])*)(\/?>)~', $tag, $matches);$/;"	v
options	library\Zend\Filter\StripTags.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Filter\StripTags.php	/^            $options = $temp;$/;"	v
options	library\Zend\Filter\StripTags.php	/^            $options = func_get_args();$/;"	v
pos	library\Zend\Filter\StripTags.php	/^            $pos   = strrpos($value, '<!--');$/;"	v
preTag	library\Zend\Filter\StripTags.php	/^                $preTag = str_replace('>', '', $preTag);$/;"	v
start	library\Zend\Filter\StripTags.php	/^            $start = substr($value, 0, $pos);$/;"	v
tag	library\Zend\Filter\StripTags.php	/^            $tag = $matches[2][$index];$/;"	v
tagAttributes	library\Zend\Filter\StripTags.php	/^            $tagAttributes = '';$/;"	v
tagAttributes	library\Zend\Filter\StripTags.php	/^        $tagAttributes = $matches[3];$/;"	v
tagAttributes	library\Zend\Filter\StripTags.php	/^        $tagAttributes = trim($tagAttributes);$/;"	v
tagEnd	library\Zend\Filter\StripTags.php	/^            $tagEnd = " $tagEnd";$/;"	v
tagEnd	library\Zend\Filter\StripTags.php	/^        $tagEnd        = $matches[5];$/;"	v
tagFiltered	library\Zend\Filter\StripTags.php	/^                $tagFiltered = $this->_filterTag($tag);$/;"	v
tagFiltered	library\Zend\Filter\StripTags.php	/^                $tagFiltered = '';$/;"	v
tagName	library\Zend\Filter\StripTags.php	/^                $tagName = strtolower($element);$/;"	v
tagName	library\Zend\Filter\StripTags.php	/^                $tagName = strtolower($index);$/;"	v
tagName	library\Zend\Filter\StripTags.php	/^        $tagName       = strtolower($matches[2]);$/;"	v
tagStart	library\Zend\Filter\StripTags.php	/^        $tagStart      = $matches[1];$/;"	v
tagsAllowed	library\Zend\Filter\StripTags.php	/^            $tagsAllowed = array($tagsAllowed);$/;"	v
value	library\Zend\Filter\StripTags.php	/^                $value = '';$/;"	v
value	library\Zend\Filter\StripTags.php	/^                $value = preg_replace('\/<(?:!(?:--[\\s\\S]*?--\\s*)?(>))\/s', '',  $value);$/;"	v
value	library\Zend\Filter\StripTags.php	/^            $value = $start . $value;$/;"	v
value	library\Zend\Filter\StripTags.php	/^            $value = substr($value, $pos);$/;"	v
value	library\Zend\Filter\StripTags.php	/^        $value = (string) $value;$/;"	v
Zend_Filter_Word_CamelCaseToDash	library\Zend\Filter\Word\CamelCaseToDash.php	/^class Zend_Filter_Word_CamelCaseToDash extends Zend_Filter_Word_CamelCaseToSeparator$/;"	c
Zend_Filter_Word_CamelCaseToSeparator	library\Zend\Filter\Word\CamelCaseToSeparator.php	/^class Zend_Filter_Word_CamelCaseToSeparator extends Zend_Filter_Word_Separator_Abstract$/;"	c
Zend_Filter_Word_CamelCaseToUnderscore	library\Zend\Filter\Word\CamelCaseToUnderscore.php	/^class Zend_Filter_Word_CamelCaseToUnderscore extends Zend_Filter_Word_CamelCaseToSeparator$/;"	c
Zend_Filter_Word_DashToCamelCase	library\Zend\Filter\Word\DashToCamelCase.php	/^class Zend_Filter_Word_DashToCamelCase extends Zend_Filter_Word_SeparatorToCamelCase$/;"	c
Zend_Filter_Word_DashToSeparator	library\Zend\Filter\Word\DashToSeparator.php	/^class Zend_Filter_Word_DashToSeparator extends Zend_Filter_Word_Separator_Abstract$/;"	c
Zend_Filter_Word_DashToUnderscore	library\Zend\Filter\Word\DashToUnderscore.php	/^class Zend_Filter_Word_DashToUnderscore extends Zend_Filter_Word_SeparatorToSeparator$/;"	c
Zend_Filter_Word_SeparatorToCamelCase	library\Zend\Filter\Word\SeparatorToCamelCase.php	/^class Zend_Filter_Word_SeparatorToCamelCase extends Zend_Filter_Word_Separator_Abstract$/;"	c
pregQuotedSeparator	library\Zend\Filter\Word\SeparatorToCamelCase.php	/^        $pregQuotedSeparator = preg_quote($this->_separator, '#');$/;"	v
Zend_Filter_Word_SeparatorToDash	library\Zend\Filter\Word\SeparatorToDash.php	/^class Zend_Filter_Word_SeparatorToDash extends Zend_Filter_Word_SeparatorToSeparator$/;"	c
Zend_Filter_Word_SeparatorToSeparator	library\Zend\Filter\Word\SeparatorToSeparator.php	/^class Zend_Filter_Word_SeparatorToSeparator extends Zend_Filter_PregReplace$/;"	c
Zend_Filter_Word_UnderscoreToCamelCase	library\Zend\Filter\Word\UnderscoreToCamelCase.php	/^class Zend_Filter_Word_UnderscoreToCamelCase extends Zend_Filter_Word_SeparatorToCamelCase$/;"	c
Zend_Filter_Word_UnderscoreToDash	library\Zend\Filter\Word\UnderscoreToDash.php	/^class Zend_Filter_Word_UnderscoreToDash extends Zend_Filter_Word_SeparatorToSeparator$/;"	c
Zend_Filter_Word_UnderscoreToSeparator	library\Zend\Filter\Word\UnderscoreToSeparator.php	/^class Zend_Filter_Word_UnderscoreToSeparator extends Zend_Filter_Word_SeparatorToSeparator$/;"	c
Zend_Form	library\Zend\Form.php	/^class Zend_Form implements Iterator, Countable, Zend_Validate_Interface$/;"	c
action	library\Zend\Form.php	/^            $action = '';$/;"	v
action	library\Zend\Form.php	/^        $action = $this->getAttrib('action');$/;"	v
add	library\Zend\Form.php	/^                $add = $this->getElement($element);$/;"	v
argc	library\Zend\Form.php	/^                $argc    = count($decoratorInfo);$/;"	v
argc	library\Zend\Form.php	/^                $argc  = count($spec);$/;"	v
argc	library\Zend\Form.php	/^                $argc = count($spec);$/;"	v
argc	library\Zend\Form.php	/^            $argc    = count($spec);$/;"	v
array	library\Zend\Form.php	/^        $array = $this->getElementsBelongTo();$/;"	v
arrayKey	library\Zend\Form.php	/^            $arrayKey = trim(substr($arrayPath, $arrayPos + 1), ']');$/;"	v
arrayKey	library\Zend\Form.php	/^            $arrayKey = trim(substr($arrayPath, 0, $arrayPos), ']');$/;"	v
arrayPath	library\Zend\Form.php	/^            $arrayPath = trim(substr($arrayPath, $arrayPos + 1), ']');$/;"	v
arrayPath	library\Zend\Form.php	/^            $arrayPath = trim(substr($arrayPath, 0, $arrayPos), ']');$/;"	v
belongTo	library\Zend\Form.php	/^                    $belongTo = $subForm->getElementsBelongTo();$/;"	v
cType	library\Zend\Form.php	/^                    $cType        = ucfirst(strtolower($type));$/;"	v
charset	library\Zend\Form.php	/^        $charset = '^a-zA-Z0-9_\\x7f-\\xff';$/;"	v
check	library\Zend\Form.php	/^                    $check = $this->_dissolveArrayValue($data, $belongsTo);$/;"	v
check	library\Zend\Form.php	/^                $check = $data;$/;"	v
check	library\Zend\Form.php	/^                $check = $this->_dissolveArrayValue($data, $belongsTo);$/;"	v
check	library\Zend\Form.php	/^                $check = $this->_dissolveArrayValue($defaults, $belongsTo);$/;"	v
check	library\Zend\Form.php	/^            $check = $data;$/;"	v
check	library\Zend\Form.php	/^            $check = $defaults;$/;"	v
class	library\Zend\Form.php	/^                $class = get_class($decorator);$/;"	v
class	library\Zend\Form.php	/^            $class = $options['displayGroupClass'];$/;"	v
class	library\Zend\Form.php	/^            $class = $this->getDefaultDisplayGroupClass();$/;"	v
class	library\Zend\Form.php	/^        $class = $this->getPluginLoader(self::DECORATOR)->load($name);$/;"	v
class	library\Zend\Form.php	/^        $class = $this->getPluginLoader(self::ELEMENT)->load($type);$/;"	v
clone	library\Zend\Form.php	/^            $clone    = clone $group;$/;"	v
content	library\Zend\Form.php	/^            $content = $decorator->render($content);$/;"	v
content	library\Zend\Form.php	/^        $content = '';$/;"	v
context	library\Zend\Form.php	/^        $context    = $data;$/;"	v
context	library\Zend\Form.php	/^        $context = $data;$/;"	v
count	library\Zend\Form.php	/^                $count = count($value);$/;"	v
customMessages	library\Zend\Form.php	/^        $customMessages = $this->_getErrorMessages();$/;"	v
data	library\Zend\Form.php	/^                    $data = $this->_dissolveArrayUnsetKey($data, $belongsTo, $key);$/;"	v
data	library\Zend\Form.php	/^                $data = $this->_dissolveArrayUnsetKey($data, $belongsTo, $key);$/;"	v
data	library\Zend\Form.php	/^            $data = $this->_dissolveArrayValue($data, $eBelongTo);$/;"	v
decorator	library\Zend\Form.php	/^                            $decorator  = array_shift($decoratorInfo);$/;"	v
decorator	library\Zend\Form.php	/^                    $decorator = $decoratorInfo['decorator'];$/;"	v
decorator	library\Zend\Form.php	/^                $decorator = $spec;$/;"	v
decorator	library\Zend\Form.php	/^                $decorator = array($/;"	v
decorator	library\Zend\Form.php	/^            $decorator = array($/;"	v
decorator	library\Zend\Form.php	/^            $decorator = new $class($options);$/;"	v
decorator	library\Zend\Form.php	/^            $decorator = new $class;$/;"	v
decorator	library\Zend\Form.php	/^        $decorator = $this->getDecorator($name);$/;"	v
decoratorName	library\Zend\Form.php	/^                    $decoratorName === 'PrepareElements') {$/;"	v
decoratorName	library\Zend\Form.php	/^            $decoratorName = substr($method, 6);$/;"	v
decoratorNames	library\Zend\Form.php	/^            $decoratorNames     = array_keys($this->_decorators);$/;"	v
decorators	library\Zend\Form.php	/^        $decorators = $this->getDecorators();$/;"	v
decoratorsExchange	library\Zend\Form.php	/^            $decoratorsExchange = array();$/;"	v
defaults	library\Zend\Form.php	/^                $defaults = $this->_dissolveArrayUnsetKey($defaults, $belongsTo, $name);$/;"	v
defaults	library\Zend\Form.php	/^            $defaults = $this->_dissolveArrayValue($defaults, $eBelongTo);$/;"	v
displayGroupDecorators	library\Zend\Form.php	/^            $displayGroupDecorators = $options['displayGroupDecorators'];$/;"	v
displayGroups	library\Zend\Form.php	/^        $displayGroups = array();$/;"	v
eBelongTo	library\Zend\Form.php	/^            $eBelongTo = $this->getElementsBelongTo();$/;"	v
eBelongTo	library\Zend\Form.php	/^        $eBelongTo  = null;$/;"	v
eBelongTo	library\Zend\Form.php	/^        $eBelongTo = null;$/;"	v
eMessages	library\Zend\Form.php	/^            $eMessages = $element->getMessages();$/;"	v
element	library\Zend\Form.php	/^                $element = $elementName;$/;"	v
element	library\Zend\Form.php	/^        $element = new $class($name, $options);$/;"	v
elementName	library\Zend\Form.php	/^                $elementName = $element->getName();$/;"	v
elementObjs	library\Zend\Form.php	/^                $elementObjs = $this->getElements();$/;"	v
elementObjs	library\Zend\Form.php	/^                $elementObjs = array();$/;"	v
elementObjs	library\Zend\Form.php	/^            $elementObjs = $this->getElements();$/;"	v
elements	library\Zend\Form.php	/^                            $elements = array_merge((array) $elements, $spec);$/;"	v
elements	library\Zend\Form.php	/^                        $elements = array_shift($spec);$/;"	v
elements	library\Zend\Form.php	/^                $elements = $spec['elements'];$/;"	v
elements	library\Zend\Form.php	/^            $elements = array();$/;"	v
elements	library\Zend\Form.php	/^        $elements = array();$/;"	v
elementsBelongTo	library\Zend\Form.php	/^            $elementsBelongTo = $options['elementsBelongTo'];$/;"	v
enctype	library\Zend\Form.php	/^            $enctype = self::ENCTYPE_URLENCODED;$/;"	v
endPos	library\Zend\Form.php	/^        $endPos = strlen($value) - 1;$/;"	v
errors	library\Zend\Form.php	/^            $errors = $this->_array_replace_recursive($errors, $merge);$/;"	v
errors	library\Zend\Form.php	/^            $errors = $this->_attachToArray($errors, $this->getElementsBelongTo());$/;"	v
errors	library\Zend\Form.php	/^        $errors = array();$/;"	v
forbidden	library\Zend\Form.php	/^        $forbidden = array($/;"	v
fromArrays	library\Zend\Form.php	/^        $fromArrays = array_slice(func_get_args(),1);$/;"	v
group	library\Zend\Form.php	/^        $group = array();$/;"	v
id	library\Zend\Form.php	/^            $id = substr($id, 0, strlen($id) - 2);$/;"	v
id	library\Zend\Form.php	/^        $id = $this->getFullyQualifiedName();$/;"	v
id	library\Zend\Form.php	/^        $id = str_replace('][', '-', $id);$/;"	v
id	library\Zend\Form.php	/^        $id = str_replace(array(']', '['), '-', $id);$/;"	v
id	library\Zend\Form.php	/^        $id = trim($id, '-');$/;"	v
index	library\Zend\Form.php	/^            $index = 0;$/;"	v
instance	library\Zend\Form.php	/^        $instance = $this->_getDecorator($decorator['decorator'], $decorator['options']);$/;"	v
items	library\Zend\Form.php	/^            $items = array();$/;"	v
items	library\Zend\Form.php	/^            $items = array_flip($items);$/;"	v
key	library\Zend\Form.php	/^                            $key = $belongsTo . '[' . $key . ']';$/;"	v
key	library\Zend\Form.php	/^                        $key = $belongsTo . '[' . $key . ']';$/;"	v
key	library\Zend\Form.php	/^        $key = (string) $key;$/;"	v
key	library\Zend\Form.php	/^        $key = key($this->_order);$/;"	v
len	library\Zend\Form.php	/^            $len = strlen($name);$/;"	v
loader	library\Zend\Form.php	/^                    $loader       = $this->getPluginLoader($type);$/;"	v
loader	library\Zend\Form.php	/^                $loader = $this->getPluginLoader($type);$/;"	v
loaderPaths	library\Zend\Form.php	/^            $loaderPaths = $loader->getPaths();$/;"	v
merge	library\Zend\Form.php	/^                        $merge = $this->_attachToArray($element->getValue(), $key);$/;"	v
merge	library\Zend\Form.php	/^                        $merge = array();$/;"	v
merge	library\Zend\Form.php	/^                    $merge = $this->_attachToArray($merge,$/;"	v
merge	library\Zend\Form.php	/^                    $merge = $this->_attachToArray($tmp, $form->getElementsBelongTo());$/;"	v
merge	library\Zend\Form.php	/^                    $merge = array($key => $merge);$/;"	v
merge	library\Zend\Form.php	/^                $merge = $this->_attachToArray($element->getValue(), $key);$/;"	v
merge	library\Zend\Form.php	/^                $merge = $this->_attachToArray($subForm->getErrors(null, true),$/;"	v
merge	library\Zend\Form.php	/^                $merge = $this->_attachToArray($subForm->getValues(true),$/;"	v
merge	library\Zend\Form.php	/^                $merge = array();$/;"	v
merge	library\Zend\Form.php	/^            $merge = $subForm->getMessages(null, true);$/;"	v
merge	library\Zend\Form.php	/^            $merge = array();$/;"	v
message	library\Zend\Form.php	/^            $message = "Exception caught by form: " . $e->getMessage()$/;"	v
messages	library\Zend\Form.php	/^                $messages = $this->_array_replace_recursive($messages, $merge);$/;"	v
messages	library\Zend\Form.php	/^            $messages = $this->_attachToArray($messages, $this->getElementsBelongTo());$/;"	v
messages	library\Zend\Form.php	/^        $messages   = $this->getErrorMessages();$/;"	v
messages	library\Zend\Form.php	/^        $messages = $this->getMessages();$/;"	v
messages	library\Zend\Form.php	/^        $messages = array();$/;"	v
method	library\Zend\Form.php	/^            $method = 'set' . $normalized;$/;"	v
method	library\Zend\Form.php	/^            $method = self::METHOD_POST;$/;"	v
method	library\Zend\Form.php	/^        $method = strtolower($method);$/;"	v
name	library\Zend\Form.php	/^                                $name = array_shift($spec);$/;"	v
name	library\Zend\Form.php	/^                        $name  = array_shift($spec);$/;"	v
name	library\Zend\Form.php	/^                        $name = $spec['name'];$/;"	v
name	library\Zend\Form.php	/^                        $name = array_shift($spec);$/;"	v
name	library\Zend\Form.php	/^                    $name = $spec['name'];$/;"	v
name	library\Zend\Form.php	/^                $name = $element->getName();$/;"	v
name	library\Zend\Form.php	/^                $name = $key;$/;"	v
name	library\Zend\Form.php	/^            $name      = $decorator;$/;"	v
name	library\Zend\Form.php	/^            $name = $group->getName();$/;"	v
name	library\Zend\Form.php	/^            $name = $this->getName();$/;"	v
name	library\Zend\Form.php	/^            $name = get_class($decorator);$/;"	v
name	library\Zend\Form.php	/^            $name = null;$/;"	v
name	library\Zend\Form.php	/^            $name= (string) $key;$/;"	v
name	library\Zend\Form.php	/^        $name = $this->filterName($array, true);$/;"	v
name	library\Zend\Form.php	/^        $name = $this->filterName($name);$/;"	v
name	library\Zend\Form.php	/^        $name = (string) $name;$/;"	v
name	library\Zend\Form.php	/^        $name = substr($value, $start, $endPos - $start);$/;"	v
newName	library\Zend\Form.php	/^            $newName            = get_class($instance);$/;"	v
normalized	library\Zend\Form.php	/^            $normalized = ucfirst($key);$/;"	v
oldName	library\Zend\Form.php	/^            $oldName === $form->getElementsBelongTo()) {$/;"	v
options	library\Zend\Form.php	/^                                $options = array_shift($spec);$/;"	v
options	library\Zend\Form.php	/^                            $options = array_shift($decoratorInfo);$/;"	v
options	library\Zend\Form.php	/^                            $options = array_shift($spec);$/;"	v
options	library\Zend\Form.php	/^                        $options = $decoratorInfo['options'];$/;"	v
options	library\Zend\Form.php	/^                        $options = $spec['options'];$/;"	v
options	library\Zend\Form.php	/^                        $options = array_shift($spec);$/;"	v
options	library\Zend\Form.php	/^                    $options = $options->toArray();$/;"	v
options	library\Zend\Form.php	/^                    $options = $spec['options'];$/;"	v
options	library\Zend\Form.php	/^                    $options = array('decorators' => $this->_elementDecorators);$/;"	v
options	library\Zend\Form.php	/^                $options = array();$/;"	v
options	library\Zend\Form.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Form.php	/^            $options = array($/;"	v
options	library\Zend\Form.php	/^            $options = array('prefixPath' => $prefixPaths);$/;"	v
options	library\Zend\Form.php	/^            $options = array();$/;"	v
order	library\Zend\Form.php	/^                        $order = array_shift($spec);$/;"	v
order	library\Zend\Form.php	/^                $order = null;$/;"	v
order	library\Zend\Form.php	/^            $order              = array_flip($decoratorNames);$/;"	v
order	library\Zend\Form.php	/^            $order = isset($order) ? $order : count($ordered);$/;"	v
ordered	library\Zend\Form.php	/^        $ordered = array();$/;"	v
origName	library\Zend\Form.php	/^        $origName = $this->getElementsBelongTo();$/;"	v
path	library\Zend\Form.php	/^                    $path   = array_shift($value);$/;"	v
path	library\Zend\Form.php	/^                $path   = rtrim($path, DIRECTORY_SEPARATOR);$/;"	v
path	library\Zend\Form.php	/^        $path  = trim(strtr((string)$arrayPath, array('[' => '\/', ']' => '')), '\/');$/;"	v
pathSegment	library\Zend\Form.php	/^                    $pathSegment   = 'Form\/Decorator';$/;"	v
pathSegment	library\Zend\Form.php	/^                    $pathSegment   = 'Form\/Element';$/;"	v
pluginPath	library\Zend\Form.php	/^                    $pluginPath   = $path . DIRECTORY_SEPARATOR . $cType . DIRECTORY_SEPARATOR;$/;"	v
pluginPrefix	library\Zend\Form.php	/^                    $pluginPrefix = $prefix . '_' . $cType;$/;"	v
prefix	library\Zend\Form.php	/^                    $prefix = array_shift($value);$/;"	v
prefix	library\Zend\Form.php	/^                $prefix = rtrim($prefix, '_');$/;"	v
prefixPaths	library\Zend\Form.php	/^                $prefixPaths = array_merge($prefixPaths, $this->_elementPrefixPaths);$/;"	v
prefixPaths	library\Zend\Form.php	/^            $prefixPaths              = array();$/;"	v
prefixPaths	library\Zend\Form.php	/^            $prefixPaths = array_merge($prefixPaths, $this->_elementPrefixPaths);$/;"	v
prefixPaths	library\Zend\Form.php	/^        $prefixPaths              = array();$/;"	v
prefixSegment	library\Zend\Form.php	/^                    $prefixSegment = 'Form_Decorator';$/;"	v
prefixSegment	library\Zend\Form.php	/^                    $prefixSegment = 'Form_Element';$/;"	v
return	library\Zend\Form.php	/^            $return = $this->render();$/;"	v
sameName	library\Zend\Form.php	/^            $sameName = true;$/;"	v
sameName	library\Zend\Form.php	/^        $sameName = false;$/;"	v
seed	library\Zend\Form.php	/^                    $seed = array_shift($args);$/;"	v
seed	library\Zend\Form.php	/^                $seed = '';$/;"	v
segs	library\Zend\Form.php	/^        $segs  = ('' !== $path) ? explode('\/', $path) : array();$/;"	v
start	library\Zend\Form.php	/^        $start = strrpos($value, '[') + 1;$/;"	v
subForm	library\Zend\Form.php	/^                        $subForm = array_shift($spec);$/;"	v
subForms	library\Zend\Form.php	/^        $subForms = array();$/;"	v
suborder	library\Zend\Form.php	/^                    $suborder = $element->getOrder();$/;"	v
suborder	library\Zend\Form.php	/^                    $suborder = (null !== $suborder) ? $suborder : count($subordered);$/;"	v
subordered	library\Zend\Form.php	/^                $subordered = array();$/;"	v
tmp	library\Zend\Form.php	/^                $tmp = $form->getValidValues($data, true);$/;"	v
tmp	library\Zend\Form.php	/^                $tmp = $form->getValidValues($data[$key]);$/;"	v
translator	library\Zend\Form.php	/^                $translator = Zend_Registry::get('Zend_Translate');$/;"	v
translator	library\Zend\Form.php	/^        $translator = $this->getTranslator();$/;"	v
type	library\Zend\Form.php	/^                            $type = array_shift($spec);$/;"	v
type	library\Zend\Form.php	/^                        $type = $paths['type'];$/;"	v
type	library\Zend\Form.php	/^                    $type = $spec['type'];$/;"	v
type	library\Zend\Form.php	/^                $type = null;$/;"	v
type	library\Zend\Form.php	/^            $type = get_class($value);$/;"	v
type	library\Zend\Form.php	/^            $type = gettype($value);$/;"	v
type	library\Zend\Form.php	/^        $type = strtoupper($type);$/;"	v
unset	library\Zend\Form.php	/^            $unset =& $unset[$seg];$/;"	v
unset	library\Zend\Form.php	/^        $unset =& $array;$/;"	v
valid	library\Zend\Form.php	/^                $valid = $element->isValid($check[$key], $context) && $valid;$/;"	v
valid	library\Zend\Form.php	/^                $valid = $element->isValid(null, $context) && $valid;$/;"	v
valid	library\Zend\Form.php	/^                $valid = $form->isValid($data) && $valid;$/;"	v
valid	library\Zend\Form.php	/^                $valid = $form->isValid($data[$key]) && $valid;$/;"	v
valid	library\Zend\Form.php	/^                $valid = $form->isValidPartial($data) && $valid;$/;"	v
valid	library\Zend\Form.php	/^                $valid = $form->isValidPartial($data[$key]) && $valid;$/;"	v
valid	library\Zend\Form.php	/^        $valid      = true;$/;"	v
value	library\Zend\Form.php	/^                $value = $value[$arrayKey];$/;"	v
value	library\Zend\Form.php	/^            $value = $value[$arrayPath];$/;"	v
value	library\Zend\Form.php	/^            $value = array($arrayKey => $value);$/;"	v
value	library\Zend\Form.php	/^        $value = array($arrayPath => $value);$/;"	v
values	library\Zend\Form.php	/^                        $values = $this->_array_replace_recursive($values, $merge);$/;"	v
values	library\Zend\Form.php	/^                $values = $this->_array_replace_recursive($values, $merge);$/;"	v
values	library\Zend\Form.php	/^            $values = $this->_array_replace_recursive($values, $merge);$/;"	v
values	library\Zend\Form.php	/^            $values = $this->_attachToArray($values, $this->getElementsBelongTo());$/;"	v
values	library\Zend\Form.php	/^        $values = array();$/;"	v
viewRenderer	library\Zend\Form.php	/^            $viewRenderer = Zend_Controller_Action_HelperBroker::getStaticHelper('viewRenderer');$/;"	v
key	library\Zend\Form\Decorator\Abstract.php	/^        $key = (string) $key;$/;"	v
placement	library\Zend\Form\Decorator\Abstract.php	/^                    $placement = $this->_placement = $placementOpt;$/;"	v
placement	library\Zend\Form\Decorator\Abstract.php	/^                    $placement = $this->_placement = null;$/;"	v
placement	library\Zend\Form\Decorator\Abstract.php	/^        $placement = $this->_placement;$/;"	v
placementOpt	library\Zend\Form\Decorator\Abstract.php	/^            $placementOpt = strtoupper($placementOpt);$/;"	v
separator	library\Zend\Form\Decorator\Abstract.php	/^            $separator = $this->_separator = (string) $separatorOpt;$/;"	v
separator	library\Zend\Form\Decorator\Abstract.php	/^        $separator = $this->_separator;$/;"	v
Zend_Form_Decorator_Callback	library\Zend\Form\Decorator\Callback.php	/^class Zend_Form_Decorator_Callback extends Zend_Form_Decorator_Abstract$/;"	c
callback	library\Zend\Form\Decorator\Callback.php	/^        $callback = $this->getCallback();$/;"	v
placement	library\Zend\Form\Decorator\Callback.php	/^        $placement = $this->getPlacement();$/;"	v
response	library\Zend\Form\Decorator\Callback.php	/^        $response = call_user_func($callback, $content, $this->getElement(), $this->getOptions());$/;"	v
separator	library\Zend\Form\Decorator\Callback.php	/^        $separator = $this->getSeparator();$/;"	v
Zend_Form_Decorator_Captcha	library\Zend\Form\Decorator\Captcha.php	/^class Zend_Form_Decorator_Captcha extends Zend_Form_Decorator_Abstract$/;"	c
captcha	library\Zend\Form\Decorator\Captcha.php	/^        $captcha = $element->getCaptcha();$/;"	v
content	library\Zend\Form\Decorator\Captcha.php	/^                $content = $content . $separator . $markup;$/;"	v
content	library\Zend\Form\Decorator\Captcha.php	/^                $content = $markup . $separator .  $content;$/;"	v
element	library\Zend\Form\Decorator\Captcha.php	/^        $element = $this->getElement();$/;"	v
markup	library\Zend\Form\Decorator\Captcha.php	/^        $markup  = $captcha->render($view, $element);$/;"	v
placement	library\Zend\Form\Decorator\Captcha.php	/^        $placement = $this->getPlacement();$/;"	v
separator	library\Zend\Form\Decorator\Captcha.php	/^        $separator = $this->getSeparator();$/;"	v
view	library\Zend\Form\Decorator\Captcha.php	/^        $view    = $element->getView();$/;"	v
Zend_Form_Decorator_Captcha_ReCaptcha	library\Zend\Form\Decorator\Captcha\ReCaptcha.php	/^class Zend_Form_Decorator_Captcha_ReCaptcha extends Zend_Form_Decorator_Abstract$/;"	c
captcha	library\Zend\Form\Decorator\Captcha\ReCaptcha.php	/^        $captcha       = $element->getCaptcha();$/;"	v
challengeId	library\Zend\Form\Decorator\Captcha\ReCaptcha.php	/^        $challengeId   = $id . '-challenge';$/;"	v
challengeName	library\Zend\Form\Decorator\Captcha\ReCaptcha.php	/^        $challengeName = empty($name) ? 'recaptcha_challenge_field' : $name . '[recaptcha_challenge_field]';$/;"	v
content	library\Zend\Form\Decorator\Captcha\ReCaptcha.php	/^                $content = $content . $separator . $hidden . $markup . $js;$/;"	v
content	library\Zend\Form\Decorator\Captcha\ReCaptcha.php	/^                $content = $hidden . $markup . $js . $separator . $content;$/;"	v
element	library\Zend\Form\Decorator\Captcha\ReCaptcha.php	/^        $element = $this->getElement();$/;"	v
hidden	library\Zend\Form\Decorator\Captcha\ReCaptcha.php	/^        $hidden = $view->formHidden(array($/;"	v
id	library\Zend\Form\Decorator\Captcha\ReCaptcha.php	/^        $id            = $element->getId();$/;"	v
js	library\Zend\Form\Decorator\Captcha\ReCaptcha.php	/^        $js =<<<EOJ$/;"	v
markup	library\Zend\Form\Decorator\Captcha\ReCaptcha.php	/^        $markup        = $captcha->render($view, $element);$/;"	v
name	library\Zend\Form\Decorator\Captcha\ReCaptcha.php	/^        $name          = $element->getBelongsTo();$/;"	v
placement	library\Zend\Form\Decorator\Captcha\ReCaptcha.php	/^        $placement     = $this->getPlacement();$/;"	v
responseId	library\Zend\Form\Decorator\Captcha\ReCaptcha.php	/^        $responseId    = $id . '-response';$/;"	v
responseName	library\Zend\Form\Decorator\Captcha\ReCaptcha.php	/^        $responseName  = empty($name) ? 'recaptcha_response_field'  : $name . '[recaptcha_response_field]';$/;"	v
separator	library\Zend\Form\Decorator\Captcha\ReCaptcha.php	/^        $separator     = $this->getSeparator();$/;"	v
view	library\Zend\Form\Decorator\Captcha\ReCaptcha.php	/^        $view    = $element->getView();$/;"	v
windowOnLoad	library\Zend\Form\Decorator\Captcha\ReCaptcha.php	/^function windowOnLoad(fn) {$/;"	f
Zend_Form_Decorator_Captcha_Word	library\Zend\Form\Decorator\Captcha\Word.php	/^class Zend_Form_Decorator_Captcha_Word extends Zend_Form_Decorator_Abstract$/;"	c
content	library\Zend\Form\Decorator\Captcha\Word.php	/^                $content = $content . $separator . $hidden . $separator . $text;$/;"	v
content	library\Zend\Form\Decorator\Captcha\Word.php	/^                $content = $hidden . $separator . $text . $separator . $content;$/;"	v
element	library\Zend\Form\Decorator\Captcha\Word.php	/^        $element = $this->getElement();$/;"	v
hidden	library\Zend\Form\Decorator\Captcha\Word.php	/^        $hidden = $view->formHidden($hiddenName, $element->getValue(), $element->getAttribs());$/;"	v
hiddenName	library\Zend\Form\Decorator\Captcha\Word.php	/^        $hiddenName = $name . '[id]';$/;"	v
label	library\Zend\Form\Decorator\Captcha\Word.php	/^        $label = $element->getDecorator("Label");$/;"	v
name	library\Zend\Form\Decorator\Captcha\Word.php	/^        $name = $element->getFullyQualifiedName();$/;"	v
placement	library\Zend\Form\Decorator\Captcha\Word.php	/^        $placement = $this->getPlacement();$/;"	v
separator	library\Zend\Form\Decorator\Captcha\Word.php	/^        $separator = $this->getSeparator();$/;"	v
text	library\Zend\Form\Decorator\Captcha\Word.php	/^        $text   = $view->formText($textName, '', $element->getAttribs());$/;"	v
textName	library\Zend\Form\Decorator\Captcha\Word.php	/^        $textName   = $name . '[input]';$/;"	v
view	library\Zend\Form\Decorator\Captcha\Word.php	/^        $view    = $element->getView();$/;"	v
Zend_Form_Decorator_Description	library\Zend\Form\Decorator\Description.php	/^class Zend_Form_Decorator_Description extends Zend_Form_Decorator_Abstract$/;"	c
class	library\Zend\Form\Decorator\Description.php	/^            $class = 'hint';$/;"	v
class	library\Zend\Form\Decorator\Description.php	/^        $class     = $this->getClass();$/;"	v
class	library\Zend\Form\Decorator\Description.php	/^        $class = $this->getOption('class');$/;"	v
decorator	library\Zend\Form\Decorator\Description.php	/^            $decorator = new Zend_Form_Decorator_HtmlTag($options);$/;"	v
description	library\Zend\Form\Decorator\Description.php	/^            $description = $decorator->render($description);$/;"	v
description	library\Zend\Form\Decorator\Description.php	/^            $description = $translator->translate($description);$/;"	v
description	library\Zend\Form\Decorator\Description.php	/^            $description = $view->escape($description);$/;"	v
description	library\Zend\Form\Decorator\Description.php	/^        $description = $element->getDescription();$/;"	v
description	library\Zend\Form\Decorator\Description.php	/^        $description = trim($description);$/;"	v
element	library\Zend\Form\Decorator\Description.php	/^        $element = $this->getElement();$/;"	v
escape	library\Zend\Form\Decorator\Description.php	/^        $escape    = $this->getEscape();$/;"	v
options	library\Zend\Form\Decorator\Description.php	/^        $options   = $this->getOptions();$/;"	v
placement	library\Zend\Form\Decorator\Description.php	/^        $placement = $this->getPlacement();$/;"	v
separator	library\Zend\Form\Decorator\Description.php	/^        $separator = $this->getSeparator();$/;"	v
tag	library\Zend\Form\Decorator\Description.php	/^                $tag = 'p';$/;"	v
tag	library\Zend\Form\Decorator\Description.php	/^            $tag = $this->getOption('tag');$/;"	v
tag	library\Zend\Form\Decorator\Description.php	/^        $tag       = $this->getTag();$/;"	v
view	library\Zend\Form\Decorator\Description.php	/^        $view    = $element->getView();$/;"	v
Zend_Form_Decorator_DtDdWrapper	library\Zend\Form\Decorator\DtDdWrapper.php	/^class Zend_Form_Decorator_DtDdWrapper extends Zend_Form_Decorator_Abstract$/;"	c
dtLabel	library\Zend\Form\Decorator\DtDdWrapper.php	/^            $dtLabel = '&#160;';$/;"	v
dtLabel	library\Zend\Form\Decorator\DtDdWrapper.php	/^        $dtLabel = $this->getOption('dtLabel');$/;"	v
elementName	library\Zend\Form\Decorator\DtDdWrapper.php	/^        $elementName = $this->getElement()->getName();$/;"	v
Zend_Form_Decorator_Errors	library\Zend\Form\Decorator\Errors.php	/^class Zend_Form_Decorator_Errors extends Zend_Form_Decorator_Abstract$/;"	c
element	library\Zend\Form\Decorator\Errors.php	/^        $element = $this->getElement();$/;"	v
errors	library\Zend\Form\Decorator\Errors.php	/^        $errors    = $view->formErrors($errors, $this->getOptions());$/;"	v
errors	library\Zend\Form\Decorator\Errors.php	/^        $errors = $element->getMessages();$/;"	v
placement	library\Zend\Form\Decorator\Errors.php	/^        $placement = $this->getPlacement();$/;"	v
separator	library\Zend\Form\Decorator\Errors.php	/^        $separator = $this->getSeparator();$/;"	v
view	library\Zend\Form\Decorator\Errors.php	/^        $view    = $element->getView();$/;"	v
Zend_Form_Decorator_Exception	library\Zend\Form\Decorator\Exception.php	/^class Zend_Form_Decorator_Exception extends Zend_Form_Exception$/;"	c
Zend_Form_Decorator_Fieldset	library\Zend\Form\Decorator\Fieldset.php	/^class Zend_Form_Decorator_Fieldset extends Zend_Form_Decorator_Abstract$/;"	c
attribs	library\Zend\Form\Decorator\Fieldset.php	/^            $attribs = $element->getAttribs();$/;"	v
attribs	library\Zend\Form\Decorator\Fieldset.php	/^        $attribs = $this->getOptions();$/;"	v
element	library\Zend\Form\Decorator\Fieldset.php	/^        $element = $this->getElement();$/;"	v
id	library\Zend\Form\Decorator\Fieldset.php	/^        $id      = (string)$element->getId();$/;"	v
legend	library\Zend\Form\Decorator\Fieldset.php	/^                $legend = $element->getLegend();$/;"	v
legend	library\Zend\Form\Decorator\Fieldset.php	/^                $legend = $translator->translate($legend);$/;"	v
legend	library\Zend\Form\Decorator\Fieldset.php	/^        $legend  = $this->getLegend();$/;"	v
legend	library\Zend\Form\Decorator\Fieldset.php	/^        $legend = $this->_legend;$/;"	v
name	library\Zend\Form\Decorator\Fieldset.php	/^        $name    = $element->getFullyQualifiedName();$/;"	v
options	library\Zend\Form\Decorator\Fieldset.php	/^            $options = array_merge($attribs, $options);$/;"	v
options	library\Zend\Form\Decorator\Fieldset.php	/^        $options = parent::getOptions();$/;"	v
testAttrib	library\Zend\Form\Decorator\Fieldset.php	/^            $testAttrib = strtolower($attrib);$/;"	v
view	library\Zend\Form\Decorator\Fieldset.php	/^        $view    = $element->getView();$/;"	v
Zend_Form_Decorator_File	library\Zend\Form\Decorator\File.php	/^class Zend_Form_Decorator_File$/;"	c
attribs	library\Zend\Form\Decorator\File.php	/^            $attribs = array_merge($attribs, $element->getAttribs());$/;"	v
attribs	library\Zend\Form\Decorator\File.php	/^        $attribs   = $this->getAttribs();$/;"	v
attribs	library\Zend\Form\Decorator\File.php	/^        $attribs   = $this->getOptions();$/;"	v
count	library\Zend\Form\Decorator\File.php	/^            $count = $element->getMultiFile();$/;"	v
element	library\Zend\Form\Decorator\File.php	/^        $element = $this->getElement();$/;"	v
htmlAttribs	library\Zend\Form\Decorator\File.php	/^                $htmlAttribs        = $attribs;$/;"	v
markup	library\Zend\Form\Decorator\File.php	/^        $markup    = array();$/;"	v
markup	library\Zend\Form\Decorator\File.php	/^        $markup = implode($separator, $markup);$/;"	v
name	library\Zend\Form\Decorator\File.php	/^        $name      = $element->getName();$/;"	v
placement	library\Zend\Form\Decorator\File.php	/^        $placement = $this->getPlacement();$/;"	v
separator	library\Zend\Form\Decorator\File.php	/^        $separator = $this->getSeparator();$/;"	v
size	library\Zend\Form\Decorator\File.php	/^        $size      = $element->getMaxFileSize();$/;"	v
view	library\Zend\Form\Decorator\File.php	/^        $view = $element->getView();$/;"	v
Zend_Form_Decorator_Form	library\Zend\Form\Decorator\Form.php	/^class Zend_Form_Decorator_Form extends Zend_Form_Decorator_Abstract$/;"	c
attribs	library\Zend\Form\Decorator\Form.php	/^        $attribs       = $this->getOptions();$/;"	v
form	library\Zend\Form\Decorator\Form.php	/^        $form    = $this->getElement();$/;"	v
helper	library\Zend\Form\Decorator\Form.php	/^        $helper        = $this->getHelper();$/;"	v
method	library\Zend\Form\Decorator\Form.php	/^                $method = $element->getMethod();$/;"	v
name	library\Zend\Form\Decorator\Form.php	/^        $name          = $form->getFullyQualifiedName();$/;"	v
view	library\Zend\Form\Decorator\Form.php	/^        $view    = $form->getView();$/;"	v
Zend_Form_Decorator_FormElements	library\Zend\Form\Decorator\FormElements.php	/^class Zend_Form_Decorator_FormElements extends Zend_Form_Decorator_Abstract$/;"	c
arrayName	library\Zend\Form\Decorator\FormElements.php	/^        $arrayName = substr($belongsTo, 0, $endOfArrayName);$/;"	v
belongsTo	library\Zend\Form\Decorator\FormElements.php	/^        $belongsTo      = ($form instanceof Zend_Form) ? $form->getElementsBelongTo() : null;$/;"	v
elementContent	library\Zend\Form\Decorator\FormElements.php	/^        $elementContent = '';$/;"	v
elementContent	library\Zend\Form\Decorator\FormElements.php	/^        $elementContent = implode($separator, $items);$/;"	v
endOfArrayName	library\Zend\Form\Decorator\FormElements.php	/^        $endOfArrayName = strpos($belongsTo, '[');$/;"	v
form	library\Zend\Form\Decorator\FormElements.php	/^        $form    = $this->getElement();$/;"	v
items	library\Zend\Form\Decorator\FormElements.php	/^        $items          = array();$/;"	v
name	library\Zend\Form\Decorator\FormElements.php	/^                    $name = $this->mergeBelongsTo($belongsTo, $item->getElementsBelongTo());$/;"	v
separator	library\Zend\Form\Decorator\FormElements.php	/^        $separator      = $this->getSeparator();$/;"	v
translator	library\Zend\Form\Decorator\FormElements.php	/^        $translator     = $form->getTranslator();$/;"	v
view	library\Zend\Form\Decorator\FormElements.php	/^        $view           = $form->getView();$/;"	v
Zend_Form_Decorator_FormErrors	library\Zend\Form\Decorator\FormErrors.php	/^class Zend_Form_Decorator_FormErrors extends Zend_Form_Decorator_Abstract$/;"	c
content	library\Zend\Form\Decorator\FormErrors.php	/^        $content = '';$/;"	v
custom	library\Zend\Form\Decorator\FormErrors.php	/^        $custom = $form->getCustomMessages();$/;"	v
form	library\Zend\Form\Decorator\FormErrors.php	/^        $form = $this->getElement();$/;"	v
label	library\Zend\Form\Decorator\FormErrors.php	/^            $label = $element->getName();$/;"	v
label	library\Zend\Form\Decorator\FormErrors.php	/^        $label = $element->getLabel();$/;"	v
markup	library\Zend\Form\Decorator\FormErrors.php	/^                $markup = $this->_recurseForm($subitem, $view);$/;"	v
markup	library\Zend\Form\Decorator\FormErrors.php	/^        $markup = $this->_recurseForm($form, $view);$/;"	v
markup	library\Zend\Form\Decorator\FormErrors.php	/^        $markup = $this->getMarkupListStart()$/;"	v
messages	library\Zend\Form\Decorator\FormErrors.php	/^                $messages = $subitem->getMessages();$/;"	v
view	library\Zend\Form\Decorator\FormErrors.php	/^        $view = $form->getView();$/;"	v
Zend_Form_Decorator_HtmlTag	library\Zend\Form\Decorator\HtmlTag.php	/^class Zend_Form_Decorator_HtmlTag extends Zend_Form_Decorator_Abstract$/;"	c
attribs	library\Zend\Form\Decorator\HtmlTag.php	/^            $attribs = $this->getOptions();$/;"	v
attribs	library\Zend\Form\Decorator\HtmlTag.php	/^        $attribs = null;$/;"	v
closeOnly	library\Zend\Form\Decorator\HtmlTag.php	/^        $closeOnly = $this->getOption('closeOnly');$/;"	v
enc	library\Zend\Form\Decorator\HtmlTag.php	/^        $enc   = $this->_getEncoding();$/;"	v
html	library\Zend\Form\Decorator\HtmlTag.php	/^        $html = '<' . $tag;$/;"	v
key	library\Zend\Form\Decorator\HtmlTag.php	/^            $key = htmlspecialchars($key, ENT_COMPAT, $enc);$/;"	v
noAttribs	library\Zend\Form\Decorator\HtmlTag.php	/^        $noAttribs = $this->getOption('noAttribs');$/;"	v
openOnly	library\Zend\Form\Decorator\HtmlTag.php	/^        $openOnly  = $this->getOption('openOnly');$/;"	v
placement	library\Zend\Form\Decorator\HtmlTag.php	/^        $placement = $this->getPlacement();$/;"	v
tag	library\Zend\Form\Decorator\HtmlTag.php	/^        $tag       = $this->getTag();$/;"	v
val	library\Zend\Form\Decorator\HtmlTag.php	/^                    $val = $val['callback']($this);$/;"	v
val	library\Zend\Form\Decorator\HtmlTag.php	/^                    $val = implode(' ', $val);$/;"	v
val	library\Zend\Form\Decorator\HtmlTag.php	/^            $val    = htmlspecialchars($val, ENT_COMPAT, $enc);$/;"	v
xhtml	library\Zend\Form\Decorator\HtmlTag.php	/^        $xhtml = '';$/;"	v
Zend_Form_Decorator_Image	library\Zend\Form\Decorator\Image.php	/^class Zend_Form_Decorator_Image extends Zend_Form_Decorator_Abstract$/;"	c
attribs	library\Zend\Form\Decorator\Image.php	/^            $attribs = array_merge($attribs, $element->getAttribs());$/;"	v
attribs	library\Zend\Form\Decorator\Image.php	/^        $attribs       = $this->getAttribs();$/;"	v
attribs	library\Zend\Form\Decorator\Image.php	/^        $attribs = $this->getOptions();$/;"	v
decorator	library\Zend\Form\Decorator\Image.php	/^            $decorator = new Zend_Form_Decorator_HtmlTag();$/;"	v
element	library\Zend\Form\Decorator\Image.php	/^        $element = $this->getElement();$/;"	v
image	library\Zend\Form\Decorator\Image.php	/^            $image = $decorator->render($image);$/;"	v
image	library\Zend\Form\Decorator\Image.php	/^        $image = $view->formImage($name, $element->getImageValue(), $attribs);$/;"	v
name	library\Zend\Form\Decorator\Image.php	/^        $name          = $element->getFullyQualifiedName();$/;"	v
placement	library\Zend\Form\Decorator\Image.php	/^        $placement     = $this->getPlacement();$/;"	v
separator	library\Zend\Form\Decorator\Image.php	/^        $separator     = $this->getSeparator();$/;"	v
tag	library\Zend\Form\Decorator\Image.php	/^            $tag = $this->getOption('tag');$/;"	v
tag	library\Zend\Form\Decorator\Image.php	/^        $tag           = $this->getTag();$/;"	v
view	library\Zend\Form\Decorator\Image.php	/^        $view    = $element->getView();$/;"	v
Zend_Form_Decorator_Label	library\Zend\Form\Decorator\Label.php	/^class Zend_Form_Decorator_Label extends Zend_Form_Decorator_Abstract$/;"	c
class	library\Zend\Form\Decorator\Label.php	/^            $class = trim($class);$/;"	v
class	library\Zend\Form\Decorator\Label.php	/^        $class     = $this->getClass();$/;"	v
class	library\Zend\Form\Decorator\Label.php	/^        $class   = '';$/;"	v
decorator	library\Zend\Form\Decorator\Label.php	/^            $decorator = new Zend_Form_Decorator_HtmlTag();$/;"	v
decoratorClass	library\Zend\Form\Decorator\Label.php	/^        $decoratorClass = $this->getOption('class');$/;"	v
element	library\Zend\Form\Decorator\Label.php	/^        $element = $this->getElement();$/;"	v
head	library\Zend\Form\Decorator\Label.php	/^        $head = substr($method, 0, 3);$/;"	v
id	library\Zend\Form\Decorator\Label.php	/^                $id = $element->getId();$/;"	v
id	library\Zend\Form\Decorator\Label.php	/^        $id        = $this->getId();$/;"	v
id	library\Zend\Form\Decorator\Label.php	/^        $id = $this->getOption('id');$/;"	v
key	library\Zend\Form\Decorator\Label.php	/^                    $key = 'optional' . $position;$/;"	v
key	library\Zend\Form\Decorator\Label.php	/^                    $key = 'required' . $position;$/;"	v
label	library\Zend\Form\Decorator\Label.php	/^                $label = $optPrefix . $label . $optSuffix;$/;"	v
label	library\Zend\Form\Decorator\Label.php	/^                $label = $reqPrefix . $label . $reqSuffix;$/;"	v
label	library\Zend\Form\Decorator\Label.php	/^            $label = $decorator->render($label);$/;"	v
label	library\Zend\Form\Decorator\Label.php	/^            $label = $translator->translate($label);$/;"	v
label	library\Zend\Form\Decorator\Label.php	/^            $label = $view->formLabel($element->getFullyQualifiedName(), trim($label), $options);$/;"	v
label	library\Zend\Form\Decorator\Label.php	/^            $label = '&#160;';$/;"	v
label	library\Zend\Form\Decorator\Label.php	/^        $label     = $this->getLabel();$/;"	v
label	library\Zend\Form\Decorator\Label.php	/^        $label = $element->getLabel();$/;"	v
label	library\Zend\Form\Decorator\Label.php	/^        $label = trim($label);$/;"	v
optPrefix	library\Zend\Form\Decorator\Label.php	/^        $optPrefix = $this->getOptPrefix();$/;"	v
optSuffix	library\Zend\Form\Decorator\Label.php	/^        $optSuffix = $this->getOptSuffix();$/;"	v
options	library\Zend\Form\Decorator\Label.php	/^        $options   = $this->getOptions();$/;"	v
placement	library\Zend\Form\Decorator\Label.php	/^        $placement = $this->getPlacement();$/;"	v
position	library\Zend\Form\Decorator\Label.php	/^            $position = substr($method, -6);$/;"	v
reqPrefix	library\Zend\Form\Decorator\Label.php	/^        $reqPrefix = $this->getReqPrefix();$/;"	v
reqSuffix	library\Zend\Form\Decorator\Label.php	/^        $reqSuffix = $this->getReqSuffix();$/;"	v
separator	library\Zend\Form\Decorator\Label.php	/^        $separator = $this->getSeparator();$/;"	v
tag	library\Zend\Form\Decorator\Label.php	/^            $tag = $this->getOption('tag');$/;"	v
tag	library\Zend\Form\Decorator\Label.php	/^        $tag       = $this->getTag();$/;"	v
tagClass	library\Zend\Form\Decorator\Label.php	/^            $tagClass = $this->getOption('tagClass');$/;"	v
tagClass	library\Zend\Form\Decorator\Label.php	/^        $tagClass  = $this->getTagClass();$/;"	v
tail	library\Zend\Form\Decorator\Label.php	/^        $tail = substr($method, -6);$/;"	v
type	library\Zend\Form\Decorator\Label.php	/^            $type     = strtolower(substr($method, 3, 3));$/;"	v
type	library\Zend\Form\Decorator\Label.php	/^        $type  = $element->isRequired() ? 'required' : 'optional';$/;"	v
value	library\Zend\Form\Decorator\Label.php	/^                    $value = array_shift($args);$/;"	v
value	library\Zend\Form\Decorator\Label.php	/^            $value = $this->getOption($key);$/;"	v
view	library\Zend\Form\Decorator\Label.php	/^        $view    = $element->getView();$/;"	v
Zend_Form_Decorator_PrepareElements	library\Zend\Form\Decorator\PrepareElements.php	/^class Zend_Form_Decorator_PrepareElements extends Zend_Form_Decorator_FormElements$/;"	c
belongsTo	library\Zend\Form\Decorator\PrepareElements.php	/^        $belongsTo      = ($form instanceof Zend_Form) ? $form->getElementsBelongTo() : null;$/;"	v
elementContent	library\Zend\Form\Decorator\PrepareElements.php	/^        $elementContent = '';$/;"	v
form	library\Zend\Form\Decorator\PrepareElements.php	/^        $form = $this->getElement();$/;"	v
name	library\Zend\Form\Decorator\PrepareElements.php	/^                    $name = $this->mergeBelongsTo($belongsTo, $item->getElementsBelongTo());$/;"	v
separator	library\Zend\Form\Decorator\PrepareElements.php	/^        $separator      = $this->getSeparator();$/;"	v
translator	library\Zend\Form\Decorator\PrepareElements.php	/^        $translator     = $form->getTranslator();$/;"	v
view	library\Zend\Form\Decorator\PrepareElements.php	/^        $view           = $form->getView();$/;"	v
Zend_Form_Decorator_Tooltip	library\Zend\Form\Decorator\Tooltip.php	/^class Zend_Form_Decorator_Tooltip extends Zend_Form_Decorator_Abstract$/;"	c
title	library\Zend\Form\Decorator\Tooltip.php	/^                $title = $translator->translate($title);$/;"	v
Zend_Form_Decorator_ViewHelper	library\Zend\Form\Decorator\ViewHelper.php	/^class Zend_Form_Decorator_ViewHelper extends Zend_Form_Decorator_Abstract$/;"	c
attribs	library\Zend\Form\Decorator\ViewHelper.php	/^        $attribs       = $this->getElementAttribs();$/;"	v
attribs	library\Zend\Form\Decorator\ViewHelper.php	/^        $attribs = $element->getAttribs();$/;"	v
belongsTo	library\Zend\Form\Decorator\ViewHelper.php	/^                $belongsTo = preg_replace('\/\\[([^\\]]+)\\]\/', '-$1', $belongsTo);$/;"	v
element	library\Zend\Form\Decorator\ViewHelper.php	/^                $element = $this->getElement();$/;"	v
element	library\Zend\Form\Decorator\ViewHelper.php	/^        $element = $this->getElement();$/;"	v
elementContent	library\Zend\Form\Decorator\ViewHelper.php	/^        $elementContent = $view->$helper($name, $value, $attribs, $element->options);$/;"	v
helper	library\Zend\Form\Decorator\ViewHelper.php	/^        $helper        = $this->getHelper();$/;"	v
helperObject	library\Zend\Form\Decorator\ViewHelper.php	/^        $helperObject  = $view->getHelper($helper);$/;"	v
id	library\Zend\Form\Decorator\ViewHelper.php	/^                $id = $belongsTo . '-' . $id;$/;"	v
id	library\Zend\Form\Decorator\ViewHelper.php	/^        $id            = $element->getId();$/;"	v
id	library\Zend\Form\Decorator\ViewHelper.php	/^        $id = $element->getName();$/;"	v
name	library\Zend\Form\Decorator\ViewHelper.php	/^            $name = $belongsTo . '['$/;"	v
name	library\Zend\Form\Decorator\ViewHelper.php	/^        $name          = $element->getFullyQualifiedName();$/;"	v
name	library\Zend\Form\Decorator\ViewHelper.php	/^        $name = $element->getName();$/;"	v
options	library\Zend\Form\Decorator\ViewHelper.php	/^            $options = $this->getOptions();$/;"	v
separator	library\Zend\Form\Decorator\ViewHelper.php	/^        $separator     = $this->getSeparator();$/;"	v
type	library\Zend\Form\Decorator\ViewHelper.php	/^                            $type = substr($type, $pos + 1);$/;"	v
type	library\Zend\Form\Decorator\ViewHelper.php	/^                        $type = $element->getType();$/;"	v
value	library\Zend\Form\Decorator\ViewHelper.php	/^        $value         = $this->getValue($element);$/;"	v
view	library\Zend\Form\Decorator\ViewHelper.php	/^        $view = $element->getView();$/;"	v
Zend_Form_Decorator_ViewScript	library\Zend\Form\Decorator\ViewScript.php	/^class Zend_Form_Decorator_ViewScript extends Zend_Form_Decorator_Abstract$/;"	c
element	library\Zend\Form\Decorator\ViewScript.php	/^        $element = $this->getElement();$/;"	v
placement	library\Zend\Form\Decorator\ViewScript.php	/^        $placement = $this->getPlacement();$/;"	v
renderedContent	library\Zend\Form\Decorator\ViewScript.php	/^            $renderedContent = $view->partial($viewScript, $vars);$/;"	v
renderedContent	library\Zend\Form\Decorator\ViewScript.php	/^            $renderedContent = $view->partial($viewScript, $viewModule, $vars);$/;"	v
separator	library\Zend\Form\Decorator\ViewScript.php	/^        $separator = $this->getSeparator();$/;"	v
vars	library\Zend\Form\Decorator\ViewScript.php	/^        $vars              = $this->getOptions();$/;"	v
view	library\Zend\Form\Decorator\ViewScript.php	/^        $view    = $element->getView();$/;"	v
viewModule	library\Zend\Form\Decorator\ViewScript.php	/^        $viewModule = $this->getViewModule();$/;"	v
viewScript	library\Zend\Form\Decorator\ViewScript.php	/^        $viewScript = $this->getViewScript();$/;"	v
Zend_Form_DisplayGroup	library\Zend\Form\DisplayGroup.php	/^class Zend_Form_DisplayGroup implements Iterator,Countable$/;"	c
argc	library\Zend\Form\DisplayGroup.php	/^                $argc    = count($decoratorInfo);$/;"	v
class	library\Zend\Form\DisplayGroup.php	/^                $class = get_class($decorator);$/;"	v
class	library\Zend\Form\DisplayGroup.php	/^        $class = $this->getPluginLoader()->load($name);$/;"	v
content	library\Zend\Form\DisplayGroup.php	/^            $content = $decorator->render($content);$/;"	v
content	library\Zend\Form\DisplayGroup.php	/^        $content = '';$/;"	v
decorator	library\Zend\Form\DisplayGroup.php	/^                            $decorator  = array_shift($decoratorInfo);$/;"	v
decorator	library\Zend\Form\DisplayGroup.php	/^                    $decorator = $decoratorInfo['decorator'];$/;"	v
decorator	library\Zend\Form\DisplayGroup.php	/^                $decorator = $spec;$/;"	v
decorator	library\Zend\Form\DisplayGroup.php	/^                $decorator = array($/;"	v
decorator	library\Zend\Form\DisplayGroup.php	/^            $decorator = array($/;"	v
decorator	library\Zend\Form\DisplayGroup.php	/^            $decorator = new $class($options);$/;"	v
decorator	library\Zend\Form\DisplayGroup.php	/^            $decorator = new $class;$/;"	v
decorator	library\Zend\Form\DisplayGroup.php	/^        $decorator = $this->getDecorator($name);$/;"	v
decoratorName	library\Zend\Form\DisplayGroup.php	/^            $decoratorName = substr($method, 6);$/;"	v
decoratorNames	library\Zend\Form\DisplayGroup.php	/^            $decoratorNames     = array_keys($this->_decorators);$/;"	v
decorators	library\Zend\Form\DisplayGroup.php	/^        $decorators = $this->getDecorators();$/;"	v
decoratorsExchange	library\Zend\Form\DisplayGroup.php	/^            $decoratorsExchange = array();$/;"	v
elementOrder	library\Zend\Form\DisplayGroup.php	/^            $elementOrder = array();$/;"	v
forbidden	library\Zend\Form\DisplayGroup.php	/^        $forbidden = array($/;"	v
id	library\Zend\Form\DisplayGroup.php	/^            $id = substr($id, 0, strlen($id) - 2);$/;"	v
id	library\Zend\Form\DisplayGroup.php	/^        $id = $this->getFullyQualifiedName();$/;"	v
id	library\Zend\Form\DisplayGroup.php	/^        $id = str_replace('][', '-', $id);$/;"	v
id	library\Zend\Form\DisplayGroup.php	/^        $id = str_replace(array(']', '['), '-', $id);$/;"	v
id	library\Zend\Form\DisplayGroup.php	/^        $id = trim($id, '-');$/;"	v
index	library\Zend\Form\DisplayGroup.php	/^            $index = 0;$/;"	v
instance	library\Zend\Form\DisplayGroup.php	/^        $instance = $this->_getDecorator($decorator['decorator'], $decorator['options']);$/;"	v
items	library\Zend\Form\DisplayGroup.php	/^            $items = array();$/;"	v
items	library\Zend\Form\DisplayGroup.php	/^            $items = array_flip($items);$/;"	v
key	library\Zend\Form\DisplayGroup.php	/^        $key = (string) $key;$/;"	v
key	library\Zend\Form\DisplayGroup.php	/^        $key = key($this->_elementOrder);$/;"	v
len	library\Zend\Form\DisplayGroup.php	/^            $len = strlen($name);$/;"	v
method	library\Zend\Form\DisplayGroup.php	/^            $method = 'set' . $normalized;$/;"	v
name	library\Zend\Form\DisplayGroup.php	/^            $name      = $decorator;$/;"	v
name	library\Zend\Form\DisplayGroup.php	/^            $name = get_class($decorator);$/;"	v
name	library\Zend\Form\DisplayGroup.php	/^        $name = $this->filtername($name);$/;"	v
name	library\Zend\Form\DisplayGroup.php	/^        $name = (string) $name;$/;"	v
newName	library\Zend\Form\DisplayGroup.php	/^            $newName            = get_class($instance);$/;"	v
normalized	library\Zend\Form\DisplayGroup.php	/^            $normalized = ucfirst($key);$/;"	v
options	library\Zend\Form\DisplayGroup.php	/^                            $options = array_shift($decoratorInfo);$/;"	v
options	library\Zend\Form\DisplayGroup.php	/^                        $options = $decoratorInfo['options'];$/;"	v
options	library\Zend\Form\DisplayGroup.php	/^                $options = array();$/;"	v
order	library\Zend\Form\DisplayGroup.php	/^            $order              = array_flip($decoratorNames);$/;"	v
prefix	library\Zend\Form\DisplayGroup.php	/^                $prefix = null;$/;"	v
return	library\Zend\Form\DisplayGroup.php	/^            $return = $this->render();$/;"	v
sameName	library\Zend\Form\DisplayGroup.php	/^            $sameName = true;$/;"	v
sameName	library\Zend\Form\DisplayGroup.php	/^        $sameName = false;$/;"	v
seed	library\Zend\Form\DisplayGroup.php	/^                    $seed = array_shift($args);$/;"	v
seed	library\Zend\Form\DisplayGroup.php	/^                $seed = '';$/;"	v
viewRenderer	library\Zend\Form\DisplayGroup.php	/^            $viewRenderer = Zend_Controller_Action_HelperBroker::getStaticHelper('viewRenderer');$/;"	v
Zend_Form_Element	library\Zend\Form\Element.php	/^class Zend_Form_Element implements Zend_Validate_Interface$/;"	c
aggregateMessages	library\Zend\Form\Element.php	/^                $aggregateMessages = array();$/;"	v
argc	library\Zend\Form\Element.php	/^                $argc                = count($filterInfo);$/;"	v
argc	library\Zend\Form\Element.php	/^                $argc                = count($validatorInfo);$/;"	v
argc	library\Zend\Form\Element.php	/^                $argc    = count($decoratorInfo);$/;"	v
array	library\Zend\Form\Element.php	/^        $array = $this->filterName($array, true);$/;"	v
attribs	library\Zend\Form\Element.php	/^        $attribs = get_object_vars($this);$/;"	v
breakChainOnFailure	library\Zend\Form\Element.php	/^                            $breakChainOnFailure = array_shift($validatorInfo);$/;"	v
breakChainOnFailure	library\Zend\Form\Element.php	/^                        $breakChainOnFailure = $validatorInfo['breakChainOnFailure'];$/;"	v
breakChainOnFailure	library\Zend\Form\Element.php	/^                $breakChainOnFailure = false;$/;"	v
cType	library\Zend\Form\Element.php	/^                    $cType        = ucfirst(strtolower($type));$/;"	v
charset	library\Zend\Form\Element.php	/^        $charset = '^a-zA-Z0-9_\\x7f-\\xff';$/;"	v
class	library\Zend\Form\Element.php	/^        $class = $this->getPluginLoader(self::DECORATOR)->load($name);$/;"	v
content	library\Zend\Form\Element.php	/^            $content = $decorator->render($content);$/;"	v
content	library\Zend\Form\Element.php	/^        $content = '';$/;"	v
customMessages	library\Zend\Form\Element.php	/^        $customMessages = $this->_getErrorMessages();$/;"	v
decorator	library\Zend\Form\Element.php	/^                            $decorator  = array_shift($decoratorInfo);$/;"	v
decorator	library\Zend\Form\Element.php	/^                    $decorator = $decoratorInfo['decorator'];$/;"	v
decorator	library\Zend\Form\Element.php	/^                $decorator = $spec;$/;"	v
decorator	library\Zend\Form\Element.php	/^                $decorator = array($/;"	v
decorator	library\Zend\Form\Element.php	/^            $decorator = array($/;"	v
decorator	library\Zend\Form\Element.php	/^            $decorator = new $class($options);$/;"	v
decorator	library\Zend\Form\Element.php	/^            $decorator = new $class;$/;"	v
decoratorName	library\Zend\Form\Element.php	/^            $decoratorName = substr($method, 6);$/;"	v
decoratorNames	library\Zend\Form\Element.php	/^            $decoratorNames     = array_keys($this->_decorators);$/;"	v
decorators	library\Zend\Form\Element.php	/^        $decorators = $this->getDecorators();$/;"	v
decoratorsExchange	library\Zend\Form\Element.php	/^            $decoratorsExchange = array();$/;"	v
errors	library\Zend\Form\Element.php	/^                                $errors   = $messages;$/;"	v
errors	library\Zend\Form\Element.php	/^                                $errors   = array_merge($errors,   $validator->getErrors());$/;"	v
errors	library\Zend\Form\Element.php	/^                    $errors   = $messages;$/;"	v
errors	library\Zend\Form\Element.php	/^                    $errors   = array_keys($messages);$/;"	v
errors	library\Zend\Form\Element.php	/^                $errors   = array();$/;"	v
filter	library\Zend\Form\Element.php	/^                            $filter  = array_shift($filterInfo);$/;"	v
filter	library\Zend\Form\Element.php	/^                    $filter = $filterInfo['filter'];$/;"	v
filter	library\Zend\Form\Element.php	/^            $filter = $this->_loadFilter($value);$/;"	v
filter	library\Zend\Form\Element.php	/^            $filter = array($/;"	v
filterNames	library\Zend\Form\Element.php	/^            $filterNames  = array_keys($this->_filters);$/;"	v
filters	library\Zend\Form\Element.php	/^        $filters = array();$/;"	v
filtersExchange	library\Zend\Form\Element.php	/^            $filtersExchange = array();$/;"	v
getId	library\Zend\Form\Element.php	/^            $getId = create_function('$decorator',$/;"	v
id	library\Zend\Form\Element.php	/^            $id = substr($id, 0, strlen($id) - 2);$/;"	v
id	library\Zend\Form\Element.php	/^        $id = $this->getFullyQualifiedName();$/;"	v
id	library\Zend\Form\Element.php	/^        $id = str_replace('][', '-', $id);$/;"	v
id	library\Zend\Form\Element.php	/^        $id = str_replace(array(']', '['), '-', $id);$/;"	v
id	library\Zend\Form\Element.php	/^        $id = trim($id, '-');$/;"	v
instance	library\Zend\Form\Element.php	/^                    $instance = $r->newInstance($validator['options']);$/;"	v
instance	library\Zend\Form\Element.php	/^                    $instance = $r->newInstanceArgs((array) $validator['options']);$/;"	v
instance	library\Zend\Form\Element.php	/^                $instance = $r->newInstance();$/;"	v
instance	library\Zend\Form\Element.php	/^                $instance = $r->newInstanceArgs((array) $filter['options']);$/;"	v
instance	library\Zend\Form\Element.php	/^            $instance = new $name;$/;"	v
instance	library\Zend\Form\Element.php	/^        $instance = $this->_getDecorator($decorator['decorator'], $decorator['options']);$/;"	v
isArray	library\Zend\Form\Element.php	/^        $isArray         = $this->isArray();$/;"	v
keys	library\Zend\Form\Element.php	/^                    $keys    = array_keys($validator['options']);$/;"	v
len	library\Zend\Form\Element.php	/^            $len = strlen($name);$/;"	v
loader	library\Zend\Form\Element.php	/^                    $loader       = $this->getPluginLoader($type);$/;"	v
loader	library\Zend\Form\Element.php	/^                $loader = $this->getPluginLoader($type);$/;"	v
message	library\Zend\Form\Element.php	/^                $message = $translator->translate($message);$/;"	v
messages	library\Zend\Form\Element.php	/^                                $messages = $this->_getErrorMessages();$/;"	v
messages	library\Zend\Form\Element.php	/^                                $messages = array_merge($messages, $validator->getMessages());$/;"	v
messages	library\Zend\Form\Element.php	/^                    $messages = $this->_getErrorMessages();$/;"	v
messages	library\Zend\Form\Element.php	/^                    $messages = $validator->getMessages();$/;"	v
messages	library\Zend\Form\Element.php	/^                $messages = array();$/;"	v
messages	library\Zend\Form\Element.php	/^            $messages = $validator['options']['messages'];$/;"	v
messages	library\Zend\Form\Element.php	/^        $messages       = $messages + $customMessages;$/;"	v
messages	library\Zend\Form\Element.php	/^        $messages       = $this->getMessages();$/;"	v
messages	library\Zend\Form\Element.php	/^        $messages   = $this->getErrorMessages();$/;"	v
messages	library\Zend\Form\Element.php	/^        $messages = false;$/;"	v
method	library\Zend\Form\Element.php	/^            $method = 'set' . ucfirst($key);$/;"	v
name	library\Zend\Form\Element.php	/^            $name      = $decorator;$/;"	v
name	library\Zend\Form\Element.php	/^            $name      = $validator;$/;"	v
name	library\Zend\Form\Element.php	/^            $name = $belongsTo . '[' . $name . ']';$/;"	v
name	library\Zend\Form\Element.php	/^            $name = $filter;$/;"	v
name	library\Zend\Form\Element.php	/^            $name = get_class($decorator);$/;"	v
name	library\Zend\Form\Element.php	/^            $name = get_class($filter);$/;"	v
name	library\Zend\Form\Element.php	/^            $name = get_class($validator);$/;"	v
name	library\Zend\Form\Element.php	/^        $name     = $this->getPluginLoader(self::FILTER)->load($filter['filter']);$/;"	v
name	library\Zend\Form\Element.php	/^        $name     = $this->getPluginLoader(self::VALIDATE)->load($validator['validator']);$/;"	v
name	library\Zend\Form\Element.php	/^        $name = $this->filterName($name);$/;"	v
name	library\Zend\Form\Element.php	/^        $name = $this->getName();$/;"	v
name	library\Zend\Form\Element.php	/^        $name = (string) $name;$/;"	v
newName	library\Zend\Form\Element.php	/^            $newName            = get_class($instance);$/;"	v
notEmpty	library\Zend\Form\Element.php	/^            $notEmpty   = array('validator' => 'NotEmpty', 'breakChainOnFailure' => true);$/;"	v
numeric	library\Zend\Form\Element.php	/^                            $numeric = true;$/;"	v
numeric	library\Zend\Form\Element.php	/^                $numeric = false;$/;"	v
options	library\Zend\Form\Element.php	/^                            $options = array_shift($decoratorInfo);$/;"	v
options	library\Zend\Form\Element.php	/^                            $options = array_shift($filterInfo);$/;"	v
options	library\Zend\Form\Element.php	/^                            $options = array_shift($validatorInfo);$/;"	v
options	library\Zend\Form\Element.php	/^                        $options = $decoratorInfo['options'];$/;"	v
options	library\Zend\Form\Element.php	/^                        $options = $filterInfo['options'];$/;"	v
options	library\Zend\Form\Element.php	/^                        $options = $validatorInfo['options'];$/;"	v
options	library\Zend\Form\Element.php	/^                $options             = array();$/;"	v
options	library\Zend\Form\Element.php	/^                $options = array();$/;"	v
order	library\Zend\Form\Element.php	/^            $order              = array_flip($decoratorNames);$/;"	v
order	library\Zend\Form\Element.php	/^            $order              = array_flip($validatorNames);$/;"	v
order	library\Zend\Form\Element.php	/^            $order        = array_flip($filterNames);$/;"	v
origName	library\Zend\Form\Element.php	/^        $origName = $filter['filter'];$/;"	v
origName	library\Zend\Form\Element.php	/^        $origName = $validator['validator'];$/;"	v
path	library\Zend\Form\Element.php	/^                $path   = rtrim($path, DIRECTORY_SEPARATOR);$/;"	v
pathSegment	library\Zend\Form\Element.php	/^                    $pathSegment   = 'Form\/Decorator';$/;"	v
pathSegment	library\Zend\Form\Element.php	/^                $pathSegment   = $prefixSegment;$/;"	v
pluginPath	library\Zend\Form\Element.php	/^                    $pluginPath   = $path . DIRECTORY_SEPARATOR . $cType . DIRECTORY_SEPARATOR;$/;"	v
pluginPrefix	library\Zend\Form\Element.php	/^                    $pluginPrefix = $prefix . '_' . $cType;$/;"	v
prefix	library\Zend\Form\Element.php	/^                $prefix = rtrim($prefix, '_');$/;"	v
prefixSegment	library\Zend\Form\Element.php	/^                    $prefixSegment = 'Form_Decorator';$/;"	v
prefixSegment	library\Zend\Form\Element.php	/^                $prefixSegment = ucfirst(strtolower($type));$/;"	v
r	library\Zend\Form\Element.php	/^            $r = new ReflectionClass($name);$/;"	v
result	library\Zend\Form\Element.php	/^                            $result = false;$/;"	v
result	library\Zend\Form\Element.php	/^                        $result = false;$/;"	v
result	library\Zend\Form\Element.php	/^                $result = false;$/;"	v
result	library\Zend\Form\Element.php	/^            $result          = false;$/;"	v
result	library\Zend\Form\Element.php	/^        $result          = true;$/;"	v
return	library\Zend\Form\Element.php	/^            $return = $this->render();$/;"	v
sameName	library\Zend\Form\Element.php	/^            $sameName = true;$/;"	v
sameName	library\Zend\Form\Element.php	/^        $sameName = false;$/;"	v
seed	library\Zend\Form\Element.php	/^                    $seed = array_shift($args);$/;"	v
seed	library\Zend\Form\Element.php	/^                $seed = '';$/;"	v
translator	library\Zend\Form\Element.php	/^                $translator = $this->getTranslator();$/;"	v
translator	library\Zend\Form\Element.php	/^            $translator = $this->getTranslator();$/;"	v
translator	library\Zend\Form\Element.php	/^            $translator = Zend_Validate_Abstract::getDefaultTranslator();$/;"	v
translator	library\Zend\Form\Element.php	/^        $translator = $this->getTranslator();$/;"	v
type	library\Zend\Form\Element.php	/^                        $type = $paths['type'];$/;"	v
type	library\Zend\Form\Element.php	/^                $type = null;$/;"	v
type	library\Zend\Form\Element.php	/^        $type = strtoupper($type);$/;"	v
validator	library\Zend\Form\Element.php	/^                            $validator  = array_shift($validatorInfo);$/;"	v
validator	library\Zend\Form\Element.php	/^                    $validator = $validatorInfo['validator'];$/;"	v
validator	library\Zend\Form\Element.php	/^            $validator = $this->_loadValidator($value);$/;"	v
validator	library\Zend\Form\Element.php	/^            $validator = array($/;"	v
validatorNames	library\Zend\Form\Element.php	/^            $validatorNames     = array_keys($this->_validators);$/;"	v
validators	library\Zend\Form\Element.php	/^            $validators = $this->getValidators();$/;"	v
validators	library\Zend\Form\Element.php	/^        $validators = array();$/;"	v
validatorsExchange	library\Zend\Form\Element.php	/^            $validatorsExchange = array();$/;"	v
value	library\Zend\Form\Element.php	/^            $value = $filter->filter($value);$/;"	v
value	library\Zend\Form\Element.php	/^        $value      = $this->getValue();$/;"	v
value	library\Zend\Form\Element.php	/^        $value = $this->getValue();$/;"	v
valueFiltered	library\Zend\Form\Element.php	/^        $valueFiltered = $this->_value;$/;"	v
viewRenderer	library\Zend\Form\Element.php	/^            $viewRenderer = Zend_Controller_Action_HelperBroker::getStaticHelper('viewRenderer');$/;"	v
Zend_Form_Element_Button	library\Zend\Form\Element\Button.php	/^class Zend_Form_Element_Button extends Zend_Form_Element_Submit$/;"	c
Zend_Form_Element_Captcha	library\Zend\Form\Element\Captcha.php	/^class Zend_Form_Element_Captcha extends Zend_Form_Element_Xhtml$/;"	c
attribs	library\Zend\Form\Element\Captcha.php	/^        $attribs = get_object_vars($this);$/;"	v
belongsTo	library\Zend\Form\Element\Captcha.php	/^        $belongsTo = $this->getBelongsTo();$/;"	v
cPath	library\Zend\Form\Element\Captcha.php	/^                $cPath   = rtrim($path, '\/\\\\') . '\/Captcha';$/;"	v
cPrefix	library\Zend\Form\Element\Captcha.php	/^                $cPrefix = rtrim($prefix, '_') . '_Captcha';$/;"	v
captcha	library\Zend\Form\Element\Captcha.php	/^        $captcha    = $this->getCaptcha();$/;"	v
decorator	library\Zend\Form\Element\Captcha.php	/^            $decorator  = $captcha->getDecorator();$/;"	v
decorator	library\Zend\Form\Element\Captcha.php	/^            $decorator = array('Captcha', array('captcha' => $captcha));$/;"	v
decorators	library\Zend\Form\Element\Captcha.php	/^            $decorators = $this->getDecorators();$/;"	v
decorators	library\Zend\Form\Element\Captcha.php	/^        $decorators = $this->getDecorators();$/;"	v
instance	library\Zend\Form\Element\Captcha.php	/^                    $instance = $r->newInstance();$/;"	v
instance	library\Zend\Form\Element\Captcha.php	/^                    $instance = $r->newInstanceArgs(array($options));$/;"	v
instance	library\Zend\Form\Element\Captcha.php	/^                $instance = new $name;$/;"	v
instance	library\Zend\Form\Element\Captcha.php	/^            $instance = $captcha;$/;"	v
key	library\Zend\Form\Element\Captcha.php	/^            $key        = get_class($this->_getDecorator($decorator, null));$/;"	v
key	library\Zend\Form\Element\Captcha.php	/^            $key       = get_class($this->_getDecorator($decorator[0], $decorator[1]));$/;"	v
loader	library\Zend\Form\Element\Captcha.php	/^                $loader = $this->getPluginLoader($type);$/;"	v
loader	library\Zend\Form\Element\Captcha.php	/^                $loader = $this->getPluginLoader(self::CAPTCHA);$/;"	v
name	library\Zend\Form\Element\Captcha.php	/^                    $name = $captcha['captcha'];$/;"	v
name	library\Zend\Form\Element\Captcha.php	/^                    $name = array_shift($captcha);$/;"	v
name	library\Zend\Form\Element\Captcha.php	/^                $name = $captcha;$/;"	v
name	library\Zend\Form\Element\Captcha.php	/^            $name = $this->getPluginLoader(self::CAPTCHA)->load($name);$/;"	v
name	library\Zend\Form\Element\Captcha.php	/^        $name     = $this->getFullyQualifiedName();$/;"	v
newContext	library\Zend\Form\Element\Captcha.php	/^                $newContext = $newContext[$segment];$/;"	v
newContext	library\Zend\Form\Element\Captcha.php	/^        $newContext = $context;$/;"	v
options	library\Zend\Form\Element\Captcha.php	/^                $options = array_merge($options, $captcha);$/;"	v
r	library\Zend\Form\Element\Captcha.php	/^                $r = new ReflectionClass($name);$/;"	v
root	library\Zend\Form\Element\Captcha.php	/^        $root     = substr($name, 0, strpos($name, '['));$/;"	v
segments	library\Zend\Form\Element\Captcha.php	/^        $segments = explode('][', $segments);$/;"	v
segments	library\Zend\Form\Element\Captcha.php	/^        $segments = ltrim($segments, '[');$/;"	v
segments	library\Zend\Form\Element\Captcha.php	/^        $segments = rtrim($segments, ']');$/;"	v
segments	library\Zend\Form\Element\Captcha.php	/^        $segments = substr($name, strpos($name, '['));$/;"	v
type	library\Zend\Form\Element\Captcha.php	/^        $type = strtoupper($type);$/;"	v
Zend_Form_Element_Checkbox	library\Zend\Form\Element\Checkbox.php	/^class Zend_Form_Element_Checkbox extends Zend_Form_Element_Xhtml$/;"	c
curValue	library\Zend\Form\Element\Checkbox.php	/^        $curValue = $this->getValue();$/;"	v
test	library\Zend\Form\Element\Checkbox.php	/^        $test     = array($this->getCheckedValue(), $this->getUncheckedValue());$/;"	v
Zend_Form_Element_Exception	library\Zend\Form\Element\Exception.php	/^class Zend_Form_Element_Exception extends Zend_Form_Exception$/;"	c
Zend_Form_Element_File	library\Zend\Form\Element\File.php	/^class Zend_Form_Element_File extends Zend_Form_Element_Xhtml$/;"	c
adapter	library\Zend\Form\Element\File.php	/^        $adapter    = $this->getTransferAdapter();$/;"	v
adapter	library\Zend\Form\Element\File.php	/^        $adapter = $this->getTransferAdapter();$/;"	v
aggregateMessages	library\Zend\Form\Element\File.php	/^                $aggregateMessages = array();$/;"	v
class	library\Zend\Form\Element\File.php	/^            $class  = $loader->load($adapter);$/;"	v
content	library\Zend\Form\Element\File.php	/^        $content = $this->getTransferAdapter()->getFileName($this->getName());$/;"	v
decorators	library\Zend\Form\Element\File.php	/^        $decorators = $this->getDecorators();$/;"	v
filters	library\Zend\Form\Element\File.php	/^            $filters = array();$/;"	v
filters	library\Zend\Form\Element\File.php	/^        $filters = $adapter->getFilters($this->getName());$/;"	v
ini	library\Zend\Form\Element\File.php	/^            $ini = $this->_convertIniToInteger(trim(ini_get('post_max_size')));$/;"	v
ini	library\Zend\Form\Element\File.php	/^        $ini = $this->_convertIniToInteger(trim(ini_get('post_max_size')));$/;"	v
loader	library\Zend\Form\Element\File.php	/^            $loader       = $this->getPluginLoader(self::TRANSFER_ADAPTER);$/;"	v
loader	library\Zend\Form\Element\File.php	/^            $loader = $this->getPluginLoader($type);$/;"	v
loader	library\Zend\Form\Element\File.php	/^            $loader = $this->getPluginLoader(self::TRANSFER_ADAPTER);$/;"	v
loader	library\Zend\Form\Element\File.php	/^            $loader = new Zend_Loader_PluginLoader(array($/;"	v
loader	library\Zend\Form\Element\File.php	/^        $loader = $this->getPluginLoader($type);$/;"	v
marker	library\Zend\Form\Element\File.php	/^                $marker = true;$/;"	v
marker	library\Zend\Form\Element\File.php	/^        $marker = false;$/;"	v
max	library\Zend\Form\Element\File.php	/^            $max = $this->_convertIniToInteger(trim(ini_get('upload_max_filesize')));$/;"	v
max	library\Zend\Form\Element\File.php	/^        $max = $this->_convertIniToInteger(trim(ini_get('upload_max_filesize')));$/;"	v
message	library\Zend\Form\Element\File.php	/^                $message = $translator->translate($message);$/;"	v
messages	library\Zend\Form\Element\File.php	/^        $messages   = $this->getErrorMessages();$/;"	v
min	library\Zend\Form\Element\File.php	/^                $min = min($min, $ini);$/;"	v
min	library\Zend\Form\Element\File.php	/^                $min = min($min, $max);$/;"	v
min	library\Zend\Form\Element\File.php	/^            $min = max($ini, $max);$/;"	v
pluginPath	library\Zend\Form\Element\File.php	/^            $pluginPath   = rtrim($path, DIRECTORY_SEPARATOR) . '\/Transfer\/Adapter\/';$/;"	v
pluginPrefix	library\Zend\Form\Element\File.php	/^            $pluginPrefix = rtrim($prefix, '_') . '_Transfer_Adapter';$/;"	v
setting	library\Zend\Form\Element\File.php	/^            $setting = (integer) substr($setting, 0, -1);$/;"	v
size	library\Zend\Form\Element\File.php	/^            $size = $ini;$/;"	v
size	library\Zend\Form\Element\File.php	/^            $size = $max;$/;"	v
translator	library\Zend\Form\Element\File.php	/^        $translator = $this->getTransferAdapter()->getTranslator();$/;"	v
translator	library\Zend\Form\Element\File.php	/^        $translator = $this->getTranslator();$/;"	v
type	library\Zend\Form\Element\File.php	/^            $type = strtoupper(substr($setting, -1));$/;"	v
type	library\Zend\Form\Element\File.php	/^        $type = strtoupper($type);$/;"	v
validators	library\Zend\Form\Element\File.php	/^            $validators = array();$/;"	v
validators	library\Zend\Form\Element\File.php	/^        $validators = $adapter->getValidators($this->getName());$/;"	v
value	library\Zend\Form\Element\File.php	/^            $value = $this->getName();$/;"	v
value	library\Zend\Form\Element\File.php	/^        $value      = $this->getFileName();$/;"	v
Zend_Form_Element_Hash	library\Zend\Form\Element\Hash.php	/^class Zend_Form_Element_Hash extends Zend_Form_Element_Xhtml$/;"	c
rightHash	library\Zend\Form\Element\Hash.php	/^            $rightHash = $session->hash;$/;"	v
rightHash	library\Zend\Form\Element\Hash.php	/^            $rightHash = null;$/;"	v
session	library\Zend\Form\Element\Hash.php	/^        $session = $this->getSession();$/;"	v
Zend_Form_Element_Hidden	library\Zend\Form\Element\Hidden.php	/^class Zend_Form_Element_Hidden extends Zend_Form_Element_Xhtml$/;"	c
Zend_Form_Element_Image	library\Zend\Form\Element\Image.php	/^class Zend_Form_Element_Image extends Zend_Form_Element_Xhtml$/;"	c
decorators	library\Zend\Form\Element\Image.php	/^        $decorators = $this->getDecorators();$/;"	v
imageValue	library\Zend\Form\Element\Image.php	/^        $imageValue = $this->getImageValue();$/;"	v
multiOptions	library\Zend\Form\Element\Multi.php	/^                $multiOptions = $this->getMultiOptions();$/;"	v
option	library\Zend\Form\Element\Multi.php	/^        $option  = (string) $option;$/;"	v
options	library\Zend\Form\Element\Multi.php	/^                        $options = array_merge($options, array_keys($opt_label));$/;"	v
options	library\Zend\Form\Element\Multi.php	/^                $options      = array();$/;"	v
Zend_Form_Element_MultiCheckbox	library\Zend\Form\Element\MultiCheckbox.php	/^class Zend_Form_Element_MultiCheckbox extends Zend_Form_Element_Multi$/;"	c
Zend_Form_Element_Multiselect	library\Zend\Form\Element\Multiselect.php	/^class Zend_Form_Element_Multiselect extends Zend_Form_Element_Select$/;"	c
Zend_Form_Element_Password	library\Zend\Form\Element\Password.php	/^class Zend_Form_Element_Password extends Zend_Form_Element_Xhtml$/;"	c
Zend_Form_Element_Radio	library\Zend\Form\Element\Radio.php	/^class Zend_Form_Element_Radio extends Zend_Form_Element_Multi$/;"	c
Zend_Form_Element_Reset	library\Zend\Form\Element\Reset.php	/^class Zend_Form_Element_Reset extends Zend_Form_Element_Submit$/;"	c
Zend_Form_Element_Select	library\Zend\Form\Element\Select.php	/^class Zend_Form_Element_Select extends Zend_Form_Element_Multi$/;"	c
Zend_Form_Element_Submit	library\Zend\Form\Element\Submit.php	/^class Zend_Form_Element_Submit extends Zend_Form_Element_Xhtml$/;"	c
decorators	library\Zend\Form\Element\Submit.php	/^        $decorators = $this->getDecorators();$/;"	v
options	library\Zend\Form\Element\Submit.php	/^            $options = array('label' => $options);$/;"	v
value	library\Zend\Form\Element\Submit.php	/^            $value = $this->getName();$/;"	v
value	library\Zend\Form\Element\Submit.php	/^        $value = $this->getValue();$/;"	v
value	library\Zend\Form\Element\Submit.php	/^        $value = parent::getLabel();$/;"	v
Zend_Form_Element_Text	library\Zend\Form\Element\Text.php	/^class Zend_Form_Element_Text extends Zend_Form_Element_Xhtml$/;"	c
Zend_Form_Element_Textarea	library\Zend\Form\Element\Textarea.php	/^class Zend_Form_Element_Textarea extends Zend_Form_Element_Xhtml$/;"	c
Zend_Form_Exception	library\Zend\Form\Exception.php	/^class Zend_Form_Exception extends Zend_Exception$/;"	c
Zend_Form_SubForm	library\Zend\Form\SubForm.php	/^class Zend_Form_SubForm extends Zend_Form$/;"	c
decorators	library\Zend\Form\SubForm.php	/^        $decorators = $this->getDecorators();$/;"	v
Zend_Gdata	library\Zend\Gdata.php	/^class Zend_Gdata extends Zend_Gdata_App$/;"	c
app	library\Zend\Gdata.php	/^        $app = new Zend_Gdata($client);$/;"	v
body	library\Zend\Gdata.php	/^            $body = $filterResult['body'];$/;"	v
className	library\Zend\Gdata.php	/^        $className='Zend_Gdata_Feed')$/;"	v
client	library\Zend\Gdata.php	/^        $client = parent::getHttpClient();$/;"	v
contentType	library\Zend\Gdata.php	/^            $contentType = $filterResult['contentType'];$/;"	v
feed	library\Zend\Gdata.php	/^        $feed = self::importString($feedContent, $className);$/;"	v
feedContent	library\Zend\Gdata.php	/^        $feedContent = $response->getBody();$/;"	v
filterResult	library\Zend\Gdata.php	/^            $filterResult = $this->_httpClient->filterHttpRequest($method, $url, $headers, $body, $contentType);$/;"	v
headers	library\Zend\Gdata.php	/^            $headers = $filterResult['headers'];$/;"	v
method	library\Zend\Gdata.php	/^            $method = $filterResult['method'];$/;"	v
requestData	library\Zend\Gdata.php	/^        $requestData = $app->decodeRequest('GET', $uri);$/;"	v
response	library\Zend\Gdata.php	/^        $response = $app->performHttpRequest($requestData['method'], $requestData['url']);$/;"	v
uri	library\Zend\Gdata.php	/^            $uri = $location->getQueryUrl();$/;"	v
uri	library\Zend\Gdata.php	/^            $uri = $location;$/;"	v
url	library\Zend\Gdata.php	/^            $url = $filterResult['url'];$/;"	v
Zend_Gdata_App	library\Zend\Gdata\App.php	/^class Zend_Gdata_App$/;"	c
allowWeak	library\Zend\Gdata\App.php	/^            $allowWeak = $method == 'GET';$/;"	v
app	library\Zend\Gdata\App.php	/^        $app = new Zend_Gdata_App($client);$/;"	v
applicationId	library\Zend\Gdata\App.php	/^        $applicationId = 'MyCompany-MyApp-1.0')$/;"	v
body	library\Zend\Gdata\App.php	/^        $body = null, $contentType = null, $remainingRedirects = null)$/;"	v
class	library\Zend\Gdata\App.php	/^            $class = $matches[1];$/;"	v
className	library\Zend\Gdata\App.php	/^            $className = 'Zend_Gdata_App_Entry';$/;"	v
className	library\Zend\Gdata\App.php	/^            $className = get_class($data);$/;"	v
className	library\Zend\Gdata\App.php	/^            $className = get_class($feed);$/;"	v
className	library\Zend\Gdata\App.php	/^            $className='Zend_Gdata_App_Feed', $useIncludePath = false)$/;"	v
className	library\Zend\Gdata\App.php	/^        $className='Zend_Gdata_App_Feed')$/;"	v
className	library\Zend\Gdata\App.php	/^        $className='Zend_Gdata_App_Feed', $majorProtocolVersion = null,$/;"	v
client	library\Zend\Gdata\App.php	/^            $client = new Zend_Http_Client();$/;"	v
contentType	library\Zend\Gdata\App.php	/^            $contentType = null, $extraHeaders = null)$/;"	v
contentTypeOverride	library\Zend\Gdata\App.php	/^                                   $contentTypeOverride = null)$/;"	v
data	library\Zend\Gdata\App.php	/^                                   $data = null,$/;"	v
delimiterPos	library\Zend\Gdata\App.php	/^            $delimiterPos = strpos($protocolVersionStr, '.');$/;"	v
doc	library\Zend\Gdata\App.php	/^        $doc = new DOMDocument();$/;"	v
editLink	library\Zend\Gdata\App.php	/^                $editLink = $data->getEditLink();$/;"	v
etag	library\Zend\Gdata\App.php	/^            $etag = $data->getEtag();$/;"	v
etag	library\Zend\Gdata\App.php	/^        $etag = $response->getHeader('ETag');$/;"	v
exception	library\Zend\Gdata\App.php	/^            $exception = new Zend_Gdata_App_HttpException($exceptionMessage);$/;"	v
exceptionMessage	library\Zend\Gdata\App.php	/^            $exceptionMessage = 'Expected response code 200, got ' .$/;"	v
extraHeaders	library\Zend\Gdata\App.php	/^        $extraHeaders = array())$/;"	v
feed	library\Zend\Gdata\App.php	/^                $feed = $this->getFeed($next->href, $feedClass);$/;"	v
feed	library\Zend\Gdata\App.php	/^                $feed = null;$/;"	v
feed	library\Zend\Gdata\App.php	/^        $feed = @file_get_contents($filename, $useIncludePath);$/;"	v
feed	library\Zend\Gdata\App.php	/^        $feed = new $className();$/;"	v
feed	library\Zend\Gdata\App.php	/^        $feed = self::importString($feedContent, $className);$/;"	v
feed	library\Zend\Gdata\App.php	/^        $feed = self::importString($feedContent, $className,$/;"	v
feedClass	library\Zend\Gdata\App.php	/^        $feedClass = get_class($feed);$/;"	v
feedContent	library\Zend\Gdata\App.php	/^        $feedContent = $response->getBody();$/;"	v
finalContentType	library\Zend\Gdata\App.php	/^                $finalContentType = $rawData->getContentType();$/;"	v
finalContentType	library\Zend\Gdata\App.php	/^                $finalContentType = 'application\/atom+xml';$/;"	v
finalContentType	library\Zend\Gdata\App.php	/^            $finalContentType = $contentTypeOverride;$/;"	v
finalContentType	library\Zend\Gdata\App.php	/^            $finalContentType = $data->getContentType();$/;"	v
finalContentType	library\Zend\Gdata\App.php	/^            $finalContentType = 'application\/atom+xml';$/;"	v
finalContentType	library\Zend\Gdata\App.php	/^        $finalContentType = null;$/;"	v
foundClassName	library\Zend\Gdata\App.php	/^                     $foundClassName = $name . '_' . $class;$/;"	v
foundClassName	library\Zend\Gdata\App.php	/^            $foundClassName = null;$/;"	v
headers	library\Zend\Gdata\App.php	/^                                   $headers = array(),$/;"	v
headers	library\Zend\Gdata\App.php	/^            $headers = array();$/;"	v
instance	library\Zend\Gdata\App.php	/^                $instance = $reflectionObj->newInstanceArgs($args);$/;"	v
length	library\Zend\Gdata\App.php	/^            $length = strlen($protocolVersionStr);$/;"	v
major	library\Zend\Gdata\App.php	/^            $major = substr($protocolVersionStr, 0, $delimiterPos);$/;"	v
major	library\Zend\Gdata\App.php	/^        $major = $this->getMajorProtocolVersion();$/;"	v
majorProtocolVersion	library\Zend\Gdata\App.php	/^            $majorProtocolVersion = $major;$/;"	v
majorProtocolVersion	library\Zend\Gdata\App.php	/^        $majorProtocolVersion = null;$/;"	v
method	library\Zend\Gdata\App.php	/^            $method = 'POST';$/;"	v
minor	library\Zend\Gdata\App.php	/^            $minor = substr($protocolVersionStr, $delimiterPos + 1, $length);$/;"	v
minor	library\Zend\Gdata\App.php	/^        $minor = $this->getMinorProtocolVersion();$/;"	v
minorProtocolVersion	library\Zend\Gdata\App.php	/^            $minorProtocolVersion = $minor;$/;"	v
minorProtocolVersion	library\Zend\Gdata\App.php	/^        $minorProtocolVersion = null)$/;"	v
minorProtocolVersion	library\Zend\Gdata\App.php	/^        $minorProtocolVersion = null;$/;"	v
newAdapter	library\Zend\Gdata\App.php	/^                $newAdapter = new Zend_Gdata_HttpAdapterStreamingProxy();$/;"	v
newAdapter	library\Zend\Gdata\App.php	/^                $newAdapter = new Zend_Gdata_HttpAdapterStreamingSocket();$/;"	v
newUrl	library\Zend\Gdata\App.php	/^                $newUrl = $response->getHeader('Location');$/;"	v
next	library\Zend\Gdata\App.php	/^            $next = $feed->getLink('next');$/;"	v
nextLink	library\Zend\Gdata\App.php	/^        $nextLink = $feed->getNextLink();$/;"	v
nextLinkHref	library\Zend\Gdata\App.php	/^        $nextLinkHref = $nextLink->getHref();$/;"	v
oldHttpAdapter	library\Zend\Gdata\App.php	/^            $oldHttpAdapter = $this->_httpClient->getAdapter();$/;"	v
oldHttpAdapter	library\Zend\Gdata\App.php	/^        $oldHttpAdapter = null;$/;"	v
previousLink	library\Zend\Gdata\App.php	/^        $previousLink = $feed->getPreviousLink();$/;"	v
previousLinkHref	library\Zend\Gdata\App.php	/^        $previousLinkHref = $previousLink->getHref();$/;"	v
protocolVersionStr	library\Zend\Gdata\App.php	/^        $protocolVersionStr = $response->getHeader('GData-Version');$/;"	v
queryArray	library\Zend\Gdata\App.php	/^        $queryArray = $uri->getQueryAsArray();$/;"	v
rawData	library\Zend\Gdata\App.php	/^            $rawData = $data->encode();$/;"	v
rawData	library\Zend\Gdata\App.php	/^            $rawData = $data->saveXML();$/;"	v
rawData	library\Zend\Gdata\App.php	/^            $rawData = $data;$/;"	v
rawData	library\Zend\Gdata\App.php	/^            $rawData = null;$/;"	v
rawData	library\Zend\Gdata\App.php	/^        $rawData = null;$/;"	v
reflectionObj	library\Zend\Gdata\App.php	/^                $reflectionObj = new ReflectionClass($foundClassName);$/;"	v
reflectionObj	library\Zend\Gdata\App.php	/^        $reflectionObj = new ReflectionClass($feedClass);$/;"	v
remainingRedirects	library\Zend\Gdata\App.php	/^            $remainingRedirects = self::getMaxRedirects();$/;"	v
requestData	library\Zend\Gdata\App.php	/^            $requestData = $this->prepareRequest($/;"	v
requestData	library\Zend\Gdata\App.php	/^            $requestData = $this->prepareRequest('DELETE', $data);$/;"	v
requestData	library\Zend\Gdata\App.php	/^        $requestData = $app->prepareRequest('GET', $uri);$/;"	v
requestData	library\Zend\Gdata\App.php	/^        $requestData = $this->prepareRequest($/;"	v
requestData	library\Zend\Gdata\App.php	/^        $requestData = $this->prepareRequest('GET', $uri, $extraHeaders);$/;"	v
response	library\Zend\Gdata\App.php	/^                $response = $this->performHttpRequest($/;"	v
response	library\Zend\Gdata\App.php	/^            $response = $this->_httpClient->request($method);$/;"	v
response	library\Zend\Gdata\App.php	/^        $response = $app->performHttpRequest($/;"	v
response	library\Zend\Gdata\App.php	/^        $response = $this->get($url, $extraHeaders);$/;"	v
response	library\Zend\Gdata\App.php	/^        $response = $this->post($data, $uri, null, null, $extraHeaders);$/;"	v
response	library\Zend\Gdata\App.php	/^        $response = $this->put($data, $uri, null, null, $extraHeaders);$/;"	v
result	library\Zend\Gdata\App.php	/^                $result = $data->getEtag();$/;"	v
result	library\Zend\Gdata\App.php	/^        $result = $reflectionObj->newInstance();$/;"	v
result	library\Zend\Gdata\App.php	/^        $result = '';$/;"	v
returnEntry	library\Zend\Gdata\App.php	/^        $returnEntry = new $className($response->getBody());$/;"	v
success	library\Zend\Gdata\App.php	/^        $success = @$doc->loadXML($string);$/;"	v
uri	library\Zend\Gdata\App.php	/^        $uri = Zend_Uri_Http::fromString($url);$/;"	v
url	library\Zend\Gdata\App.php	/^                                   $url = null,$/;"	v
url	library\Zend\Gdata\App.php	/^                    $url = $editLink->getHref();$/;"	v
url	library\Zend\Gdata\App.php	/^            $url = $this->_defaultPostUri;$/;"	v
userAgent	library\Zend\Gdata\App.php	/^            $userAgent = 'Zend_Framework_Gdata\/' . Zend_Version::VERSION;$/;"	v
userAgent	library\Zend\Gdata\App.php	/^        $userAgent = $applicationId . ' Zend_Framework_Gdata\/' .$/;"	v
usingMimeStream	library\Zend\Gdata\App.php	/^            $usingMimeStream = true;$/;"	v
usingMimeStream	library\Zend\Gdata\App.php	/^        $usingMimeStream = false;$/;"	v
Zend_Gdata_App_AuthException	library\Zend\Gdata\App\AuthException.php	/^class Zend_Gdata_App_AuthException extends Zend_Gdata_App_Exception$/;"	c
Zend_Gdata_App_BadMethodCallException	library\Zend\Gdata\App\BadMethodCallException.php	/^class Zend_Gdata_App_BadMethodCallException extends Zend_Gdata_App_Exception$/;"	c
arrayIndex	library\Zend\Gdata\App\Base.php	/^        $arrayIndex = ($attribute->namespaceURI != '')?($/;"	v
doc	library\Zend\Gdata\App\Base.php	/^            $doc = new DOMDocument('1.0', 'utf-8');$/;"	v
doc	library\Zend\Gdata\App\Base.php	/^            $doc = new DOMDocument();$/;"	v
element	library\Zend\Gdata\App\Base.php	/^            $element = $doc->createElement($this->_rootElement);$/;"	v
element	library\Zend\Gdata\App\Base.php	/^            $element = $doc->createElementNS($this->_rootNamespaceURI, $this->_rootElement);$/;"	v
element	library\Zend\Gdata\App\Base.php	/^            $element = $doc->createElementNS($this->lookupNamespace($this->_rootNamespace), $elementName);$/;"	v
element	library\Zend\Gdata\App\Base.php	/^            $element = $doc->getElementsByTagName($this->_rootElement)->item(0);$/;"	v
element	library\Zend\Gdata\App\Base.php	/^        $element = $this->getDOM();$/;"	v
elementName	library\Zend\Gdata\App\Base.php	/^                $elementName = $this->_rootElement;$/;"	v
elementName	library\Zend\Gdata\App\Base.php	/^                $elementName = $this->_rootNamespace . ':' . $this->_rootElement;$/;"	v
extensionElement	library\Zend\Gdata\App\Base.php	/^            $extensionElement = new Zend_Gdata_App_Extension_Element();$/;"	v
foundMajorV	library\Zend\Gdata\App\Base.php	/^            $foundMajorV = Zend_Gdata_App_Util::findGreatestBoundedValue($/;"	v
foundMinorV	library\Zend\Gdata\App\Base.php	/^            $foundMinorV = Zend_Gdata_App_Util::findGreatestBoundedValue($/;"	v
key	library\Zend\Gdata\App\Base.php	/^        $key = $prefix . ' ' .$/;"	v
majorVersion	library\Zend\Gdata\App\Base.php	/^                                      $majorVersion = 1,$/;"	v
majorVersion	library\Zend\Gdata\App\Base.php	/^                                    $majorVersion = 1,$/;"	v
method	library\Zend\Gdata\App\Base.php	/^        $method = 'get'.ucfirst($name);$/;"	v
method	library\Zend\Gdata\App\Base.php	/^        $method = 'set'.ucfirst($name);$/;"	v
minorVersion	library\Zend\Gdata\App\Base.php	/^                                      $minorVersion = 0)$/;"	v
minorVersion	library\Zend\Gdata\App\Base.php	/^                                    $minorVersion = null)$/;"	v
nsData	library\Zend\Gdata\App\Base.php	/^            $nsData = $nsData[$foundMajorV];$/;"	v
nsData	library\Zend\Gdata\App\Base.php	/^            $nsData = $this->_namespaces[$prefix];$/;"	v
privName	library\Zend\Gdata\App\Base.php	/^        $privName = '_' . $name;$/;"	v
rc	library\Zend\Gdata\App\Base.php	/^        $rc = new ReflectionClass(get_class($this));$/;"	v
result	library\Zend\Gdata\App\Base.php	/^            $result = $nsData[$foundMinorV];$/;"	v
result	library\Zend\Gdata\App\Base.php	/^        $result = $prefix;$/;"	v
success	library\Zend\Gdata\App\Base.php	/^            $success = @$doc->loadXML($xml);$/;"	v
method	library\Zend\Gdata\App\BaseMediaSource.php	/^        $method = 'get'.ucfirst($name);$/;"	v
method	library\Zend\Gdata\App\BaseMediaSource.php	/^        $method = 'set'.ucfirst($name);$/;"	v
privName	library\Zend\Gdata\App\BaseMediaSource.php	/^        $privName = '_' . $name;$/;"	v
rc	library\Zend\Gdata\App\BaseMediaSource.php	/^        $rc = new ReflectionClass(get_class($this));$/;"	v
Zend_Gdata_App_CaptchaRequiredException	library\Zend\Gdata\App\CaptchaRequiredException.php	/^class Zend_Gdata_App_CaptchaRequiredException extends Zend_Gdata_App_AuthException$/;"	c
Zend_Gdata_App_Entry	library\Zend\Gdata\App\Entry.php	/^class Zend_Gdata_App_Entry extends Zend_Gdata_App_FeedEntryParent$/;"	c
absoluteNodeName	library\Zend\Gdata\App\Entry.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
className	library\Zend\Gdata\App\Entry.php	/^            $className = get_class($this);$/;"	v
content	library\Zend\Gdata\App\Entry.php	/^            $content = new Zend_Gdata_App_Extension_Content();$/;"	v
control	library\Zend\Gdata\App\Entry.php	/^            $control = new Zend_Gdata_App_Extension_Control();$/;"	v
editLink	library\Zend\Gdata\App\Entry.php	/^        $editLink = $this->getEditLink();$/;"	v
edited	library\Zend\Gdata\App\Entry.php	/^            $edited = new Zend_Gdata_App_Extension_Edited();$/;"	v
element	library\Zend\Gdata\App\Entry.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
published	library\Zend\Gdata\App\Entry.php	/^            $published = new Zend_Gdata_App_Extension_Published();$/;"	v
result	library\Zend\Gdata\App\Entry.php	/^            $result = $this->service->importUrl($uri, $className, $extraHeaders);$/;"	v
result	library\Zend\Gdata\App\Entry.php	/^        $result = null;$/;"	v
source	library\Zend\Gdata\App\Entry.php	/^            $source = new Zend_Gdata_App_Extension_Source();$/;"	v
summary	library\Zend\Gdata\App\Entry.php	/^            $summary = new Zend_Gdata_App_Extension_Summary();$/;"	v
uri	library\Zend\Gdata\App\Entry.php	/^            $uri = $editLink->getHref();$/;"	v
Zend_Gdata_App_Exception	library\Zend\Gdata\App\Exception.php	/^class Zend_Gdata_App_Exception extends Zend_Exception$/;"	c
Zend_Gdata_App_Extension_Author	library\Zend\Gdata\App\Extension\Author.php	/^class Zend_Gdata_App_Extension_Author extends Zend_Gdata_App_Extension_Person$/;"	c
Zend_Gdata_App_Extension_Category	library\Zend\Gdata\App\Extension\Category.php	/^class Zend_Gdata_App_Extension_Category extends Zend_Gdata_App_Extension$/;"	c
element	library\Zend\Gdata\App\Extension\Category.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_App_Extension_Content	library\Zend\Gdata\App\Extension\Content.php	/^class Zend_Gdata_App_Extension_Content extends Zend_Gdata_App_Extension_Text$/;"	c
element	library\Zend\Gdata\App\Extension\Content.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_App_Extension_Contributor	library\Zend\Gdata\App\Extension\Contributor.php	/^class Zend_Gdata_App_Extension_Contributor extends Zend_Gdata_App_Extension_Person$/;"	c
Zend_Gdata_App_Extension_Control	library\Zend\Gdata\App\Extension\Control.php	/^class Zend_Gdata_App_Extension_Control extends Zend_Gdata_App_Extension$/;"	c
absoluteNodeName	library\Zend\Gdata\App\Extension\Control.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
draft	library\Zend\Gdata\App\Extension\Control.php	/^            $draft = new Zend_Gdata_App_Extension_Draft();$/;"	v
element	library\Zend\Gdata\App\Extension\Control.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_App_Extension_Draft	library\Zend\Gdata\App\Extension\Draft.php	/^class Zend_Gdata_App_Extension_Draft extends Zend_Gdata_App_Extension$/;"	c
Zend_Gdata_App_Extension_Edited	library\Zend\Gdata\App\Extension\Edited.php	/^class Zend_Gdata_App_Extension_Edited extends Zend_Gdata_App_Extension$/;"	c
Zend_Gdata_App_Extension_Element	library\Zend\Gdata\App\Extension\Element.php	/^class Zend_Gdata_App_Extension_Element extends Zend_Gdata_App_Extension$/;"	c
Zend_Gdata_App_Extension_Email	library\Zend\Gdata\App\Extension\Email.php	/^class Zend_Gdata_App_Extension_Email extends Zend_Gdata_App_Extension$/;"	c
Zend_Gdata_App_Extension_Generator	library\Zend\Gdata\App\Extension\Generator.php	/^class Zend_Gdata_App_Extension_Generator extends Zend_Gdata_App_Extension$/;"	c
element	library\Zend\Gdata\App\Extension\Generator.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_App_Extension_Icon	library\Zend\Gdata\App\Extension\Icon.php	/^class Zend_Gdata_App_Extension_Icon extends Zend_Gdata_App_Extension$/;"	c
Zend_Gdata_App_Extension_Id	library\Zend\Gdata\App\Extension\Id.php	/^class Zend_Gdata_App_Extension_Id extends Zend_Gdata_App_Extension$/;"	c
Zend_Gdata_App_Extension_Link	library\Zend\Gdata\App\Extension\Link.php	/^class Zend_Gdata_App_Extension_Link extends Zend_Gdata_App_Extension$/;"	c
element	library\Zend\Gdata\App\Extension\Link.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
hrefLang	library\Zend\Gdata\App\Extension\Link.php	/^            $hrefLang = null, $title = null, $length = null)$/;"	v
Zend_Gdata_App_Extension_Logo	library\Zend\Gdata\App\Extension\Logo.php	/^class Zend_Gdata_App_Extension_Logo extends Zend_Gdata_App_Extension$/;"	c
Zend_Gdata_App_Extension_Name	library\Zend\Gdata\App\Extension\Name.php	/^class Zend_Gdata_App_Extension_Name extends Zend_Gdata_App_Extension$/;"	c
absoluteNodeName	library\Zend\Gdata\App\Extension\Person.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
element	library\Zend\Gdata\App\Extension\Person.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
email	library\Zend\Gdata\App\Extension\Person.php	/^            $email = new Zend_Gdata_App_Extension_Email();$/;"	v
name	library\Zend\Gdata\App\Extension\Person.php	/^            $name = new Zend_Gdata_App_Extension_Name();$/;"	v
uri	library\Zend\Gdata\App\Extension\Person.php	/^            $uri = new Zend_Gdata_App_Extension_Uri();$/;"	v
Zend_Gdata_App_Extension_Published	library\Zend\Gdata\App\Extension\Published.php	/^class Zend_Gdata_App_Extension_Published extends Zend_Gdata_App_Extension$/;"	c
Zend_Gdata_App_Extension_Rights	library\Zend\Gdata\App\Extension\Rights.php	/^class Zend_Gdata_App_Extension_Rights extends Zend_Gdata_App_Extension_Text$/;"	c
Zend_Gdata_App_Extension_Source	library\Zend\Gdata\App\Extension\Source.php	/^class Zend_Gdata_App_Extension_Source extends Zend_Gdata_App_FeedSourceParent$/;"	c
Zend_Gdata_App_Extension_Subtitle	library\Zend\Gdata\App\Extension\Subtitle.php	/^class Zend_Gdata_App_Extension_Subtitle extends Zend_Gdata_App_Extension_Text$/;"	c
Zend_Gdata_App_Extension_Summary	library\Zend\Gdata\App\Extension\Summary.php	/^class Zend_Gdata_App_Extension_Summary extends Zend_Gdata_App_Extension_Text$/;"	c
element	library\Zend\Gdata\App\Extension\Text.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_App_Extension_Title	library\Zend\Gdata\App\Extension\Title.php	/^class Zend_Gdata_App_Extension_Title extends Zend_Gdata_App_Extension_Text$/;"	c
Zend_Gdata_App_Extension_Updated	library\Zend\Gdata\App\Extension\Updated.php	/^class Zend_Gdata_App_Extension_Updated extends Zend_Gdata_App_Extension$/;"	c
Zend_Gdata_App_Extension_Uri	library\Zend\Gdata\App\Extension\Uri.php	/^class Zend_Gdata_App_Extension_Uri extends Zend_Gdata_App_Extension$/;"	c
Zend_Gdata_App_Feed	library\Zend\Gdata\App\Feed.php	/^class Zend_Gdata_App_Feed extends Zend_Gdata_App_FeedSourceParent$/;"	c
absoluteNodeName	library\Zend\Gdata\App\Feed.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
element	library\Zend\Gdata\App\Feed.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
newEntry	library\Zend\Gdata\App\Feed.php	/^            $newEntry = new $this->_entryClassName($child);$/;"	v
nextLink	library\Zend\Gdata\App\Feed.php	/^        $nextLink = $this->getNextLink();$/;"	v
nextLinkHref	library\Zend\Gdata\App\Feed.php	/^        $nextLinkHref = $nextLink->getHref();$/;"	v
previousLink	library\Zend\Gdata\App\Feed.php	/^        $previousLink = $this->getPreviousLink();$/;"	v
previousLinkHref	library\Zend\Gdata\App\Feed.php	/^        $previousLinkHref = $previousLink->getHref();$/;"	v
service	library\Zend\Gdata\App\Feed.php	/^        $service = new Zend_Gdata_App($this->getHttpClient());$/;"	v
absoluteNodeName	library\Zend\Gdata\App\FeedEntryParent.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
author	library\Zend\Gdata\App\FeedEntryParent.php	/^            $author = new Zend_Gdata_App_Extension_Author();$/;"	v
category	library\Zend\Gdata\App\FeedEntryParent.php	/^            $category = new Zend_Gdata_App_Extension_Category();$/;"	v
client	library\Zend\Gdata\App\FeedEntryParent.php	/^        $client = $this->_service->getHttpClient();$/;"	v
contributor	library\Zend\Gdata\App\FeedEntryParent.php	/^            $contributor = new Zend_Gdata_App_Extension_Contributor();$/;"	v
element	library\Zend\Gdata\App\FeedEntryParent.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
id	library\Zend\Gdata\App\FeedEntryParent.php	/^            $id = new Zend_Gdata_App_Extension_Id();$/;"	v
link	library\Zend\Gdata\App\FeedEntryParent.php	/^            $link = new Zend_Gdata_App_Extension_Link();$/;"	v
majorVersion	library\Zend\Gdata\App\FeedEntryParent.php	/^                                    $majorVersion = null,$/;"	v
majorVersion	library\Zend\Gdata\App\FeedEntryParent.php	/^            $majorVersion = $this->getMajorProtocolVersion();$/;"	v
minorVersion	library\Zend\Gdata\App\FeedEntryParent.php	/^                                    $minorVersion = null)$/;"	v
minorVersion	library\Zend\Gdata\App\FeedEntryParent.php	/^            $minorVersion = $this->getMinorProtocolVersion();$/;"	v
rights	library\Zend\Gdata\App\FeedEntryParent.php	/^            $rights = new Zend_Gdata_App_Extension_Rights();$/;"	v
title	library\Zend\Gdata\App\FeedEntryParent.php	/^            $title = new Zend_Gdata_App_Extension_Title();$/;"	v
updated	library\Zend\Gdata\App\FeedEntryParent.php	/^            $updated = new Zend_Gdata_App_Extension_Updated();$/;"	v
absoluteNodeName	library\Zend\Gdata\App\FeedSourceParent.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
element	library\Zend\Gdata\App\FeedSourceParent.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
generator	library\Zend\Gdata\App\FeedSourceParent.php	/^            $generator = new Zend_Gdata_App_Extension_Generator();$/;"	v
icon	library\Zend\Gdata\App\FeedSourceParent.php	/^            $icon = new Zend_Gdata_App_Extension_Icon();$/;"	v
logo	library\Zend\Gdata\App\FeedSourceParent.php	/^            $logo = new Zend_Gdata_App_Extension_Logo();$/;"	v
subtitle	library\Zend\Gdata\App\FeedSourceParent.php	/^            $subtitle = new Zend_Gdata_App_Extension_Subtitle();$/;"	v
Zend_Gdata_App_HttpException	library\Zend\Gdata\App\HttpException.php	/^class Zend_Gdata_App_HttpException extends Zend_Gdata_App_Exception$/;"	c
response	library\Zend\Gdata\App\HttpException.php	/^            $response = $this->getResponse();$/;"	v
Zend_Gdata_App_IOException	library\Zend\Gdata\App\IOException.php	/^class Zend_Gdata_App_IOException extends Zend_Gdata_App_Exception$/;"	c
Zend_Gdata_App_InvalidArgumentException	library\Zend\Gdata\App\InvalidArgumentException.php	/^class Zend_Gdata_App_InvalidArgumentException extends Zend_Gdata_App_Exception$/;"	c
Zend_Gdata_App_LoggingHttpClientAdapterSocket	library\Zend\Gdata\App\LoggingHttpClientAdapterSocket.php	/^class Zend_Gdata_App_LoggingHttpClientAdapterSocket extends Zend_Http_Client_Adapter_Socket$/;"	c
request	library\Zend\Gdata\App\LoggingHttpClientAdapterSocket.php	/^        $request = parent::write($method, $uri, $http_ver, $headers, $body);$/;"	v
response	library\Zend\Gdata\App\LoggingHttpClientAdapterSocket.php	/^        $response = parent::read();$/;"	v
Zend_Gdata_App_MediaEntry	library\Zend\Gdata\App\MediaEntry.php	/^class Zend_Gdata_App_MediaEntry extends Zend_Gdata_App_Entry$/;"	c
mediaSource	library\Zend\Gdata\App\MediaEntry.php	/^        $mediaSource = $this->getMediaSource();$/;"	v
xmlData	library\Zend\Gdata\App\MediaEntry.php	/^        $xmlData = $this->saveXML();$/;"	v
Zend_Gdata_App_MediaFileSource	library\Zend\Gdata\App\MediaFileSource.php	/^class Zend_Gdata_App_MediaFileSource extends Zend_Gdata_App_BaseMediaSource$/;"	c
fileHandle	library\Zend\Gdata\App\MediaFileSource.php	/^            $fileHandle = fopen($this->getFilename(), 'r', true);$/;"	v
result	library\Zend\Gdata\App\MediaFileSource.php	/^            $result = fread($fileHandle, filesize($this->getFilename()));$/;"	v
Zend_Gdata_App_Util	library\Zend\Gdata\App\Util.php	/^class Zend_Gdata_App_Util$/;"	c
found	library\Zend\Gdata\App\Util.php	/^                    $found = true;$/;"	v
found	library\Zend\Gdata\App\Util.php	/^            $found = true;$/;"	v
found	library\Zend\Gdata\App\Util.php	/^        $found = false;$/;"	v
foundKey	library\Zend\Gdata\App\Util.php	/^            $foundKey = end($keys);$/;"	v
foundKey	library\Zend\Gdata\App\Util.php	/^        $foundKey = $maximumKey;$/;"	v
keys	library\Zend\Gdata\App\Util.php	/^            $keys = array_keys($collection);$/;"	v
rfc3339	library\Zend\Gdata\App\Util.php	/^        $rfc3339 = '\/^(\\d{4})\\-?(\\d{2})\\-?(\\d{2})((T|t)(\\d{2})\\:?(\\d{2})' .$/;"	v
ts	library\Zend\Gdata\App\Util.php	/^            $ts = strtotime($timestamp);$/;"	v
Zend_Gdata_App_VersionException	library\Zend\Gdata\App\VersionException.php	/^class Zend_Gdata_App_VersionException extends Zend_Gdata_App_Exception$/;"	c
Zend_Gdata_AuthSub	library\Zend\Gdata\AuthSub.php	/^class Zend_Gdata_AuthSub$/;"	c
client	library\Zend\Gdata\AuthSub.php	/^            $client = new Zend_Gdata_HttpClient();$/;"	v
client	library\Zend\Gdata\AuthSub.php	/^        $client = self::getHttpClient($token, $client);$/;"	v
filterResult	library\Zend\Gdata\AuthSub.php	/^            $filterResult = $client->filterHttpRequest('GET', $request_uri);$/;"	v
goog_resp	library\Zend\Gdata\AuthSub.php	/^            $goog_resp = array();$/;"	v
headers	library\Zend\Gdata\AuthSub.php	/^            $headers = $filterResult['headers'];$/;"	v
l	library\Zend\Gdata\AuthSub.php	/^                $l = chop($l);$/;"	v
querystring	library\Zend\Gdata\AuthSub.php	/^         $querystring = '?next=' . urlencode($next)$/;"	v
request_uri	library\Zend\Gdata\AuthSub.php	/^                                               $request_uri = self::AUTHSUB_REQUEST_URI)$/;"	v
request_uri	library\Zend\Gdata\AuthSub.php	/^                                              $request_uri = self::AUTHSUB_REVOKE_TOKEN_URI)$/;"	v
request_uri	library\Zend\Gdata\AuthSub.php	/^            $request_uri = self::AUTHSUB_SESSION_TOKEN_URI)$/;"	v
response	library\Zend\Gdata\AuthSub.php	/^            $response = $client->request('GET');$/;"	v
url	library\Zend\Gdata\AuthSub.php	/^            $url = $filterResult['url'];$/;"	v
useragent	library\Zend\Gdata\AuthSub.php	/^        $useragent = 'Zend_Framework_Gdata\/' . Zend_Version::VERSION;$/;"	v
Zend_Gdata_Books	library\Zend\Gdata\Books.php	/^class Zend_Gdata_Books extends Zend_Gdata$/;"	c
uri	library\Zend\Gdata\Books.php	/^            $uri = $location->getQueryUrl();$/;"	v
uri	library\Zend\Gdata\Books.php	/^            $uri = $location;$/;"	v
uri	library\Zend\Gdata\Books.php	/^            $uri = self::MY_ANNOTATION_FEED_URI;$/;"	v
uri	library\Zend\Gdata\Books.php	/^            $uri = self::MY_LIBRARY_FEED_URI;$/;"	v
uri	library\Zend\Gdata\Books.php	/^            $uri = self::VOLUME_FEED_URI . "\/" . $volumeId;$/;"	v
uri	library\Zend\Gdata\Books.php	/^            $uri = self::VOLUME_FEED_URI;$/;"	v
Zend_Gdata_Books_CollectionEntry	library\Zend\Gdata\Books\CollectionEntry.php	/^class Zend_Gdata_Books_CollectionEntry extends Zend_Gdata_Entry$/;"	c
Zend_Gdata_Books_CollectionFeed	library\Zend\Gdata\Books\CollectionFeed.php	/^class Zend_Gdata_Books_CollectionFeed extends Zend_Gdata_Feed$/;"	c
Zend_Gdata_Books_Extension_AnnotationLink	library\Zend\Gdata\Books\Extension\AnnotationLink.php	/^class Zend_Gdata_Books_Extension_AnnotationLink extends$/;"	c
hrefLang	library\Zend\Gdata\Books\Extension\AnnotationLink.php	/^            $hrefLang = null, $title = null, $length = null)$/;"	v
Zend_Gdata_Books_Extension_BooksCategory	library\Zend\Gdata\Books\Extension\BooksCategory.php	/^class Zend_Gdata_Books_Extension_BooksCategory extends$/;"	c
Zend_Gdata_Books_Extension_BooksLink	library\Zend\Gdata\Books\Extension\BooksLink.php	/^class Zend_Gdata_Books_Extension_BooksLink extends Zend_Gdata_App_Extension_Link$/;"	c
hrefLang	library\Zend\Gdata\Books\Extension\BooksLink.php	/^            $hrefLang = null, $title = null, $length = null)$/;"	v
Zend_Gdata_Books_Extension_Embeddability	library\Zend\Gdata\Books\Extension\Embeddability.php	/^class Zend_Gdata_Books_Extension_Embeddability extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Books\Extension\Embeddability.php	/^        $element = parent::getDOM($doc);$/;"	v
Zend_Gdata_Books_Extension_InfoLink	library\Zend\Gdata\Books\Extension\InfoLink.php	/^class Zend_Gdata_Books_Extension_InfoLink extends$/;"	c
hrefLang	library\Zend\Gdata\Books\Extension\InfoLink.php	/^            $hrefLang = null, $title = null, $length = null)$/;"	v
Zend_Gdata_Books_Extension_PreviewLink	library\Zend\Gdata\Books\Extension\PreviewLink.php	/^class Zend_Gdata_Books_Extension_PreviewLink extends$/;"	c
hrefLang	library\Zend\Gdata\Books\Extension\PreviewLink.php	/^            $hrefLang = null, $title = null, $length = null)$/;"	v
Zend_Gdata_Books_Extension_Review	library\Zend\Gdata\Books\Extension\Review.php	/^class Zend_Gdata_Books_Extension_Review extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Books\Extension\Review.php	/^        $element = parent::getDOM($doc);$/;"	v
Zend_Gdata_Books_Extension_ThumbnailLink	library\Zend\Gdata\Books\Extension\ThumbnailLink.php	/^class Zend_Gdata_Books_Extension_ThumbnailLink extends$/;"	c
hrefLang	library\Zend\Gdata\Books\Extension\ThumbnailLink.php	/^            $hrefLang = null, $title = null, $length = null)$/;"	v
Zend_Gdata_Books_Extension_Viewability	library\Zend\Gdata\Books\Extension\Viewability.php	/^class Zend_Gdata_Books_Extension_Viewability extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Books\Extension\Viewability.php	/^        $element = parent::getDOM($doc);$/;"	v
Zend_Gdata_Books_VolumeEntry	library\Zend\Gdata\Books\VolumeEntry.php	/^class Zend_Gdata_Books_VolumeEntry extends Zend_Gdata_Entry$/;"	c
absoluteNodeName	library\Zend\Gdata\Books\VolumeEntry.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
comments	library\Zend\Gdata\Books\VolumeEntry.php	/^            $comments = new Zend_Gdata_Extension_Comments();$/;"	v
creators	library\Zend\Gdata\Books\VolumeEntry.php	/^            $creators = new Zend_Gdata_DublinCore_Extension_Creator();$/;"	v
dates	library\Zend\Gdata\Books\VolumeEntry.php	/^            $dates = new Zend_Gdata_DublinCore_Extension_Date();$/;"	v
descriptions	library\Zend\Gdata\Books\VolumeEntry.php	/^            $descriptions = new Zend_Gdata_DublinCore_Extension_Description();$/;"	v
element	library\Zend\Gdata\Books\VolumeEntry.php	/^        $element = parent::getDOM($doc);$/;"	v
embeddability	library\Zend\Gdata\Books\VolumeEntry.php	/^            $embeddability = new Zend_Gdata_Books_Extension_Embeddability();$/;"	v
formats	library\Zend\Gdata\Books\VolumeEntry.php	/^            $formats = new Zend_Gdata_DublinCore_Extension_Format();$/;"	v
fullId	library\Zend\Gdata\Books\VolumeEntry.php	/^        $fullId = $this->getId()->getText();$/;"	v
identifiers	library\Zend\Gdata\Books\VolumeEntry.php	/^            $identifiers = new Zend_Gdata_DublinCore_Extension_Identifier();$/;"	v
languages	library\Zend\Gdata\Books\VolumeEntry.php	/^            $languages = new Zend_Gdata_DublinCore_Extension_Language();$/;"	v
position	library\Zend\Gdata\Books\VolumeEntry.php	/^        $position = strrpos($fullId, '\/');$/;"	v
publishers	library\Zend\Gdata\Books\VolumeEntry.php	/^            $publishers = new Zend_Gdata_DublinCore_Extension_Publisher();$/;"	v
rating	library\Zend\Gdata\Books\VolumeEntry.php	/^            $rating = new Zend_Gdata_Extension_Rating();$/;"	v
review	library\Zend\Gdata\Books\VolumeEntry.php	/^            $review = new Zend_Gdata_Books_Extension_Review();$/;"	v
subjects	library\Zend\Gdata\Books\VolumeEntry.php	/^            $subjects = new Zend_Gdata_DublinCore_Extension_Subject();$/;"	v
titles	library\Zend\Gdata\Books\VolumeEntry.php	/^            $titles = new Zend_Gdata_DublinCore_Extension_Title();$/;"	v
viewability	library\Zend\Gdata\Books\VolumeEntry.php	/^            $viewability = new Zend_Gdata_Books_Extension_Viewability();$/;"	v
Zend_Gdata_Books_VolumeFeed	library\Zend\Gdata\Books\VolumeFeed.php	/^class Zend_Gdata_Books_VolumeFeed extends Zend_Gdata_Feed$/;"	c
Zend_Gdata_Books_VolumeQuery	library\Zend\Gdata\Books\VolumeQuery.php	/^class Zend_Gdata_Books_VolumeQuery extends Zend_Gdata_Query$/;"	c
url	library\Zend\Gdata\Books\VolumeQuery.php	/^            $url = $this->_url;$/;"	v
url	library\Zend\Gdata\Books\VolumeQuery.php	/^            $url = Zend_Gdata_Books::VOLUME_FEED_URI;$/;"	v
url	library\Zend\Gdata\Books\VolumeQuery.php	/^        $url = $url . $this->getQueryString();$/;"	v
Zend_Gdata_Calendar	library\Zend\Gdata\Calendar.php	/^class Zend_Gdata_Calendar extends Zend_Gdata$/;"	c
newEvent	library\Zend\Gdata\Calendar.php	/^        $newEvent = $this->insertEntry($event, $uri, 'Zend_Gdata_Calendar_EventEntry');$/;"	v
uri	library\Zend\Gdata\Calendar.php	/^            $uri = $location->getQueryUrl();$/;"	v
uri	library\Zend\Gdata\Calendar.php	/^            $uri = $location;$/;"	v
uri	library\Zend\Gdata\Calendar.php	/^            $uri = $this->_defaultPostUri;$/;"	v
uri	library\Zend\Gdata\Calendar.php	/^            $uri = self::CALENDAR_EVENT_FEED_URI;$/;"	v
uri	library\Zend\Gdata\Calendar.php	/^        $uri = self::CALENDAR_FEED_URI . '\/default';$/;"	v
Zend_Gdata_Calendar_EventEntry	library\Zend\Gdata\Calendar\EventEntry.php	/^class Zend_Gdata_Calendar_EventEntry extends Zend_Gdata_Kind_EventEntry$/;"	c
absoluteNodeName	library\Zend\Gdata\Calendar\EventEntry.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
element	library\Zend\Gdata\Calendar\EventEntry.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
link	library\Zend\Gdata\Calendar\EventEntry.php	/^                $link = new Zend_Gdata_Calendar_Extension_Link();$/;"	v
quickadd	library\Zend\Gdata\Calendar\EventEntry.php	/^                $quickadd = new Zend_Gdata_Calendar_Extension_QuickAdd();$/;"	v
sendEventNotifications	library\Zend\Gdata\Calendar\EventEntry.php	/^                $sendEventNotifications = new Zend_Gdata_Calendar_Extension_SendEventNotifications();$/;"	v
timezone	library\Zend\Gdata\Calendar\EventEntry.php	/^                $timezone = new Zend_Gdata_Calendar_Extension_Timezone();$/;"	v
Zend_Gdata_Calendar_EventFeed	library\Zend\Gdata\Calendar\EventFeed.php	/^class Zend_Gdata_Calendar_EventFeed extends Zend_Gdata_Feed$/;"	c
absoluteNodeName	library\Zend\Gdata\Calendar\EventFeed.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
element	library\Zend\Gdata\Calendar\EventFeed.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
timezone	library\Zend\Gdata\Calendar\EventFeed.php	/^                $timezone = new Zend_Gdata_Calendar_Extension_Timezone();$/;"	v
Zend_Gdata_Calendar_EventQuery	library\Zend\Gdata\Calendar\EventQuery.php	/^class Zend_Gdata_Calendar_EventQuery extends Zend_Gdata_Query$/;"	c
uri	library\Zend\Gdata\Calendar\EventQuery.php	/^            $uri = $this->_defaultFeedUri;$/;"	v
uri	library\Zend\Gdata\Calendar\EventQuery.php	/^            $uri = $this->_url;$/;"	v
value	library\Zend\Gdata\Calendar\EventQuery.php	/^            $value = $this->_params['futureevents'];$/;"	v
value	library\Zend\Gdata\Calendar\EventQuery.php	/^            $value = $this->_params['singleevents'];$/;"	v
Zend_Gdata_Calendar_Extension_AccessLevel	library\Zend\Gdata\Calendar\Extension\AccessLevel.php	/^class Zend_Gdata_Calendar_Extension_AccessLevel extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Calendar\Extension\AccessLevel.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_Calendar_Extension_Color	library\Zend\Gdata\Calendar\Extension\Color.php	/^class Zend_Gdata_Calendar_Extension_Color extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Calendar\Extension\Color.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_Calendar_Extension_Hidden	library\Zend\Gdata\Calendar\Extension\Hidden.php	/^class Zend_Gdata_Calendar_Extension_Hidden extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Calendar\Extension\Hidden.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_Calendar_Extension_Link	library\Zend\Gdata\Calendar\Extension\Link.php	/^class Zend_Gdata_Calendar_Extension_Link extends Zend_Gdata_App_Extension_Link$/;"	c
absoluteNodeName	library\Zend\Gdata\Calendar\Extension\Link.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
element	library\Zend\Gdata\Calendar\Extension\Link.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
hrefLang	library\Zend\Gdata\Calendar\Extension\Link.php	/^            $hrefLang = null, $title = null, $length = null, $webContent = null)$/;"	v
webContent	library\Zend\Gdata\Calendar\Extension\Link.php	/^            $webContent = new Zend_Gdata_Calendar_Extension_WebContent();$/;"	v
Zend_Gdata_Calendar_Extension_QuickAdd	library\Zend\Gdata\Calendar\Extension\QuickAdd.php	/^class Zend_Gdata_Calendar_Extension_QuickAdd extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Calendar\Extension\QuickAdd.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_Calendar_Extension_Selected	library\Zend\Gdata\Calendar\Extension\Selected.php	/^class Zend_Gdata_Calendar_Extension_Selected extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Calendar\Extension\Selected.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_Calendar_Extension_SendEventNotifications	library\Zend\Gdata\Calendar\Extension\SendEventNotifications.php	/^class Zend_Gdata_Calendar_Extension_SendEventNotifications extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Calendar\Extension\SendEventNotifications.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_Calendar_Extension_Timezone	library\Zend\Gdata\Calendar\Extension\Timezone.php	/^class Zend_Gdata_Calendar_Extension_Timezone extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Calendar\Extension\Timezone.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_Calendar_Extension_WebContent	library\Zend\Gdata\Calendar\Extension\WebContent.php	/^class Zend_Gdata_Calendar_Extension_WebContent extends Zend_Gdata_App_Extension$/;"	c
element	library\Zend\Gdata\Calendar\Extension\WebContent.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_Calendar_ListEntry	library\Zend\Gdata\Calendar\ListEntry.php	/^class Zend_Gdata_Calendar_ListEntry extends Zend_Gdata_Entry$/;"	c
absoluteNodeName	library\Zend\Gdata\Calendar\ListEntry.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
accessLevel	library\Zend\Gdata\Calendar\ListEntry.php	/^            $accessLevel = new Zend_Gdata_Calendar_Extension_AccessLevel();$/;"	v
color	library\Zend\Gdata\Calendar\ListEntry.php	/^            $color = new Zend_Gdata_Calendar_Extension_Color();$/;"	v
element	library\Zend\Gdata\Calendar\ListEntry.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
hidden	library\Zend\Gdata\Calendar\ListEntry.php	/^            $hidden = new Zend_Gdata_Calendar_Extension_Hidden();$/;"	v
selected	library\Zend\Gdata\Calendar\ListEntry.php	/^            $selected = new Zend_Gdata_Calendar_Extension_Selected();$/;"	v
timezone	library\Zend\Gdata\Calendar\ListEntry.php	/^            $timezone = new Zend_Gdata_Calendar_Extension_Timezone();$/;"	v
where	library\Zend\Gdata\Calendar\ListEntry.php	/^            $where = new Zend_Gdata_Extension_Where();$/;"	v
Zend_Gdata_Calendar_ListFeed	library\Zend\Gdata\Calendar\ListFeed.php	/^class Zend_Gdata_Calendar_ListFeed extends Zend_Gdata_Feed$/;"	c
absoluteNodeName	library\Zend\Gdata\Calendar\ListFeed.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
element	library\Zend\Gdata\Calendar\ListFeed.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
timezone	library\Zend\Gdata\Calendar\ListFeed.php	/^            $timezone = new Zend_Gdata_Calendar_Extension_Timezone();$/;"	v
Zend_Gdata_ClientLogin	library\Zend\Gdata\ClientLogin.php	/^class Zend_Gdata_ClientLogin$/;"	c
accountType	library\Zend\Gdata\ClientLogin.php	/^        $accountType = 'HOSTED_OR_GOOGLE')$/;"	v
client	library\Zend\Gdata\ClientLogin.php	/^            $client = new Zend_Gdata_HttpClient();$/;"	v
client	library\Zend\Gdata\ClientLogin.php	/^        $client = null,$/;"	v
goog_resp	library\Zend\Gdata\ClientLogin.php	/^        $goog_resp = array();$/;"	v
l	library\Zend\Gdata\ClientLogin.php	/^            $l = chop($l);$/;"	v
loginCaptcha	library\Zend\Gdata\ClientLogin.php	/^        $loginCaptcha = null,$/;"	v
loginToken	library\Zend\Gdata\ClientLogin.php	/^        $loginToken = null,$/;"	v
loginUri	library\Zend\Gdata\ClientLogin.php	/^        $loginUri = self::CLIENTLOGIN_URI,$/;"	v
response	library\Zend\Gdata\ClientLogin.php	/^            $response = $client->request('POST');$/;"	v
source	library\Zend\Gdata\ClientLogin.php	/^        $source = self::DEFAULT_SOURCE,$/;"	v
useragent	library\Zend\Gdata\ClientLogin.php	/^            $useragent = $source . ' Zend_Framework_Gdata\/' . Zend_Version::VERSION;$/;"	v
useragent	library\Zend\Gdata\ClientLogin.php	/^        $useragent = $source . ' Zend_Framework_Gdata\/' . Zend_Version::VERSION;$/;"	v
Zend_Gdata_Docs	library\Zend\Gdata\Docs.php	/^class Zend_Gdata_Docs extends Zend_Gdata$/;"	c
category	library\Zend\Gdata\Docs.php	/^        $category = new Zend_Gdata_App_Extension_Category(self::DOCUMENTS_CATEGORY_TERM,$/;"	v
className	library\Zend\Gdata\Docs.php	/^        $className='Zend_Gdata_Docs_DocumentListEntry')$/;"	v
entry	library\Zend\Gdata\Docs.php	/^        $entry = new Zend_Gdata_Entry();$/;"	v
fileExtension	library\Zend\Gdata\Docs.php	/^          $fileExtension = end($filenameParts);$/;"	v
filenameParts	library\Zend\Gdata\Docs.php	/^          $filenameParts = explode('.', $fileLocation);$/;"	v
fs	library\Zend\Gdata\Docs.php	/^        $fs = $this->newMediaFileSource($fileLocation);$/;"	v
location	library\Zend\Gdata\Docs.php	/^        $location = 'https:\/\/docs.google.com\/feeds\/documents\/private\/full\/' .$/;"	v
mimeType	library\Zend\Gdata\Docs.php	/^          $mimeType = self::lookupMimeType($fileExtension);$/;"	v
slugHeader	library\Zend\Gdata\Docs.php	/^            $slugHeader = $fileLocation;$/;"	v
slugHeader	library\Zend\Gdata\Docs.php	/^            $slugHeader = $title;$/;"	v
title	library\Zend\Gdata\Docs.php	/^        $title = new Zend_Gdata_App_Extension_Title($folderName);$/;"	v
uri	library\Zend\Gdata\Docs.php	/^                               $uri=null)$/;"	v
uri	library\Zend\Gdata\Docs.php	/^            $uri = $location->getQueryUrl();$/;"	v
uri	library\Zend\Gdata\Docs.php	/^            $uri = $location;$/;"	v
uri	library\Zend\Gdata\Docs.php	/^            $uri = $this->_defaultPostUri;$/;"	v
uri	library\Zend\Gdata\Docs.php	/^            $uri = self::DOCUMENTS_FOLDER_FEED_URI . '\/' . $folderResourceId;$/;"	v
uri	library\Zend\Gdata\Docs.php	/^            $uri = self::DOCUMENTS_LIST_FEED_URI;$/;"	v
uri	library\Zend\Gdata\Docs.php	/^        $uri = self::DOCUMENTS_LIST_FEED_URI;$/;"	v
Zend_Gdata_Docs_DocumentListEntry	library\Zend\Gdata\Docs\DocumentListEntry.php	/^class Zend_Gdata_Docs_DocumentListEntry extends Zend_Gdata_Entry$/;"	c
Zend_Gdata_Docs_DocumentListFeed	library\Zend\Gdata\Docs\DocumentListFeed.php	/^class Zend_Gdata_Docs_DocumentListFeed extends Zend_Gdata_Feed$/;"	c
Zend_Gdata_Docs_Query	library\Zend\Gdata\Docs\Query.php	/^class Zend_Gdata_Docs_Query extends Zend_Gdata_Query$/;"	c
uri	library\Zend\Gdata\Docs\Query.php	/^        $uri = $this->_defaultFeedUri;$/;"	v
Zend_Gdata_DublinCore	library\Zend\Gdata\DublinCore.php	/^class Zend_Gdata_DublinCore extends Zend_Gdata$/;"	c
Zend_Gdata_DublinCore_Extension_Creator	library\Zend\Gdata\DublinCore\Extension\Creator.php	/^class Zend_Gdata_DublinCore_Extension_Creator extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_DublinCore_Extension_Date	library\Zend\Gdata\DublinCore\Extension\Date.php	/^class Zend_Gdata_DublinCore_Extension_Date extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_DublinCore_Extension_Description	library\Zend\Gdata\DublinCore\Extension\Description.php	/^class Zend_Gdata_DublinCore_Extension_Description extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_DublinCore_Extension_Format	library\Zend\Gdata\DublinCore\Extension\Format.php	/^class Zend_Gdata_DublinCore_Extension_Format extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_DublinCore_Extension_Identifier	library\Zend\Gdata\DublinCore\Extension\Identifier.php	/^class Zend_Gdata_DublinCore_Extension_Identifier extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_DublinCore_Extension_Language	library\Zend\Gdata\DublinCore\Extension\Language.php	/^class Zend_Gdata_DublinCore_Extension_Language extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_DublinCore_Extension_Publisher	library\Zend\Gdata\DublinCore\Extension\Publisher.php	/^class Zend_Gdata_DublinCore_Extension_Publisher extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_DublinCore_Extension_Rights	library\Zend\Gdata\DublinCore\Extension\Rights.php	/^class Zend_Gdata_DublinCore_Extension_Rights extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_DublinCore_Extension_Subject	library\Zend\Gdata\DublinCore\Extension\Subject.php	/^class Zend_Gdata_DublinCore_Extension_Subject extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_DublinCore_Extension_Title	library\Zend\Gdata\DublinCore\Extension\Title.php	/^class Zend_Gdata_DublinCore_Extension_Title extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Entry	library\Zend\Gdata\Entry.php	/^class Zend_Gdata_Entry extends Zend_Gdata_App_MediaEntry$/;"	c
absoluteNodeName	library\Zend\Gdata\Entry.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
content	library\Zend\Gdata\Entry.php	/^            $content = new Zend_Gdata_App_Extension_Content();$/;"	v
control	library\Zend\Gdata\Entry.php	/^            $control = new Zend_Gdata_App_Extension_Control();$/;"	v
element	library\Zend\Gdata\Entry.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
etag	library\Zend\Gdata\Entry.php	/^            $etag = $attribute->nodeValue;$/;"	v
published	library\Zend\Gdata\Entry.php	/^            $published = new Zend_Gdata_App_Extension_Published();$/;"	v
source	library\Zend\Gdata\Entry.php	/^            $source = new Zend_Gdata_App_Extension_Source();$/;"	v
summary	library\Zend\Gdata\Entry.php	/^            $summary = new Zend_Gdata_App_Extension_Summary();$/;"	v
Zend_Gdata_Exif	library\Zend\Gdata\Exif.php	/^class Zend_Gdata_Exif extends Zend_Gdata$/;"	c
Zend_Gdata_Exif_Entry	library\Zend\Gdata\Exif\Entry.php	/^class Zend_Gdata_Exif_Entry extends Zend_Gdata_Entry$/;"	c
absoluteNodeName	library\Zend\Gdata\Exif\Entry.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
element	library\Zend\Gdata\Exif\Entry.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
tags	library\Zend\Gdata\Exif\Entry.php	/^            $tags = new Zend_Gdata_Exif_Extension_Tags();$/;"	v
Zend_Gdata_Exif_Extension_Distance	library\Zend\Gdata\Exif\Extension\Distance.php	/^class Zend_Gdata_Exif_Extension_Distance extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Exif_Extension_Exposure	library\Zend\Gdata\Exif\Extension\Exposure.php	/^class Zend_Gdata_Exif_Extension_Exposure extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Exif_Extension_FStop	library\Zend\Gdata\Exif\Extension\FStop.php	/^class Zend_Gdata_Exif_Extension_FStop extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Exif_Extension_Flash	library\Zend\Gdata\Exif\Extension\Flash.php	/^class Zend_Gdata_Exif_Extension_Flash extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Exif_Extension_FocalLength	library\Zend\Gdata\Exif\Extension\FocalLength.php	/^class Zend_Gdata_Exif_Extension_FocalLength extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Exif_Extension_ImageUniqueId	library\Zend\Gdata\Exif\Extension\ImageUniqueId.php	/^class Zend_Gdata_Exif_Extension_ImageUniqueId extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Exif_Extension_Iso	library\Zend\Gdata\Exif\Extension\Iso.php	/^class Zend_Gdata_Exif_Extension_Iso extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Exif_Extension_Make	library\Zend\Gdata\Exif\Extension\Make.php	/^class Zend_Gdata_Exif_Extension_Make extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Exif_Extension_Model	library\Zend\Gdata\Exif\Extension\Model.php	/^class Zend_Gdata_Exif_Extension_Model extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Exif_Extension_Tags	library\Zend\Gdata\Exif\Extension\Tags.php	/^class Zend_Gdata_Exif_Extension_Tags extends Zend_Gdata_Extension$/;"	c
absoluteNodeName	library\Zend\Gdata\Exif\Extension\Tags.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
distance	library\Zend\Gdata\Exif\Extension\Tags.php	/^                $distance = new Zend_Gdata_Exif_Extension_Distance();$/;"	v
element	library\Zend\Gdata\Exif\Extension\Tags.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
exposure	library\Zend\Gdata\Exif\Extension\Tags.php	/^                $exposure = new Zend_Gdata_Exif_Extension_Exposure();$/;"	v
fStop	library\Zend\Gdata\Exif\Extension\Tags.php	/^                $fStop = new Zend_Gdata_Exif_Extension_FStop();$/;"	v
flash	library\Zend\Gdata\Exif\Extension\Tags.php	/^                $flash = new Zend_Gdata_Exif_Extension_Flash();$/;"	v
flash	library\Zend\Gdata\Exif\Extension\Tags.php	/^            $flash = null, $focalLength = null, $fStop = null,$/;"	v
focalLength	library\Zend\Gdata\Exif\Extension\Tags.php	/^                $focalLength = new Zend_Gdata_Exif_Extension_FocalLength();$/;"	v
imageUniqueId	library\Zend\Gdata\Exif\Extension\Tags.php	/^                $imageUniqueId = new Zend_Gdata_Exif_Extension_ImageUniqueId();$/;"	v
imageUniqueId	library\Zend\Gdata\Exif\Extension\Tags.php	/^            $imageUniqueId = null, $iso = null, $make = null,$/;"	v
iso	library\Zend\Gdata\Exif\Extension\Tags.php	/^                $iso = new Zend_Gdata_Exif_Extension_Iso();$/;"	v
make	library\Zend\Gdata\Exif\Extension\Tags.php	/^                $make = new Zend_Gdata_Exif_Extension_Make();$/;"	v
model	library\Zend\Gdata\Exif\Extension\Tags.php	/^                $model = new Zend_Gdata_Exif_Extension_Model();$/;"	v
model	library\Zend\Gdata\Exif\Extension\Tags.php	/^            $model = null, $time = null)$/;"	v
time	library\Zend\Gdata\Exif\Extension\Tags.php	/^                $time = new Zend_Gdata_Exif_Extension_Time();$/;"	v
Zend_Gdata_Exif_Extension_Time	library\Zend\Gdata\Exif\Extension\Time.php	/^class Zend_Gdata_Exif_Extension_Time extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Exif_Feed	library\Zend\Gdata\Exif\Feed.php	/^class Zend_Gdata_Exif_Feed extends Zend_Gdata_Feed$/;"	c
Zend_Gdata_Extension	library\Zend\Gdata\Extension.php	/^class Zend_Gdata_Extension extends Zend_Gdata_App_Extension$/;"	c
Zend_Gdata_Extension_AttendeeStatus	library\Zend\Gdata\Extension\AttendeeStatus.php	/^class Zend_Gdata_Extension_AttendeeStatus extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Extension\AttendeeStatus.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_Extension_AttendeeType	library\Zend\Gdata\Extension\AttendeeType.php	/^class Zend_Gdata_Extension_AttendeeType extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Extension\AttendeeType.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_Extension_Comments	library\Zend\Gdata\Extension\Comments.php	/^class Zend_Gdata_Extension_Comments extends Zend_Gdata_Extension$/;"	c
absoluteNodeName	library\Zend\Gdata\Extension\Comments.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
element	library\Zend\Gdata\Extension\Comments.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
feedLink	library\Zend\Gdata\Extension\Comments.php	/^                $feedLink = new Zend_Gdata_Extension_FeedLink();$/;"	v
Zend_Gdata_Extension_EntryLink	library\Zend\Gdata\Extension\EntryLink.php	/^class Zend_Gdata_Extension_EntryLink extends Zend_Gdata_Extension$/;"	c
absoluteNodeName	library\Zend\Gdata\Extension\EntryLink.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
element	library\Zend\Gdata\Extension\EntryLink.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
entry	library\Zend\Gdata\Extension\EntryLink.php	/^                $entry = new Zend_Gdata_Entry();$/;"	v
readOnly	library\Zend\Gdata\Extension\EntryLink.php	/^            $readOnly = null, $entry = null)$/;"	v
Zend_Gdata_Extension_EventStatus	library\Zend\Gdata\Extension\EventStatus.php	/^class Zend_Gdata_Extension_EventStatus extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Extension\EventStatus.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_Extension_ExtendedProperty	library\Zend\Gdata\Extension\ExtendedProperty.php	/^class Zend_Gdata_Extension_ExtendedProperty extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Extension\ExtendedProperty.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_Extension_FeedLink	library\Zend\Gdata\Extension\FeedLink.php	/^class Zend_Gdata_Extension_FeedLink extends Zend_Gdata_Extension$/;"	c
absoluteNodeName	library\Zend\Gdata\Extension\FeedLink.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
countHint	library\Zend\Gdata\Extension\FeedLink.php	/^            $countHint = null, $readOnly = null, $feed = null)$/;"	v
element	library\Zend\Gdata\Extension\FeedLink.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
feed	library\Zend\Gdata\Extension\FeedLink.php	/^                $feed = new Zend_Gdata_Feed();$/;"	v
Zend_Gdata_Extension_OpenSearchItemsPerPage	library\Zend\Gdata\Extension\OpenSearchItemsPerPage.php	/^class Zend_Gdata_Extension_OpenSearchItemsPerPage extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Extension_OpenSearchStartIndex	library\Zend\Gdata\Extension\OpenSearchStartIndex.php	/^class Zend_Gdata_Extension_OpenSearchStartIndex extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Extension_OpenSearchTotalResults	library\Zend\Gdata\Extension\OpenSearchTotalResults.php	/^class Zend_Gdata_Extension_OpenSearchTotalResults extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Extension_OriginalEvent	library\Zend\Gdata\Extension\OriginalEvent.php	/^class Zend_Gdata_Extension_OriginalEvent extends Zend_Gdata_Extension$/;"	c
absoluteNodeName	library\Zend\Gdata\Extension\OriginalEvent.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
element	library\Zend\Gdata\Extension\OriginalEvent.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
when	library\Zend\Gdata\Extension\OriginalEvent.php	/^                $when = new Zend_Gdata_Extension_When();$/;"	v
Zend_Gdata_Extension_Rating	library\Zend\Gdata\Extension\Rating.php	/^class Zend_Gdata_Extension_Rating extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Extension\Rating.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
max	library\Zend\Gdata\Extension\Rating.php	/^            $max = null, $numRaters = null, $value = null)$/;"	v
Zend_Gdata_Extension_Recurrence	library\Zend\Gdata\Extension\Recurrence.php	/^class Zend_Gdata_Extension_Recurrence extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Extension_RecurrenceException	library\Zend\Gdata\Extension\RecurrenceException.php	/^class Zend_Gdata_Extension_RecurrenceException extends Zend_Gdata_Extension$/;"	c
absoluteNodeName	library\Zend\Gdata\Extension\RecurrenceException.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
element	library\Zend\Gdata\Extension\RecurrenceException.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
entryLink	library\Zend\Gdata\Extension\RecurrenceException.php	/^            $entryLink = new Zend_Gdata_Extension_EntryLink();$/;"	v
originalEvent	library\Zend\Gdata\Extension\RecurrenceException.php	/^            $originalEvent = new Zend_Gdata_Extension_OriginalEvent();$/;"	v
originalEvent	library\Zend\Gdata\Extension\RecurrenceException.php	/^            $originalEvent = null)$/;"	v
Zend_Gdata_Extension_Reminder	library\Zend\Gdata\Extension\Reminder.php	/^class Zend_Gdata_Extension_Reminder extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Extension\Reminder.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
hours	library\Zend\Gdata\Extension\Reminder.php	/^            $hours = null, $minutes = null)$/;"	v
s	library\Zend\Gdata\Extension\Reminder.php	/^            $s = " at " . $this->_absoluteTime;$/;"	v
s	library\Zend\Gdata\Extension\Reminder.php	/^            $s = " in " . $this->_days . " days";$/;"	v
s	library\Zend\Gdata\Extension\Reminder.php	/^            $s = " in " . $this->_hours . " hours";$/;"	v
s	library\Zend\Gdata\Extension\Reminder.php	/^            $s = " in " . $this->_minutes . " minutes";$/;"	v
s	library\Zend\Gdata\Extension\Reminder.php	/^        $s = '';$/;"	v
Zend_Gdata_Extension_Transparency	library\Zend\Gdata\Extension\Transparency.php	/^class Zend_Gdata_Extension_Transparency extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Extension\Transparency.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_Extension_Visibility	library\Zend\Gdata\Extension\Visibility.php	/^class Zend_Gdata_Extension_Visibility extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Extension\Visibility.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_Extension_When	library\Zend\Gdata\Extension\When.php	/^class Zend_Gdata_Extension_When extends Zend_Gdata_Extension$/;"	c
absoluteNodeName	library\Zend\Gdata\Extension\When.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
element	library\Zend\Gdata\Extension\When.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
reminder	library\Zend\Gdata\Extension\When.php	/^                $reminder = new Zend_Gdata_Extension_Reminder();$/;"	v
valueString	library\Zend\Gdata\Extension\When.php	/^            $valueString = null, $reminders = null)$/;"	v
Zend_Gdata_Extension_Where	library\Zend\Gdata\Extension\Where.php	/^class Zend_Gdata_Extension_Where extends Zend_Gdata_Extension$/;"	c
absoluteNodeName	library\Zend\Gdata\Extension\Where.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
element	library\Zend\Gdata\Extension\Where.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
entryLink	library\Zend\Gdata\Extension\Where.php	/^            $entryLink = new Zend_Gdata_Extension_EntryLink();$/;"	v
Zend_Gdata_Extension_Who	library\Zend\Gdata\Extension\Who.php	/^class Zend_Gdata_Extension_Who extends Zend_Gdata_Extension$/;"	c
absoluteNodeName	library\Zend\Gdata\Extension\Who.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
attendeeStatus	library\Zend\Gdata\Extension\Who.php	/^            $attendeeStatus = new Zend_Gdata_Extension_AttendeeStatus();$/;"	v
attendeeStatus	library\Zend\Gdata\Extension\Who.php	/^        $attendeeStatus = null, $attendeeType = null, $entryLink = null)$/;"	v
attendeeType	library\Zend\Gdata\Extension\Who.php	/^            $attendeeType = new Zend_Gdata_Extension_AttendeeType();$/;"	v
element	library\Zend\Gdata\Extension\Who.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
entryLink	library\Zend\Gdata\Extension\Who.php	/^            $entryLink = new Zend_Gdata_Extension_EntryLink();$/;"	v
Zend_Gdata_Feed	library\Zend\Gdata\Feed.php	/^class Zend_Gdata_Feed extends Zend_Gdata_App_Feed$/;"	c
absoluteNodeName	library\Zend\Gdata\Feed.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
element	library\Zend\Gdata\Feed.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
etag	library\Zend\Gdata\Feed.php	/^            $etag = $attribute->nodeValue;$/;"	v
getItemsPerPage	library\Zend\Gdata\Feed.php	/^    function getItemsPerPage() {$/;"	f
getStartIndex	library\Zend\Gdata\Feed.php	/^    function getStartIndex() {$/;"	f
getTotalResults	library\Zend\Gdata\Feed.php	/^    function getTotalResults() {$/;"	f
itemsPerPage	library\Zend\Gdata\Feed.php	/^            $itemsPerPage = new Zend_Gdata_Extension_OpenSearchItemsPerPage();$/;"	v
setItemsPerPage	library\Zend\Gdata\Feed.php	/^    function setItemsPerPage($value) {$/;"	f
setStartIndex	library\Zend\Gdata\Feed.php	/^    function setStartIndex($value) {$/;"	f
setTotalResults	library\Zend\Gdata\Feed.php	/^    function setTotalResults($value) {$/;"	f
startIndex	library\Zend\Gdata\Feed.php	/^            $startIndex = new Zend_Gdata_Extension_OpenSearchStartIndex();$/;"	v
totalResults	library\Zend\Gdata\Feed.php	/^            $totalResults = new Zend_Gdata_Extension_OpenSearchTotalResults();$/;"	v
Zend_Gdata_Gapps	library\Zend\Gdata\Gapps.php	/^class Zend_Gdata_Gapps extends Zend_Gdata$/;"	c
address	library\Zend\Gdata\Gapps.php	/^        $address = $this->getBaseUrl() .  self::APPS_EMAIL_LIST_PATH . '\/' .$/;"	v
args	library\Zend\Gdata\Gapps.php	/^                $args = array_merge(array($this->getDomain()), $args);$/;"	v
class	library\Zend\Gdata\Gapps.php	/^            $class = $matches[1];$/;"	v
contentType	library\Zend\Gdata\Gapps.php	/^            $contentType = null, $extraHeaders = null)$/;"	v
emailPermission	library\Zend\Gdata\Gapps.php	/^            $emailPermission = null)$/;"	v
entry	library\Zend\Gdata\Gapps.php	/^        $entry = $this->newEmailListEntry();$/;"	v
entry	library\Zend\Gdata\Gapps.php	/^        $entry = $this->newEmailListRecipientEntry();$/;"	v
entry	library\Zend\Gdata\Gapps.php	/^        $entry = $this->newNicknameEntry();$/;"	v
error	library\Zend\Gdata\Gapps.php	/^            $error = new Zend_Gdata_Gapps_ServiceException();$/;"	v
foundClassName	library\Zend\Gdata\Gapps.php	/^                     $foundClassName = $name . '_' . $class;$/;"	v
foundClassName	library\Zend\Gdata\Gapps.php	/^            $foundClassName = null;$/;"	v
group	library\Zend\Gdata\Gapps.php	/^                $group = null;$/;"	v
group	library\Zend\Gdata\Gapps.php	/^            $group = $this->getGroupEntry($query);$/;"	v
group	library\Zend\Gdata\Gapps.php	/^        $group = $this->newGroupEntry();$/;"	v
i	library\Zend\Gdata\Gapps.php	/^        $i = 0;$/;"	v
list	library\Zend\Gdata\Gapps.php	/^        $list = $this->newEmailList();$/;"	v
login	library\Zend\Gdata\Gapps.php	/^        $login = $this->newLogin($username);$/;"	v
member	library\Zend\Gdata\Gapps.php	/^        $member = $this->newMemberEntry();$/;"	v
newEntry	library\Zend\Gdata\Gapps.php	/^        $newEntry = $this->insertEntry($emailList, $uri, 'Zend_Gdata_Gapps_EmailListEntry');$/;"	v
newEntry	library\Zend\Gdata\Gapps.php	/^        $newEntry = $this->insertEntry($group, $uri, 'Zend_Gdata_Gapps_GroupEntry');$/;"	v
newEntry	library\Zend\Gdata\Gapps.php	/^        $newEntry = $this->insertEntry($member, $uri, 'Zend_Gdata_Gapps_MemberEntry');$/;"	v
newEntry	library\Zend\Gdata\Gapps.php	/^        $newEntry = $this->insertEntry($nickname, $uri, 'Zend_Gdata_Gapps_NicknameEntry');$/;"	v
newEntry	library\Zend\Gdata\Gapps.php	/^        $newEntry = $this->insertEntry($owner, $uri, 'Zend_Gdata_Gapps_OwnerEntry');$/;"	v
newEntry	library\Zend\Gdata\Gapps.php	/^        $newEntry = $this->insertEntry($recipient, $uri, 'Zend_Gdata_Gapps_EmailListRecipientEntry');$/;"	v
newEntry	library\Zend\Gdata\Gapps.php	/^        $newEntry = $this->insertEntry($user, $uri, 'Zend_Gdata_Gapps_UserEntry');$/;"	v
nickname	library\Zend\Gdata\Gapps.php	/^                $nickname = null;$/;"	v
nickname	library\Zend\Gdata\Gapps.php	/^            $nickname = $this->getNicknameEntry($query);$/;"	v
nickname	library\Zend\Gdata\Gapps.php	/^        $nickname = $this->newNickname($nickname);$/;"	v
nicknameFeed	library\Zend\Gdata\Gapps.php	/^        $nicknameFeed = $this->retrieveAllEntriesForFeed($/;"	v
owner	library\Zend\Gdata\Gapps.php	/^        $owner = $this->newOwnerEntry();$/;"	v
passwordHashFunction	library\Zend\Gdata\Gapps.php	/^            $passwordHashFunction = null, $quotaLimitInMB = null) {$/;"	v
query	library\Zend\Gdata\Gapps.php	/^        $query = $this->newEmailListQuery();$/;"	v
query	library\Zend\Gdata\Gapps.php	/^        $query = $this->newEmailListRecipientQuery();$/;"	v
query	library\Zend\Gdata\Gapps.php	/^        $query = $this->newGroupQuery($groupId);$/;"	v
query	library\Zend\Gdata\Gapps.php	/^        $query = $this->newGroupQuery();$/;"	v
query	library\Zend\Gdata\Gapps.php	/^        $query = $this->newMemberQuery($groupId);$/;"	v
query	library\Zend\Gdata\Gapps.php	/^        $query = $this->newNicknameQuery();$/;"	v
query	library\Zend\Gdata\Gapps.php	/^        $query = $this->newUserQuery($username);$/;"	v
query	library\Zend\Gdata\Gapps.php	/^        $query = $this->newUserQuery();$/;"	v
reflectionObj	library\Zend\Gdata\Gapps.php	/^                $reflectionObj = new ReflectionClass($foundClassName);$/;"	v
response	library\Zend\Gdata\Gapps.php	/^        $response = $e->getResponse();$/;"	v
results	library\Zend\Gdata\Gapps.php	/^            $results = $this->get($uri);$/;"	v
results	library\Zend\Gdata\Gapps.php	/^            $results = false;$/;"	v
startRecipient	library\Zend\Gdata\Gapps.php	/^            $startRecipient = null) {$/;"	v
uri	library\Zend\Gdata\Gapps.php	/^            $uri  = self::APPS_BASE_FEED_URI . self::APPS_GROUP_PATH . '\/';$/;"	v
uri	library\Zend\Gdata\Gapps.php	/^            $uri = $location->getQueryUrl();$/;"	v
uri	library\Zend\Gdata\Gapps.php	/^            $uri = $location;$/;"	v
uri	library\Zend\Gdata\Gapps.php	/^            $uri = $this->getBaseUrl() . self::APPS_EMAIL_LIST_PATH;$/;"	v
uri	library\Zend\Gdata\Gapps.php	/^            $uri = $this->getBaseUrl() . self::APPS_NICKNAME_PATH;$/;"	v
uri	library\Zend\Gdata\Gapps.php	/^            $uri = $this->getBaseUrl() . self::APPS_USER_PATH;$/;"	v
uri	library\Zend\Gdata\Gapps.php	/^            $uri = $uri->getLink('edit')->href;$/;"	v
uri	library\Zend\Gdata\Gapps.php	/^        $uri  = self::APPS_BASE_FEED_URI . self::APPS_GROUP_PATH . '\/';$/;"	v
user	library\Zend\Gdata\Gapps.php	/^                $user = null;$/;"	v
user	library\Zend\Gdata\Gapps.php	/^            $user = $this->getUserEntry($query);$/;"	v
user	library\Zend\Gdata\Gapps.php	/^        $user = $this->newUserEntry();$/;"	v
user	library\Zend\Gdata\Gapps.php	/^        $user = $this->retrieveUser($username);$/;"	v
who	library\Zend\Gdata\Gapps.php	/^        $who = $this->newWho();$/;"	v
Zend_Gdata_Gapps_EmailListEntry	library\Zend\Gdata\Gapps\EmailListEntry.php	/^class Zend_Gdata_Gapps_EmailListEntry extends Zend_Gdata_Entry$/;"	c
absoluteNodeName	library\Zend\Gdata\Gapps\EmailListEntry.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
element	library\Zend\Gdata\Gapps\EmailListEntry.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
emailList	library\Zend\Gdata\Gapps\EmailListEntry.php	/^                $emailList = new Zend_Gdata_Gapps_Extension_EmailList();$/;"	v
feedLink	library\Zend\Gdata\Gapps\EmailListEntry.php	/^                $feedLink = new Zend_Gdata_Extension_FeedLink();$/;"	v
Zend_Gdata_Gapps_EmailListFeed	library\Zend\Gdata\Gapps\EmailListFeed.php	/^class Zend_Gdata_Gapps_EmailListFeed extends Zend_Gdata_Feed$/;"	c
Zend_Gdata_Gapps_EmailListQuery	library\Zend\Gdata\Gapps\EmailListQuery.php	/^class Zend_Gdata_Gapps_EmailListQuery extends Zend_Gdata_Gapps_Query$/;"	c
recipient	library\Zend\Gdata\Gapps\EmailListQuery.php	/^            $recipient = null, $startEmailListName = null)$/;"	v
uri	library\Zend\Gdata\Gapps\EmailListQuery.php	/^        $uri = $this->getBaseUrl();$/;"	v
Zend_Gdata_Gapps_EmailListRecipientEntry	library\Zend\Gdata\Gapps\EmailListRecipientEntry.php	/^class Zend_Gdata_Gapps_EmailListRecipientEntry extends Zend_Gdata_Entry$/;"	c
absoluteNodeName	library\Zend\Gdata\Gapps\EmailListRecipientEntry.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
element	library\Zend\Gdata\Gapps\EmailListRecipientEntry.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
who	library\Zend\Gdata\Gapps\EmailListRecipientEntry.php	/^                $who = new Zend_Gdata_Extension_Who();$/;"	v
Zend_Gdata_Gapps_EmailListRecipientFeed	library\Zend\Gdata\Gapps\EmailListRecipientFeed.php	/^class Zend_Gdata_Gapps_EmailListRecipientFeed extends Zend_Gdata_Feed$/;"	c
Zend_Gdata_Gapps_EmailListRecipientQuery	library\Zend\Gdata\Gapps\EmailListRecipientQuery.php	/^class Zend_Gdata_Gapps_EmailListRecipientQuery extends Zend_Gdata_Gapps_Query$/;"	c
startRecipient	library\Zend\Gdata\Gapps\EmailListRecipientQuery.php	/^            $startRecipient = null)$/;"	v
uri	library\Zend\Gdata\Gapps\EmailListRecipientQuery.php	/^        $uri = $this->getBaseUrl();$/;"	v
Zend_Gdata_Gapps_Error	library\Zend\Gdata\Gapps\Error.php	/^class Zend_Gdata_Gapps_Error extends Zend_Gdata_App_Base$/;"	c
element	library\Zend\Gdata\Gapps\Error.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
invalidInput	library\Zend\Gdata\Gapps\Error.php	/^            $invalidInput = null) {$/;"	v
Zend_Gdata_Gapps_Extension_EmailList	library\Zend\Gdata\Gapps\Extension\EmailList.php	/^class Zend_Gdata_Gapps_Extension_EmailList extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Gapps\Extension\EmailList.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_Gapps_Extension_Login	library\Zend\Gdata\Gapps\Extension\Login.php	/^class Zend_Gdata_Gapps_Extension_Login extends Zend_Gdata_Extension$/;"	c
changePasswordAtNextLogin	library\Zend\Gdata\Gapps\Extension\Login.php	/^        $changePasswordAtNextLogin = null, $agreedToTerms = null)$/;"	v
element	library\Zend\Gdata\Gapps\Extension\Login.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
hashFunctionName	library\Zend\Gdata\Gapps\Extension\Login.php	/^        $hashFunctionName = null, $admin = null, $suspended = null,$/;"	v
Zend_Gdata_Gapps_Extension_Name	library\Zend\Gdata\Gapps\Extension\Name.php	/^class Zend_Gdata_Gapps_Extension_Name extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Gapps\Extension\Name.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_Gapps_Extension_Nickname	library\Zend\Gdata\Gapps\Extension\Nickname.php	/^class Zend_Gdata_Gapps_Extension_Nickname extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Gapps\Extension\Nickname.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_Gapps_Extension_Property	library\Zend\Gdata\Gapps\Extension\Property.php	/^class Zend_Gdata_Gapps_Extension_Property extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Gapps\Extension\Property.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_Gapps_Extension_Quota	library\Zend\Gdata\Gapps\Extension\Quota.php	/^class Zend_Gdata_Gapps_Extension_Quota extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Gapps\Extension\Quota.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_Gapps_GroupEntry	library\Zend\Gdata\Gapps\GroupEntry.php	/^class Zend_Gdata_Gapps_GroupEntry extends Zend_Gdata_Entry$/;"	c
absoluteNodeName	library\Zend\Gdata\Gapps\GroupEntry.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
element	library\Zend\Gdata\Gapps\GroupEntry.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
property	library\Zend\Gdata\Gapps\GroupEntry.php	/^                $property = new Zend_Gdata_Gapps_Extension_Property();$/;"	v
Zend_Gdata_Gapps_GroupFeed	library\Zend\Gdata\Gapps\GroupFeed.php	/^class Zend_Gdata_Gapps_GroupFeed extends Zend_Gdata_Feed$/;"	c
Zend_Gdata_Gapps_GroupQuery	library\Zend\Gdata\Gapps\GroupQuery.php	/^class Zend_Gdata_Gapps_GroupQuery extends Zend_Gdata_Gapps_Query$/;"	c
startGroupId	library\Zend\Gdata\Gapps\GroupQuery.php	/^            $startGroupId = null)$/;"	v
uri	library\Zend\Gdata\Gapps\GroupQuery.php	/^        $uri  = Zend_Gdata_Gapps::APPS_BASE_FEED_URI;$/;"	v
Zend_Gdata_Gapps_MemberEntry	library\Zend\Gdata\Gapps\MemberEntry.php	/^class Zend_Gdata_Gapps_MemberEntry extends Zend_Gdata_Entry$/;"	c
absoluteNodeName	library\Zend\Gdata\Gapps\MemberEntry.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
element	library\Zend\Gdata\Gapps\MemberEntry.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
property	library\Zend\Gdata\Gapps\MemberEntry.php	/^                $property = new Zend_Gdata_Gapps_Extension_Property();$/;"	v
Zend_Gdata_Gapps_MemberFeed	library\Zend\Gdata\Gapps\MemberFeed.php	/^class Zend_Gdata_Gapps_MemberFeed extends Zend_Gdata_Feed$/;"	c
Zend_Gdata_Gapps_MemberQuery	library\Zend\Gdata\Gapps\MemberQuery.php	/^class Zend_Gdata_Gapps_MemberQuery extends Zend_Gdata_Gapps_Query$/;"	c
startMemberId	library\Zend\Gdata\Gapps\MemberQuery.php	/^            $startMemberId = null)$/;"	v
uri	library\Zend\Gdata\Gapps\MemberQuery.php	/^        $uri = Zend_Gdata_Gapps::APPS_BASE_FEED_URI;$/;"	v
Zend_Gdata_Gapps_NicknameEntry	library\Zend\Gdata\Gapps\NicknameEntry.php	/^class Zend_Gdata_Gapps_NicknameEntry extends Zend_Gdata_Entry$/;"	c
absoluteNodeName	library\Zend\Gdata\Gapps\NicknameEntry.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
element	library\Zend\Gdata\Gapps\NicknameEntry.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
login	library\Zend\Gdata\Gapps\NicknameEntry.php	/^                $login = new Zend_Gdata_Gapps_Extension_Login();$/;"	v
nickname	library\Zend\Gdata\Gapps\NicknameEntry.php	/^                $nickname = new Zend_Gdata_Gapps_Extension_Nickname();$/;"	v
Zend_Gdata_Gapps_NicknameFeed	library\Zend\Gdata\Gapps\NicknameFeed.php	/^class Zend_Gdata_Gapps_NicknameFeed extends Zend_Gdata_Feed$/;"	c
Zend_Gdata_Gapps_NicknameQuery	library\Zend\Gdata\Gapps\NicknameQuery.php	/^class Zend_Gdata_Gapps_NicknameQuery extends Zend_Gdata_Gapps_Query$/;"	c
uri	library\Zend\Gdata\Gapps\NicknameQuery.php	/^        $uri = $this->getBaseUrl();$/;"	v
username	library\Zend\Gdata\Gapps\NicknameQuery.php	/^            $username = null, $startNickname = null)$/;"	v
Zend_Gdata_Gapps_OwnerEntry	library\Zend\Gdata\Gapps\OwnerEntry.php	/^class Zend_Gdata_Gapps_OwnerEntry extends Zend_Gdata_Entry$/;"	c
absoluteNodeName	library\Zend\Gdata\Gapps\OwnerEntry.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
element	library\Zend\Gdata\Gapps\OwnerEntry.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
property	library\Zend\Gdata\Gapps\OwnerEntry.php	/^                $property = new Zend_Gdata_Gapps_Extension_Property();$/;"	v
Zend_Gdata_Gapps_OwnerFeed	library\Zend\Gdata\Gapps\OwnerFeed.php	/^class Zend_Gdata_Gapps_OwnerFeed extends Zend_Gdata_Feed$/;"	c
Zend_Gdata_Gapps_OwnerQuery	library\Zend\Gdata\Gapps\OwnerQuery.php	/^class Zend_Gdata_Gapps_OwnerQuery extends Zend_Gdata_Gapps_Query$/;"	c
uri	library\Zend\Gdata\Gapps\OwnerQuery.php	/^        $uri = Zend_Gdata_Gapps::APPS_BASE_FEED_URI;$/;"	v
Zend_Gdata_Gapps_ServiceException	library\Zend\Gdata\Gapps\ServiceException.php	/^class Zend_Gdata_Gapps_ServiceException extends Zend_Exception$/;"	c
doc	library\Zend\Gdata\Gapps\ServiceException.php	/^            $doc = new DOMDocument();$/;"	v
error	library\Zend\Gdata\Gapps\ServiceException.php	/^                    $error = new Zend_Gdata_Gapps_Error();$/;"	v
result	library\Zend\Gdata\Gapps\ServiceException.php	/^            $result = $this->_errors[$errorCode];$/;"	v
result	library\Zend\Gdata\Gapps\ServiceException.php	/^        $result = "The server encountered the following errors processing the request:";$/;"	v
rootElement	library\Zend\Gdata\Gapps\ServiceException.php	/^            $rootElement = $doc->getElementsByTagName($this->_rootElement)->item(0);$/;"	v
success	library\Zend\Gdata\Gapps\ServiceException.php	/^            $success = @$doc->loadXML($string);$/;"	v
Zend_Gdata_Gapps_UserEntry	library\Zend\Gdata\Gapps\UserEntry.php	/^class Zend_Gdata_Gapps_UserEntry extends Zend_Gdata_Entry$/;"	c
absoluteNodeName	library\Zend\Gdata\Gapps\UserEntry.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
element	library\Zend\Gdata\Gapps\UserEntry.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
feedLink	library\Zend\Gdata\Gapps\UserEntry.php	/^                $feedLink = new Zend_Gdata_Extension_FeedLink();$/;"	v
login	library\Zend\Gdata\Gapps\UserEntry.php	/^                $login = new Zend_Gdata_Gapps_Extension_Login();$/;"	v
name	library\Zend\Gdata\Gapps\UserEntry.php	/^                $name = new Zend_Gdata_Gapps_Extension_Name();$/;"	v
quota	library\Zend\Gdata\Gapps\UserEntry.php	/^                $quota = new Zend_Gdata_Gapps_Extension_Quota();$/;"	v
Zend_Gdata_Gapps_UserFeed	library\Zend\Gdata\Gapps\UserFeed.php	/^class Zend_Gdata_Gapps_UserFeed extends Zend_Gdata_Feed$/;"	c
Zend_Gdata_Gapps_UserQuery	library\Zend\Gdata\Gapps\UserQuery.php	/^class Zend_Gdata_Gapps_UserQuery extends Zend_Gdata_Gapps_Query$/;"	c
startUsername	library\Zend\Gdata\Gapps\UserQuery.php	/^            $startUsername = null)$/;"	v
uri	library\Zend\Gdata\Gapps\UserQuery.php	/^        $uri = $this->getBaseUrl();$/;"	v
Zend_Gdata_Gbase	library\Zend\Gdata\Gbase.php	/^class Zend_Gdata_Gbase extends Zend_Gdata$/;"	c
newitem	library\Zend\Gdata\Gbase.php	/^        $newitem = $this->insertEntry($entry, $uri, 'Zend_Gdata_Gbase_ItemEntry');$/;"	v
returnedEntry	library\Zend\Gdata\Gbase.php	/^        $returnedEntry = $entry->save($dryRun);$/;"	v
uri	library\Zend\Gdata\Gbase.php	/^            $uri = $location->getQueryUrl();$/;"	v
uri	library\Zend\Gdata\Gbase.php	/^            $uri = $location;$/;"	v
uri	library\Zend\Gdata\Gbase.php	/^            $uri = $this->_defaultPostUri . '?dry-run=true';$/;"	v
uri	library\Zend\Gdata\Gbase.php	/^            $uri = $this->_defaultPostUri;$/;"	v
uri	library\Zend\Gdata\Gbase.php	/^            $uri = self::GBASE_ITEM_FEED_URI;$/;"	v
uri	library\Zend\Gdata\Gbase.php	/^            $uri = self::GBASE_SNIPPET_FEED_URI;$/;"	v
Zend_Gdata_Gbase_Entry	library\Zend\Gdata\Gbase\Entry.php	/^class Zend_Gdata_Gbase_Entry extends Zend_Gdata_Entry$/;"	c
absoluteNodeName	library\Zend\Gdata\Gbase\Entry.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
baseAttribute	library\Zend\Gdata\Gbase\Entry.php	/^            $baseAttribute = $this->_baseAttributes[$i];$/;"	v
baseAttribute	library\Zend\Gdata\Gbase\Entry.php	/^            $baseAttribute = new Zend_Gdata_Gbase_Extension_BaseAttribute();$/;"	v
element	library\Zend\Gdata\Gbase\Entry.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
itemType	library\Zend\Gdata\Gbase\Entry.php	/^        $itemType = $this->getGbaseAttribute('item_type');$/;"	v
matches	library\Zend\Gdata\Gbase\Entry.php	/^        $matches = array();$/;"	v
Zend_Gdata_Gbase_Extension_BaseAttribute	library\Zend\Gdata\Gbase\Extension\BaseAttribute.php	/^class Zend_Gdata_Gbase_Extension_BaseAttribute extends Zend_Gdata_App_Extension_Element$/;"	c
attr	library\Zend\Gdata\Gbase\Extension\BaseAttribute.php	/^          $attr = array('name' => 'type', 'value' => $type);$/;"	v
attr	library\Zend\Gdata\Gbase\Extension\BaseAttribute.php	/^      $attr = array('name' => 'type', 'value' => $type);$/;"	v
typeAttr	library\Zend\Gdata\Gbase\Extension\BaseAttribute.php	/^          $typeAttr = array('type' => $attr);$/;"	v
typeAttr	library\Zend\Gdata\Gbase\Extension\BaseAttribute.php	/^      $typeAttr = $this->getExtensionAttributes();$/;"	v
typeAttr	library\Zend\Gdata\Gbase\Extension\BaseAttribute.php	/^      $typeAttr = array('type' => $attr);$/;"	v
Zend_Gdata_Gbase_Feed	library\Zend\Gdata\Gbase\Feed.php	/^class Zend_Gdata_Gbase_Feed extends Zend_Gdata_Feed$/;"	c
Zend_Gdata_Gbase_ItemEntry	library\Zend\Gdata\Gbase\ItemEntry.php	/^class Zend_Gdata_Gbase_ItemEntry extends Zend_Gdata_Gbase_Entry$/;"	c
baseAttributes	library\Zend\Gdata\Gbase\ItemEntry.php	/^        $baseAttributes = $this->_baseAttributes;$/;"	v
className	library\Zend\Gdata\Gbase\ItemEntry.php	/^                         $className = null,$/;"	v
editLink	library\Zend\Gdata\Gbase\ItemEntry.php	/^            $editLink = $this->getEditLink();$/;"	v
extraHeaders	library\Zend\Gdata\Gbase\ItemEntry.php	/^                         $extraHeaders = array())$/;"	v
newBaseAttribute	library\Zend\Gdata\Gbase\ItemEntry.php	/^        $newBaseAttribute =  new Zend_Gdata_Gbase_Extension_BaseAttribute($name, $text, $type);$/;"	v
service	library\Zend\Gdata\Gbase\ItemEntry.php	/^            $service = new Zend_Gdata_App($this->getHttpClient());$/;"	v
uri	library\Zend\Gdata\Gbase\ItemEntry.php	/^                         $uri = null,$/;"	v
uri	library\Zend\Gdata\Gbase\ItemEntry.php	/^                $uri = $editLink->getHref() . '?dry-run=true';$/;"	v
uri	library\Zend\Gdata\Gbase\ItemEntry.php	/^        $uri = null;$/;"	v
Zend_Gdata_Gbase_ItemFeed	library\Zend\Gdata\Gbase\ItemFeed.php	/^class Zend_Gdata_Gbase_ItemFeed extends Zend_Gdata_Feed$/;"	c
Zend_Gdata_Gbase_ItemQuery	library\Zend\Gdata\Gbase\ItemQuery.php	/^class Zend_Gdata_Gbase_ItemQuery extends Zend_Gdata_Gbase_Query$/;"	c
uri	library\Zend\Gdata\Gbase\ItemQuery.php	/^        $uri = $this->_defaultFeedUri;$/;"	v
Zend_Gdata_Gbase_Query	library\Zend\Gdata\Gbase\Query.php	/^class Zend_Gdata_Gbase_Query extends Zend_Gdata_Query$/;"	c
Zend_Gdata_Gbase_SnippetEntry	library\Zend\Gdata\Gbase\SnippetEntry.php	/^class Zend_Gdata_Gbase_SnippetEntry extends Zend_Gdata_Gbase_Entry$/;"	c
Zend_Gdata_Gbase_SnippetFeed	library\Zend\Gdata\Gbase\SnippetFeed.php	/^class Zend_Gdata_Gbase_SnippetFeed extends Zend_Gdata_Feed$/;"	c
Zend_Gdata_Gbase_SnippetQuery	library\Zend\Gdata\Gbase\SnippetQuery.php	/^class Zend_Gdata_Gbase_SnippetQuery extends Zend_Gdata_Gbase_Query$/;"	c
uri	library\Zend\Gdata\Gbase\SnippetQuery.php	/^        $uri = $this->_defaultFeedUri;$/;"	v
Zend_Gdata_Geo	library\Zend\Gdata\Geo.php	/^class Zend_Gdata_Geo extends Zend_Gdata$/;"	c
Zend_Gdata_Geo_Entry	library\Zend\Gdata\Geo\Entry.php	/^class Zend_Gdata_Geo_Entry extends Zend_Gdata_Entry$/;"	c
absoluteNodeName	library\Zend\Gdata\Geo\Entry.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
element	library\Zend\Gdata\Geo\Entry.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
where	library\Zend\Gdata\Geo\Entry.php	/^            $where = new Zend_Gdata_Geo_Extension_GeoRssWhere();$/;"	v
Zend_Gdata_Geo_Extension_GeoRssWhere	library\Zend\Gdata\Geo\Extension\GeoRssWhere.php	/^class Zend_Gdata_Geo_Extension_GeoRssWhere extends Zend_Gdata_Extension$/;"	c
absoluteNodeName	library\Zend\Gdata\Geo\Extension\GeoRssWhere.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
element	library\Zend\Gdata\Geo\Extension\GeoRssWhere.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
point	library\Zend\Gdata\Geo\Extension\GeoRssWhere.php	/^                $point = new Zend_Gdata_Geo_Extension_GmlPoint();$/;"	v
Zend_Gdata_Geo_Extension_GmlPoint	library\Zend\Gdata\Geo\Extension\GmlPoint.php	/^class Zend_Gdata_Geo_Extension_GmlPoint extends Zend_Gdata_Extension$/;"	c
absoluteNodeName	library\Zend\Gdata\Geo\Extension\GmlPoint.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
element	library\Zend\Gdata\Geo\Extension\GmlPoint.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
pos	library\Zend\Gdata\Geo\Extension\GmlPoint.php	/^                $pos = new Zend_Gdata_Geo_Extension_GmlPos();$/;"	v
Zend_Gdata_Geo_Extension_GmlPos	library\Zend\Gdata\Geo\Extension\GmlPos.php	/^class Zend_Gdata_Geo_Extension_GmlPos extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Geo_Feed	library\Zend\Gdata\Geo\Feed.php	/^class Zend_Gdata_Geo_Feed extends Zend_Gdata_Feed$/;"	c
Zend_Gdata_Health	library\Zend\Gdata\Health.php	/^class Zend_Gdata_Health extends Zend_Gdata$/;"	c
entry	library\Zend\Gdata\Health.php	/^        $entry = new Zend_Gdata_Health_ProfileEntry();$/;"	v
profileID	library\Zend\Gdata\Health.php	/^            $profileID = $this->getProfileID();$/;"	v
query	library\Zend\Gdata\Health.php	/^                   $query == null) {$/;"	v
uri	library\Zend\Gdata\Health.php	/^                $uri = self::CLIENTLOGIN_REGISTER_FEED_URI . '\/' . $profileID;$/;"	v
uri	library\Zend\Gdata\Health.php	/^            $uri = $query->getQueryUrl();$/;"	v
uri	library\Zend\Gdata\Health.php	/^            $uri = $query;$/;"	v
uri	library\Zend\Gdata\Health.php	/^            $uri = preg_replace('\/\\\/health\\\/\/', '\/h9\/', $uri);$/;"	v
uri	library\Zend\Gdata\Health.php	/^            $uri = self::AUTHSUB_PROFILE_FEED_URI;$/;"	v
uri	library\Zend\Gdata\Health.php	/^            $uri = self::AUTHSUB_REGISTER_FEED_URI;$/;"	v
uri	library\Zend\Gdata\Health.php	/^            $uri = self::CLIENTLOGIN_PROFILELIST_FEED_URI;$/;"	v
uri	library\Zend\Gdata\Health.php	/^            $uri = self::CLIENTLOGIN_PROFILE_FEED_URI . '\/' . $this->getProfileID();$/;"	v
Zend_Gdata_Health_Extension_Ccr	library\Zend\Gdata\Health\Extension\Ccr.php	/^class Zend_Gdata_Health_Extension_Ccr extends Zend_Gdata_App_Extension_Element$/;"	c
category	library\Zend\Gdata\Health\Extension\Ccr.php	/^                    $category = 'Alerts';$/;"	v
category	library\Zend\Gdata\Health\Extension\Ccr.php	/^                    $category = 'Problems';$/;"	v
category	library\Zend\Gdata\Health\Extension\Ccr.php	/^                    $category = 'Results';$/;"	v
category	library\Zend\Gdata\Health\Extension\Ccr.php	/^            $category = substr($name, 3);$/;"	v
doc	library\Zend\Gdata\Health\Extension\Ccr.php	/^            $doc = new DOMDocument('1.0', 'utf-8');$/;"	v
domElement	library\Zend\Gdata\Health\Extension\Ccr.php	/^        $domElement = $doc->importNode($this->_ccrDom, true);$/;"	v
Zend_Gdata_Health_ProfileEntry	library\Zend\Gdata\Health\ProfileEntry.php	/^class Zend_Gdata_Health_ProfileEntry extends Zend_Gdata_Entry$/;"	c
absoluteNodeName	library\Zend\Gdata\Health\ProfileEntry.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
ccrElement	library\Zend\Gdata\Health\ProfileEntry.php	/^            $ccrElement = new Zend_Gdata_Health_Extension_Ccr();$/;"	v
ccrElement	library\Zend\Gdata\Health\ProfileEntry.php	/^          $ccrElement = new Zend_Gdata_Health_Extension_Ccr();$/;"	v
ccrElement	library\Zend\Gdata\Health\ProfileEntry.php	/^        $ccrElement = null;$/;"	v
element	library\Zend\Gdata\Health\ProfileEntry.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_Health_ProfileFeed	library\Zend\Gdata\Health\ProfileFeed.php	/^class Zend_Gdata_Health_ProfileFeed extends Zend_Gdata_Feed$/;"	c
Zend_Gdata_Health_ProfileListEntry	library\Zend\Gdata\Health\ProfileListEntry.php	/^class Zend_Gdata_Health_ProfileListEntry extends Zend_Gdata_Entry$/;"	c
element	library\Zend\Gdata\Health\ProfileListEntry.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_Health_ProfileListFeed	library\Zend\Gdata\Health\ProfileListFeed.php	/^class Zend_Gdata_Health_ProfileListFeed extends Zend_Gdata_Feed$/;"	c
Zend_Gdata_Health_Query	library\Zend\Gdata\Health\Query.php	/^class Zend_Gdata_Health_Query extends Zend_Gdata_Query$/;"	c
Zend_Gdata_HttpAdapterStreamingProxy	library\Zend\Gdata\HttpAdapterStreamingProxy.php	/^class Zend_Gdata_HttpAdapterStreamingProxy extends Zend_Http_Client_Adapter_Proxy$/;"	c
host	library\Zend\Gdata\HttpAdapterStreamingProxy.php	/^        $host = $this->config['proxy_host'];$/;"	v
port	library\Zend\Gdata\HttpAdapterStreamingProxy.php	/^        $port = $this->config['proxy_port'];$/;"	v
request	library\Zend\Gdata\HttpAdapterStreamingProxy.php	/^        $request = "{$method} {$uri->__toString()} HTTP\/{$http_ver}\\r\\n";$/;"	v
Zend_Gdata_HttpAdapterStreamingSocket	library\Zend\Gdata\HttpAdapterStreamingSocket.php	/^class Zend_Gdata_HttpAdapterStreamingSocket extends Zend_Http_Client_Adapter_Socket$/;"	c
body	library\Zend\Gdata\HttpAdapterStreamingSocket.php	/^        $body = '')$/;"	v
chunk	library\Zend\Gdata\HttpAdapterStreamingSocket.php	/^            $chunk = $body->read(self::CHUNK_SIZE);$/;"	v
chunk	library\Zend\Gdata\HttpAdapterStreamingSocket.php	/^        $chunk = $body->read(self::CHUNK_SIZE);$/;"	v
host	library\Zend\Gdata\HttpAdapterStreamingSocket.php	/^        $host = $uri->getHost();$/;"	v
host	library\Zend\Gdata\HttpAdapterStreamingSocket.php	/^        $host = (strtolower($uri->getScheme()) == 'https' ? $this->config['ssltransport'] : 'tcp') . ':\/\/' . $host;$/;"	v
path	library\Zend\Gdata\HttpAdapterStreamingSocket.php	/^        $path = $uri->getPath();$/;"	v
request	library\Zend\Gdata\HttpAdapterStreamingSocket.php	/^        $request = "{$method} {$path} HTTP\/{$http_ver}\\r\\n";$/;"	v
Zend_Gdata_HttpClient	library\Zend\Gdata\HttpClient.php	/^class Zend_Gdata_HttpClient extends Zend_Http_Client$/;"	c
dataToSign	library\Zend\Gdata\HttpClient.php	/^                $dataToSign = $method . ' ' . $url . ' ' . $time . ' ' . $nonce;$/;"	v
encodedSignature	library\Zend\Gdata\HttpClient.php	/^                $encodedSignature = base64_encode($signature);$/;"	v
fp	library\Zend\Gdata\HttpClient.php	/^        $fp = @fopen($file, "r", $useIncludePath);$/;"	v
key	library\Zend\Gdata\HttpClient.php	/^        $key = '';$/;"	v
nonce	library\Zend\Gdata\HttpClient.php	/^                $nonce = mt_rand(0, 999999999);$/;"	v
pKeyId	library\Zend\Gdata\HttpClient.php	/^                $pKeyId = $this->getAuthSubPrivateKeyId();$/;"	v
signSuccess	library\Zend\Gdata\HttpClient.php	/^                $signSuccess = openssl_sign($dataToSign, $signature, $pKeyId,$/;"	v
time	library\Zend\Gdata\HttpClient.php	/^                $time = time();$/;"	v
useIncludePath	library\Zend\Gdata\HttpClient.php	/^                                             $useIncludePath = false) {$/;"	v
Zend_Gdata_Kind_EventEntry	library\Zend\Gdata\Kind\EventEntry.php	/^class Zend_Gdata_Kind_EventEntry extends Zend_Gdata_Entry$/;"	c
absoluteNodeName	library\Zend\Gdata\Kind\EventEntry.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
comments	library\Zend\Gdata\Kind\EventEntry.php	/^            $comments = new Zend_Gdata_Extension_Comments();$/;"	v
element	library\Zend\Gdata\Kind\EventEntry.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
entryLink	library\Zend\Gdata\Kind\EventEntry.php	/^            $entryLink = new Zend_Gdata_Extension_EntryLink();$/;"	v
eventStatus	library\Zend\Gdata\Kind\EventEntry.php	/^            $eventStatus = new Zend_Gdata_Extension_EventStatus();$/;"	v
extProp	library\Zend\Gdata\Kind\EventEntry.php	/^            $extProp = new Zend_Gdata_Extension_ExtendedProperty();$/;"	v
originalEvent	library\Zend\Gdata\Kind\EventEntry.php	/^            $originalEvent = new Zend_Gdata_Extension_OriginalEvent();$/;"	v
recurrence	library\Zend\Gdata\Kind\EventEntry.php	/^            $recurrence = new Zend_Gdata_Extension_Recurrence();$/;"	v
recurrenceException	library\Zend\Gdata\Kind\EventEntry.php	/^            $recurrenceException = new Zend_Gdata_Extension_RecurrenceException();$/;"	v
transparency	library\Zend\Gdata\Kind\EventEntry.php	/^            $transparency = new Zend_Gdata_Extension_Transparency();$/;"	v
visiblity	library\Zend\Gdata\Kind\EventEntry.php	/^            $visiblity = new Zend_Gdata_Extension_Visibility();$/;"	v
when	library\Zend\Gdata\Kind\EventEntry.php	/^            $when = new Zend_Gdata_Extension_When();$/;"	v
where	library\Zend\Gdata\Kind\EventEntry.php	/^            $where = new Zend_Gdata_Extension_Where();$/;"	v
who	library\Zend\Gdata\Kind\EventEntry.php	/^            $who = new Zend_Gdata_Extension_Who();$/;"	v
Zend_Gdata_Media	library\Zend\Gdata\Media.php	/^class Zend_Gdata_Media extends Zend_Gdata$/;"	c
Zend_Gdata_MediaMimeStream	library\Zend\Gdata\MediaMimeStream.php	/^class Zend_Gdata_MediaMimeStream$/;"	c
activePart	library\Zend\Gdata\MediaMimeStream.php	/^        $activePart = $this->_parts[$this->_currentPart];$/;"	v
buffer	library\Zend\Gdata\MediaMimeStream.php	/^        $buffer = $activePart->read($bytesRequested);$/;"	v
closingBoundary	library\Zend\Gdata\MediaMimeStream.php	/^        $closingBoundary = new Zend_Gdata_MimeBodyString("\\r\\n--{$this->_boundaryString}--\\r\\n");$/;"	v
entry	library\Zend\Gdata\MediaMimeStream.php	/^        $entry = $this->wrapEntry($xmlString, $fileContentType);$/;"	v
file	library\Zend\Gdata\MediaMimeStream.php	/^        $file = new Zend_Gdata_MimeFile($this->_fileHandle);$/;"	v
fileContentType	library\Zend\Gdata\MediaMimeStream.php	/^        $fileContentType = null)$/;"	v
fileSize	library\Zend\Gdata\MediaMimeStream.php	/^        $fileSize = filesize($filePath);$/;"	v
nextBuffer	library\Zend\Gdata\MediaMimeStream.php	/^          $nextBuffer = $this->read($bytesRequested - strlen($buffer));$/;"	v
wrappedEntry	library\Zend\Gdata\MediaMimeStream.php	/^        $wrappedEntry = "--{$this->_boundaryString}\\r\\n";$/;"	v
Zend_Gdata_Media_Entry	library\Zend\Gdata\Media\Entry.php	/^class Zend_Gdata_Media_Entry extends Zend_Gdata_Entry$/;"	c
absoluteNodeName	library\Zend\Gdata\Media\Entry.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
element	library\Zend\Gdata\Media\Entry.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
mediaGroup	library\Zend\Gdata\Media\Entry.php	/^            $mediaGroup = new Zend_Gdata_Media_Extension_MediaGroup();$/;"	v
Zend_Gdata_Media_Extension_MediaCategory	library\Zend\Gdata\Media\Extension\MediaCategory.php	/^class Zend_Gdata_Media_Extension_MediaCategory extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Media\Extension\MediaCategory.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_Media_Extension_MediaContent	library\Zend\Gdata\Media\Extension\MediaContent.php	/^class Zend_Gdata_Media_Extension_MediaContent extends Zend_Gdata_Extension$/;"	c
bitrate	library\Zend\Gdata\Media\Extension\MediaContent.php	/^            $bitrate = null, $framerate = null, $samplingrate = null,$/;"	v
channels	library\Zend\Gdata\Media\Extension\MediaContent.php	/^            $channels = null, $duration = null, $height = null, $width = null,$/;"	v
element	library\Zend\Gdata\Media\Extension\MediaContent.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
lang	library\Zend\Gdata\Media\Extension\MediaContent.php	/^            $lang = null)$/;"	v
medium	library\Zend\Gdata\Media\Extension\MediaContent.php	/^            $medium = null, $isDefault = null, $expression = null,$/;"	v
Zend_Gdata_Media_Extension_MediaCopyright	library\Zend\Gdata\Media\Extension\MediaCopyright.php	/^class Zend_Gdata_Media_Extension_MediaCopyright extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Media\Extension\MediaCopyright.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_Media_Extension_MediaCredit	library\Zend\Gdata\Media\Extension\MediaCredit.php	/^class Zend_Gdata_Media_Extension_MediaCredit extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Media\Extension\MediaCredit.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_Media_Extension_MediaDescription	library\Zend\Gdata\Media\Extension\MediaDescription.php	/^class Zend_Gdata_Media_Extension_MediaDescription extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Media\Extension\MediaDescription.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_Media_Extension_MediaGroup	library\Zend\Gdata\Media\Extension\MediaGroup.php	/^class Zend_Gdata_Media_Extension_MediaGroup extends Zend_Gdata_Extension$/;"	c
absoluteNodeName	library\Zend\Gdata\Media\Extension\MediaGroup.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
category	library\Zend\Gdata\Media\Extension\MediaGroup.php	/^                $category = new Zend_Gdata_Media_Extension_MediaCategory();$/;"	v
content	library\Zend\Gdata\Media\Extension\MediaGroup.php	/^                $content = new Zend_Gdata_Media_Extension_MediaContent();$/;"	v
copyright	library\Zend\Gdata\Media\Extension\MediaGroup.php	/^                $copyright = new Zend_Gdata_Media_Extension_MediaCopyright();$/;"	v
credit	library\Zend\Gdata\Media\Extension\MediaGroup.php	/^                $credit = new Zend_Gdata_Media_Extension_MediaCredit();$/;"	v
description	library\Zend\Gdata\Media\Extension\MediaGroup.php	/^                $description = new Zend_Gdata_Media_Extension_MediaDescription();$/;"	v
element	library\Zend\Gdata\Media\Extension\MediaGroup.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
hash	library\Zend\Gdata\Media\Extension\MediaGroup.php	/^                $hash = new Zend_Gdata_Media_Extension_MediaHash();$/;"	v
keywords	library\Zend\Gdata\Media\Extension\MediaGroup.php	/^                $keywords = new Zend_Gdata_Media_Extension_MediaKeywords();$/;"	v
player	library\Zend\Gdata\Media\Extension\MediaGroup.php	/^                $player = new Zend_Gdata_Media_Extension_MediaPlayer();$/;"	v
rating	library\Zend\Gdata\Media\Extension\MediaGroup.php	/^                $rating = new Zend_Gdata_Media_Extension_MediaRating();$/;"	v
restriction	library\Zend\Gdata\Media\Extension\MediaGroup.php	/^                $restriction = new Zend_Gdata_Media_Extension_MediaRestriction();$/;"	v
text	library\Zend\Gdata\Media\Extension\MediaGroup.php	/^                $text = new Zend_Gdata_Media_Extension_MediaText();$/;"	v
thumbnail	library\Zend\Gdata\Media\Extension\MediaGroup.php	/^                $thumbnail = new Zend_Gdata_Media_Extension_MediaThumbnail();$/;"	v
title	library\Zend\Gdata\Media\Extension\MediaGroup.php	/^                $title = new Zend_Gdata_Media_Extension_MediaTitle();$/;"	v
Zend_Gdata_Media_Extension_MediaHash	library\Zend\Gdata\Media\Extension\MediaHash.php	/^class Zend_Gdata_Media_Extension_MediaHash extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Media\Extension\MediaHash.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_Media_Extension_MediaKeywords	library\Zend\Gdata\Media\Extension\MediaKeywords.php	/^class Zend_Gdata_Media_Extension_MediaKeywords extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Media_Extension_MediaPlayer	library\Zend\Gdata\Media\Extension\MediaPlayer.php	/^class Zend_Gdata_Media_Extension_MediaPlayer extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Media\Extension\MediaPlayer.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_Media_Extension_MediaRating	library\Zend\Gdata\Media\Extension\MediaRating.php	/^class Zend_Gdata_Media_Extension_MediaRating extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Media\Extension\MediaRating.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_Media_Extension_MediaRestriction	library\Zend\Gdata\Media\Extension\MediaRestriction.php	/^class Zend_Gdata_Media_Extension_MediaRestriction extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Media\Extension\MediaRestriction.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_Media_Extension_MediaText	library\Zend\Gdata\Media\Extension\MediaText.php	/^class Zend_Gdata_Media_Extension_MediaText extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Media\Extension\MediaText.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
start	library\Zend\Gdata\Media\Extension\MediaText.php	/^            $start = null, $end = null)$/;"	v
Zend_Gdata_Media_Extension_MediaThumbnail	library\Zend\Gdata\Media\Extension\MediaThumbnail.php	/^class Zend_Gdata_Media_Extension_MediaThumbnail extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Media\Extension\MediaThumbnail.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
time	library\Zend\Gdata\Media\Extension\MediaThumbnail.php	/^            $time = null)$/;"	v
Zend_Gdata_Media_Extension_MediaTitle	library\Zend\Gdata\Media\Extension\MediaTitle.php	/^class Zend_Gdata_Media_Extension_MediaTitle extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Media\Extension\MediaTitle.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_Media_Feed	library\Zend\Gdata\Media\Feed.php	/^class Zend_Gdata_Media_Feed extends Zend_Gdata_Feed$/;"	c
Zend_Gdata_MimeBodyString	library\Zend\Gdata\MimeBodyString.php	/^class Zend_Gdata_MimeBodyString$/;"	c
buffer	library\Zend\Gdata\MimeBodyString.php	/^      $buffer = substr($this->_sourceString, $this->_bytesRead, $bytesRequested);$/;"	v
bytesRequested	library\Zend\Gdata\MimeBodyString.php	/^          $bytesRequested = $len - $this->_bytesRead;$/;"	v
len	library\Zend\Gdata\MimeBodyString.php	/^      $len = strlen($this->_sourceString);$/;"	v
Zend_Gdata_MimeFile	library\Zend\Gdata\MimeFile.php	/^class Zend_Gdata_MimeFile$/;"	c
Zend_Gdata_Photos	library\Zend\Gdata\Photos.php	/^class Zend_Gdata_Photos extends Zend_Gdata$/;"	c
entry	library\Zend\Gdata\Photos.php	/^                    $entry = new Zend_Gdata_Photos_AlbumEntry($e->getResponse()->getBody());$/;"	v
entry	library\Zend\Gdata\Photos.php	/^                    $entry = new Zend_Gdata_Photos_CommentEntry($e->getResponse()->getBody());$/;"	v
entry	library\Zend\Gdata\Photos.php	/^                    $entry = new Zend_Gdata_Photos_PhotoEntry($e->getResponse()->getBody());$/;"	v
entry	library\Zend\Gdata\Photos.php	/^                    $entry = new Zend_Gdata_Photos_TagEntry($e->getResponse()->getBody());$/;"	v
newEntry	library\Zend\Gdata\Photos.php	/^        $newEntry = $this->insertEntry($album, $uri, 'Zend_Gdata_Photos_AlbumEntry');$/;"	v
newEntry	library\Zend\Gdata\Photos.php	/^        $newEntry = $this->insertEntry($comment, $uri, 'Zend_Gdata_Photos_CommentEntry');$/;"	v
newEntry	library\Zend\Gdata\Photos.php	/^        $newEntry = $this->insertEntry($photo, $uri, 'Zend_Gdata_Photos_PhotoEntry');$/;"	v
newEntry	library\Zend\Gdata\Photos.php	/^        $newEntry = $this->insertEntry($tag, $uri, 'Zend_Gdata_Photos_TagEntry');$/;"	v
uri	library\Zend\Gdata\Photos.php	/^            $uri = $location->getQueryUrl();$/;"	v
uri	library\Zend\Gdata\Photos.php	/^            $uri = $location;$/;"	v
uri	library\Zend\Gdata\Photos.php	/^            $uri = $uri->getLink(self::FEED_LINK_PATH)->href;$/;"	v
uri	library\Zend\Gdata\Photos.php	/^            $uri = self::PICASA_BASE_FEED_URI . '\/' .$/;"	v
Zend_Gdata_Photos_AlbumEntry	library\Zend\Gdata\Photos\AlbumEntry.php	/^class Zend_Gdata_Photos_AlbumEntry extends Zend_Gdata_Entry$/;"	c
absoluteNodeName	library\Zend\Gdata\Photos\AlbumEntry.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
access	library\Zend\Gdata\Photos\AlbumEntry.php	/^                $access = new Zend_Gdata_Photos_Extension_Access();$/;"	v
category	library\Zend\Gdata\Photos\AlbumEntry.php	/^        $category = new Zend_Gdata_App_Extension_Category($/;"	v
commentCount	library\Zend\Gdata\Photos\AlbumEntry.php	/^                $commentCount = new Zend_Gdata_Photos_Extension_CommentCount();$/;"	v
commentingEnabled	library\Zend\Gdata\Photos\AlbumEntry.php	/^                $commentingEnabled = new Zend_Gdata_Photos_Extension_CommentingEnabled();$/;"	v
element	library\Zend\Gdata\Photos\AlbumEntry.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
geoRssWhere	library\Zend\Gdata\Photos\AlbumEntry.php	/^                $geoRssWhere = new Zend_Gdata_Geo_Extension_GeoRssWhere();$/;"	v
id	library\Zend\Gdata\Photos\AlbumEntry.php	/^                $id = new Zend_Gdata_Photos_Extension_Id();$/;"	v
location	library\Zend\Gdata\Photos\AlbumEntry.php	/^                $location = new Zend_Gdata_Photos_Extension_Location();$/;"	v
mediaGroup	library\Zend\Gdata\Photos\AlbumEntry.php	/^                $mediaGroup = new Zend_Gdata_Media_Extension_MediaGroup();$/;"	v
name	library\Zend\Gdata\Photos\AlbumEntry.php	/^                $name = new Zend_Gdata_Photos_Extension_Name();$/;"	v
nickname	library\Zend\Gdata\Photos\AlbumEntry.php	/^                $nickname = new Zend_Gdata_Photos_Extension_Nickname();$/;"	v
numPhotos	library\Zend\Gdata\Photos\AlbumEntry.php	/^                $numPhotos = new Zend_Gdata_Photos_Extension_NumPhotos();$/;"	v
timestamp	library\Zend\Gdata\Photos\AlbumEntry.php	/^                $timestamp = new Zend_Gdata_Photos_Extension_Timestamp();$/;"	v
user	library\Zend\Gdata\Photos\AlbumEntry.php	/^                $user = new Zend_Gdata_Photos_Extension_User();$/;"	v
Zend_Gdata_Photos_AlbumFeed	library\Zend\Gdata\Photos\AlbumFeed.php	/^class Zend_Gdata_Photos_AlbumFeed extends Zend_Gdata_Feed$/;"	c
absoluteNodeName	library\Zend\Gdata\Photos\AlbumFeed.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
access	library\Zend\Gdata\Photos\AlbumFeed.php	/^                $access = new Zend_Gdata_Photos_Extension_Access();$/;"	v
categories	library\Zend\Gdata\Photos\AlbumFeed.php	/^                $categories = $tmpEntry->getCategory();$/;"	v
commentCount	library\Zend\Gdata\Photos\AlbumFeed.php	/^                $commentCount = new Zend_Gdata_Photos_Extension_CommentCount();$/;"	v
commentingEnabled	library\Zend\Gdata\Photos\AlbumFeed.php	/^                $commentingEnabled = new Zend_Gdata_Photos_Extension_CommentingEnabled();$/;"	v
element	library\Zend\Gdata\Photos\AlbumFeed.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
entryClassName	library\Zend\Gdata\Photos\AlbumFeed.php	/^                            $entryClassName = $this->_entryKindClassMapping[$category->term];$/;"	v
entryClassName	library\Zend\Gdata\Photos\AlbumFeed.php	/^                $entryClassName = $this->_entryClassName;$/;"	v
id	library\Zend\Gdata\Photos\AlbumFeed.php	/^                $id = new Zend_Gdata_Photos_Extension_Id();$/;"	v
location	library\Zend\Gdata\Photos\AlbumFeed.php	/^                $location = new Zend_Gdata_Photos_Extension_Location();$/;"	v
name	library\Zend\Gdata\Photos\AlbumFeed.php	/^                $name = new Zend_Gdata_Photos_Extension_Name();$/;"	v
newEntry	library\Zend\Gdata\Photos\AlbumFeed.php	/^                $newEntry = new $entryClassName($child);$/;"	v
nickname	library\Zend\Gdata\Photos\AlbumFeed.php	/^                $nickname = new Zend_Gdata_Photos_Extension_Nickname();$/;"	v
numphotos	library\Zend\Gdata\Photos\AlbumFeed.php	/^                $numphotos = new Zend_Gdata_Photos_Extension_NumPhotos();$/;"	v
timestamp	library\Zend\Gdata\Photos\AlbumFeed.php	/^                $timestamp = new Zend_Gdata_Photos_Extension_Timestamp();$/;"	v
tmpEntry	library\Zend\Gdata\Photos\AlbumFeed.php	/^                $tmpEntry = new Zend_Gdata_App_Entry($child);$/;"	v
user	library\Zend\Gdata\Photos\AlbumFeed.php	/^                $user = new Zend_Gdata_Photos_Extension_User();$/;"	v
Zend_Gdata_Photos_AlbumQuery	library\Zend\Gdata\Photos\AlbumQuery.php	/^class Zend_Gdata_Photos_AlbumQuery extends Zend_Gdata_Photos_UserQuery$/;"	c
uri	library\Zend\Gdata\Photos\AlbumQuery.php	/^        $uri = '';$/;"	v
Zend_Gdata_Photos_CommentEntry	library\Zend\Gdata\Photos\CommentEntry.php	/^class Zend_Gdata_Photos_CommentEntry extends Zend_Gdata_Entry$/;"	c
absoluteNodeName	library\Zend\Gdata\Photos\CommentEntry.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
category	library\Zend\Gdata\Photos\CommentEntry.php	/^        $category = new Zend_Gdata_App_Extension_Category($/;"	v
element	library\Zend\Gdata\Photos\CommentEntry.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
id	library\Zend\Gdata\Photos\CommentEntry.php	/^                $id = new Zend_Gdata_Photos_Extension_Id();$/;"	v
photoid	library\Zend\Gdata\Photos\CommentEntry.php	/^                $photoid = new Zend_Gdata_Photos_Extension_PhotoId();$/;"	v
Zend_Gdata_Photos_Extension_Access	library\Zend\Gdata\Photos\Extension\Access.php	/^class Zend_Gdata_Photos_Extension_Access extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Photos_Extension_AlbumId	library\Zend\Gdata\Photos\Extension\AlbumId.php	/^class Zend_Gdata_Photos_Extension_AlbumId extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Photos_Extension_BytesUsed	library\Zend\Gdata\Photos\Extension\BytesUsed.php	/^class Zend_Gdata_Photos_Extension_BytesUsed extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Photos_Extension_Checksum	library\Zend\Gdata\Photos\Extension\Checksum.php	/^class Zend_Gdata_Photos_Extension_Checksum extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Photos_Extension_Client	library\Zend\Gdata\Photos\Extension\Client.php	/^class Zend_Gdata_Photos_Extension_Client extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Photos_Extension_CommentCount	library\Zend\Gdata\Photos\Extension\CommentCount.php	/^class Zend_Gdata_Photos_Extension_CommentCount extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Photos_Extension_CommentingEnabled	library\Zend\Gdata\Photos\Extension\CommentingEnabled.php	/^class Zend_Gdata_Photos_Extension_CommentingEnabled extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Photos_Extension_Height	library\Zend\Gdata\Photos\Extension\Height.php	/^class Zend_Gdata_Photos_Extension_Height extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Photos_Extension_Id	library\Zend\Gdata\Photos\Extension\Id.php	/^class Zend_Gdata_Photos_Extension_Id extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Photos_Extension_Location	library\Zend\Gdata\Photos\Extension\Location.php	/^class Zend_Gdata_Photos_Extension_Location extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Photos_Extension_MaxPhotosPerAlbum	library\Zend\Gdata\Photos\Extension\MaxPhotosPerAlbum.php	/^class Zend_Gdata_Photos_Extension_MaxPhotosPerAlbum extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Photos_Extension_Name	library\Zend\Gdata\Photos\Extension\Name.php	/^class Zend_Gdata_Photos_Extension_Name extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Photos_Extension_Nickname	library\Zend\Gdata\Photos\Extension\Nickname.php	/^class Zend_Gdata_Photos_Extension_Nickname extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Photos_Extension_NumPhotos	library\Zend\Gdata\Photos\Extension\NumPhotos.php	/^class Zend_Gdata_Photos_Extension_NumPhotos extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Photos_Extension_NumPhotosRemaining	library\Zend\Gdata\Photos\Extension\NumPhotosRemaining.php	/^class Zend_Gdata_Photos_Extension_NumPhotosRemaining extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Photos_Extension_PhotoId	library\Zend\Gdata\Photos\Extension\PhotoId.php	/^class Zend_Gdata_Photos_Extension_PhotoId extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Photos_Extension_Position	library\Zend\Gdata\Photos\Extension\Position.php	/^class Zend_Gdata_Photos_Extension_Position extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Photos_Extension_QuotaCurrent	library\Zend\Gdata\Photos\Extension\QuotaCurrent.php	/^class Zend_Gdata_Photos_Extension_QuotaCurrent extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Photos_Extension_QuotaLimit	library\Zend\Gdata\Photos\Extension\QuotaLimit.php	/^class Zend_Gdata_Photos_Extension_QuotaLimit extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Photos_Extension_Rotation	library\Zend\Gdata\Photos\Extension\Rotation.php	/^class Zend_Gdata_Photos_Extension_Rotation extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Photos_Extension_Size	library\Zend\Gdata\Photos\Extension\Size.php	/^class Zend_Gdata_Photos_Extension_Size extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Photos_Extension_Thumbnail	library\Zend\Gdata\Photos\Extension\Thumbnail.php	/^class Zend_Gdata_Photos_Extension_Thumbnail extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Photos_Extension_Timestamp	library\Zend\Gdata\Photos\Extension\Timestamp.php	/^class Zend_Gdata_Photos_Extension_Timestamp extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Photos_Extension_User	library\Zend\Gdata\Photos\Extension\User.php	/^class Zend_Gdata_Photos_Extension_User extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Photos_Extension_Version	library\Zend\Gdata\Photos\Extension\Version.php	/^class Zend_Gdata_Photos_Extension_Version extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Photos_Extension_Weight	library\Zend\Gdata\Photos\Extension\Weight.php	/^class Zend_Gdata_Photos_Extension_Weight extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Photos_Extension_Width	library\Zend\Gdata\Photos\Extension\Width.php	/^class Zend_Gdata_Photos_Extension_Width extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Photos_PhotoEntry	library\Zend\Gdata\Photos\PhotoEntry.php	/^class Zend_Gdata_Photos_PhotoEntry extends Zend_Gdata_Media_Entry$/;"	c
absoluteNodeName	library\Zend\Gdata\Photos\PhotoEntry.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
albumId	library\Zend\Gdata\Photos\PhotoEntry.php	/^                $albumId = new Zend_Gdata_Photos_Extension_AlbumId();$/;"	v
category	library\Zend\Gdata\Photos\PhotoEntry.php	/^        $category = new Zend_Gdata_App_Extension_Category($/;"	v
checksum	library\Zend\Gdata\Photos\PhotoEntry.php	/^                $checksum = new Zend_Gdata_Photos_Extension_Checksum();$/;"	v
client	library\Zend\Gdata\Photos\PhotoEntry.php	/^                $client = new Zend_Gdata_Photos_Extension_Client();$/;"	v
commentCount	library\Zend\Gdata\Photos\PhotoEntry.php	/^                $commentCount = new Zend_Gdata_Photos_Extension_CommentCount();$/;"	v
commentingEnabled	library\Zend\Gdata\Photos\PhotoEntry.php	/^                $commentingEnabled = new Zend_Gdata_Photos_Extension_CommentingEnabled();$/;"	v
element	library\Zend\Gdata\Photos\PhotoEntry.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
exifTags	library\Zend\Gdata\Photos\PhotoEntry.php	/^                $exifTags = new Zend_Gdata_Exif_Extension_Tags();$/;"	v
geoRssWhere	library\Zend\Gdata\Photos\PhotoEntry.php	/^                $geoRssWhere = new Zend_Gdata_Geo_Extension_GeoRssWhere();$/;"	v
height	library\Zend\Gdata\Photos\PhotoEntry.php	/^                $height = new Zend_Gdata_Photos_Extension_Height();$/;"	v
id	library\Zend\Gdata\Photos\PhotoEntry.php	/^                $id = new Zend_Gdata_Photos_Extension_Id();$/;"	v
size	library\Zend\Gdata\Photos\PhotoEntry.php	/^                $size = new Zend_Gdata_Photos_Extension_Size();$/;"	v
timestamp	library\Zend\Gdata\Photos\PhotoEntry.php	/^                $timestamp = new Zend_Gdata_Photos_Extension_Timestamp();$/;"	v
version	library\Zend\Gdata\Photos\PhotoEntry.php	/^                $version = new Zend_Gdata_Photos_Extension_Version();$/;"	v
width	library\Zend\Gdata\Photos\PhotoEntry.php	/^                $width = new Zend_Gdata_Photos_Extension_Width();$/;"	v
Zend_Gdata_Photos_PhotoFeed	library\Zend\Gdata\Photos\PhotoFeed.php	/^class Zend_Gdata_Photos_PhotoFeed extends Zend_Gdata_Feed$/;"	c
absoluteNodeName	library\Zend\Gdata\Photos\PhotoFeed.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
albumid	library\Zend\Gdata\Photos\PhotoFeed.php	/^                $albumid = new Zend_Gdata_Photos_Extension_AlbumId();$/;"	v
categories	library\Zend\Gdata\Photos\PhotoFeed.php	/^                $categories = $tmpEntry->getCategory();$/;"	v
checksum	library\Zend\Gdata\Photos\PhotoFeed.php	/^                $checksum = new Zend_Gdata_Photos_Extension_Checksum();$/;"	v
client	library\Zend\Gdata\Photos\PhotoFeed.php	/^                $client = new Zend_Gdata_Photos_Extension_Client();$/;"	v
commentCount	library\Zend\Gdata\Photos\PhotoFeed.php	/^                $commentCount = new Zend_Gdata_Photos_Extension_CommentCount();$/;"	v
commentingEnabled	library\Zend\Gdata\Photos\PhotoFeed.php	/^                $commentingEnabled = new Zend_Gdata_Photos_Extension_CommentingEnabled();$/;"	v
element	library\Zend\Gdata\Photos\PhotoFeed.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
entryClassName	library\Zend\Gdata\Photos\PhotoFeed.php	/^                            $entryClassName = $this->_entryKindClassMapping[$category->term];$/;"	v
entryClassName	library\Zend\Gdata\Photos\PhotoFeed.php	/^                $entryClassName = $this->_entryClassName;$/;"	v
height	library\Zend\Gdata\Photos\PhotoFeed.php	/^                $height = new Zend_Gdata_Photos_Extension_Height();$/;"	v
id	library\Zend\Gdata\Photos\PhotoFeed.php	/^                $id = new Zend_Gdata_Photos_Extension_Id();$/;"	v
mediaGroup	library\Zend\Gdata\Photos\PhotoFeed.php	/^                $mediaGroup = new Zend_Gdata_Media_Extension_MediaGroup();$/;"	v
newEntry	library\Zend\Gdata\Photos\PhotoFeed.php	/^                $newEntry = new $entryClassName($child);$/;"	v
size	library\Zend\Gdata\Photos\PhotoFeed.php	/^                $size = new Zend_Gdata_Photos_Extension_Size();$/;"	v
timestamp	library\Zend\Gdata\Photos\PhotoFeed.php	/^                $timestamp = new Zend_Gdata_Photos_Extension_Timestamp();$/;"	v
tmpEntry	library\Zend\Gdata\Photos\PhotoFeed.php	/^                $tmpEntry = new Zend_Gdata_App_Entry($child);$/;"	v
version	library\Zend\Gdata\Photos\PhotoFeed.php	/^                $version = new Zend_Gdata_Photos_Extension_Version();$/;"	v
width	library\Zend\Gdata\Photos\PhotoFeed.php	/^                $width = new Zend_Gdata_Photos_Extension_Width();$/;"	v
Zend_Gdata_Photos_PhotoQuery	library\Zend\Gdata\Photos\PhotoQuery.php	/^class Zend_Gdata_Photos_PhotoQuery extends Zend_Gdata_Photos_AlbumQuery$/;"	c
uri	library\Zend\Gdata\Photos\PhotoQuery.php	/^        $uri = '';$/;"	v
Zend_Gdata_Photos_TagEntry	library\Zend\Gdata\Photos\TagEntry.php	/^class Zend_Gdata_Photos_TagEntry extends Zend_Gdata_Entry$/;"	c
absoluteNodeName	library\Zend\Gdata\Photos\TagEntry.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
category	library\Zend\Gdata\Photos\TagEntry.php	/^        $category = new Zend_Gdata_App_Extension_Category($/;"	v
element	library\Zend\Gdata\Photos\TagEntry.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
weight	library\Zend\Gdata\Photos\TagEntry.php	/^                $weight = new Zend_Gdata_Photos_Extension_Weight();$/;"	v
Zend_Gdata_Photos_UserEntry	library\Zend\Gdata\Photos\UserEntry.php	/^class Zend_Gdata_Photos_UserEntry extends Zend_Gdata_Entry$/;"	c
absoluteNodeName	library\Zend\Gdata\Photos\UserEntry.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
category	library\Zend\Gdata\Photos\UserEntry.php	/^        $category = new Zend_Gdata_App_Extension_Category($/;"	v
element	library\Zend\Gdata\Photos\UserEntry.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
maxPhotosPerAlbum	library\Zend\Gdata\Photos\UserEntry.php	/^                $maxPhotosPerAlbum = new Zend_Gdata_Photos_Extension_MaxPhotosPerAlbum();$/;"	v
nickname	library\Zend\Gdata\Photos\UserEntry.php	/^                $nickname = new Zend_Gdata_Photos_Extension_Nickname();$/;"	v
quotaCurrent	library\Zend\Gdata\Photos\UserEntry.php	/^                $quotaCurrent = new Zend_Gdata_Photos_Extension_QuotaCurrent();$/;"	v
quotaLimit	library\Zend\Gdata\Photos\UserEntry.php	/^                $quotaLimit = new Zend_Gdata_Photos_Extension_QuotaLimit();$/;"	v
thumbnail	library\Zend\Gdata\Photos\UserEntry.php	/^                $thumbnail = new Zend_Gdata_Photos_Extension_Thumbnail();$/;"	v
user	library\Zend\Gdata\Photos\UserEntry.php	/^                $user = new Zend_Gdata_Photos_Extension_User();$/;"	v
Zend_Gdata_Photos_UserFeed	library\Zend\Gdata\Photos\UserFeed.php	/^class Zend_Gdata_Photos_UserFeed extends Zend_Gdata_Feed$/;"	c
absoluteNodeName	library\Zend\Gdata\Photos\UserFeed.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
categories	library\Zend\Gdata\Photos\UserFeed.php	/^                $categories = $tmpEntry->getCategory();$/;"	v
element	library\Zend\Gdata\Photos\UserFeed.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
entryClassName	library\Zend\Gdata\Photos\UserFeed.php	/^                            $entryClassName = $this->_entryKindClassMapping[$category->term];$/;"	v
entryClassName	library\Zend\Gdata\Photos\UserFeed.php	/^                $entryClassName = $this->_entryClassName;$/;"	v
newEntry	library\Zend\Gdata\Photos\UserFeed.php	/^                $newEntry = new $entryClassName($child);$/;"	v
nickname	library\Zend\Gdata\Photos\UserFeed.php	/^                $nickname = new Zend_Gdata_Photos_Extension_Nickname();$/;"	v
thumbnail	library\Zend\Gdata\Photos\UserFeed.php	/^                $thumbnail = new Zend_Gdata_Photos_Extension_Thumbnail();$/;"	v
tmpEntry	library\Zend\Gdata\Photos\UserFeed.php	/^                $tmpEntry = new Zend_Gdata_App_Entry($child);$/;"	v
user	library\Zend\Gdata\Photos\UserFeed.php	/^                $user = new Zend_Gdata_Photos_Extension_User();$/;"	v
Zend_Gdata_Photos_UserQuery	library\Zend\Gdata\Photos\UserQuery.php	/^class Zend_Gdata_Photos_UserQuery extends Zend_Gdata_Query$/;"	c
uri	library\Zend\Gdata\Photos\UserQuery.php	/^        $uri = Zend_Gdata_Photos::PICASA_BASE_URI;$/;"	v
Zend_Gdata_Query	library\Zend\Gdata\Query.php	/^class Zend_Gdata_Query$/;"	c
method	library\Zend\Gdata\Query.php	/^        $method = 'get'.ucfirst($name);$/;"	v
method	library\Zend\Gdata\Query.php	/^        $method = 'set'.ucfirst($name);$/;"	v
queryArray	library\Zend\Gdata\Query.php	/^        $queryArray = array();$/;"	v
url	library\Zend\Gdata\Query.php	/^            $url = $this->_defaultFeedUri;$/;"	v
url	library\Zend\Gdata\Query.php	/^            $url = $this->_url;$/;"	v
Zend_Gdata_Spreadsheets	library\Zend\Gdata\Spreadsheets.php	/^class Zend_Gdata_Spreadsheets extends Zend_Gdata$/;"	c
cell	library\Zend\Gdata\Spreadsheets.php	/^            $cell = $cellEntry->getCell();$/;"	v
cell	library\Zend\Gdata\Spreadsheets.php	/^        $cell = 'R'.$row.'C'.$col;$/;"	v
cellContents	library\Zend\Gdata\Spreadsheets.php	/^            $cellContents = array();$/;"	v
cellFeed	library\Zend\Gdata\Spreadsheets.php	/^        $cellFeed = $this->getCellFeed($cellQuery);$/;"	v
cellFeed	library\Zend\Gdata\Spreadsheets.php	/^        $cellFeed = $this->retrieveAllEntriesForFeed($cellFeed);$/;"	v
cellQuery	library\Zend\Gdata\Spreadsheets.php	/^            $cellQuery = $location;$/;"	v
cellQuery	library\Zend\Gdata\Spreadsheets.php	/^            $cellQuery = new Zend_Gdata_Spreadsheets_CellQuery($url);$/;"	v
cellQuery	library\Zend\Gdata\Spreadsheets.php	/^        $cellQuery = null;$/;"	v
customArray	library\Zend\Gdata\Spreadsheets.php	/^            $customArray = $listEntry->getCustom();$/;"	v
editLink	library\Zend\Gdata\Spreadsheets.php	/^        $editLink = $feed->getLink('http:\/\/schemas.google.com\/g\/2005#post');$/;"	v
entry	library\Zend\Gdata\Spreadsheets.php	/^        $entry = $this->getCellEntry($query);$/;"	v
feed	library\Zend\Gdata\Spreadsheets.php	/^        $feed = $this->getListFeed($query);$/;"	v
listFeed	library\Zend\Gdata\Spreadsheets.php	/^        $listFeed = $this->getListFeed($location);$/;"	v
listFeed	library\Zend\Gdata\Spreadsheets.php	/^        $listFeed = $this->retrieveAllEntriesForFeed($listFeed);$/;"	v
newCustom	library\Zend\Gdata\Spreadsheets.php	/^            $newCustom = new Zend_Gdata_Spreadsheets_Extension_Custom();$/;"	v
newCustomArr	library\Zend\Gdata\Spreadsheets.php	/^        $newCustomArr = array();$/;"	v
newEntry	library\Zend\Gdata\Spreadsheets.php	/^        $newEntry = new Zend_Gdata_Spreadsheets_ListEntry();$/;"	v
query	library\Zend\Gdata\Spreadsheets.php	/^        $query = new Zend_Gdata_Spreadsheets_CellQuery();$/;"	v
query	library\Zend\Gdata\Spreadsheets.php	/^        $query = new Zend_Gdata_Spreadsheets_ListQuery();$/;"	v
response	library\Zend\Gdata\Spreadsheets.php	/^        $response = $entry->save();$/;"	v
rowContents	library\Zend\Gdata\Spreadsheets.php	/^            $rowContents = array();$/;"	v
spreadsheetContents	library\Zend\Gdata\Spreadsheets.php	/^        $spreadsheetContents = array();$/;"	v
uri	library\Zend\Gdata\Spreadsheets.php	/^            $uri = $location->getLink(self::CELL_FEED_LINK_URI)->href;$/;"	v
uri	library\Zend\Gdata\Spreadsheets.php	/^            $uri = $location->getLink(self::LIST_FEED_LINK_URI)->href;$/;"	v
uri	library\Zend\Gdata\Spreadsheets.php	/^            $uri = $location->getLink(self::WORKSHEETS_FEED_LINK_URI)->href;$/;"	v
uri	library\Zend\Gdata\Spreadsheets.php	/^            $uri = $location->getQueryUrl();$/;"	v
uri	library\Zend\Gdata\Spreadsheets.php	/^            $uri = $location;$/;"	v
uri	library\Zend\Gdata\Spreadsheets.php	/^            $uri = self::SPREADSHEETS_FEED_URI;$/;"	v
url	library\Zend\Gdata\Spreadsheets.php	/^            $url = $location->getLink(self::CELL_FEED_LINK_URI)->href;$/;"	v
url	library\Zend\Gdata\Spreadsheets.php	/^            $url = $location;$/;"	v
Zend_Gdata_Spreadsheets_CellEntry	library\Zend\Gdata\Spreadsheets\CellEntry.php	/^class Zend_Gdata_Spreadsheets_CellEntry extends Zend_Gdata_Entry$/;"	c
absoluteNodeName	library\Zend\Gdata\Spreadsheets\CellEntry.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
cell	library\Zend\Gdata\Spreadsheets\CellEntry.php	/^            $cell = new Zend_Gdata_Spreadsheets_Extension_Cell();$/;"	v
element	library\Zend\Gdata\Spreadsheets\CellEntry.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_Spreadsheets_CellFeed	library\Zend\Gdata\Spreadsheets\CellFeed.php	/^class Zend_Gdata_Spreadsheets_CellFeed extends Zend_Gdata_Feed$/;"	c
absoluteNodeName	library\Zend\Gdata\Spreadsheets\CellFeed.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
colCount	library\Zend\Gdata\Spreadsheets\CellFeed.php	/^                $colCount = new Zend_Gdata_Spreadsheets_Extension_ColCount();$/;"	v
element	library\Zend\Gdata\Spreadsheets\CellFeed.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
rowCount	library\Zend\Gdata\Spreadsheets\CellFeed.php	/^                $rowCount = new Zend_Gdata_Spreadsheets_Extension_RowCount();$/;"	v
Zend_Gdata_Spreadsheets_CellQuery	library\Zend\Gdata\Spreadsheets\CellQuery.php	/^class Zend_Gdata_Spreadsheets_CellQuery extends Zend_Gdata_Query$/;"	c
uri	library\Zend\Gdata\Spreadsheets\CellQuery.php	/^            $uri = $this->_defaultFeedUri;$/;"	v
uri	library\Zend\Gdata\Spreadsheets\CellQuery.php	/^            $uri = $this->_url;$/;"	v
Zend_Gdata_Spreadsheets_DocumentQuery	library\Zend\Gdata\Spreadsheets\DocumentQuery.php	/^class Zend_Gdata_Spreadsheets_DocumentQuery extends Zend_Gdata_Query$/;"	c
uri	library\Zend\Gdata\Spreadsheets\DocumentQuery.php	/^        $uri = $this->_defaultFeedUri;$/;"	v
uri	library\Zend\Gdata\Spreadsheets\DocumentQuery.php	/^        $uri = '';$/;"	v
Zend_Gdata_Spreadsheets_Extension_Cell	library\Zend\Gdata\Spreadsheets\Extension\Cell.php	/^class Zend_Gdata_Spreadsheets_Extension_Cell extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Spreadsheets\Extension\Cell.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_Spreadsheets_Extension_ColCount	library\Zend\Gdata\Spreadsheets\Extension\ColCount.php	/^class Zend_Gdata_Spreadsheets_Extension_ColCount extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Spreadsheets_Extension_Custom	library\Zend\Gdata\Spreadsheets\Extension\Custom.php	/^class Zend_Gdata_Spreadsheets_Extension_Custom extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\Spreadsheets\Extension\Custom.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_Spreadsheets_Extension_RowCount	library\Zend\Gdata\Spreadsheets\Extension\RowCount.php	/^class Zend_Gdata_Spreadsheets_Extension_RowCount extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_Spreadsheets_ListEntry	library\Zend\Gdata\Spreadsheets\ListEntry.php	/^class Zend_Gdata_Spreadsheets_ListEntry extends Zend_Gdata_Entry$/;"	c
custom	library\Zend\Gdata\Spreadsheets\ListEntry.php	/^            $custom = new Zend_Gdata_Spreadsheets_Extension_Custom($child->localName);$/;"	v
element	library\Zend\Gdata\Spreadsheets\ListEntry.php	/^            $element = $this->_customByName[$name];$/;"	v
element	library\Zend\Gdata\Spreadsheets\ListEntry.php	/^            $element = $this->_custom[$index];$/;"	v
element	library\Zend\Gdata\Spreadsheets\ListEntry.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
key	library\Zend\Gdata\Spreadsheets\ListEntry.php	/^            $key = array_search($element, $this->_custom);$/;"	v
key	library\Zend\Gdata\Spreadsheets\ListEntry.php	/^            $key = array_search($element, $this->_customByName);$/;"	v
Zend_Gdata_Spreadsheets_ListFeed	library\Zend\Gdata\Spreadsheets\ListFeed.php	/^class Zend_Gdata_Spreadsheets_ListFeed extends Zend_Gdata_Feed$/;"	c
Zend_Gdata_Spreadsheets_ListQuery	library\Zend\Gdata\Spreadsheets\ListQuery.php	/^class Zend_Gdata_Spreadsheets_ListQuery extends Zend_Gdata_Query$/;"	c
uri	library\Zend\Gdata\Spreadsheets\ListQuery.php	/^        $uri = $this->_defaultFeedUri;$/;"	v
Zend_Gdata_Spreadsheets_SpreadsheetEntry	library\Zend\Gdata\Spreadsheets\SpreadsheetEntry.php	/^class Zend_Gdata_Spreadsheets_SpreadsheetEntry extends Zend_Gdata_Entry$/;"	c
service	library\Zend\Gdata\Spreadsheets\SpreadsheetEntry.php	/^        $service = new Zend_Gdata_Spreadsheets($this->getHttpClient());$/;"	v
Zend_Gdata_Spreadsheets_SpreadsheetFeed	library\Zend\Gdata\Spreadsheets\SpreadsheetFeed.php	/^class Zend_Gdata_Spreadsheets_SpreadsheetFeed extends Zend_Gdata_Feed$/;"	c
Zend_Gdata_Spreadsheets_WorksheetEntry	library\Zend\Gdata\Spreadsheets\WorksheetEntry.php	/^class Zend_Gdata_Spreadsheets_WorksheetEntry extends Zend_Gdata_Entry$/;"	c
absoluteNodeName	library\Zend\Gdata\Spreadsheets\WorksheetEntry.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
colCount	library\Zend\Gdata\Spreadsheets\WorksheetEntry.php	/^                $colCount = new Zend_Gdata_Spreadsheets_Extension_ColCount();$/;"	v
element	library\Zend\Gdata\Spreadsheets\WorksheetEntry.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
rowCount	library\Zend\Gdata\Spreadsheets\WorksheetEntry.php	/^                $rowCount = new Zend_Gdata_Spreadsheets_Extension_RowCount();$/;"	v
service	library\Zend\Gdata\Spreadsheets\WorksheetEntry.php	/^        $service = new Zend_Gdata_Spreadsheets($this->getHttpClient());$/;"	v
Zend_Gdata_Spreadsheets_WorksheetFeed	library\Zend\Gdata\Spreadsheets\WorksheetFeed.php	/^class Zend_Gdata_Spreadsheets_WorksheetFeed extends Zend_Gdata_Feed$/;"	c
Zend_Gdata_YouTube	library\Zend\Gdata\YouTube.php	/^class Zend_Gdata_YouTube extends Zend_Gdata_Media$/;"	c
applicationId	library\Zend\Gdata\YouTube.php	/^        $applicationId = 'MyCompany-MyApp-1.0', $clientId = null,$/;"	v
client	library\Zend\Gdata\YouTube.php	/^            $client = new Zend_Http_Client();$/;"	v
commentFeedPostUrl	library\Zend\Gdata\YouTube.php	/^        $commentFeedPostUrl = self::VIDEO_URI . '\/' . $commentIdArray[3] .$/;"	v
commentId	library\Zend\Gdata\YouTube.php	/^        $commentId = $commentEntry->getId();$/;"	v
commentIdArray	library\Zend\Gdata\YouTube.php	/^        $commentIdArray = explode(':', $commentId);$/;"	v
developerKey	library\Zend\Gdata\YouTube.php	/^        $developerKey = null)$/;"	v
doc	library\Zend\Gdata\YouTube.php	/^        $doc = new DOMDocument();$/;"	v
fullEntry	library\Zend\Gdata\YouTube.php	/^        $fullEntry = false)$/;"	v
inReplyToLink	library\Zend\Gdata\YouTube.php	/^        $inReplyToLink = $this->newLink($inReplyToLinkHref,$/;"	v
inReplyToLinkHref	library\Zend\Gdata\YouTube.php	/^        $inReplyToLinkHref = self::VIDEO_URI . '\/' . $commentIdArray[3] .$/;"	v
insertUrl	library\Zend\Gdata\YouTube.php	/^        $insertUrl = 'http:\/\/gdata.youtube.com\/feeds\/api\/users\/' .$/;"	v
links	library\Zend\Gdata\YouTube.php	/^        $links = $newComment->getLink();$/;"	v
messageEntry	library\Zend\Gdata\YouTube.php	/^        $messageEntry = new Zend_Gdata_YouTube_InboxEntry();$/;"	v
newComment	library\Zend\Gdata\YouTube.php	/^        $newComment = $this->newCommentEntry();$/;"	v
response	library\Zend\Gdata\YouTube.php	/^            $response = $this->post($videoEntry, $url);$/;"	v
response	library\Zend\Gdata\YouTube.php	/^        $response = $this->insertEntry($messageEntry, $insertUrl,$/;"	v
responseElement	library\Zend\Gdata\YouTube.php	/^        $responseElement = $doc->getElementsByTagName('response')->item(0);$/;"	v
standardFeedUri	library\Zend\Gdata\YouTube.php	/^            $standardFeedUri = self::STANDARD_MOST_VIEWED_URI_V2;$/;"	v
standardFeedUri	library\Zend\Gdata\YouTube.php	/^            $standardFeedUri = self::STANDARD_RECENTLY_FEATURED_URI_V2;$/;"	v
standardFeedUri	library\Zend\Gdata\YouTube.php	/^            $standardFeedUri = self::STANDARD_TOP_RATED_URI_V2;$/;"	v
standardFeedUri	library\Zend\Gdata\YouTube.php	/^            $standardFeedUri = self::STANDARD_WATCH_ON_MOBILE_URI_V2;$/;"	v
standardFeedUri	library\Zend\Gdata\YouTube.php	/^        $standardFeedUri = self::STANDARD_MOST_VIEWED_URI;$/;"	v
standardFeedUri	library\Zend\Gdata\YouTube.php	/^        $standardFeedUri = self::STANDARD_RECENTLY_FEATURED_URI;$/;"	v
standardFeedUri	library\Zend\Gdata\YouTube.php	/^        $standardFeedUri = self::STANDARD_TOP_RATED_URI;$/;"	v
standardFeedUri	library\Zend\Gdata\YouTube.php	/^        $standardFeedUri = self::STANDARD_WATCH_ON_MOBILE_URI;$/;"	v
success	library\Zend\Gdata\YouTube.php	/^        $success = @$doc->loadXML($response);$/;"	v
tokenElement	library\Zend\Gdata\YouTube.php	/^            $tokenElement =$/;"	v
tokenText	library\Zend\Gdata\YouTube.php	/^                $tokenText = $tokenElement->firstChild->nodeValue;$/;"	v
tokenText	library\Zend\Gdata\YouTube.php	/^        $tokenText = null;$/;"	v
uri	library\Zend\Gdata\YouTube.php	/^                $uri = self::VIDEO_URI . "\/" . $videoId;$/;"	v
uri	library\Zend\Gdata\YouTube.php	/^            $uri = $location->getQueryUrl();$/;"	v
uri	library\Zend\Gdata\YouTube.php	/^            $uri = $location;$/;"	v
uri	library\Zend\Gdata\YouTube.php	/^            $uri = $standardFeedUri;$/;"	v
uri	library\Zend\Gdata\YouTube.php	/^            $uri = $username->getQueryUrl();$/;"	v
uri	library\Zend\Gdata\YouTube.php	/^            $uri = self::ACTIVITY_FEED_URI . '?author=' . $username;$/;"	v
uri	library\Zend\Gdata\YouTube.php	/^            $uri = self::USER_URI . '\/' . $user . '\/' .$/;"	v
uri	library\Zend\Gdata\YouTube.php	/^            $uri = self::USER_URI . '\/' . $user . '\/contacts';$/;"	v
uri	library\Zend\Gdata\YouTube.php	/^            $uri = self::USER_URI . '\/' . $user . '\/playlists';$/;"	v
uri	library\Zend\Gdata\YouTube.php	/^            $uri = self::USER_URI . '\/' . $user . '\/subscriptions';$/;"	v
uri	library\Zend\Gdata\YouTube.php	/^            $uri = self::USER_URI . '\/' . $user;$/;"	v
uri	library\Zend\Gdata\YouTube.php	/^            $uri = self::VIDEO_URI . "\/" . $videoId . "\/" .$/;"	v
uri	library\Zend\Gdata\YouTube.php	/^            $uri = self::VIDEO_URI . "\/" . $videoId . "\/comments";$/;"	v
uri	library\Zend\Gdata\YouTube.php	/^            $uri = self::VIDEO_URI;$/;"	v
uri	library\Zend\Gdata\YouTube.php	/^        $uri = null;$/;"	v
uri	library\Zend\Gdata\YouTube.php	/^        $uri = self::USER_URI . "\/default\/" .$/;"	v
url	library\Zend\Gdata\YouTube.php	/^        $url='http:\/\/gdata.youtube.com\/action\/GetUploadToken')$/;"	v
urlElement	library\Zend\Gdata\YouTube.php	/^            $urlElement =$/;"	v
urlText	library\Zend\Gdata\YouTube.php	/^                $urlText = $urlElement->firstChild->nodeValue;$/;"	v
urlText	library\Zend\Gdata\YouTube.php	/^        $urlText = null;$/;"	v
videoId	library\Zend\Gdata\YouTube.php	/^                $videoId = $videoEntry->getVideoId();$/;"	v
videoId	library\Zend\Gdata\YouTube.php	/^                $videoId = self::VIDEO_URI . '\/' . $videoId;$/;"	v
videoId	library\Zend\Gdata\YouTube.php	/^                $videoId = substr($videoId, strrpos($videoId, ':'));$/;"	v
videoId	library\Zend\Gdata\YouTube.php	/^        $videoId = null, $recipientUserName)$/;"	v
Zend_Gdata_YouTube_ActivityEntry	library\Zend\Gdata\YouTube\ActivityEntry.php	/^class Zend_Gdata_YouTube_ActivityEntry extends Zend_Gdata_Entry$/;"	c
absoluteNodeName	library\Zend\Gdata\YouTube\ActivityEntry.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
authors	library\Zend\Gdata\YouTube\ActivityEntry.php	/^        $authors = $this->getAuthor();$/;"	v
categories	library\Zend\Gdata\YouTube\ActivityEntry.php	/^        $categories = $this->getCategory();$/;"	v
element	library\Zend\Gdata\YouTube\ActivityEntry.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
rating	library\Zend\Gdata\YouTube\ActivityEntry.php	/^                $rating = new Zend_Gdata_Extension_Rating();$/;"	v
rating	library\Zend\Gdata\YouTube\ActivityEntry.php	/^        $rating = $this->_rating;$/;"	v
username	library\Zend\Gdata\YouTube\ActivityEntry.php	/^                $username = new Zend_Gdata_YouTube_Extension_Username();$/;"	v
videoId	library\Zend\Gdata\YouTube\ActivityEntry.php	/^                $videoId = new Zend_Gdata_YouTube_Extension_VideoId();$/;"	v
Zend_Gdata_YouTube_ActivityFeed	library\Zend\Gdata\YouTube\ActivityFeed.php	/^class Zend_Gdata_YouTube_ActivityFeed extends Zend_Gdata_Feed$/;"	c
Zend_Gdata_YouTube_CommentEntry	library\Zend\Gdata\YouTube\CommentEntry.php	/^class Zend_Gdata_YouTube_CommentEntry extends Zend_Gdata_Entry$/;"	c
Zend_Gdata_YouTube_CommentFeed	library\Zend\Gdata\YouTube\CommentFeed.php	/^class Zend_Gdata_YouTube_CommentFeed extends Zend_Gdata_Feed$/;"	c
Zend_Gdata_YouTube_ContactEntry	library\Zend\Gdata\YouTube\ContactEntry.php	/^class Zend_Gdata_YouTube_ContactEntry extends Zend_Gdata_YouTube_UserProfileEntry$/;"	c
absoluteNodeName	library\Zend\Gdata\YouTube\ContactEntry.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
element	library\Zend\Gdata\YouTube\ContactEntry.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
status	library\Zend\Gdata\YouTube\ContactEntry.php	/^            $status = new Zend_Gdata_YouTube_Extension_Status();$/;"	v
Zend_Gdata_YouTube_ContactFeed	library\Zend\Gdata\YouTube\ContactFeed.php	/^class Zend_Gdata_YouTube_ContactFeed extends Zend_Gdata_Media_Feed$/;"	c
Zend_Gdata_YouTube_Extension_AboutMe	library\Zend\Gdata\YouTube\Extension\AboutMe.php	/^class Zend_Gdata_YouTube_Extension_AboutMe extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_YouTube_Extension_Age	library\Zend\Gdata\YouTube\Extension\Age.php	/^class Zend_Gdata_YouTube_Extension_Age extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_YouTube_Extension_Books	library\Zend\Gdata\YouTube\Extension\Books.php	/^class Zend_Gdata_YouTube_Extension_Books extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_YouTube_Extension_Company	library\Zend\Gdata\YouTube\Extension\Company.php	/^class Zend_Gdata_YouTube_Extension_Company extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_YouTube_Extension_Control	library\Zend\Gdata\YouTube\Extension\Control.php	/^class Zend_Gdata_YouTube_Extension_Control extends Zend_Gdata_App_Extension_Control$/;"	c
absoluteNodeName	library\Zend\Gdata\YouTube\Extension\Control.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
element	library\Zend\Gdata\YouTube\Extension\Control.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
state	library\Zend\Gdata\YouTube\Extension\Control.php	/^            $state = new Zend_Gdata_YouTube_Extension_State();$/;"	v
Zend_Gdata_YouTube_Extension_CountHint	library\Zend\Gdata\YouTube\Extension\CountHint.php	/^class Zend_Gdata_YouTube_Extension_CountHint extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_YouTube_Extension_Description	library\Zend\Gdata\YouTube\Extension\Description.php	/^class Zend_Gdata_YouTube_Extension_Description extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_YouTube_Extension_Duration	library\Zend\Gdata\YouTube\Extension\Duration.php	/^class Zend_Gdata_YouTube_Extension_Duration extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\YouTube\Extension\Duration.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_YouTube_Extension_FirstName	library\Zend\Gdata\YouTube\Extension\FirstName.php	/^class Zend_Gdata_YouTube_Extension_FirstName extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_YouTube_Extension_Gender	library\Zend\Gdata\YouTube\Extension\Gender.php	/^class Zend_Gdata_YouTube_Extension_Gender extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_YouTube_Extension_Hobbies	library\Zend\Gdata\YouTube\Extension\Hobbies.php	/^class Zend_Gdata_YouTube_Extension_Hobbies extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_YouTube_Extension_Hometown	library\Zend\Gdata\YouTube\Extension\Hometown.php	/^class Zend_Gdata_YouTube_Extension_Hometown extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_YouTube_Extension_LastName	library\Zend\Gdata\YouTube\Extension\LastName.php	/^class Zend_Gdata_YouTube_Extension_LastName extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_YouTube_Extension_Link	library\Zend\Gdata\YouTube\Extension\Link.php	/^class Zend_Gdata_YouTube_Extension_Link extends Zend_Gdata_App_Extension_Link$/;"	c
absoluteNodeName	library\Zend\Gdata\YouTube\Extension\Link.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
element	library\Zend\Gdata\YouTube\Extension\Link.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
hrefLang	library\Zend\Gdata\YouTube\Extension\Link.php	/^            $hrefLang = null, $title = null, $length = null, $token = null)$/;"	v
token	library\Zend\Gdata\YouTube\Extension\Link.php	/^            $token = new Zend_Gdata_YouTube_Extension_Token();$/;"	v
Zend_Gdata_YouTube_Extension_Location	library\Zend\Gdata\YouTube\Extension\Location.php	/^class Zend_Gdata_YouTube_Extension_Location extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_YouTube_Extension_MediaContent	library\Zend\Gdata\YouTube\Extension\MediaContent.php	/^class Zend_Gdata_YouTube_Extension_MediaContent extends Zend_Gdata_Media_Extension_MediaContent$/;"	c
__construct	library\Zend\Gdata\YouTube\Extension\MediaContent.php	/^    function __construct() {$/;"	f
absoluteAttrName	library\Zend\Gdata\YouTube\Extension\MediaContent.php	/^        $absoluteAttrName = $attribute->namespaceURI . ':' . $attribute->localName;$/;"	v
element	library\Zend\Gdata\YouTube\Extension\MediaContent.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_YouTube_Extension_MediaCredit	library\Zend\Gdata\YouTube\Extension\MediaCredit.php	/^class Zend_Gdata_YouTube_Extension_MediaCredit extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\YouTube\Extension\MediaCredit.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
yttype	library\Zend\Gdata\YouTube\Extension\MediaCredit.php	/^        $yttype = null)$/;"	v
Zend_Gdata_YouTube_Extension_MediaGroup	library\Zend\Gdata\YouTube\Extension\MediaGroup.php	/^class Zend_Gdata_YouTube_Extension_MediaGroup extends Zend_Gdata_Media_Extension_MediaGroup$/;"	c
absoluteNodeName	library\Zend\Gdata\YouTube\Extension\MediaGroup.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
content	library\Zend\Gdata\YouTube\Extension\MediaGroup.php	/^                $content = new Zend_Gdata_YouTube_Extension_MediaContent();$/;"	v
duration	library\Zend\Gdata\YouTube\Extension\MediaGroup.php	/^                $duration = new Zend_Gdata_YouTube_Extension_Duration();$/;"	v
element	library\Zend\Gdata\YouTube\Extension\MediaGroup.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
mediacredit	library\Zend\Gdata\YouTube\Extension\MediaGroup.php	/^                $mediacredit = new Zend_Gdata_YouTube_Extension_MediaCredit();$/;"	v
mediarating	library\Zend\Gdata\YouTube\Extension\MediaGroup.php	/^                $mediarating = new Zend_Gdata_YouTube_Extension_MediaRating();$/;"	v
private	library\Zend\Gdata\YouTube\Extension\MediaGroup.php	/^                $private = new Zend_Gdata_YouTube_Extension_Private();$/;"	v
uploaded	library\Zend\Gdata\YouTube\Extension\MediaGroup.php	/^                $uploaded = new Zend_Gdata_YouTube_Extension_Uploaded();$/;"	v
videoid	library\Zend\Gdata\YouTube\Extension\MediaGroup.php	/^                $videoid = new Zend_Gdata_YouTube_Extension_VideoId();$/;"	v
Zend_Gdata_YouTube_Extension_MediaRating	library\Zend\Gdata\YouTube\Extension\MediaRating.php	/^class Zend_Gdata_YouTube_Extension_MediaRating extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\YouTube\Extension\MediaRating.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_YouTube_Extension_Movies	library\Zend\Gdata\YouTube\Extension\Movies.php	/^class Zend_Gdata_YouTube_Extension_Movies extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_YouTube_Extension_Music	library\Zend\Gdata\YouTube\Extension\Music.php	/^class Zend_Gdata_YouTube_Extension_Music extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_YouTube_Extension_NoEmbed	library\Zend\Gdata\YouTube\Extension\NoEmbed.php	/^class Zend_Gdata_YouTube_Extension_NoEmbed extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_YouTube_Extension_Occupation	library\Zend\Gdata\YouTube\Extension\Occupation.php	/^class Zend_Gdata_YouTube_Extension_Occupation extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_YouTube_Extension_PlaylistId	library\Zend\Gdata\YouTube\Extension\PlaylistId.php	/^class Zend_Gdata_YouTube_Extension_PlaylistId extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_YouTube_Extension_PlaylistTitle	library\Zend\Gdata\YouTube\Extension\PlaylistTitle.php	/^class Zend_Gdata_YouTube_Extension_PlaylistTitle extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_YouTube_Extension_Position	library\Zend\Gdata\YouTube\Extension\Position.php	/^class Zend_Gdata_YouTube_Extension_Position extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_YouTube_Extension_Private	library\Zend\Gdata\YouTube\Extension\Private.php	/^class Zend_Gdata_YouTube_Extension_Private extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\YouTube\Extension\Private.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_YouTube_Extension_QueryString	library\Zend\Gdata\YouTube\Extension\QueryString.php	/^class Zend_Gdata_YouTube_Extension_QueryString extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_YouTube_Extension_Racy	library\Zend\Gdata\YouTube\Extension\Racy.php	/^class Zend_Gdata_YouTube_Extension_Racy extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\YouTube\Extension\Racy.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_YouTube_Extension_Recorded	library\Zend\Gdata\YouTube\Extension\Recorded.php	/^class Zend_Gdata_YouTube_Extension_Recorded extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_YouTube_Extension_Relationship	library\Zend\Gdata\YouTube\Extension\Relationship.php	/^class Zend_Gdata_YouTube_Extension_Relationship extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_YouTube_Extension_ReleaseDate	library\Zend\Gdata\YouTube\Extension\ReleaseDate.php	/^class Zend_Gdata_YouTube_Extension_ReleaseDate extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_YouTube_Extension_School	library\Zend\Gdata\YouTube\Extension\School.php	/^class Zend_Gdata_YouTube_Extension_School extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_YouTube_Extension_State	library\Zend\Gdata\YouTube\Extension\State.php	/^class Zend_Gdata_YouTube_Extension_State extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\YouTube\Extension\State.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
reasonCode	library\Zend\Gdata\YouTube\Extension\State.php	/^                                $reasonCode = null, $helpUrl = null)$/;"	v
Zend_Gdata_YouTube_Extension_Statistics	library\Zend\Gdata\YouTube\Extension\Statistics.php	/^class Zend_Gdata_YouTube_Extension_Statistics extends Zend_Gdata_Extension$/;"	c
element	library\Zend\Gdata\YouTube\Extension\Statistics.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
favoriteCount	library\Zend\Gdata\YouTube\Extension\Statistics.php	/^        $favoriteCount = null)$/;"	v
subscriberCount	library\Zend\Gdata\YouTube\Extension\Statistics.php	/^        $subscriberCount = null, $lastWebAccess = null,$/;"	v
Zend_Gdata_YouTube_Extension_Status	library\Zend\Gdata\YouTube\Extension\Status.php	/^class Zend_Gdata_YouTube_Extension_Status extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_YouTube_Extension_Token	library\Zend\Gdata\YouTube\Extension\Token.php	/^class Zend_Gdata_YouTube_Extension_Token extends Zend_Gdata_App_Extension$/;"	c
element	library\Zend\Gdata\YouTube\Extension\Token.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
Zend_Gdata_YouTube_Extension_Uploaded	library\Zend\Gdata\YouTube\Extension\Uploaded.php	/^class Zend_Gdata_YouTube_Extension_Uploaded extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_YouTube_Extension_Username	library\Zend\Gdata\YouTube\Extension\Username.php	/^class Zend_Gdata_YouTube_Extension_Username extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_YouTube_Extension_VideoId	library\Zend\Gdata\YouTube\Extension\VideoId.php	/^class Zend_Gdata_YouTube_Extension_VideoId extends Zend_Gdata_Extension$/;"	c
Zend_Gdata_YouTube_InboxEntry	library\Zend\Gdata\YouTube\InboxEntry.php	/^class Zend_Gdata_YouTube_InboxEntry extends Zend_Gdata_Media_Entry$/;"	c
absoluteNodeName	library\Zend\Gdata\YouTube\InboxEntry.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
comments	library\Zend\Gdata\YouTube\InboxEntry.php	/^                $comments = new Zend_Gdata_Extension_Comments();$/;"	v
description	library\Zend\Gdata\YouTube\InboxEntry.php	/^                $description = new Zend_Gdata_YouTube_Extension_Description();$/;"	v
element	library\Zend\Gdata\YouTube\InboxEntry.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
rating	library\Zend\Gdata\YouTube\InboxEntry.php	/^                $rating = new Zend_Gdata_Extension_Rating();$/;"	v
statistics	library\Zend\Gdata\YouTube\InboxEntry.php	/^                $statistics = new Zend_Gdata_YouTube_Extension_Statistics();$/;"	v
Zend_Gdata_YouTube_InboxFeed	library\Zend\Gdata\YouTube\InboxFeed.php	/^class Zend_Gdata_YouTube_InboxFeed extends Zend_Gdata_Media_Feed$/;"	c
Zend_Gdata_YouTube_MediaEntry	library\Zend\Gdata\YouTube\MediaEntry.php	/^class Zend_Gdata_YouTube_MediaEntry extends Zend_Gdata_Media_Entry$/;"	c
absoluteNodeName	library\Zend\Gdata\YouTube\MediaEntry.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
mediaGroup	library\Zend\Gdata\YouTube\MediaEntry.php	/^            $mediaGroup = new Zend_Gdata_YouTube_Extension_MediaGroup();$/;"	v
Zend_Gdata_YouTube_PlaylistListEntry	library\Zend\Gdata\YouTube\PlaylistListEntry.php	/^class Zend_Gdata_YouTube_PlaylistListEntry extends Zend_Gdata_Entry$/;"	c
absoluteNodeName	library\Zend\Gdata\YouTube\PlaylistListEntry.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
countHint	library\Zend\Gdata\YouTube\PlaylistListEntry.php	/^            $countHint = new Zend_Gdata_YouTube_Extension_CountHint();$/;"	v
description	library\Zend\Gdata\YouTube\PlaylistListEntry.php	/^            $description = new Zend_Gdata_YouTube_Extension_Description();$/;"	v
element	library\Zend\Gdata\YouTube\PlaylistListEntry.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
feedLink	library\Zend\Gdata\YouTube\PlaylistListEntry.php	/^            $feedLink = new Zend_Gdata_Extension_FeedLink();$/;"	v
playlistId	library\Zend\Gdata\YouTube\PlaylistListEntry.php	/^            $playlistId = new Zend_Gdata_YouTube_Extension_PlaylistId();$/;"	v
Zend_Gdata_YouTube_PlaylistListFeed	library\Zend\Gdata\YouTube\PlaylistListFeed.php	/^class Zend_Gdata_YouTube_PlaylistListFeed extends Zend_Gdata_Media_Feed$/;"	c
Zend_Gdata_YouTube_PlaylistVideoEntry	library\Zend\Gdata\YouTube\PlaylistVideoEntry.php	/^class Zend_Gdata_YouTube_PlaylistVideoEntry extends Zend_Gdata_YouTube_VideoEntry$/;"	c
absoluteNodeName	library\Zend\Gdata\YouTube\PlaylistVideoEntry.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
element	library\Zend\Gdata\YouTube\PlaylistVideoEntry.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
position	library\Zend\Gdata\YouTube\PlaylistVideoEntry.php	/^            $position = new Zend_Gdata_YouTube_Extension_Position();$/;"	v
Zend_Gdata_YouTube_PlaylistVideoFeed	library\Zend\Gdata\YouTube\PlaylistVideoFeed.php	/^class Zend_Gdata_YouTube_PlaylistVideoFeed extends Zend_Gdata_Media_Feed$/;"	c
Zend_Gdata_YouTube_SubscriptionEntry	library\Zend\Gdata\YouTube\SubscriptionEntry.php	/^class Zend_Gdata_YouTube_SubscriptionEntry extends Zend_Gdata_Entry$/;"	c
absoluteNodeName	library\Zend\Gdata\YouTube\SubscriptionEntry.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
countHint	library\Zend\Gdata\YouTube\SubscriptionEntry.php	/^            $countHint = new Zend_Gdata_YouTube_Extension_CountHint();$/;"	v
element	library\Zend\Gdata\YouTube\SubscriptionEntry.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
feedLink	library\Zend\Gdata\YouTube\SubscriptionEntry.php	/^            $feedLink = new Zend_Gdata_Extension_FeedLink();$/;"	v
mediaThumbnail	library\Zend\Gdata\YouTube\SubscriptionEntry.php	/^            $mediaThumbnail = new Zend_Gdata_Media_Extension_MediaThumbnail();$/;"	v
playlistId	library\Zend\Gdata\YouTube\SubscriptionEntry.php	/^            $playlistId = new Zend_Gdata_YouTube_Extension_PlaylistId();$/;"	v
playlistTitle	library\Zend\Gdata\YouTube\SubscriptionEntry.php	/^            $playlistTitle = new Zend_Gdata_YouTube_Extension_PlaylistTitle();$/;"	v
queryString	library\Zend\Gdata\YouTube\SubscriptionEntry.php	/^            $queryString = new Zend_Gdata_YouTube_Extension_QueryString();$/;"	v
username	library\Zend\Gdata\YouTube\SubscriptionEntry.php	/^            $username = new Zend_Gdata_YouTube_Extension_Username();$/;"	v
Zend_Gdata_YouTube_SubscriptionFeed	library\Zend\Gdata\YouTube\SubscriptionFeed.php	/^class Zend_Gdata_YouTube_SubscriptionFeed extends Zend_Gdata_Media_Feed$/;"	c
Zend_Gdata_YouTube_UserProfileEntry	library\Zend\Gdata\YouTube\UserProfileEntry.php	/^class Zend_Gdata_YouTube_UserProfileEntry extends Zend_Gdata_Entry$/;"	c
aboutMe	library\Zend\Gdata\YouTube\UserProfileEntry.php	/^            $aboutMe = new Zend_Gdata_YouTube_Extension_AboutMe();$/;"	v
absoluteNodeName	library\Zend\Gdata\YouTube\UserProfileEntry.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
age	library\Zend\Gdata\YouTube\UserProfileEntry.php	/^            $age = new Zend_Gdata_YouTube_Extension_Age();$/;"	v
books	library\Zend\Gdata\YouTube\UserProfileEntry.php	/^            $books = new Zend_Gdata_YouTube_Extension_Books();$/;"	v
company	library\Zend\Gdata\YouTube\UserProfileEntry.php	/^            $company = new Zend_Gdata_YouTube_Extension_Company();$/;"	v
description	library\Zend\Gdata\YouTube\UserProfileEntry.php	/^            $description = new Zend_Gdata_YouTube_Extension_Description();$/;"	v
element	library\Zend\Gdata\YouTube\UserProfileEntry.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
feedLink	library\Zend\Gdata\YouTube\UserProfileEntry.php	/^            $feedLink = new Zend_Gdata_Extension_FeedLink();$/;"	v
feedLink	library\Zend\Gdata\YouTube\UserProfileEntry.php	/^        $feedLink = $this->getFeedLink($rel);$/;"	v
firstName	library\Zend\Gdata\YouTube\UserProfileEntry.php	/^            $firstName = new Zend_Gdata_YouTube_Extension_FirstName();$/;"	v
gender	library\Zend\Gdata\YouTube\UserProfileEntry.php	/^            $gender = new Zend_Gdata_YouTube_Extension_Gender();$/;"	v
hobbies	library\Zend\Gdata\YouTube\UserProfileEntry.php	/^            $hobbies = new Zend_Gdata_YouTube_Extension_Hobbies();$/;"	v
hometown	library\Zend\Gdata\YouTube\UserProfileEntry.php	/^            $hometown = new Zend_Gdata_YouTube_Extension_Hometown();$/;"	v
lastName	library\Zend\Gdata\YouTube\UserProfileEntry.php	/^            $lastName = new Zend_Gdata_YouTube_Extension_LastName();$/;"	v
location	library\Zend\Gdata\YouTube\UserProfileEntry.php	/^            $location = new Zend_Gdata_YouTube_Extension_Location();$/;"	v
movies	library\Zend\Gdata\YouTube\UserProfileEntry.php	/^            $movies = new Zend_Gdata_YouTube_Extension_Movies();$/;"	v
music	library\Zend\Gdata\YouTube\UserProfileEntry.php	/^            $music = new Zend_Gdata_YouTube_Extension_Music();$/;"	v
occupation	library\Zend\Gdata\YouTube\UserProfileEntry.php	/^            $occupation = new Zend_Gdata_YouTube_Extension_Occupation();$/;"	v
relationship	library\Zend\Gdata\YouTube\UserProfileEntry.php	/^            $relationship = new Zend_Gdata_YouTube_Extension_Relationship();$/;"	v
school	library\Zend\Gdata\YouTube\UserProfileEntry.php	/^            $school = new Zend_Gdata_YouTube_Extension_School();$/;"	v
statistics	library\Zend\Gdata\YouTube\UserProfileEntry.php	/^            $statistics = new Zend_Gdata_YouTube_Extension_Statistics();$/;"	v
thumbnail	library\Zend\Gdata\YouTube\UserProfileEntry.php	/^            $thumbnail = new Zend_Gdata_Media_Extension_MediaThumbnail();$/;"	v
username	library\Zend\Gdata\YouTube\UserProfileEntry.php	/^            $username = new Zend_Gdata_YouTube_Extension_Username();$/;"	v
Zend_Gdata_YouTube_VideoEntry	library\Zend\Gdata\YouTube\VideoEntry.php	/^class Zend_Gdata_YouTube_VideoEntry extends Zend_Gdata_YouTube_MediaEntry$/;"	c
absoluteNodeName	library\Zend\Gdata\YouTube\VideoEntry.php	/^        $absoluteNodeName = $child->namespaceURI . ':' . $child->localName;$/;"	v
categories	library\Zend\Gdata\YouTube\VideoEntry.php	/^            $categories = $this->getMediaGroup()->getCategory();$/;"	v
categories	library\Zend\Gdata\YouTube\VideoEntry.php	/^        $categories = $this->getMediaGroup()->getCategory();$/;"	v
categoryArray	library\Zend\Gdata\YouTube\VideoEntry.php	/^        $categoryArray = $this->getMediaGroup()->getCategory();$/;"	v
comments	library\Zend\Gdata\YouTube\VideoEntry.php	/^            $comments = new Zend_Gdata_Extension_Comments();$/;"	v
commentsExtension	library\Zend\Gdata\YouTube\VideoEntry.php	/^        $commentsExtension = $this->getComments();$/;"	v
commentsFeedLink	library\Zend\Gdata\YouTube\VideoEntry.php	/^            $commentsFeedLink = $commentsExtension->getFeedLink();$/;"	v
commentsFeedUrl	library\Zend\Gdata\YouTube\VideoEntry.php	/^                $commentsFeedUrl = $commentsFeedLink->getHref();$/;"	v
commentsFeedUrl	library\Zend\Gdata\YouTube\VideoEntry.php	/^        $commentsFeedUrl = null;$/;"	v
control	library\Zend\Gdata\YouTube\VideoEntry.php	/^            $control = new Zend_Gdata_YouTube_Extension_Control();$/;"	v
control	library\Zend\Gdata\YouTube\VideoEntry.php	/^        $control = $this->getControl();$/;"	v
developerTags	library\Zend\Gdata\YouTube\VideoEntry.php	/^        $developerTags = null;$/;"	v
element	library\Zend\Gdata\YouTube\VideoEntry.php	/^        $element = parent::getDOM($doc, $majorVersion, $minorVersion);$/;"	v
feedLink	library\Zend\Gdata\YouTube\VideoEntry.php	/^            $feedLink = new Zend_Gdata_Extension_FeedLink();$/;"	v
fullId	library\Zend\Gdata\YouTube\VideoEntry.php	/^            $fullId = $this->getId()->getText();$/;"	v
keywords	library\Zend\Gdata\YouTube\VideoEntry.php	/^            $keywords = $this->getMediaGroup()->getKeywords();$/;"	v
keywords	library\Zend\Gdata\YouTube\VideoEntry.php	/^        $keywords = new Zend_Gdata_Media_Extension_MediaKeywords();$/;"	v
keywordsString	library\Zend\Gdata\YouTube\VideoEntry.php	/^            $keywordsString = $keywords->getText();$/;"	v
link	library\Zend\Gdata\YouTube\VideoEntry.php	/^            $link = new Zend_Gdata_YouTube_Extension_Link();$/;"	v
location	library\Zend\Gdata\YouTube\VideoEntry.php	/^            $location = new Zend_Gdata_YouTube_Extension_Location();$/;"	v
newCategory	library\Zend\Gdata\YouTube\VideoEntry.php	/^        $newCategory = new Zend_Gdata_Media_Extension_MediaCategory($developerTag, self::YOUTUBE_DEVELOPER_TAGS_SCHEMA);$/;"	v
noEmbed	library\Zend\Gdata\YouTube\VideoEntry.php	/^            $noEmbed = new Zend_Gdata_YouTube_Extension_NoEmbed();$/;"	v
players	library\Zend\Gdata\YouTube\VideoEntry.php	/^            $players = $this->getMediaGroup()->getPlayer();$/;"	v
position	library\Zend\Gdata\YouTube\VideoEntry.php	/^            $position = strrpos($fullId, '\/');$/;"	v
positionArray	library\Zend\Gdata\YouTube\VideoEntry.php	/^                $positionArray = explode(' ', trim($positionString));$/;"	v
positionString	library\Zend\Gdata\YouTube\VideoEntry.php	/^            $positionString = $position->__toString();$/;"	v
racy	library\Zend\Gdata\YouTube\VideoEntry.php	/^            $racy = new Zend_Gdata_YouTube_Extension_Racy();$/;"	v
rating	library\Zend\Gdata\YouTube\VideoEntry.php	/^            $rating = new Zend_Gdata_Extension_Rating();$/;"	v
rating	library\Zend\Gdata\YouTube\VideoEntry.php	/^         $rating = new Zend_Gdata_Extension_Rating(null, 1, 5, null,$/;"	v
recorded	library\Zend\Gdata\YouTube\VideoEntry.php	/^            $recorded = new Zend_Gdata_YouTube_Extension_Recorded();$/;"	v
recorded	library\Zend\Gdata\YouTube\VideoEntry.php	/^        $recorded = $this->getRecorded();$/;"	v
returnArray	library\Zend\Gdata\YouTube\VideoEntry.php	/^                    $returnArray = array();$/;"	v
returnArray	library\Zend\Gdata\YouTube\VideoEntry.php	/^            $returnArray = array();$/;"	v
statistics	library\Zend\Gdata\YouTube\VideoEntry.php	/^            $statistics = new Zend_Gdata_YouTube_Extension_Statistics();$/;"	v
tags	library\Zend\Gdata\YouTube\VideoEntry.php	/^            $tags = implode(', ', $tags);$/;"	v
thumbnail	library\Zend\Gdata\YouTube\VideoEntry.php	/^                $thumbnail = array();$/;"	v
thumbnailArray	library\Zend\Gdata\YouTube\VideoEntry.php	/^            $thumbnailArray = array();$/;"	v
videoId	library\Zend\Gdata\YouTube\VideoEntry.php	/^                $videoId = substr($fullId, $position + 1);$/;"	v
videoId	library\Zend\Gdata\YouTube\VideoEntry.php	/^            $videoId = $this->getMediaGroup()->getVideoId()->text;$/;"	v
where	library\Zend\Gdata\YouTube\VideoEntry.php	/^            $where = new Zend_Gdata_Geo_Extension_GeoRssWhere();$/;"	v
Zend_Gdata_YouTube_VideoFeed	library\Zend\Gdata\YouTube\VideoFeed.php	/^class Zend_Gdata_YouTube_VideoFeed extends Zend_Gdata_Media_Feed$/;"	c
Zend_Gdata_YouTube_VideoQuery	library\Zend\Gdata\YouTube\VideoQuery.php	/^class Zend_Gdata_YouTube_VideoQuery extends Zend_Gdata_Query$/;"	c
minorProtocolVersion	library\Zend\Gdata\YouTube\VideoQuery.php	/^        $minorProtocolVersion = null)$/;"	v
name	library\Zend\Gdata\YouTube\VideoQuery.php	/^                        $name = 'q';$/;"	v
parameters	library\Zend\Gdata\YouTube\VideoQuery.php	/^                $parameters = explode(',', $value);$/;"	v
queryArray	library\Zend\Gdata\YouTube\VideoQuery.php	/^        $queryArray = array();$/;"	v
temp	library\Zend\Gdata\YouTube\VideoQuery.php	/^                        $temp = substr($temp, 0, -1);$/;"	v
temp	library\Zend\Gdata\YouTube\VideoQuery.php	/^                    $temp = trim($param);$/;"	v
url	library\Zend\Gdata\YouTube\VideoQuery.php	/^            $url = $this->_url;$/;"	v
url	library\Zend\Gdata\YouTube\VideoQuery.php	/^            $url = Zend_Gdata_YouTube::VIDEO_URI;$/;"	v
url	library\Zend\Gdata\YouTube\VideoQuery.php	/^        $url = $url . $this->getQueryString($majorProtocolVersion,$/;"	v
Zend_Http_Client	library\Zend\Http\Client.php	/^class Zend_Http_Client$/;"	c
adapter	library\Zend\Http\Client.php	/^            $adapter = new $adapter;$/;"	v
auth	library\Zend\Http\Client.php	/^            $auth = self::encodeAuthHeader($this->auth['user'], $this->auth['password'], $this->auth['type']);$/;"	v
authHeader	library\Zend\Http\Client.php	/^                $authHeader = 'Basic ' . base64_encode($user . ':' . $password);$/;"	v
authHeader	library\Zend\Http\Client.php	/^        $authHeader = null;$/;"	v
body	library\Zend\Http\Client.php	/^                    $body = http_build_query($this->paramsPost, '', '&');$/;"	v
body	library\Zend\Http\Client.php	/^            $body = $this->_prepareBody();$/;"	v
body	library\Zend\Http\Client.php	/^        $body = '';$/;"	v
boundary	library\Zend\Http\Client.php	/^                    $boundary = '---ZENDHTTPCLIENT-' . md5(microtime());$/;"	v
config	library\Zend\Http\Client.php	/^            $config = $config->toArray();$/;"	v
config	library\Zend\Http\Client.php	/^        $config = $this->config;$/;"	v
cookie	library\Zend\Http\Client.php	/^                $cookie = $name;$/;"	v
cookie	library\Zend\Http\Client.php	/^                $cookie = Zend_Http_Cookie::fromString("{$cookie}={$value}",$/;"	v
cookstr	library\Zend\Http\Client.php	/^            $cookstr = $this->cookiejar->getMatchingCookies($this->uri,$/;"	v
ctype	library\Zend\Http\Client.php	/^                $ctype = $this->_detectFileMimeType($filename);$/;"	v
fhead	library\Zend\Http\Client.php	/^                                        $fhead = array(self::CONTENT_TYPE => $file['ctype']);$/;"	v
flattened	library\Zend\Http\Client.php	/^                                        $flattened = self::_flattenParametersArray($this->paramsPost[$fieldName], $fieldName);$/;"	v
headers	library\Zend\Http\Client.php	/^            $headers = $this->_prepareHeaders();$/;"	v
headers	library\Zend\Http\Client.php	/^        $headers = array();$/;"	v
host	library\Zend\Http\Client.php	/^            $host = $this->uri->getHost();$/;"	v
key	library\Zend\Http\Client.php	/^                    $key = $prefix . "[$name]";$/;"	v
key	library\Zend\Http\Client.php	/^                    $key = $prefix . '[]';$/;"	v
key	library\Zend\Http\Client.php	/^                $key = $name;$/;"	v
key	library\Zend\Http\Client.php	/^        $key = strtolower($key);$/;"	v
location	library\Zend\Http\Client.php	/^                $location = trim($location);$/;"	v
mbIntEnc	library\Zend\Http\Client.php	/^            $mbIntEnc = mb_internal_encoding();$/;"	v
name	library\Zend\Http\Client.php	/^                $name = $cookie->getName();$/;"	v
name	library\Zend\Http\Client.php	/^                $name = urlencode($name);$/;"	v
normalized_name	library\Zend\Http\Client.php	/^            $normalized_name = strtolower($name);$/;"	v
parameters	library\Zend\Http\Client.php	/^                $parameters = array_merge($parameters, self::_flattenParametersArray($value, $key));$/;"	v
parameters	library\Zend\Http\Client.php	/^        $parameters = array();$/;"	v
parray	library\Zend\Http\Client.php	/^                $parray = &$this->paramsGet;$/;"	v
parray	library\Zend\Http\Client.php	/^                $parray = &$this->paramsPost;$/;"	v
parray	library\Zend\Http\Client.php	/^        $parray = array();$/;"	v
path	library\Zend\Http\Client.php	/^                        $path = $this->uri->getPath();$/;"	v
path	library\Zend\Http\Client.php	/^                        $path = rtrim(substr($path, 0, strrpos($path, '\/')), "\/");$/;"	v
query	library\Zend\Http\Client.php	/^                        $query = '';$/;"	v
query	library\Zend\Http\Client.php	/^                    $query = str_replace('+', '%20', $query);$/;"	v
query	library\Zend\Http\Client.php	/^                $query = $uri->getQuery();$/;"	v
response	library\Zend\Http\Client.php	/^                $response = Zend_Http_Response::fromString($response);$/;"	v
response	library\Zend\Http\Client.php	/^                $response = Zend_Http_Response_Stream::fromStream($response, $stream);$/;"	v
response	library\Zend\Http\Client.php	/^            $response = $this->adapter->read();$/;"	v
response	library\Zend\Http\Client.php	/^        $response = null;$/;"	v
ret	library\Zend\Http\Client.php	/^        $ret = "--{$boundary}\\r\\n" .$/;"	v
stat	library\Zend\Http\Client.php	/^            $stat = @fstat($data);$/;"	v
stream	library\Zend\Http\Client.php	/^                    $stream = $this->_openTempStream();$/;"	v
streamMetaData	library\Zend\Http\Client.php	/^                $streamMetaData = stream_get_meta_data($stream);$/;"	v
subval	library\Zend\Http\Client.php	/^                        $subval = urlencode($subval);$/;"	v
type	library\Zend\Http\Client.php	/^                $type = finfo_file(self::$_fileInfoDb, $file);$/;"	v
type	library\Zend\Http\Client.php	/^            $type = 'application\/octet-stream';$/;"	v
type	library\Zend\Http\Client.php	/^            $type = mime_content_type($file);$/;"	v
type	library\Zend\Http\Client.php	/^        $type = null;$/;"	v
type	library\Zend\Http\Client.php	/^        $type = strtolower($type);$/;"	v
uri	library\Zend\Http\Client.php	/^            $uri = Zend_Uri::factory($uri);$/;"	v
uri	library\Zend\Http\Client.php	/^            $uri = clone $this->uri;$/;"	v
uri	library\Zend\Http\Client.php	/^            $uri = clone $uri;$/;"	v
value	library\Zend\Http\Client.php	/^                    $value = trim($value);$/;"	v
value	library\Zend\Http\Client.php	/^                    $value = urlencode($value);$/;"	v
value	library\Zend\Http\Client.php	/^                $value = $cookie->getValue();$/;"	v
value	library\Zend\Http\Client.php	/^                $value = implode(', ', $value);$/;"	v
value	library\Zend\Http\Client.php	/^            $value = addslashes($value);$/;"	v
value	library\Zend\Http\Client.php	/^            $value = urlencode($value);$/;"	v
Zend_Http_Client_Adapter_Curl	library\Zend\Http\Client\Adapter\Curl.php	/^class Zend_Http_Client_Adapter_Curl implements Zend_Http_Client_Adapter_Interface, Zend_Http_Client_Adapter_Stream$/;"	c
again	library\Zend\Http\Client\Adapter\Curl.php	/^                $again              = true;$/;"	v
again	library\Zend\Http\Client\Adapter\Curl.php	/^            $again  = false;$/;"	v
body	library\Zend\Http\Client\Adapter\Curl.php	/^                        $body = '';$/;"	v
config	library\Zend\Http\Client\Adapter\Curl.php	/^            $config = $config->toArray();$/;"	v
curlHttp	library\Zend\Http\Client\Adapter\Curl.php	/^        $curlHttp = ($httpVersion == 1.1) ? CURL_HTTP_VERSION_1_1 : CURL_HTTP_VERSION_1_0;$/;"	v
curlMethod	library\Zend\Http\Client\Adapter\Curl.php	/^                    $curlMethod = CURLOPT_CUSTOMREQUEST;$/;"	v
curlMethod	library\Zend\Http\Client\Adapter\Curl.php	/^                    $curlMethod = CURLOPT_PUT;$/;"	v
curlMethod	library\Zend\Http\Client\Adapter\Curl.php	/^                $curlMethod = CURLOPT_CUSTOMREQUEST;$/;"	v
curlMethod	library\Zend\Http\Client\Adapter\Curl.php	/^                $curlMethod = CURLOPT_HTTPGET;$/;"	v
curlMethod	library\Zend\Http\Client\Adapter\Curl.php	/^                $curlMethod = CURLOPT_POST;$/;"	v
curlValue	library\Zend\Http\Client\Adapter\Curl.php	/^                    $curlValue = "PUT";$/;"	v
curlValue	library\Zend\Http\Client\Adapter\Curl.php	/^                $curlValue = "DELETE";$/;"	v
curlValue	library\Zend\Http\Client\Adapter\Curl.php	/^                $curlValue = "HEAD";$/;"	v
curlValue	library\Zend\Http\Client\Adapter\Curl.php	/^                $curlValue = "OPTIONS";$/;"	v
curlValue	library\Zend\Http\Client\Adapter\Curl.php	/^                $curlValue = "TRACE";$/;"	v
curlValue	library\Zend\Http\Client\Adapter\Curl.php	/^        $curlValue = true;$/;"	v
option	library\Zend\Http\Client\Adapter\Curl.php	/^            $option = strtolower($k);$/;"	v
parts	library\Zend\Http\Client\Adapter\Curl.php	/^            $parts  = preg_split('|(?:\\r?\\n){2}|m', $this->_response, 2);$/;"	v
request	library\Zend\Http\Client\Adapter\Curl.php	/^        $request  = curl_getinfo($this->_curl, CURLINFO_HEADER_OUT);$/;"	v
response	library\Zend\Http\Client\Adapter\Curl.php	/^        $response = curl_exec($this->_curl);$/;"	v
Zend_Http_Client_Adapter_Exception	library\Zend\Http\Client\Adapter\Exception.php	/^class Zend_Http_Client_Adapter_Exception extends Zend_Http_Client_Exception$/;"	c
Zend_Http_Client_Adapter_Proxy	library\Zend\Http\Client\Adapter\Proxy.php	/^class Zend_Http_Client_Adapter_Proxy extends Zend_Http_Client_Adapter_Socket$/;"	c
gotStatus	library\Zend\Http\Client\Adapter\Proxy.php	/^            $gotStatus = $gotStatus || (strpos($line, 'HTTP') !== false);$/;"	v
gotStatus	library\Zend\Http\Client\Adapter\Proxy.php	/^        $gotStatus = false;$/;"	v
host	library\Zend\Http\Client\Adapter\Proxy.php	/^        $host = $this->config['proxy_host'];$/;"	v
modes	library\Zend\Http\Client\Adapter\Proxy.php	/^        $modes = array($/;"	v
path	library\Zend\Http\Client\Adapter\Proxy.php	/^            $path = $uri->getPath();$/;"	v
port	library\Zend\Http\Client\Adapter\Proxy.php	/^        $port = $this->config['proxy_port'];$/;"	v
request	library\Zend\Http\Client\Adapter\Proxy.php	/^            $request = "$method $path HTTP\/$http_ver\\r\\n";$/;"	v
request	library\Zend\Http\Client\Adapter\Proxy.php	/^            $request = "$method $uri HTTP\/$http_ver\\r\\n";$/;"	v
request	library\Zend\Http\Client\Adapter\Proxy.php	/^        $request = "CONNECT $host:$port HTTP\/$http_ver\\r\\n" .$/;"	v
response	library\Zend\Http\Client\Adapter\Proxy.php	/^        $response = '';$/;"	v
success	library\Zend\Http\Client\Adapter\Proxy.php	/^            $success = stream_socket_enable_crypto($this->socket, true, $mode);$/;"	v
success	library\Zend\Http\Client\Adapter\Proxy.php	/^        $success = false;$/;"	v
Zend_Http_Client_Adapter_Socket	library\Zend\Http\Client\Adapter\Socket.php	/^class Zend_Http_Client_Adapter_Socket implements Zend_Http_Client_Adapter_Interface, Zend_Http_Client_Adapter_Stream$/;"	c
buff	library\Zend\Http\Client\Adapter\Socket.php	/^                    $buff = @fread($this->socket, 8192);$/;"	v
chunk	library\Zend\Http\Client\Adapter\Socket.php	/^                    $chunk = $line;$/;"	v
chunk	library\Zend\Http\Client\Adapter\Socket.php	/^                    $chunk = @fread($this->socket, $read_to - $current_pos);$/;"	v
chunk	library\Zend\Http\Client\Adapter\Socket.php	/^            $chunk = '';$/;"	v
chunksize	library\Zend\Http\Client\Adapter\Socket.php	/^                    $chunksize = hexdec($chunksize);$/;"	v
chunksize	library\Zend\Http\Client\Adapter\Socket.php	/^                    $chunksize = trim($line);$/;"	v
config	library\Zend\Http\Client\Adapter\Socket.php	/^            $config = $config->toArray();$/;"	v
contentLength	library\Zend\Http\Client\Adapter\Socket.php	/^                $contentLength = $headers['content-length'];$/;"	v
contentLength	library\Zend\Http\Client\Adapter\Socket.php	/^                $contentLength = $headers['content-length'][count($headers['content-length']) - 1];$/;"	v
context	library\Zend\Http\Client\Adapter\Socket.php	/^            $context = $this->getStreamContext();$/;"	v
current_pos	library\Zend\Http\Client\Adapter\Socket.php	/^                        $current_pos = ftell($this->socket);$/;"	v
current_pos	library\Zend\Http\Client\Adapter\Socket.php	/^                 $current_pos = ftell($this->socket)) {$/;"	v
current_pos	library\Zend\Http\Client\Adapter\Socket.php	/^            $current_pos = ftell($this->socket);$/;"	v
flags	library\Zend\Http\Client\Adapter\Socket.php	/^            $flags = STREAM_CLIENT_CONNECT;$/;"	v
gotStatus	library\Zend\Http\Client\Adapter\Socket.php	/^            $gotStatus = $gotStatus || (strpos($line, 'HTTP') !== false);$/;"	v
gotStatus	library\Zend\Http\Client\Adapter\Socket.php	/^        $gotStatus = false;$/;"	v
headers	library\Zend\Http\Client\Adapter\Socket.php	/^        $headers = Zend_Http_Response::extractHeaders($response);$/;"	v
host	library\Zend\Http\Client\Adapter\Socket.php	/^        $host = $uri->getHost();$/;"	v
host	library\Zend\Http\Client\Adapter\Socket.php	/^        $host = ($secure ? $this->config['ssltransport'] : 'tcp') . ':\/\/' . $host;$/;"	v
host	library\Zend\Http\Client\Adapter\Socket.php	/^        $host = (strtolower($uri->getScheme()) == 'https' ? $this->config['ssltransport'] : 'tcp') . ':\/\/' . $host;$/;"	v
info	library\Zend\Http\Client\Adapter\Socket.php	/^            $info = stream_get_meta_data($this->socket);$/;"	v
line	library\Zend\Http\Client\Adapter\Socket.php	/^                            $line = @fread($this->socket, $read_to - $current_pos);$/;"	v
line	library\Zend\Http\Client\Adapter\Socket.php	/^                    $line  = @fgets($this->socket);$/;"	v
path	library\Zend\Http\Client\Adapter\Socket.php	/^        $path = $uri->getPath();$/;"	v
read_to	library\Zend\Http\Client\Adapter\Socket.php	/^                    $read_to = ftell($this->socket) + $chunksize;$/;"	v
request	library\Zend\Http\Client\Adapter\Socket.php	/^        $request = "{$method} {$path} HTTP\/{$http_ver}\\r\\n";$/;"	v
response	library\Zend\Http\Client\Adapter\Socket.php	/^                $response = str_ireplace("Transfer-Encoding: chunked\\r\\n", '', $response);$/;"	v
response	library\Zend\Http\Client\Adapter\Socket.php	/^        $response = '';$/;"	v
statusCode	library\Zend\Http\Client\Adapter\Socket.php	/^        $statusCode = Zend_Http_Response::extractCode($response);$/;"	v
stream	library\Zend\Http\Client\Adapter\Socket.php	/^        $stream = !empty($this->config['stream']);$/;"	v
timedout	library\Zend\Http\Client\Adapter\Socket.php	/^            $timedout = $info['timed_out'];$/;"	v
Zend_Http_Client_Adapter_Test	library\Zend\Http\Client\Adapter\Test.php	/^class Zend_Http_Client_Adapter_Test implements Zend_Http_Client_Adapter_Interface$/;"	c
config	library\Zend\Http\Client\Adapter\Test.php	/^            $config = $config->toArray();$/;"	v
host	library\Zend\Http\Client\Adapter\Test.php	/^            $host = (strtolower($uri->getScheme()) == 'https' ? 'sslv2:\/\/' . $host : $host);$/;"	v
host	library\Zend\Http\Client\Adapter\Test.php	/^        $host = $uri->getHost();$/;"	v
path	library\Zend\Http\Client\Adapter\Test.php	/^        $path = $uri->getPath();$/;"	v
request	library\Zend\Http\Client\Adapter\Test.php	/^        $request = "{$method} {$path} HTTP\/{$http_ver}\\r\\n";$/;"	v
response	library\Zend\Http\Client\Adapter\Test.php	/^            $response = $response->asString("\\r\\n");$/;"	v
Zend_Http_Client_Exception	library\Zend\Http\Client\Exception.php	/^class Zend_Http_Client_Exception extends Zend_Http_Exception$/;"	c
Zend_Http_Cookie	library\Zend\Http\Cookie.php	/^class Zend_Http_Cookie$/;"	c
cookieDomain	library\Zend\Http\Cookie.php	/^            $cookieDomain = substr($cookieDomain, 1);$/;"	v
cookieDomain	library\Zend\Http\Cookie.php	/^        $cookieDomain = strtolower($cookieDomain);$/;"	v
domain	library\Zend\Http\Cookie.php	/^                        $domain = $v;$/;"	v
domain	library\Zend\Http\Cookie.php	/^            $domain = $refUri->getHost();$/;"	v
domain	library\Zend\Http\Cookie.php	/^        $domain  = '';$/;"	v
expireDate	library\Zend\Http\Cookie.php	/^                            $expireDate = new Zend_Date($v);$/;"	v
expires	library\Zend\Http\Cookie.php	/^                            $expires = $expireDate->getTimestamp();$/;"	v
expires	library\Zend\Http\Cookie.php	/^        $expires = null;$/;"	v
host	library\Zend\Http\Cookie.php	/^        $host = strtolower($host);$/;"	v
keyValue	library\Zend\Http\Cookie.php	/^            $keyValue = explode('=', $part, 2);$/;"	v
name	library\Zend\Http\Cookie.php	/^        $name    = '';$/;"	v
name	library\Zend\Http\Cookie.php	/^        $name  = trim($name);$/;"	v
part	library\Zend\Http\Cookie.php	/^            $part = trim($part);$/;"	v
parts	library\Zend\Http\Cookie.php	/^        $parts   = explode(';', $cookieStr);$/;"	v
path	library\Zend\Http\Cookie.php	/^                        $path = $v;$/;"	v
path	library\Zend\Http\Cookie.php	/^            $path = $refUri->getPath();$/;"	v
path	library\Zend\Http\Cookie.php	/^            $path = substr($path, 0, strrpos($path, '\/'));$/;"	v
path	library\Zend\Http\Cookie.php	/^        $path    = '';$/;"	v
refUri	library\Zend\Http\Cookie.php	/^            $refUri = Zend_Uri_Http::factory($refUri);$/;"	v
ret	library\Zend\Http\Cookie.php	/^            $ret = new self($name, $value, $domain, $expires, $path, $secure);$/;"	v
secure	library\Zend\Http\Cookie.php	/^                $secure = true;$/;"	v
secure	library\Zend\Http\Cookie.php	/^        $secure  = false;$/;"	v
uri	library\Zend\Http\Cookie.php	/^            $uri = Zend_Uri_Http::factory($uri);$/;"	v
value	library\Zend\Http\Cookie.php	/^            $value = urldecode(trim($value));$/;"	v
value	library\Zend\Http\Cookie.php	/^        $value   = '';$/;"	v
Zend_Http_CookieJar	library\Zend\Http\CookieJar.php	/^class Zend_Http_CookieJar implements Countable, IteratorAggregate$/;"	c
cookie	library\Zend\Http\CookieJar.php	/^            $cookie = $this->cookies[$uri->getHost()][$path][$cookie_name];$/;"	v
cookie	library\Zend\Http\CookieJar.php	/^            $cookie = Zend_Http_Cookie::fromString($cookie, $ref_uri, $encodeValue);$/;"	v
cookie_hdrs	library\Zend\Http\CookieJar.php	/^        $cookie_hdrs = $response->getHeader('Set-Cookie');$/;"	v
cookies	library\Zend\Http\CookieJar.php	/^        $cookies = $this->_flattenCookiesArray($cookies, self::COOKIE_OBJECT);$/;"	v
cookies	library\Zend\Http\CookieJar.php	/^        $cookies = $this->_flattenCookiesArray($this->cookies, $ret_as);$/;"	v
cookies	library\Zend\Http\CookieJar.php	/^        $cookies = $this->_matchDomain($uri->getHost());$/;"	v
cookies	library\Zend\Http\CookieJar.php	/^        $cookies = $this->_matchPath($cookies, $uri->getPath());$/;"	v
domain	library\Zend\Http\CookieJar.php	/^            $domain = $cookie->getDomain();$/;"	v
jar	library\Zend\Http\CookieJar.php	/^        $jar = new self();$/;"	v
path	library\Zend\Http\CookieJar.php	/^            $path = $cookie->getPath();$/;"	v
path	library\Zend\Http\CookieJar.php	/^        $path = $uri->getPath();$/;"	v
path	library\Zend\Http\CookieJar.php	/^        $path = substr($path, 0, strrpos($path, '\/'));$/;"	v
ret	library\Zend\Http\CookieJar.php	/^                    $ret = array_merge($ret, $this->_flattenCookiesArray($item, $ret_as));$/;"	v
ret	library\Zend\Http\CookieJar.php	/^            $ret = ($ret_as == self::COOKIE_STRING_CONCAT ? '' : array());$/;"	v
ret	library\Zend\Http\CookieJar.php	/^        $ret = $this->_flattenCookiesArray($ret, $ret_as);$/;"	v
ret	library\Zend\Http\CookieJar.php	/^        $ret = array();$/;"	v
ret_as	library\Zend\Http\CookieJar.php	/^        $ret_as = self::COOKIE_OBJECT, $now = null)$/;"	v
uri	library\Zend\Http\CookieJar.php	/^            $uri = Zend_Uri::factory($uri);$/;"	v
Zend_Http_Exception	library\Zend\Http\Exception.php	/^class Zend_Http_Exception extends Zend_Exception$/;"	c
Zend_Http_Response	library\Zend\Http\Response.php	/^class Zend_Http_Response$/;"	c
body	library\Zend\Http\Response.php	/^                $body = $this->body;$/;"	v
body	library\Zend\Http\Response.php	/^                $body = self::decodeChunkedBody($this->body);$/;"	v
body	library\Zend\Http\Response.php	/^                $body = self::decodeDeflate($body);$/;"	v
body	library\Zend\Http\Response.php	/^                $body = self::decodeGzip($body);$/;"	v
body	library\Zend\Http\Response.php	/^            $body = substr($body, $cut + $length + 2);$/;"	v
body	library\Zend\Http\Response.php	/^        $body    = self::extractBody($response_str);$/;"	v
body	library\Zend\Http\Response.php	/^        $body = '';$/;"	v
code	library\Zend\Http\Response.php	/^        $code    = self::extractCode($response_str);$/;"	v
cut	library\Zend\Http\Response.php	/^            $cut = strlen($m[0]);$/;"	v
decBody	library\Zend\Http\Response.php	/^        $decBody = '';$/;"	v
h_name	library\Zend\Http\Response.php	/^                $h_name = strtolower($m[1]);$/;"	v
h_value	library\Zend\Http\Response.php	/^                $h_value = $m[2];$/;"	v
header	library\Zend\Http\Response.php	/^                $header = explode(":", $value, 2);$/;"	v
header	library\Zend\Http\Response.php	/^        $header = ucwords(strtolower($header));$/;"	v
headers	library\Zend\Http\Response.php	/^        $headers = array();$/;"	v
headers	library\Zend\Http\Response.php	/^        $headers = self::extractHeaders($response_str);$/;"	v
last_header	library\Zend\Http\Response.php	/^                $last_header = $h_name;$/;"	v
last_header	library\Zend\Http\Response.php	/^        $last_header = null;$/;"	v
last_header_key	library\Zend\Http\Response.php	/^                    $last_header_key = key($headers[$last_header]);$/;"	v
length	library\Zend\Http\Response.php	/^            $length = hexdec(trim($m[1]));$/;"	v
line	library\Zend\Http\Response.php	/^            $line = trim($line, "\\r\\n");$/;"	v
lines	library\Zend\Http\Response.php	/^        $lines = explode("\\n", $parts[0]);$/;"	v
mbIntEnc	library\Zend\Http\Response.php	/^            $mbIntEnc = mb_internal_encoding();$/;"	v
message	library\Zend\Http\Response.php	/^        $message = self::extractMessage($response_str);$/;"	v
messages	library\Zend\Http\Response.php	/^        $messages = self::$messages;$/;"	v
name	library\Zend\Http\Response.php	/^                $name  = trim($header[0]);$/;"	v
parts	library\Zend\Http\Response.php	/^        $parts = preg_split('|(?:\\r?\\n){2}|m', $response_str, 2);$/;"	v
restype	library\Zend\Http\Response.php	/^        $restype = floor($this->code \/ 100);$/;"	v
str	library\Zend\Http\Response.php	/^            $str = "HTTP\/{$this->version} {$this->code} {$this->message}{$br}";$/;"	v
str	library\Zend\Http\Response.php	/^        $str = '';$/;"	v
value	library\Zend\Http\Response.php	/^                $value = trim($header[1]);$/;"	v
version	library\Zend\Http\Response.php	/^        $version = self::extractVersion($response_str);$/;"	v
zlibHeader	library\Zend\Http\Response.php	/^        $zlibHeader = unpack('n', substr($body, 0, 2));$/;"	v
Zend_Http_Response_Stream	library\Zend\Http\Response\Stream.php	/^class Zend_Http_Response_Stream extends Zend_Http_Response$/;"	c
body	library\Zend\Http\Response\Stream.php	/^            $body = '';$/;"	v
code	library\Zend\Http\Response\Stream.php	/^        $code    = self::extractCode($response_str);$/;"	v
headers	library\Zend\Http\Response\Stream.php	/^        $headers = self::extractHeaders($response_str);$/;"	v
message	library\Zend\Http\Response\Stream.php	/^        $message = self::extractMessage($response_str);$/;"	v
version	library\Zend\Http\Response\Stream.php	/^        $version = self::extractVersion($response_str);$/;"	v
Zend_Http_UserAgent	library\Zend\Http\UserAgent.php	/^class Zend_Http_UserAgent implements Serializable$/;"	c
accept	library\Zend\Http\UserAgent.php	/^            $accept = self::DEFAULT_HTTP_ACCEPT;$/;"	v
adapter	library\Zend\Http\UserAgent.php	/^                $adapter = $loader->load($adapter);$/;"	v
adapter	library\Zend\Http\UserAgent.php	/^            $adapter = $config['adapter'];$/;"	v
basePath	library\Zend\Http\UserAgent.php	/^        $basePath   = 'Zend\/Http\/UserAgent\/';$/;"	v
basePrefix	library\Zend\Http\UserAgent.php	/^        $basePrefix = 'Zend_Http_UserAgent_';$/;"	v
browser	library\Zend\Http\UserAgent.php	/^            $browser = $this->getUserAgent();$/;"	v
browserType	library\Zend\Http\UserAgent.php	/^            $browserType = trim($browserType);$/;"	v
browserType	library\Zend\Http\UserAgent.php	/^        $browserType = $this->getBrowserType();$/;"	v
browserType	library\Zend\Http\UserAgent.php	/^        $browserType = strtolower($browserType);$/;"	v
className	library\Zend\Http\UserAgent.php	/^            $className   = $this->_getUserAgentDevice($browserType);$/;"	v
classname	library\Zend\Http\UserAgent.php	/^        $classname   = $this->_getUserAgentDevice($browserType);$/;"	v
config	library\Zend\Http\UserAgent.php	/^            $config  = $this->_config['storage'];$/;"	v
config	library\Zend\Http\UserAgent.php	/^            $config = $config->toArray();$/;"	v
config	library\Zend\Http\UserAgent.php	/^            $config = $tmp;$/;"	v
config	library\Zend\Http\UserAgent.php	/^        $config = array();$/;"	v
device	library\Zend\Http\UserAgent.php	/^                $device = $loader->load($browserType);$/;"	v
device	library\Zend\Http\UserAgent.php	/^                $device = (string) $deviceConfig['classname'];$/;"	v
device	library\Zend\Http\UserAgent.php	/^            $device = $loader->load($browserType);$/;"	v
device	library\Zend\Http\UserAgent.php	/^        $device = $this->getDevice();$/;"	v
deviceClass	library\Zend\Http\UserAgent.php	/^        $deviceClass          = $spec['device_class'];$/;"	v
deviceConfig	library\Zend\Http\UserAgent.php	/^            $deviceConfig = $this->_config[$browserType]['device'];$/;"	v
deviceSpec	library\Zend\Http\UserAgent.php	/^        $deviceSpec            = unserialize($spec['device']);$/;"	v
key	library\Zend\Http\UserAgent.php	/^        $key    = strtolower($key);$/;"	v
loader	library\Zend\Http\UserAgent.php	/^                $loader = $this->getPluginLoader('device');$/;"	v
loader	library\Zend\Http\UserAgent.php	/^                $loader = $this->getPluginLoader('storage');$/;"	v
loader	library\Zend\Http\UserAgent.php	/^            $loader = $this->getPluginLoader('device');$/;"	v
loader	library\Zend\Http\UserAgent.php	/^            $loader = new $loader();$/;"	v
object	library\Zend\Http\UserAgent.php	/^            $object = $storage->read();$/;"	v
options	library\Zend\Http\UserAgent.php	/^                $options = array_merge($options, $config['options']);$/;"	v
options	library\Zend\Http\UserAgent.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Http\UserAgent.php	/^            $options = array('browser_type' => $browser);$/;"	v
path	library\Zend\Http\UserAgent.php	/^                $path   = $basePath   . 'Storage';$/;"	v
path	library\Zend\Http\UserAgent.php	/^                $path   = $basePath;$/;"	v
path	library\Zend\Http\UserAgent.php	/^                $path   = $deviceConfig['path'];$/;"	v
plConfig	library\Zend\Http\UserAgent.php	/^            $plConfig = $options['plugin_loader'];$/;"	v
prefix	library\Zend\Http\UserAgent.php	/^                $prefix = $basePrefix . 'Storage';$/;"	v
prefix	library\Zend\Http\UserAgent.php	/^                $prefix = $basePrefix;$/;"	v
prefix	library\Zend\Http\UserAgent.php	/^                $prefix = isset($deviceConfig['prefix']) ? $deviceConfig['prefix'] : 'Zend_Http_UserAgent';$/;"	v
r	library\Zend\Http\UserAgent.php	/^        $r = new ReflectionClass($deviceClass);$/;"	v
return	library\Zend\Http\UserAgent.php	/^            $return = $server[$key];$/;"	v
return	library\Zend\Http\UserAgent.php	/^        $return = null;$/;"	v
sequence	library\Zend\Http\UserAgent.php	/^        $sequence = explode(',', $this->_config['identification_sequence']);$/;"	v
server	library\Zend\Http\UserAgent.php	/^            $server = $server->getArrayCopy();$/;"	v
server	library\Zend\Http\UserAgent.php	/^            $server = $tmp;$/;"	v
server	library\Zend\Http\UserAgent.php	/^        $server = $this->getServer(); \/\/ ensure it's been initialized$/;"	v
server	library\Zend\Http\UserAgent.php	/^        $server = $this->getServer();$/;"	v
server	library\Zend\Http\UserAgent.php	/^        $server = array_change_key_case($server, CASE_LOWER);$/;"	v
spec	library\Zend\Http\UserAgent.php	/^        $spec = array($/;"	v
spec	library\Zend\Http\UserAgent.php	/^        $spec = unserialize($serialized);$/;"	v
storage	library\Zend\Http\UserAgent.php	/^        $storage = $this->getStorage($userAgent);$/;"	v
tmp	library\Zend\Http\UserAgent.php	/^            $tmp = array();$/;"	v
type	library\Zend\Http\UserAgent.php	/^                $type = $browserType;$/;"	v
type	library\Zend\Http\UserAgent.php	/^        $type       = $this->_validateLoaderType($type);$/;"	v
type	library\Zend\Http\UserAgent.php	/^        $type = $this->_validateLoaderType($type);$/;"	v
type	library\Zend\Http\UserAgent.php	/^        $type = self::DEFAULT_BROWSER_TYPE;$/;"	v
type	library\Zend\Http\UserAgent.php	/^        $type = strtolower($type);$/;"	v
types	library\Zend\Http\UserAgent.php	/^            $types = implode(', ', $this->_loaderTypes);$/;"	v
ua	library\Zend\Http\UserAgent.php	/^            $ua = self::DEFAULT_HTTP_USER_AGENT;$/;"	v
userAgent	library\Zend\Http\UserAgent.php	/^        $userAgent = $this->getUserAgent();$/;"	v
apple_device	library\Zend\Http\UserAgent\AbstractDevice.php	/^        $apple_device = array($/;"	v
awkVersion	library\Zend\Http\UserAgent\AbstractDevice.php	/^                    $awkVersion = array($/;"	v
browserType	library\Zend\Http\UserAgent\AbstractDevice.php	/^        $browserType = $this->getType();$/;"	v
build	library\Zend\Http\UserAgent\AbstractDevice.php	/^                    $build = (int) $temp[0];$/;"	v
className	library\Zend\Http\UserAgent\AbstractDevice.php	/^        $className = $config['classname'];$/;"	v
comment	library\Zend\Http\UserAgent\AbstractDevice.php	/^            $comment = explode(';', $match[7]);$/;"	v
comment	library\Zend\Http\UserAgent\AbstractDevice.php	/^        $comment = array();$/;"	v
compatibleOrIe	library\Zend\Http\UserAgent\AbstractDevice.php	/^            $compatibleOrIe = ($result['compatibility_flag'] == 'compatible' || strpos($result['comment']['full'], "MSIE") !== false);$/;"	v
compatibleOrIe	library\Zend\Http\UserAgent\AbstractDevice.php	/^        $compatibleOrIe = false;$/;"	v
config	library\Zend\Http\UserAgent\AbstractDevice.php	/^        $config      = $this->_config;$/;"	v
config	library\Zend\Http\UserAgent\AbstractDevice.php	/^        $config = $config[$browserType]['features'];$/;"	v
end	library\Zend\Http\UserAgent\AbstractDevice.php	/^        $end = substr($userAgent, strlen($match[0]));$/;"	v
features	library\Zend\Http\UserAgent\AbstractDevice.php	/^        $features = $this->_loadFeaturesAdapter();$/;"	v
i	library\Zend\Http\UserAgent\AbstractDevice.php	/^            $i = 0;$/;"	v
last	library\Zend\Http\UserAgent\AbstractDevice.php	/^                    $last = count($result['others']['detail']) - 1;$/;"	v
last	library\Zend\Http\UserAgent\AbstractDevice.php	/^                $last = $result['others']['detail'][count($result['others']['detail']) - 1][1];$/;"	v
lowerUserAgent	library\Zend\Http\UserAgent\AbstractDevice.php	/^            $lowerUserAgent = strtolower($this->getUserAgent());$/;"	v
match2	library\Zend\Http\UserAgent\AbstractDevice.php	/^        $match2 = array();$/;"	v
max	library\Zend\Http\UserAgent\AbstractDevice.php	/^            $max = count($match2[0]);$/;"	v
path	library\Zend\Http\UserAgent\AbstractDevice.php	/^                $path = $config['path'];$/;"	v
pattern	library\Zend\Http\UserAgent\AbstractDevice.php	/^        $pattern =  "(([^\/\\s]*)(\/(\\S*))?)(\\s*\\[[a-zA-Z][a-zA-Z]\\])?\\s*(\\\\((([^()]|(\\\\([^()]*\\\\)))*)\\\\))?\\s*";$/;"	v
product	library\Zend\Http\UserAgent\AbstractDevice.php	/^        $product = strtolower($result['browser_name']);$/;"	v
searchRV	library\Zend\Http\UserAgent\AbstractDevice.php	/^                        $searchRV = true;$/;"	v
searchRV	library\Zend\Http\UserAgent\AbstractDevice.php	/^                    $searchRV = false;$/;"	v
searchRV	library\Zend\Http\UserAgent\AbstractDevice.php	/^                $searchRV = true;$/;"	v
security	library\Zend\Http\UserAgent\AbstractDevice.php	/^        $security = array($/;"	v
server	library\Zend\Http\UserAgent\AbstractDevice.php	/^        $server = array();$/;"	v
spec	library\Zend\Http\UserAgent\AbstractDevice.php	/^        $spec = array($/;"	v
spec	library\Zend\Http\UserAgent\AbstractDevice.php	/^        $spec = unserialize($serialized);$/;"	v
temp	library\Zend\Http\UserAgent\AbstractDevice.php	/^                        $temp                     = explode(' ', trim($v));$/;"	v
temp	library\Zend\Http\UserAgent\AbstractDevice.php	/^                    $temp = explode('.', $result['browser_version']);$/;"	v
uaExtract	library\Zend\Http\UserAgent\AbstractDevice.php	/^        $uaExtract = $this->extractFromUserAgent($this->getUserAgent());$/;"	v
userAgent	library\Zend\Http\UserAgent\AbstractDevice.php	/^        $userAgent = strtolower($userAgent);$/;"	v
userAgent	library\Zend\Http\UserAgent\AbstractDevice.php	/^        $userAgent = trim($userAgent);$/;"	v
windows	library\Zend\Http\UserAgent\AbstractDevice.php	/^                $windows = array($/;"	v
Zend_Http_UserAgent_Bot	library\Zend\Http\UserAgent\Bot.php	/^class Zend_Http_UserAgent_Bot extends Zend_Http_UserAgent_AbstractDevice$/;"	c
Zend_Http_UserAgent_Checker	library\Zend\Http\UserAgent\Checker.php	/^class Zend_Http_UserAgent_Checker extends Zend_Http_UserAgent_Desktop$/;"	c
Zend_Http_UserAgent_Console	library\Zend\Http\UserAgent\Console.php	/^class Zend_Http_UserAgent_Console extends Zend_Http_UserAgent_Desktop$/;"	c
Zend_Http_UserAgent_Desktop	library\Zend\Http\UserAgent\Desktop.php	/^class Zend_Http_UserAgent_Desktop extends Zend_Http_UserAgent_AbstractDevice$/;"	c
Zend_Http_UserAgent_Email	library\Zend\Http\UserAgent\Email.php	/^class Zend_Http_UserAgent_Email extends Zend_Http_UserAgent_Desktop$/;"	c
Zend_Http_UserAgent_Exception	library\Zend\Http\UserAgent\Exception.php	/^class Zend_Http_UserAgent_Exception extends Zend_Exception$/;"	c
Zend_Http_UserAgent_Features_Adapter_DeviceAtlas	library\Zend\Http\UserAgent\Features\Adapter\DeviceAtlas.php	/^class Zend_Http_UserAgent_Features_Adapter_DeviceAtlas implements Zend_Http_UserAgent_Features_Adapter$/;"	c
config	library\Zend\Http\UserAgent\Features\Adapter\DeviceAtlas.php	/^        $config = $config['deviceatlas'];$/;"	v
properties	library\Zend\Http\UserAgent\Features\Adapter\DeviceAtlas.php	/^        $properties = Mobi_Mtld_DA_Api::getProperties($tree, $request['http_user_agent']);$/;"	v
tree	library\Zend\Http\UserAgent\Features\Adapter\DeviceAtlas.php	/^        $tree = Mobi_Mtld_DA_Api::getTreeFromFile($config['deviceatlas_data']);$/;"	v
Zend_Http_UserAgent_Features_Adapter_TeraWurfl	library\Zend\Http\UserAgent\Features\Adapter\TeraWurfl.php	/^class Zend_Http_UserAgent_Features_Adapter_TeraWurfl implements Zend_Http_UserAgent_Features_Adapter$/;"	c
config	library\Zend\Http\UserAgent\Features\Adapter\TeraWurfl.php	/^            $config = $config['terawurfl'];$/;"	v
matched	library\Zend\Http\UserAgent\Features\Adapter\TeraWurfl.php	/^        $matched = $wurflObj->getDeviceCapabilitiesFromRequest(array_change_key_case($request, CASE_UPPER));$/;"	v
wurflObj	library\Zend\Http\UserAgent\Features\Adapter\TeraWurfl.php	/^        $wurflObj = new TeraWurfl();$/;"	v
Zend_Http_UserAgent_Features_Adapter_WurflApi	library\Zend\Http\UserAgent\Features\Adapter\WurflApi.php	/^class Zend_Http_UserAgent_Features_Adapter_WurflApi$/;"	c
c	library\Zend\Http\UserAgent\Features\Adapter\WurflApi.php	/^                    $c            = $config['wurfl_config_array'];$/;"	v
config	library\Zend\Http\UserAgent\Features\Adapter\WurflApi.php	/^        $config = $config['wurflapi'];$/;"	v
device	library\Zend\Http\UserAgent\Features\Adapter\WurflApi.php	/^        $device   = $wurflManager->getDeviceForHttpRequest(array_change_key_case($request, CASE_UPPER));$/;"	v
features	library\Zend\Http\UserAgent\Features\Adapter\WurflApi.php	/^        $features = $device->getAllCapabilities();$/;"	v
wurflConfig	library\Zend\Http\UserAgent\Features\Adapter\WurflApi.php	/^                    $wurflConfig  = new WURFL_Configuration_InMemoryConfig();$/;"	v
wurflConfig	library\Zend\Http\UserAgent\Features\Adapter\WurflApi.php	/^                    $wurflConfig = WURFL_Configuration_ConfigFactory::create($config['wurfl_config_file']);$/;"	v
wurflManager	library\Zend\Http\UserAgent\Features\Adapter\WurflApi.php	/^                $wurflManager = $wurflManagerFactory->create();$/;"	v
wurflManager	library\Zend\Http\UserAgent\Features\Adapter\WurflApi.php	/^                $wurflManager = WURFL_WURFLManagerProvider::getWURFLManager(Zend_Http_UserAgent::$config['wurfl_config_file']);$/;"	v
wurflManagerFactory	library\Zend\Http\UserAgent\Features\Adapter\WurflApi.php	/^                $wurflManagerFactory = new WURFL_WURFLManagerFactory($wurflConfig);$/;"	v
Zend_Http_UserAgent_Features_Exception	library\Zend\Http\UserAgent\Features\Exception.php	/^class Zend_Http_UserAgent_Features_Exception extends Zend_Http_UserAgent_Exception$/;"	c
Zend_Http_UserAgent_Feed	library\Zend\Http\UserAgent\Feed.php	/^class Zend_Http_UserAgent_Feed extends Zend_Http_UserAgent_AbstractDevice$/;"	c
Zend_Http_UserAgent_Mobile	library\Zend\Http\UserAgent\Mobile.php	/^class Zend_Http_UserAgent_Mobile extends Zend_Http_UserAgent_AbstractDevice$/;"	c
mobile_ua	library\Zend\Http\UserAgent\Mobile.php	/^        $mobile_ua = strtolower(substr($userAgent, 0, 4));$/;"	v
return	library\Zend\Http\UserAgent\Mobile.php	/^                $return = '';$/;"	v
return	library\Zend\Http\UserAgent\Mobile.php	/^                $return = 'chtml'; \/\/text\/html$/;"	v
return	library\Zend\Http\UserAgent\Mobile.php	/^                $return = 'wml'; \/\/text\/vnd.wap.wml encoding="ISO-8859-15"$/;"	v
return	library\Zend\Http\UserAgent\Mobile.php	/^                $return = 'xhtml';$/;"	v
return	library\Zend\Http\UserAgent\Mobile.php	/^        $return = '';$/;"	v
Zend_Http_UserAgent_Offline	library\Zend\Http\UserAgent\Offline.php	/^class Zend_Http_UserAgent_Offline extends Zend_Http_UserAgent_Desktop$/;"	c
Zend_Http_UserAgent_Probe	library\Zend\Http\UserAgent\Probe.php	/^class Zend_Http_UserAgent_Probe extends Zend_Http_UserAgent_AbstractDevice$/;"	c
Zend_Http_UserAgent_Spam	library\Zend\Http\UserAgent\Spam.php	/^class Zend_Http_UserAgent_Spam extends Zend_Http_UserAgent_AbstractDevice$/;"	c
Zend_Http_UserAgent_Storage_Exception	library\Zend\Http\UserAgent\Storage\Exception.php	/^class Zend_Http_UserAgent_Storage_Exception extends Zend_Http_UserAgent_Exception$/;"	c
Zend_Http_UserAgent_Storage_NonPersistent	library\Zend\Http\UserAgent\Storage\NonPersistent.php	/^class Zend_Http_UserAgent_Storage_NonPersistent$/;"	c
Zend_Http_UserAgent_Storage_Session	library\Zend\Http\UserAgent\Storage\Session.php	/^class Zend_Http_UserAgent_Storage_Session implements Zend_Http_UserAgent_Storage$/;"	c
options	library\Zend\Http\UserAgent\Storage\Session.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Http\UserAgent\Storage\Session.php	/^            $options = (array) $options;$/;"	v
Zend_Http_UserAgent_Text	library\Zend\Http\UserAgent\Text.php	/^class Zend_Http_UserAgent_Text extends Zend_Http_UserAgent_AbstractDevice$/;"	c
Zend_Http_UserAgent_Validator	library\Zend\Http\UserAgent\Validator.php	/^class Zend_Http_UserAgent_Validator extends Zend_Http_UserAgent_Desktop$/;"	c
PKcipher	library\Zend\InfoCard.php	/^        $PKcipher = Zend_InfoCard_Cipher::getInstanceByURI($encryptedKey->getEncryptionMethod());$/;"	v
Zend_InfoCard	library\Zend\InfoCard.php	/^class Zend_InfoCard$/;"	c
assertions	library\Zend\InfoCard.php	/^            $assertions = Zend_InfoCard_Xml_Assertion::getInstance($signedAssertionsXml);$/;"	v
attributes	library\Zend\InfoCard.php	/^        $attributes = $assertions->getAttributes();$/;"	v
base64DecodeSupportsStrictParam	library\Zend\InfoCard.php	/^        $base64DecodeSupportsStrictParam = version_compare(PHP_VERSION, '5.2.0', '>=');$/;"	v
cert_digest	library\Zend\InfoCard.php	/^            $cert_digest = $this->_getPublicKeyDigest($key_id, $digestMethod);$/;"	v
certificateData	library\Zend\InfoCard.php	/^        $certificateData = base64_decode(implode("\\n", $temp));$/;"	v
certificatePair	library\Zend\InfoCard.php	/^        $certificatePair = $this->getCertificatePair($key_id);$/;"	v
certificate_pair	library\Zend\InfoCard.php	/^        $certificate_pair = $this->getCertificatePair($key_id);$/;"	v
conditions	library\Zend\InfoCard.php	/^            $conditions = $assertions->getConditions();$/;"	v
conditions	library\Zend\InfoCard.php	/^        $conditions = $this->getAdapter()->retrieveAssertion($assertions->getAssertionURI(), $assertions->getAssertionID());$/;"	v
dataCipherValueBase64Decoded	library\Zend\InfoCard.php	/^            $dataCipherValueBase64Decoded = base64_decode($encryptedData->getCipherValue());$/;"	v
dataCipherValueBase64Decoded	library\Zend\InfoCard.php	/^            $dataCipherValueBase64Decoded = base64_decode($encryptedData->getCipherValue(), true);$/;"	v
digest_retval	library\Zend\InfoCard.php	/^                $digest_retval = sha1($certificateData, true);$/;"	v
encryptedData	library\Zend\InfoCard.php	/^        $encryptedData = Zend_InfoCard_Xml_EncryptedData::getInstance($strXmlToken);$/;"	v
encryptedKey	library\Zend\InfoCard.php	/^        $encryptedKey = $keyinfo->getEncryptedKey();$/;"	v
keyCipherValueBase64Decoded	library\Zend\InfoCard.php	/^            $keyCipherValueBase64Decoded = base64_decode($encryptedKey->getCipherValue());$/;"	v
keyCipherValueBase64Decoded	library\Zend\InfoCard.php	/^            $keyCipherValueBase64Decoded = base64_decode($encryptedKey->getCipherValue(), true);$/;"	v
key_id	library\Zend\InfoCard.php	/^        $key_id = $this->_findCertifiatePairByDigest($securityTokenRef->getKeyReference());$/;"	v
key_id	library\Zend\InfoCard.php	/^        $key_id = md5($private_key_file.$public_key_file);$/;"	v
keyinfo	library\Zend\InfoCard.php	/^        $keyinfo = $encryptedData->getKeyInfo();$/;"	v
reference_id	library\Zend\InfoCard.php	/^            $reference_id = substr($reference_id, 1);$/;"	v
retval	library\Zend\InfoCard.php	/^        $retval = new Zend_InfoCard_Claims();$/;"	v
securityTokenRef	library\Zend\InfoCard.php	/^        $securityTokenRef = $encryptedKey->getKeyInfo()->getSecurityTokenReference();$/;"	v
signedAssertionsXml	library\Zend\InfoCard.php	/^            $signedAssertionsXml = $this->_extractSignedToken($strXmlToken);$/;"	v
signedToken	library\Zend\InfoCard.php	/^        $signedToken = $symCipher->decrypt($dataCipherValueBase64Decoded, $symmetricKey);$/;"	v
symCipher	library\Zend\InfoCard.php	/^        $symCipher = Zend_InfoCard_Cipher::getInstanceByURI($encryptedData->getEncryptionMethod());$/;"	v
symmetricKey	library\Zend\InfoCard.php	/^        $symmetricKey = $PKcipher->decrypt($/;"	v
temp	library\Zend\InfoCard.php	/^        $temp = file($certificatePair['public']);$/;"	v
Zend_InfoCard_Adapter_Default	library\Zend\InfoCard\Adapter\Default.php	/^class Zend_InfoCard_Adapter_Default implements Zend_InfoCard_Adapter_Interface$/;"	c
Zend_InfoCard_Adapter_Exception	library\Zend\InfoCard\Adapter\Exception.php	/^class Zend_InfoCard_Adapter_Exception extends Zend_InfoCard_Exception$/;"	c
Zend_InfoCard_Cipher	library\Zend\InfoCard\Cipher.php	/^class Zend_InfoCard_Cipher$/;"	c
Zend_InfoCard_Cipher_Exception	library\Zend\InfoCard\Cipher\Exception.php	/^class Zend_InfoCard_Cipher_Exception extends Zend_InfoCard_Exception$/;"	c
Zend_InfoCard_Cipher_Pki_Adapter_Rsa	library\Zend\InfoCard\Cipher\Pki\Adapter\Rsa.php	/^class Zend_InfoCard_Cipher_Pki_Adapter_Rsa$/;"	c
decryptedData	library\Zend\InfoCard\Cipher\Pki\Adapter\Rsa.php	/^            $decryptedData = substr($decryptedData, $start);$/;"	v
decryptedData	library\Zend\InfoCard\Cipher\Pki\Adapter\Rsa.php	/^            $decryptedData = substr($decryptedData, 2);$/;"	v
openssl_padding	library\Zend\InfoCard\Cipher\Pki\Adapter\Rsa.php	/^                $openssl_padding = OPENSSL_NO_PADDING;$/;"	v
openssl_padding	library\Zend\InfoCard\Cipher\Pki\Adapter\Rsa.php	/^                $openssl_padding = OPENSSL_PKCS1_OAEP_PADDING;$/;"	v
private_key	library\Zend\InfoCard\Cipher\Pki\Adapter\Rsa.php	/^        $private_key = openssl_pkey_get_private(array($privateKey, $password));$/;"	v
result	library\Zend\InfoCard\Cipher\Pki\Adapter\Rsa.php	/^        $result = openssl_private_decrypt($encryptedData, $decryptedData, $private_key, $openssl_padding);$/;"	v
start	library\Zend\InfoCard\Cipher\Pki\Adapter\Rsa.php	/^            $start = strpos($decryptedData, 0) + 1;$/;"	v
Zend_InfoCard_Cipher_Symmetric_Adapter_Aes128cbc	library\Zend\InfoCard\Cipher\Symmetric\Adapter\Aes128cbc.php	/^class Zend_InfoCard_Cipher_Symmetric_Adapter_Aes128cbc$/;"	c
Zend_InfoCard_Cipher_Symmetric_Adapter_Aes256cbc	library\Zend\InfoCard\Cipher\Symmetric\Adapter\Aes256cbc.php	/^class Zend_InfoCard_Cipher_Symmetric_Adapter_Aes256cbc$/;"	c
decrypted	library\Zend\InfoCard\Cipher\Symmetric\Adapter\Aes256cbc.php	/^        $decrypted = mcrypt_decrypt(self::MCRYPT_CIPHER, $decryptionKey, $encryptedData, self::MCRYPT_MODE, $mcrypt_iv);$/;"	v
decrypted	library\Zend\InfoCard\Cipher\Symmetric\Adapter\Aes256cbc.php	/^        $decrypted = substr($decrypted, 0, $decryptedLength - ord($paddingLength));$/;"	v
decryptedLength	library\Zend\InfoCard\Cipher\Symmetric\Adapter\Aes256cbc.php	/^        $decryptedLength = strlen($decrypted);$/;"	v
encryptedData	library\Zend\InfoCard\Cipher\Symmetric\Adapter\Aes256cbc.php	/^            $encryptedData = substr($encryptedData, $iv_length);$/;"	v
iv_length	library\Zend\InfoCard\Cipher\Symmetric\Adapter\Aes256cbc.php	/^        $iv_length = ($iv_length === null) ? self::IV_LENGTH : $iv_length;$/;"	v
mcrypt_iv	library\Zend\InfoCard\Cipher\Symmetric\Adapter\Aes256cbc.php	/^             $mcrypt_iv = substr($encryptedData, 0, $iv_length);$/;"	v
mcrypt_iv	library\Zend\InfoCard\Cipher\Symmetric\Adapter\Aes256cbc.php	/^        $mcrypt_iv = null;$/;"	v
paddingLength	library\Zend\InfoCard\Cipher\Symmetric\Adapter\Aes256cbc.php	/^        $paddingLength = substr($decrypted, $decryptedLength -1, 1);$/;"	v
Zend_InfoCard_Claims	library\Zend\InfoCard\Claims.php	/^class Zend_InfoCard_Claims$/;"	c
leader	library\Zend\InfoCard\Claims.php	/^                    $leader = $claim['namespace'];$/;"	v
leader	library\Zend\InfoCard\Claims.php	/^            $leader = '';$/;"	v
namespaces	library\Zend\InfoCard\Claims.php	/^            $namespaces = array();$/;"	v
Zend_InfoCard_Exception	library\Zend\InfoCard\Exception.php	/^class Zend_InfoCard_Exception extends Zend_InfoCard_Exception_Abstract$/;"	c
namespaces	library\Zend\InfoCard\Xml\Assertion.php	/^        $namespaces = $sxe->getDocNameSpaces();$/;"	v
strXmlData	library\Zend\InfoCard\Xml\Assertion.php	/^            $strXmlData = $xmlData->asXML();$/;"	v
strXmlData	library\Zend\InfoCard\Xml\Assertion.php	/^            $strXmlData = $xmlData;$/;"	v
sxe	library\Zend\InfoCard\Xml\Assertion.php	/^        $sxe = simplexml_load_string($strXmlData);$/;"	v
Zend_InfoCard_Xml_Assertion_Saml	library\Zend\InfoCard\Xml\Assertion\Saml.php	/^class Zend_InfoCard_Xml_Assertion_Saml$/;"	c
attributes	library\Zend\InfoCard\Xml\Assertion\Saml.php	/^        $attributes = $this->xPath('\/\/saml:Attribute');$/;"	v
currentTime	library\Zend\InfoCard\Xml\Assertion\Saml.php	/^        $currentTime = time();$/;"	v
found	library\Zend\InfoCard\Xml\Assertion\Saml.php	/^                                    $found = true;$/;"	v
found	library\Zend\InfoCard\Xml\Assertion\Saml.php	/^                        $found = false;$/;"	v
notbeforetime	library\Zend\InfoCard\Xml\Assertion\Saml.php	/^                        $notbeforetime = strtotime($conditionValue);$/;"	v
notonoraftertime	library\Zend\InfoCard\Xml\Assertion\Saml.php	/^                        $notonoraftertime = strtotime($conditionValue);$/;"	v
retkey	library\Zend\InfoCard\Xml\Assertion\Saml.php	/^            $retkey = (string)$value['AttributeNamespace'].'\/'.(string)$value['AttributeName'];$/;"	v
retval	library\Zend\InfoCard\Xml\Assertion\Saml.php	/^        $retval = array();$/;"	v
serverName	library\Zend\InfoCard\Xml\Assertion\Saml.php	/^                        $serverName = $this->_getServerName();$/;"	v
serverPort	library\Zend\InfoCard\Xml\Assertion\Saml.php	/^                        $serverPort = $this->_getServerPort();$/;"	v
dom	library\Zend\InfoCard\Xml\Element.php	/^        $dom = dom_import_simplexml($e);$/;"	v
reflection	library\Zend\InfoCard\Xml\Element.php	/^        $reflection = new ReflectionClass($classname);$/;"	v
sxe	library\Zend\InfoCard\Xml\Element.php	/^        $sxe = simplexml_import_dom($e, $classname);$/;"	v
strXmlData	library\Zend\InfoCard\Xml\EncryptedData.php	/^            $strXmlData = $xmlData->asXML();$/;"	v
strXmlData	library\Zend\InfoCard\Xml\EncryptedData.php	/^            $strXmlData = $xmlData;$/;"	v
sxe	library\Zend\InfoCard\Xml\EncryptedData.php	/^        $sxe = simplexml_load_string($strXmlData);$/;"	v
dom	library\Zend\InfoCard\Xml\EncryptedData\Abstract.php	/^        $dom = self::convertToDOM($encryption_method);$/;"	v
Zend_InfoCard_Xml_EncryptedData_XmlEnc	library\Zend\InfoCard\Xml\EncryptedData\XmlEnc.php	/^class Zend_InfoCard_Xml_EncryptedData_XmlEnc extends Zend_InfoCard_Xml_EncryptedData_Abstract$/;"	c
Zend_InfoCard_Xml_EncryptedKey	library\Zend\InfoCard\Xml\EncryptedKey.php	/^class Zend_InfoCard_Xml_EncryptedKey$/;"	c
dom	library\Zend\InfoCard\Xml\EncryptedKey.php	/^        $dom = self::convertToDOM($encryption_method);$/;"	v
dom	library\Zend\InfoCard\Xml\EncryptedKey.php	/^        $dom = self::convertToDOM($encryption_method->DigestMethod);$/;"	v
strXmlData	library\Zend\InfoCard\Xml\EncryptedKey.php	/^            $strXmlData = $xmlData->asXML();$/;"	v
strXmlData	library\Zend\InfoCard\Xml\EncryptedKey.php	/^            $strXmlData = $xmlData;$/;"	v
sxe	library\Zend\InfoCard\Xml\EncryptedKey.php	/^        $sxe = simplexml_load_string($strXmlData);$/;"	v
Zend_InfoCard_Xml_Exception	library\Zend\InfoCard\Xml\Exception.php	/^class Zend_InfoCard_Xml_Exception extends Zend_InfoCard_Exception$/;"	c
Zend_InfoCard_Xml_KeyInfo	library\Zend\InfoCard\Xml\KeyInfo.php	/^class Zend_InfoCard_Xml_KeyInfo$/;"	c
namespaces	library\Zend\InfoCard\Xml\KeyInfo.php	/^        $namespaces = $sxe->getDocNameSpaces();$/;"	v
strXmlData	library\Zend\InfoCard\Xml\KeyInfo.php	/^            $strXmlData = $xmlData->asXML();$/;"	v
strXmlData	library\Zend\InfoCard\Xml\KeyInfo.php	/^            $strXmlData = $xmlData;$/;"	v
sxe	library\Zend\InfoCard\Xml\KeyInfo.php	/^        $sxe = simplexml_load_string($strXmlData);$/;"	v
Zend_InfoCard_Xml_KeyInfo_Default	library\Zend\InfoCard\Xml\KeyInfo\Default.php	/^class Zend_InfoCard_Xml_KeyInfo_Default extends Zend_InfoCard_Xml_KeyInfo_Abstract$/;"	c
Zend_InfoCard_Xml_KeyInfo_XmlDSig	library\Zend\InfoCard\Xml\KeyInfo\XmlDSig.php	/^class Zend_InfoCard_Xml_KeyInfo_XmlDSig$/;"	c
Zend_InfoCard_Xml_Security	library\Zend\InfoCard\Xml\Security.php	/^class Zend_InfoCard_Xml_Security$/;"	c
base64DecodeSupportsStrictParam	library\Zend\InfoCard\Xml\Security.php	/^        $base64DecodeSupportsStrictParam = version_compare(PHP_VERSION, '5.2.0', '>=');$/;"	v
binRsaKeyIdentifier	library\Zend\InfoCard\Xml\Security.php	/^        $binRsaKeyIdentifier = pack( "H*", self::RSA_KEY_IDENTIFIER );$/;"	v
cMethod	library\Zend\InfoCard\Xml\Security.php	/^                $cMethod = (string)$sxe->Signature->SignedInfo->CanonicalizationMethod['Algorithm'];$/;"	v
canonical_signedinfo	library\Zend\InfoCard\Xml\Security.php	/^        $canonical_signedinfo = $transformer->applyTransforms($sxe->Signature->SignedInfo->asXML());$/;"	v
certificate	library\Zend\InfoCard\Xml\Security.php	/^                $certificate = (string)$sxe->Signature->KeyInfo->KeyValue->X509Certificate;$/;"	v
dMethod	library\Zend\InfoCard\Xml\Security.php	/^                $dMethod = (string)$sxe->Signature->SignedInfo->Reference->DigestMethod['Algorithm'];$/;"	v
dValue	library\Zend\InfoCard\Xml\Security.php	/^            $dValue = base64_decode((string)$sxe->Signature->SignedInfo->Reference->DigestValue);$/;"	v
dValue	library\Zend\InfoCard\Xml\Security.php	/^            $dValue = base64_decode((string)$sxe->Signature->SignedInfo->Reference->DigestValue, true);$/;"	v
data	library\Zend\InfoCard\Xml\Security.php	/^                $data = "\\0$data";$/;"	v
exponent	library\Zend\InfoCard\Xml\Security.php	/^                $exponent = base64_decode((string)$sxe->Signature->KeyInfo->KeyValue->RSAKeyValue->Exponent);$/;"	v
exponentInteger	library\Zend\InfoCard\Xml\Security.php	/^        $exponentInteger = self::_encodeValue($exponent, self::ASN_TYPE_INTEGER);$/;"	v
len	library\Zend\InfoCard\Xml\Security.php	/^        $len = strlen($data);$/;"	v
modExpBitString	library\Zend\InfoCard\Xml\Security.php	/^        $modExpBitString = self::_encodeValue($modExpSequence, self::ASN_TYPE_BITSTRING);$/;"	v
modExpSequence	library\Zend\InfoCard\Xml\Security.php	/^        $modExpSequence  = self::_encodeValue($modulusInteger . $exponentInteger, self::ASN_TYPE_SEQUENCE);$/;"	v
modulus	library\Zend\InfoCard\Xml\Security.php	/^                $modulus = base64_decode((string)$sxe->Signature->KeyInfo->KeyValue->RSAKeyValue->Modulus);$/;"	v
modulusInteger	library\Zend\InfoCard\Xml\Security.php	/^        $modulusInteger  = self::_encodeValue($modulus, self::ASN_TYPE_INTEGER);$/;"	v
pem	library\Zend\InfoCard\Xml\Security.php	/^                $pem = "-----BEGIN CERTIFICATE-----\\n" .$/;"	v
pem_public_key	library\Zend\InfoCard\Xml\Security.php	/^                $pem_public_key = self::_getPublicKeyFromModExp($modulus, $exponent);$/;"	v
publicKeyInfoBase64	library\Zend\InfoCard\Xml\Security.php	/^        $publicKeyInfoBase64 = base64_encode( $publicKeySequence );$/;"	v
publicKeySequence	library\Zend\InfoCard\Xml\Security.php	/^        $publicKeySequence = self::_encodeValue($binRsaKeyIdentifier . $modExpBitString, self::ASN_TYPE_SEQUENCE);$/;"	v
publicKeyString	library\Zend\InfoCard\Xml\Security.php	/^        $publicKeyString = "-----BEGIN PUBLIC KEY-----\\n";$/;"	v
public_key	library\Zend\InfoCard\Xml\Security.php	/^                $public_key = openssl_pkey_get_public ($pem_public_key);$/;"	v
public_key	library\Zend\InfoCard\Xml\Security.php	/^                $public_key = openssl_pkey_get_public($pem);$/;"	v
public_key	library\Zend\InfoCard\Xml\Security.php	/^        $public_key = null;$/;"	v
result	library\Zend\InfoCard\Xml\Security.php	/^        $result = 0;$/;"	v
sMethod	library\Zend\InfoCard\Xml\Security.php	/^                $sMethod = (string)$sxe->Signature->SignedInfo->SignatureMethod['Algorithm'];$/;"	v
signatureValue	library\Zend\InfoCard\Xml\Security.php	/^            $signatureValue = base64_decode((string)$sxe->Signature->SignatureValue);$/;"	v
signatureValue	library\Zend\InfoCard\Xml\Security.php	/^            $signatureValue = base64_decode((string)$sxe->Signature->SignatureValue, true);$/;"	v
sxe	library\Zend\InfoCard\Xml\Security.php	/^        $sxe = simplexml_load_string($strXMLInput);$/;"	v
transformed_xml	library\Zend\InfoCard\Xml\Security.php	/^        $transformed_xml = $transformer->applyTransforms($strXMLInput);$/;"	v
transformed_xml_binhash	library\Zend\InfoCard\Xml\Security.php	/^        $transformed_xml_binhash = pack("H*", sha1($transformed_xml));$/;"	v
transformer	library\Zend\InfoCard\Xml\Security.php	/^        $transformer = new Zend_InfoCard_Xml_Security_Transform();$/;"	v
Zend_InfoCard_Xml_SecurityTokenReference	library\Zend\InfoCard\Xml\SecurityTokenReference.php	/^class Zend_InfoCard_Xml_SecurityTokenReference extends Zend_InfoCard_Xml_Element$/;"	c
decoded	library\Zend\InfoCard\Xml\SecurityTokenReference.php	/^                        $decoded = base64_decode($encoded);$/;"	v
decoded	library\Zend\InfoCard\Xml\SecurityTokenReference.php	/^                        $decoded = base64_decode($encoded, true);$/;"	v
decoded	library\Zend\InfoCard\Xml\SecurityTokenReference.php	/^            $decoded = "";$/;"	v
dom	library\Zend\InfoCard\Xml\SecurityTokenReference.php	/^        $dom = self::convertToDOM($keyIdentifier);$/;"	v
dom	library\Zend\InfoCard\Xml\SecurityTokenReference.php	/^        $dom = self::convertToDOM($keyident);$/;"	v
encoded	library\Zend\InfoCard\Xml\SecurityTokenReference.php	/^        $encoded = $dom->nodeValue;$/;"	v
keyIdentifier	library\Zend\InfoCard\Xml\SecurityTokenReference.php	/^        $keyIdentifier = $this->_getKeyIdentifier();$/;"	v
keyident	library\Zend\InfoCard\Xml\SecurityTokenReference.php	/^        $keyident = $this->_getKeyIdentifier();$/;"	v
strXmlData	library\Zend\InfoCard\Xml\SecurityTokenReference.php	/^            $strXmlData = $xmlData->asXML();$/;"	v
strXmlData	library\Zend\InfoCard\Xml\SecurityTokenReference.php	/^            $strXmlData = $xmlData;$/;"	v
sxe	library\Zend\InfoCard\Xml\SecurityTokenReference.php	/^        $sxe = simplexml_load_string($strXmlData);$/;"	v
Zend_InfoCard_Xml_Security_Exception	library\Zend\InfoCard\Xml\Security\Exception.php	/^class Zend_InfoCard_Xml_Security_Exception extends Zend_InfoCard_Xml_Exception$/;"	c
Zend_InfoCard_Xml_Security_Transform	library\Zend\InfoCard\Xml\Security\Transform.php	/^class Zend_InfoCard_Xml_Security_Transform$/;"	c
class	library\Zend\InfoCard\Xml\Security\Transform.php	/^        $class = $this->_findClassbyURI($uri);$/;"	v
strXmlDocument	library\Zend\InfoCard\Xml\Security\Transform.php	/^            $strXmlDocument = $transformer->transform($strXmlDocument);$/;"	v
transformer	library\Zend\InfoCard\Xml\Security\Transform.php	/^            $transformer = new $transform['class'];$/;"	v
Zend_InfoCard_Xml_Security_Transform_EnvelopedSignature	library\Zend\InfoCard\Xml\Security\Transform\EnvelopedSignature.php	/^class Zend_InfoCard_Xml_Security_Transform_EnvelopedSignature$/;"	c
sxe	library\Zend\InfoCard\Xml\Security\Transform\EnvelopedSignature.php	/^        $sxe = simplexml_load_string($strXMLData);$/;"	v
Zend_InfoCard_Xml_Security_Transform_Exception	library\Zend\InfoCard\Xml\Security\Transform\Exception.php	/^class Zend_InfoCard_Xml_Security_Transform_Exception extends Zend_InfoCard_Xml_Security_Exception$/;"	c
Zend_InfoCard_Xml_Security_Transform_XmlExcC14N	library\Zend\InfoCard\Xml\Security\Transform\XmlExcC14N.php	/^class Zend_InfoCard_Xml_Security_Transform_XmlExcC14N$/;"	c
dom	library\Zend\InfoCard\Xml\Security\Transform\XmlExcC14N.php	/^        $dom = new DOMDocument();$/;"	v
Zend_Json	library\Zend\Json.php	/^class Zend_Json$/;"	c
attributes	library\Zend\Json.php	/^        $attributes= (array) $simpleXmlElementObject->attributes();$/;"	v
childArray	library\Zend\Json.php	/^            $childArray= array();$/;"	v
childname	library\Zend\Json.php	/^                $childname= $child->getName();$/;"	v
childrens	library\Zend\Json.php	/^        $childrens= $simpleXmlElementObject->children();$/;"	v
count	library\Zend\Json.php	/^            $count = count($javascriptExpressions);$/;"	v
decode	library\Zend\Json.php	/^            $decode = json_decode($encodedValue, $objectDecodeType);$/;"	v
element	library\Zend\Json.php	/^                $element= self::_processXml($child,$ignoreXmlAttributes,$recursionDepth+1);$/;"	v
encodedResult	library\Zend\Json.php	/^                $encodedResult = str_replace($/;"	v
encodedResult	library\Zend\Json.php	/^            $encodedResult = Zend_Json_Encoder::encode($valueToEncode, $cycleCheck, $options);$/;"	v
encodedResult	library\Zend\Json.php	/^            $encodedResult = json_encode($valueToEncode);$/;"	v
encodedValue	library\Zend\Json.php	/^        $encodedValue = (string) $encodedValue;$/;"	v
ind	library\Zend\Json.php	/^            $ind = $options['indent'];$/;"	v
ind	library\Zend\Json.php	/^        $ind = "\\t";$/;"	v
indent	library\Zend\Json.php	/^        $indent = 0;$/;"	v
javascriptExpressions	library\Zend\Json.php	/^        $javascriptExpressions = array();$/;"	v
jsonStringOutput	library\Zend\Json.php	/^        $jsonStringOutput = self::encode($resultArray);$/;"	v
magicKey	library\Zend\Json.php	/^                $magicKey = $javascriptExpressions[$i]['magicKey'];$/;"	v
magicKey	library\Zend\Json.php	/^            $magicKey = "____" . $currentKey . "_" . (count($javascriptExpressions));$/;"	v
match	library\Zend\Json.php	/^        $match = preg_match ($pattern, $simpleXmlElementObject, $matchings);$/;"	v
matchings	library\Zend\Json.php	/^        $matchings = array();$/;"	v
name	library\Zend\Json.php	/^        $name= $simpleXmlElementObject->getName();$/;"	v
pattern	library\Zend\Json.php	/^        $pattern = '\/^[\\s]*new Zend_Json_Expr[\\s]*\\([\\s]*[\\"\\']{1}(.*)[\\"\\']{1}[\\s]*\\)[\\s]*$\/';$/;"	v
prefix	library\Zend\Json.php	/^                $prefix = str_repeat($ind, $indent);$/;"	v
prefix	library\Zend\Json.php	/^            $prefix = str_repeat($ind, $indent);$/;"	v
result	library\Zend\Json.php	/^        $result = "";$/;"	v
resultArray	library\Zend\Json.php	/^        $resultArray = null;$/;"	v
resultArray	library\Zend\Json.php	/^        $resultArray = self::_processXml($simpleXmlElementObject, $ignoreXmlAttributes);$/;"	v
simpleXmlElementObject	library\Zend\Json.php	/^        $simpleXmlElementObject = simplexml_load_string($xmlStringContents);$/;"	v
tokens	library\Zend\Json.php	/^        $tokens = preg_split('|([\\{\\}\\]\\[,])|', $json, -1, PREG_SPLIT_DELIM_CAPTURE);$/;"	v
value	library\Zend\Json.php	/^                $value    = $javascriptExpressions[$i]['value'];$/;"	v
value	library\Zend\Json.php	/^            $value = $magicKey;$/;"	v
value	library\Zend\Json.php	/^        $value= self::_getXmlValue($simpleXmlElementObject);$/;"	v
valueToEncode	library\Zend\Json.php	/^            $valueToEncode = self::_recursiveJsonExprFinder($valueToEncode, $javascriptExpressions);$/;"	v
Zend_Json_Decoder	library\Zend\Json\Decoder.php	/^class Zend_Json_Decoder$/;"	c
bytes	library\Zend\Json\Decoder.php	/^        $bytes = (ord($utf16{0}) << 8) | ord($utf16{1});$/;"	v
chr	library\Zend\Json\Decoder.php	/^                        $chr = $str{$i};$/;"	v
chr	library\Zend\Json\Decoder.php	/^                    $chr = $str{$i};$/;"	v
chr	library\Zend\Json\Decoder.php	/^        $chr = $str{$i};$/;"	v
datum	library\Zend\Json\Decoder.php	/^                $datum = $matches[0][0];$/;"	v
decodeType	library\Zend\Json\Decoder.php	/^            $decodeType = Zend_Json::TYPE_ARRAY;$/;"	v
decoder	library\Zend\Json\Decoder.php	/^        $decoder = new self($source, $objectDecodeType);$/;"	v
delim	library\Zend\Json\Decoder.php	/^        $delim       = substr($chrs, 0, 1);$/;"	v
fVal	library\Zend\Json\Decoder.php	/^                        $fVal = floatval($datum);$/;"	v
i	library\Zend\Json\Decoder.php	/^        $i          = $this->_offset;$/;"	v
index	library\Zend\Json\Decoder.php	/^        $index  = 0;$/;"	v
key	library\Zend\Json\Decoder.php	/^            $key = $this->_tokenValue;$/;"	v
members	library\Zend\Json\Decoder.php	/^        $members = array();$/;"	v
ord_chrs_c	library\Zend\Json\Decoder.php	/^            $ord_chrs_c = ord($chrs[$i]);$/;"	v
result	library\Zend\Json\Decoder.php	/^                $result  = $this->_tokenValue;$/;"	v
result	library\Zend\Json\Decoder.php	/^                $result = $members;$/;"	v
result	library\Zend\Json\Decoder.php	/^                $result = '';$/;"	v
result	library\Zend\Json\Decoder.php	/^                $result = new StdClass();$/;"	v
result	library\Zend\Json\Decoder.php	/^        $result = array();$/;"	v
start	library\Zend\Json\Decoder.php	/^        $start      = $i;$/;"	v
starttok	library\Zend\Json\Decoder.php	/^        $starttok = $tok = $this->_getNextToken(); \/\/ Move past the '['$/;"	v
str	library\Zend\Json\Decoder.php	/^        $str        = $this->_source;$/;"	v
str_length	library\Zend\Json\Decoder.php	/^        $str_length = $this->_sourceLength;$/;"	v
strlen_chrs	library\Zend\Json\Decoder.php	/^        $strlen_chrs = strlen($chrs);$/;"	v
substr_chrs_c_2	library\Zend\Json\Decoder.php	/^            $substr_chrs_c_2 = substr($chrs, $i, 2);$/;"	v
tok	library\Zend\Json\Decoder.php	/^            $tok = $this->_getNextToken();$/;"	v
tok	library\Zend\Json\Decoder.php	/^            $tok = $this->_token;$/;"	v
tok	library\Zend\Json\Decoder.php	/^        $tok = $this->_getNextToken();$/;"	v
utf16	library\Zend\Json\Decoder.php	/^                    $utf16 = chr(hexdec(substr($chrs, ($i + 2), 2)))$/;"	v
utf8	library\Zend\Json\Decoder.php	/^        $utf8        = '';$/;"	v
val	library\Zend\Json\Decoder.php	/^                        $val  = intval($datum);$/;"	v
Zend_Json_Encoder	library\Zend\Json\Encoder.php	/^class Zend_Json_Encoder$/;"	c
argNames	library\Zend\Json\Encoder.php	/^                $argNames = "var argNames=[";$/;"	v
argsStarted	library\Zend\Json\Encoder.php	/^                    $argsStarted = true;$/;"	v
argsStarted	library\Zend\Json\Encoder.php	/^                $argsStarted = false;$/;"	v
ascii	library\Zend\Json\Encoder.php	/^        $ascii = "";$/;"	v
char	library\Zend\Json\Encoder.php	/^                    $char = pack('C*', $ord_var_c, ord($value[$i + 1]));$/;"	v
char	library\Zend\Json\Encoder.php	/^                    $char = pack('C*', $ord_var_c,$/;"	v
className	library\Zend\Json\Encoder.php	/^        $className = get_class($value);$/;"	v
cls	library\Zend\Json\Encoder.php	/^        $cls = new ReflectionClass($className);$/;"	v
cnt	library\Zend\Json\Encoder.php	/^        $cnt = 0;$/;"	v
constants	library\Zend\Json\Encoder.php	/^        $constants = $cls->getConstants();$/;"	v
encoder	library\Zend\Json\Encoder.php	/^        $encoder = new self(($cycleCheck) ? true : false, $options);$/;"	v
key	library\Zend\Json\Encoder.php	/^                $key = (string) $key;$/;"	v
length	library\Zend\Json\Encoder.php	/^            $length = count($array);$/;"	v
methods	library\Zend\Json\Encoder.php	/^        $methods = $cls->getMethods();$/;"	v
ord_var_c	library\Zend\Json\Encoder.php	/^            $ord_var_c = ord($value[$i]);$/;"	v
paramCount	library\Zend\Json\Encoder.php	/^                $paramCount  = count($parameters);$/;"	v
parameters	library\Zend\Json\Encoder.php	/^                $parameters  = $method->getParameters();$/;"	v
propCollection	library\Zend\Json\Encoder.php	/^            $propCollection = $value;$/;"	v
propCollection	library\Zend\Json\Encoder.php	/^            $propCollection = get_object_vars($value);$/;"	v
propValues	library\Zend\Json\Encoder.php	/^        $propValues = get_class_vars($cls->getName());$/;"	v
properties	library\Zend\Json\Encoder.php	/^        $properties = $cls->getProperties();$/;"	v
props	library\Zend\Json\Encoder.php	/^        $props = '';$/;"	v
replace	library\Zend\Json\Encoder.php	/^        $replace = array('\\\\\\\\', '\\\\n', '\\\\t', '\\\\r', '\\\\b', '\\\\f', '\\"', '\\\\\/');$/;"	v
result	library\Zend\Json\Encoder.php	/^            $result = $this->_encodeString($value);$/;"	v
result	library\Zend\Json\Encoder.php	/^            $result = $value ? 'true' : 'false';$/;"	v
result	library\Zend\Json\Encoder.php	/^            $result = '[';$/;"	v
result	library\Zend\Json\Encoder.php	/^            $result = '{';$/;"	v
result	library\Zend\Json\Encoder.php	/^            $result = (string) $value;$/;"	v
result	library\Zend\Json\Encoder.php	/^            $result = str_replace(",", ".", $result);$/;"	v
result	library\Zend\Json\Encoder.php	/^        $result    = "constants : {";$/;"	v
result	library\Zend\Json\Encoder.php	/^        $result = "variables:{";$/;"	v
result	library\Zend\Json\Encoder.php	/^        $result = '';$/;"	v
result	library\Zend\Json\Encoder.php	/^        $result = 'methods:{';$/;"	v
result	library\Zend\Json\Encoder.php	/^        $result = 'null';$/;"	v
search	library\Zend\Json\Encoder.php	/^        $search  = array('\\\\', "\\n", "\\t", "\\r", "\\b", "\\f", '"', '\/');$/;"	v
started	library\Zend\Json\Encoder.php	/^            $started = true;$/;"	v
started	library\Zend\Json\Encoder.php	/^        $started = false;$/;"	v
string	library\Zend\Json\Encoder.php	/^        $string  = str_replace($search, $replace, $string);$/;"	v
string	library\Zend\Json\Encoder.php	/^        $string = self::encodeUnicodeString($string);$/;"	v
string	library\Zend\Json\Encoder.php	/^        $string = str_replace(array(chr(0x08), chr(0x0C)), array('\\b', '\\f'), $string);$/;"	v
strlen_var	library\Zend\Json\Encoder.php	/^        $strlen_var = strlen($value);$/;"	v
tmpArray	library\Zend\Json\Encoder.php	/^        $tmpArray = array();$/;"	v
utf16	library\Zend\Json\Encoder.php	/^                    $utf16 = self::_utf82utf16($char);$/;"	v
Zend_Json_Exception	library\Zend\Json\Exception.php	/^class Zend_Json_Exception extends Zend_Exception$/;"	c
Zend_Json_Expr	library\Zend\Json\Expr.php	/^class Zend_Json_Expr$/;"	c
Zend_Json_Server	library\Zend\Json\Server.php	/^class Zend_Json_Server extends Zend_Server_Abstract$/;"	c
action	library\Zend\Json\Server.php	/^            $action = array_shift($function);$/;"	v
argv	library\Zend\Json\Server.php	/^            $argv = array_slice($argv, 2);$/;"	v
argv	library\Zend\Json\Server.php	/^            $argv = array_slice($argv, 3);$/;"	v
argv	library\Zend\Json\Server.php	/^            $argv = func_get_args();$/;"	v
argv	library\Zend\Json\Server.php	/^        $argv = null;$/;"	v
callback	library\Zend\Json\Server.php	/^            $callback = $invocable->getCallback();$/;"	v
class	library\Zend\Json\Server.php	/^            $class  = array_shift($function);$/;"	v
defaultParams	library\Zend\Json\Server.php	/^        $defaultParams = array_slice($params, count($args));$/;"	v
definition	library\Zend\Json\Server.php	/^            $definition = $this->_buildSignature($method, $class);$/;"	v
definition	library\Zend\Json\Server.php	/^        $definition = $this->_buildSignature($method);$/;"	v
description	library\Zend\Json\Server.php	/^                    $description = $parameter->getDescription();$/;"	v
error	library\Zend\Json\Server.php	/^        $error = new Zend_Json_Server_Error($fault, $code, $data);$/;"	v
found	library\Zend\Json\Server.php	/^                    $found = true;$/;"	v
found	library\Zend\Json\Server.php	/^            $found   = false;$/;"	v
invocable	library\Zend\Json\Server.php	/^        $invocable     = $this->_table->getMethod($method);$/;"	v
method	library\Zend\Json\Server.php	/^            $method = Zend_Server_Reflection::reflectFunction($function, $argv, $namespace);$/;"	v
method	library\Zend\Json\Server.php	/^        $method = $request->getMethod();$/;"	v
methods	library\Zend\Json\Server.php	/^            $methods = $reflection->getMethods();$/;"	v
methods	library\Zend\Json\Server.php	/^            $methods = get_class_methods('Zend_Json_Server_Smd');$/;"	v
newType	library\Zend\Json\Server.php	/^                $newType = $parameter->getType();$/;"	v
orderedParams	library\Zend\Json\Server.php	/^            $orderedParams = array();$/;"	v
params	library\Zend\Json\Server.php	/^            $params = $orderedParams;$/;"	v
params	library\Zend\Json\Server.php	/^            $params = $this->_getDefaultParams($params, $serviceParams);$/;"	v
params	library\Zend\Json\Server.php	/^        $params        = $request->getParams();$/;"	v
params	library\Zend\Json\Server.php	/^        $params = $this->_getParams($method);$/;"	v
params	library\Zend\Json\Server.php	/^        $params = array();$/;"	v
refParams	library\Zend\Json\Server.php	/^                $refParams  = $reflection->getParameters();$/;"	v
refParams	library\Zend\Json\Server.php	/^                $refParams = $reflection->getParameters();$/;"	v
reflection	library\Zend\Json\Server.php	/^                $reflection = new ReflectionFunction( $callback->getFunction() );$/;"	v
reflection	library\Zend\Json\Server.php	/^                $reflection = new ReflectionMethod($/;"	v
reflection	library\Zend\Json\Server.php	/^            $reflection = Zend_Server_Reflection::reflectClass($class, $argv, $namespace);$/;"	v
reflection	library\Zend\Json\Server.php	/^        $reflection = Zend_Server_Reflection::reflectClass($class, $argv, $namespace);$/;"	v
request	library\Zend\Json\Server.php	/^        $request  = $this->getRequest();$/;"	v
request	library\Zend\Json\Server.php	/^        $request = $this->getRequest();$/;"	v
response	library\Zend\Json\Server.php	/^        $response = $this->_getReadyResponse();$/;"	v
response	library\Zend\Json\Server.php	/^        $response = $this->getResponse();$/;"	v
result	library\Zend\Json\Server.php	/^            $result = $this->_dispatch($invocable, $params);$/;"	v
return	library\Zend\Json\Server.php	/^        $return = array();$/;"	v
service	library\Zend\Json\Server.php	/^        $service       = $serviceMap->getService($method);$/;"	v
serviceInfo	library\Zend\Json\Server.php	/^        $serviceInfo = array($/;"	v
serviceMap	library\Zend\Json\Server.php	/^        $serviceMap    = $this->getServiceMap();$/;"	v
serviceMap	library\Zend\Json\Server.php	/^        $serviceMap = $this->getServiceMap();$/;"	v
serviceParams	library\Zend\Json\Server.php	/^        $serviceParams = $service->getParams();$/;"	v
value	library\Zend\Json\Server.php	/^                    $value = array_shift($args);$/;"	v
value	library\Zend\Json\Server.php	/^                $value = $param['default'];$/;"	v
value	library\Zend\Json\Server.php	/^            $value = null;$/;"	v
Zend_Json_Server_Cache	library\Zend\Json\Server\Cache.php	/^class Zend_Json_Server_Cache extends Zend_Server_Cache$/;"	c
Zend_Json_Server_Error	library\Zend\Json\Server\Error.php	/^class Zend_Json_Server_Error$/;"	c
code	library\Zend\Json\Server\Error.php	/^        $code = (int) $code;$/;"	v
Zend_Json_Server_Exception	library\Zend\Json\Server\Exception.php	/^class Zend_Json_Server_Exception extends Zend_Json_Exception$/;"	c
Zend_Json_Server_Request	library\Zend\Json\Server\Request.php	/^class Zend_Json_Server_Request$/;"	c
index	library\Zend\Json\Server\Request.php	/^            $index = count($this->_params);$/;"	v
jsonArray	library\Zend\Json\Server\Request.php	/^        $jsonArray = array($/;"	v
method	library\Zend\Json\Server\Request.php	/^            $method = 'set' . ucfirst($key);$/;"	v
methods	library\Zend\Json\Server\Request.php	/^        $methods = get_class_methods($this);$/;"	v
options	library\Zend\Json\Server\Request.php	/^        $options = Zend_Json::decode($json);$/;"	v
params	library\Zend\Json\Server\Request.php	/^        $params = $this->getParams();$/;"	v
Zend_Json_Server_Request_Http	library\Zend\Json\Server\Request\Http.php	/^class Zend_Json_Server_Request_Http extends Zend_Json_Server_Request$/;"	c
json	library\Zend\Json\Server\Request\Http.php	/^        $json = file_get_contents('php:\/\/input');$/;"	v
Zend_Json_Server_Response	library\Zend\Json\Server\Response.php	/^class Zend_Json_Server_Response$/;"	c
response	library\Zend\Json\Server\Response.php	/^            $response = array($/;"	v
version	library\Zend\Json\Server\Response.php	/^        $version = (string) $version;$/;"	v
Zend_Json_Server_Response_Http	library\Zend\Json\Server\Response\Http.php	/^class Zend_Json_Server_Response_Http extends Zend_Json_Server_Response$/;"	c
contentType	library\Zend\Json\Server\Response\Http.php	/^        $contentType = $smd->getContentType();$/;"	v
SMDVersion	library\Zend\Json\Server\Smd.php	/^        $SMDVersion  = '.1';$/;"	v
SMDVersion	library\Zend\Json\Server\Smd.php	/^        $SMDVersion  = self::SMD_VERSION;$/;"	v
Zend_Json_Server_Smd	library\Zend\Json\Server\Smd.php	/^class Zend_Json_Server_Smd$/;"	c
contentType	library\Zend\Json\Server\Smd.php	/^        $contentType = $this->getContentType();$/;"	v
envelope	library\Zend\Json\Server\Smd.php	/^        $envelope    = $this->getEnvelope();$/;"	v
method	library\Zend\Json\Server\Smd.php	/^                $method = array($/;"	v
method	library\Zend\Json\Server\Smd.php	/^            $method = 'set' . ucfirst($key);$/;"	v
methods	library\Zend\Json\Server\Smd.php	/^        $methods = get_class_methods($this);$/;"	v
name	library\Zend\Json\Server\Smd.php	/^            $name = $service->getName();$/;"	v
paramName	library\Zend\Json\Server\Smd.php	/^                    $paramName = array_key_exists('name', $param) ? $param['name'] : $param['type'];$/;"	v
params	library\Zend\Json\Server\Smd.php	/^                $params = array();$/;"	v
service	library\Zend\Json\Server\Smd.php	/^            $service = new Zend_Json_Server_Smd_Service($service);$/;"	v
service	library\Zend\Json\Server\Smd.php	/^        $service = compact('SMDVersion', 'serviceType');$/;"	v
service	library\Zend\Json\Server\Smd.php	/^        $service = compact('transport', 'envelope', 'contentType', 'SMDVersion');$/;"	v
serviceType	library\Zend\Json\Server\Smd.php	/^        $serviceType = 'JSON-RPC';$/;"	v
services	library\Zend\Json\Server\Smd.php	/^        $services = $this->getServices();$/;"	v
target	library\Zend\Json\Server\Smd.php	/^        $target = $this->getTarget();$/;"	v
transport	library\Zend\Json\Server\Smd.php	/^        $transport   = $this->getTransport();$/;"	v
Zend_Json_Server_Smd_Service	library\Zend\Json\Server\Smd\Service.php	/^class Zend_Json_Server_Smd_Service$/;"	c
envelope	library\Zend\Json\Server\Smd\Service.php	/^        $envelope   = $this->getEnvelope();$/;"	v
index	library\Zend\Json\Server\Smd\Service.php	/^        $index  = 0;$/;"	v
method	library\Zend\Json\Server\Smd\Service.php	/^            $method = 'set' . ucfirst($key);$/;"	v
methods	library\Zend\Json\Server\Smd\Service.php	/^        $methods = get_class_methods($this);$/;"	v
name	library\Zend\Json\Server\Smd\Service.php	/^        $name       = $this->getName();$/;"	v
name	library\Zend\Json\Server\Smd\Service.php	/^        $name = (string) $name;$/;"	v
order	library\Zend\Json\Server\Smd\Service.php	/^            $order = (array_key_exists('order', $options)) ? $options['order'] : null;$/;"	v
paramOptions	library\Zend\Json\Server\Smd\Service.php	/^        $paramOptions = array($/;"	v
paramType	library\Zend\Json\Server\Smd\Service.php	/^        $paramType = $this->_paramMap[$type];$/;"	v
parameters	library\Zend\Json\Server\Smd\Service.php	/^        $parameters = $this->getParams();$/;"	v
params	library\Zend\Json\Server\Smd\Service.php	/^        $params = array();$/;"	v
returns	library\Zend\Json\Server\Smd\Service.php	/^        $returns    = $this->getReturn();$/;"	v
service	library\Zend\Json\Server\Smd\Service.php	/^        $service = array($this->getName() => $this->toArray());$/;"	v
target	library\Zend\Json\Server\Smd\Service.php	/^        $target     = $this->getTarget();$/;"	v
transport	library\Zend\Json\Server\Smd\Service.php	/^        $transport  = $this->getTransport();$/;"	v
type	library\Zend\Json\Server\Smd\Service.php	/^            $type  = $options['type'];$/;"	v
type	library\Zend\Json\Server\Smd\Service.php	/^            $type = $this->_validateParamType($type);$/;"	v
type	library\Zend\Json\Server\Smd\Service.php	/^            $type = $this->_validateParamType($type, true);$/;"	v
type	library\Zend\Json\Server\Smd\Service.php	/^            $type = 'object';$/;"	v
Zend_Layout	library\Zend\Layout.php	/^class Zend_Layout$/;"	c
front	library\Zend\Layout.php	/^            $front = Zend_Controller_Front::getInstance();$/;"	v
front	library\Zend\Layout.php	/^        $front = Zend_Controller_Front::getInstance();$/;"	v
helperClass	library\Zend\Layout.php	/^        $helperClass = $this->getHelperClass();$/;"	v
inflector	library\Zend\Layout.php	/^            $inflector = new Zend_Filter_Inflector();$/;"	v
layout	library\Zend\Layout.php	/^            $layout = self::$_mvcInstance;$/;"	v
merged	library\Zend\Layout.php	/^            $merged = array_merge($orig, $spec);$/;"	v
method	library\Zend\Layout.php	/^            $method = 'set' . ucfirst($key);$/;"	v
name	library\Zend\Layout.php	/^            $name = $this->_inflector->filter(array('script' => $name));$/;"	v
name	library\Zend\Layout.php	/^            $name = $this->getLayout();$/;"	v
options	library\Zend\Layout.php	/^            $options = $options->toArray();$/;"	v
orig	library\Zend\Layout.php	/^            $orig = $this->_container->getArrayCopy();$/;"	v
pluginClass	library\Zend\Layout.php	/^            $pluginClass = $layout->getPluginClass();$/;"	v
pluginClass	library\Zend\Layout.php	/^        $pluginClass = $this->getPluginClass();$/;"	v
view	library\Zend\Layout.php	/^        $view = $this->getView();$/;"	v
viewRenderer	library\Zend\Layout.php	/^            $viewRenderer = Zend_Controller_Action_HelperBroker::getStaticHelper('viewRenderer');$/;"	v
Zend_Layout_Controller_Action_Helper_Layout	library\Zend\Layout\Controller\Action\Helper\Layout.php	/^class Zend_Layout_Controller_Action_Helper_Layout extends Zend_Controller_Action_Helper_Abstract$/;"	c
front	library\Zend\Layout\Controller\Action\Helper\Layout.php	/^            $front = $this->getFrontController();$/;"	v
layout	library\Zend\Layout\Controller\Action\Helper\Layout.php	/^            $layout = Zend_Layout::getMvcInstance();$/;"	v
layout	library\Zend\Layout\Controller\Action\Helper\Layout.php	/^        $layout = $this->getLayoutInstance();$/;"	v
plugin	library\Zend\Layout\Controller\Action\Helper\Layout.php	/^                $plugin = $front->getPlugin($pluginClass);$/;"	v
pluginClass	library\Zend\Layout\Controller\Action\Helper\Layout.php	/^            $pluginClass = $layout->getPluginClass();$/;"	v
Zend_Layout_Controller_Plugin_Layout	library\Zend\Layout\Controller\Plugin\Layout.php	/^class Zend_Layout_Controller_Plugin_Layout extends Zend_Controller_Plugin_Abstract$/;"	c
content	library\Zend\Layout\Controller\Plugin\Layout.php	/^        $content    = $response->getBody(true);$/;"	v
contentKey	library\Zend\Layout\Controller\Plugin\Layout.php	/^        $contentKey = $layout->getContentKey();$/;"	v
fullContent	library\Zend\Layout\Controller\Plugin\Layout.php	/^            $fullContent = $layout->render();$/;"	v
fullContent	library\Zend\Layout\Controller\Plugin\Layout.php	/^        $fullContent = null;$/;"	v
helper	library\Zend\Layout\Controller\Plugin\Layout.php	/^        $helper = $this->getLayoutActionHelper();$/;"	v
layout	library\Zend\Layout\Controller\Plugin\Layout.php	/^        $layout = $this->getLayout();$/;"	v
obStartLevel	library\Zend\Layout\Controller\Plugin\Layout.php	/^        $obStartLevel = ob_get_level();$/;"	v
response	library\Zend\Layout\Controller\Plugin\Layout.php	/^        $response   = $this->getResponse();$/;"	v
Zend_Layout_Exception	library\Zend\Layout\Exception.php	/^class Zend_Layout_Exception extends Zend_Exception$/;"	c
Zend_Ldap	library\Zend\Ldap.php	/^class Zend_Ldap$/;"	c
accountCanonicalForm	library\Zend\Ldap.php	/^                $accountCanonicalForm = Zend_Ldap::ACCTNAME_FORM_BACKSLASH;$/;"	v
accountCanonicalForm	library\Zend\Ldap.php	/^                $accountCanonicalForm = Zend_Ldap::ACCTNAME_FORM_PRINCIPAL;$/;"	v
accountCanonicalForm	library\Zend\Ldap.php	/^                $accountCanonicalForm = Zend_Ldap::ACCTNAME_FORM_USERNAME;$/;"	v
accountCanonicalForm	library\Zend\Ldap.php	/^        $accountCanonicalForm = $this->_options['accountCanonicalForm'];$/;"	v
accountDomainName	library\Zend\Ldap.php	/^                $accountDomainName = $this->_getAccountDomainName();$/;"	v
accountDomainName	library\Zend\Ldap.php	/^            $accountDomainName = $this->_getAccountDomainName();$/;"	v
accountDomainName	library\Zend\Ldap.php	/^        $accountDomainName = $this->_getAccountDomainName();$/;"	v
accountDomainNameShort	library\Zend\Ldap.php	/^                $accountDomainNameShort = $this->_getAccountDomainNameShort();$/;"	v
accountDomainNameShort	library\Zend\Ldap.php	/^            $accountDomainNameShort = $this->_getAccountDomainNameShort();$/;"	v
accountDomainNameShort	library\Zend\Ldap.php	/^        $accountDomainNameShort = $this->_getAccountDomainNameShort();$/;"	v
accountFilter	library\Zend\Ldap.php	/^        $accountFilter = $this->_getAccountFilter($acctname);$/;"	v
accountFilterFormat	library\Zend\Ldap.php	/^        $accountFilterFormat = $this->_getAccountFilterFormat();$/;"	v
accounts	library\Zend\Ldap.php	/^        $accounts = $this->search($accountFilter, $baseDn, self::SEARCH_SCOPE_SUB, $attrs);$/;"	v
acct	library\Zend\Ldap.php	/^            $acct = $accounts->getFirst();$/;"	v
acct	library\Zend\Ldap.php	/^        $acct = $this->_getAccount($acctname, array('dn'));$/;"	v
acctname	library\Zend\Ldap.php	/^        $acctname = $this->getCanonicalAccountName($acctname, Zend_Ldap::ACCTNAME_FORM_USERNAME);$/;"	v
adAttributes	library\Zend\Ldap.php	/^        $adAttributes = array('distinguishedname', 'instancetype', 'name', 'objectcategory',$/;"	v
aname	library\Zend\Ldap.php	/^                $aname = substr($name, $pos + 1);$/;"	v
aname	library\Zend\Ldap.php	/^            $aname = substr($name, 0, $pos);$/;"	v
aname	library\Zend\Ldap.php	/^        $aname = $name;$/;"	v
aname	library\Zend\Ldap.php	/^        $aname = Zend_Ldap_Filter_Abstract::escapeValue($aname);$/;"	v
attributes	library\Zend\Ldap.php	/^                            $attributes = $value;$/;"	v
baseDn	library\Zend\Ldap.php	/^        $baseDn = $this->getBaseDn();$/;"	v
basedn	library\Zend\Ldap.php	/^            $basedn = $basedn->toString();$/;"	v
basedn	library\Zend\Ldap.php	/^            $basedn = $this->getBaseDn();$/;"	v
cDnParts	library\Zend\Ldap.php	/^                $cDnParts = Zend_Ldap_Dn::explodeDn($c);$/;"	v
childDn	library\Zend\Ldap.php	/^            $childDn = @ldap_get_dn($this->getResource(), $entry);$/;"	v
children	library\Zend\Ldap.php	/^                $children = $this->_getChildrenDns($dn);$/;"	v
children	library\Zend\Ldap.php	/^            $children = $this->_getChildrenDns($from);$/;"	v
children	library\Zend\Ldap.php	/^        $children = array();$/;"	v
code	library\Zend\Ldap.php	/^            $code = Zend_Ldap_Exception::LDAP_NO_SUCH_OBJECT;$/;"	v
code	library\Zend\Ldap.php	/^            $code = Zend_Ldap_Exception::LDAP_OPERATIONS_ERROR;$/;"	v
collectionClass	library\Zend\Ldap.php	/^                        $collectionClass = $value;$/;"	v
collectionClass	library\Zend\Ldap.php	/^            $collectionClass = (string)$collectionClass;$/;"	v
count	library\Zend\Ldap.php	/^        $count = $accounts->count();$/;"	v
dn	library\Zend\Ldap.php	/^            $dn = $dn->toString();$/;"	v
dn	library\Zend\Ldap.php	/^            $dn = Zend_Ldap_Dn::factory($dn, null);$/;"	v
dname	library\Zend\Ldap.php	/^                $dname = substr($name, 0, $pos);$/;"	v
dname	library\Zend\Ldap.php	/^            $dname = substr($name, $pos + 1);$/;"	v
dname	library\Zend\Ldap.php	/^        $dname = null;$/;"	v
emulate	library\Zend\Ldap.php	/^        $emulate = (bool)$alwaysEmulate;$/;"	v
entry	library\Zend\Ldap.php	/^                $entry = @ldap_next_entry($this->getResource(), $entry)) {$/;"	v
entry	library\Zend\Ldap.php	/^        $entry = $this->getEntry($from, array(), true);$/;"	v
entry	library\Zend\Ldap.php	/^        $entry = array_change_key_case($entry, CASE_LOWER);$/;"	v
err	library\Zend\Ldap.php	/^                $err = Zend_Ldap_Exception::LDAP_SERVER_DOWN + (-$err - 1);$/;"	v
errorCode	library\Zend\Ldap.php	/^        $errorCode = $this->getLastErrorCode();$/;"	v
errorMessages	library\Zend\Ldap.php	/^        $errorMessages = array();$/;"	v
estr1	library\Zend\Ldap.php	/^            $estr1 = @ldap_err2str($errorCode);$/;"	v
estr1	library\Zend\Ldap.php	/^        $estr1 = @ldap_error($this->_resource);$/;"	v
filter	library\Zend\Ldap.php	/^            $filter = $filter->toString();$/;"	v
filter	library\Zend\Ldap.php	/^            $filter = array_change_key_case($filter, CASE_LOWER);$/;"	v
form	library\Zend\Ldap.php	/^            $form = $this->_getAccountCanonicalForm();$/;"	v
from	library\Zend\Ldap.php	/^                $from = $from->toString();$/;"	v
host	library\Zend\Ldap.php	/^            $host = $this->_getHost();$/;"	v
hosts	library\Zend\Ldap.php	/^        $hosts = array();$/;"	v
isAdded	library\Zend\Ldap.php	/^        $isAdded = @ldap_add($this->getResource(), $dn->toString(), $entry);$/;"	v
isDeleted	library\Zend\Ldap.php	/^        $isDeleted = @ldap_delete($this->getResource(), $dn);$/;"	v
isModified	library\Zend\Ldap.php	/^            $isModified = @ldap_modify($this->getResource(), $dn->toString(), $entry);$/;"	v
isOK	library\Zend\Ldap.php	/^            $isOK = @ldap_rename($this->getResource(), $from, $newRdn, $newParent, true);$/;"	v
isSorted	library\Zend\Ldap.php	/^            $isSorted = @ldap_sort($this->getResource(), $search, $sort);$/;"	v
items	library\Zend\Ldap.php	/^            $items = array_reverse($items, false);$/;"	v
items	library\Zend\Ldap.php	/^        $items = $result->toArray();$/;"	v
iterator	library\Zend\Ldap.php	/^        $iterator = new Zend_Ldap_Collection_Iterator_Default($this, $search);$/;"	v
key	library\Zend\Ldap.php	/^            $key = key($options);$/;"	v
message	library\Zend\Ldap.php	/^                    $message = $this->_connectString;$/;"	v
message	library\Zend\Ldap.php	/^            $message = '';$/;"	v
message	library\Zend\Ldap.php	/^            $message = '0x' . dechex($errorCode) . ' ';$/;"	v
message	library\Zend\Ldap.php	/^            $message = ($username === null) ? $this->_connectString : $username;$/;"	v
message	library\Zend\Ldap.php	/^        $message = '';$/;"	v
moreCreds	library\Zend\Ldap.php	/^            $moreCreds = false;$/;"	v
moreCreds	library\Zend\Ldap.php	/^        $moreCreds = true;$/;"	v
newChild	library\Zend\Ldap.php	/^                $newChild = Zend_Ldap_Dn::implodeDn($newChildParts);$/;"	v
newChildParts	library\Zend\Ldap.php	/^                $newChildParts = array_merge(array(array_shift($cDnParts)), $toDnParts);$/;"	v
newDn	library\Zend\Ldap.php	/^        $newDn = Zend_Ldap_Dn::fromArray($newDnParts);$/;"	v
newDnParts	library\Zend\Ldap.php	/^                $newDnParts = $to->toArray();$/;"	v
newDnParts	library\Zend\Ldap.php	/^                $newDnParts = Zend_Ldap_Dn::explodeDn($to);$/;"	v
newDnParts	library\Zend\Ldap.php	/^        $newDnParts = array_merge(array(array_shift($orgDnParts)), $newParentDnParts);$/;"	v
newParent	library\Zend\Ldap.php	/^            $newParent = Zend_Ldap_Dn::implodeDn($newDnParts);$/;"	v
newParentDnParts	library\Zend\Ldap.php	/^            $newParentDnParts = $to->toArray();$/;"	v
newParentDnParts	library\Zend\Ldap.php	/^            $newParentDnParts = Zend_Ldap_Dn::explodeDn($to);$/;"	v
newRdn	library\Zend\Ldap.php	/^            $newRdn = Zend_Ldap_Dn::implodeRdn(array_shift($newDnParts));$/;"	v
optReferrals	library\Zend\Ldap.php	/^            $optReferrals = ($this->_getOptReferrals()) ? 1 : 0;$/;"	v
options	library\Zend\Ldap.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Ldap.php	/^            $options = array_change_key_case($filter, CASE_LOWER);$/;"	v
orgDnParts	library\Zend\Ldap.php	/^            $orgDnParts = $from->toArray();$/;"	v
orgDnParts	library\Zend\Ldap.php	/^            $orgDnParts = Zend_Ldap_Dn::explodeDn($from);$/;"	v
parentDn	library\Zend\Ldap.php	/^            $parentDn = $parentDn->toString();$/;"	v
password	library\Zend\Ldap.php	/^            $password = $this->_getPassword();$/;"	v
password	library\Zend\Ldap.php	/^            $password = null;$/;"	v
permittedOptions	library\Zend\Ldap.php	/^        $permittedOptions = array($/;"	v
port	library\Zend\Ldap.php	/^            $port = $this->_getPort();$/;"	v
port	library\Zend\Ldap.php	/^            $port = (int)$port;$/;"	v
pos	library\Zend\Ldap.php	/^            $pos = strpos($name, '\\\\');$/;"	v
pos	library\Zend\Ldap.php	/^        $pos = strpos($name, '@');$/;"	v
rdnParts	library\Zend\Ldap.php	/^        $rdnParts = $dn->getRdn(Zend_Ldap_Dn::ATTR_CASEFOLD_LOWER);$/;"	v
resource	library\Zend\Ldap.php	/^        $resource = ($useUri) ? @ldap_connect($this->_connectString) : @ldap_connect($host, $port);$/;"	v
result	library\Zend\Ldap.php	/^            $result = $this->search("(objectClass=*)", $dn, self::SEARCH_SCOPE_BASE,$/;"	v
result	library\Zend\Ldap.php	/^            $result = $this->search($filter, $basedn, $scope, array('dn'), null);$/;"	v
result	library\Zend\Ldap.php	/^        $result = $this->search($filter, $basedn, $scope, $attributes, $sort, null, $sizelimit, $timelimit);$/;"	v
ret	library\Zend\Ldap.php	/^        $ret = @ldap_get_option($this->_resource, LDAP_OPT_ERROR_NUMBER, $err);$/;"	v
reverseSort	library\Zend\Ldap.php	/^                $reverseSort = $filter['reversesort'];$/;"	v
search	library\Zend\Ldap.php	/^                $search = @ldap_list($this->getResource(), $basedn, $filter, $attributes, 0, $sizelimit, $timelimit);$/;"	v
search	library\Zend\Ldap.php	/^                $search = @ldap_read($this->getResource(), $basedn, $filter, $attributes, 0, $sizelimit, $timelimit);$/;"	v
search	library\Zend\Ldap.php	/^                $search = @ldap_search($this->getResource(), $basedn, $filter, $attributes, 0, $sizelimit, $timelimit);$/;"	v
search	library\Zend\Ldap.php	/^        $search = @ldap_list($this->getResource(), $parentDn, '(objectClass=*)', array('dn'));$/;"	v
sort	library\Zend\Ldap.php	/^        $sort = null, $collectionClass = null, $sizelimit = 0, $timelimit = 0)$/;"	v
str	library\Zend\Ldap.php	/^            $str = "No object found for: $accountFilter";$/;"	v
str	library\Zend\Ldap.php	/^            $str = "Unexpected result count ($count) for: $accountFilter";$/;"	v
toDnParts	library\Zend\Ldap.php	/^            $toDnParts = $to->toArray();$/;"	v
toDnParts	library\Zend\Ldap.php	/^            $toDnParts = Zend_Ldap_Dn::explodeDn($to);$/;"	v
uname	library\Zend\Ldap.php	/^            $uname = mb_strtolower($uname, 'UTF-8');$/;"	v
uname	library\Zend\Ldap.php	/^            $uname = strtolower($uname);$/;"	v
useSsl	library\Zend\Ldap.php	/^            $useSsl = $this->_getUseSsl();$/;"	v
useSsl	library\Zend\Ldap.php	/^            $useSsl = (bool)$useSsl;$/;"	v
useSsl	library\Zend\Ldap.php	/^            $useSsl = false;$/;"	v
useStartTls	library\Zend\Ldap.php	/^            $useStartTls = $this->_getUseStartTls();$/;"	v
useStartTls	library\Zend\Ldap.php	/^            $useStartTls = (bool)$useStartTls;$/;"	v
useUri	library\Zend\Ldap.php	/^                $useUri = true;$/;"	v
useUri	library\Zend\Ldap.php	/^            $useUri = true;$/;"	v
useUri	library\Zend\Ldap.php	/^        $useUri = false;$/;"	v
username	library\Zend\Ldap.php	/^                            $username = $this->_getAccountDn($username);$/;"	v
username	library\Zend\Ldap.php	/^                    $username = $this->getCanonicalAccountName($username,$/;"	v
username	library\Zend\Ldap.php	/^            $username = $this->_getUsername();$/;"	v
username	library\Zend\Ldap.php	/^            $username = null;$/;"	v
v	library\Zend\Ldap.php	/^                        $v = (string)$v;$/;"	v
val	library\Zend\Ldap.php	/^                                $val === '1' || strcasecmp($val, 'true') == 0);$/;"	v
val	library\Zend\Ldap.php	/^                $val = $options[$key];$/;"	v
value	library\Zend\Ldap.php	/^                    $value = (string)$value;$/;"	v
value	library\Zend\Ldap.php	/^            $value = Zend_Ldap_Dn::unescapeValue($value);$/;"	v
zle	library\Zend\Ldap.php	/^            $zle = new Zend_Ldap_Exception($this, "$host:$port");$/;"	v
zle	library\Zend\Ldap.php	/^            $zle = new Zend_Ldap_Exception($this, $message);$/;"	v
zle	library\Zend\Ldap.php	/^            $zle = new Zend_Ldap_Exception(null,$/;"	v
Zend_Ldap_Attribute	library\Zend\Ldap\Attribute.php	/^class Zend_Ldap_Attribute$/;"	c
append	library\Zend\Ldap\Attribute.php	/^        $append = false)$/;"	v
attribName	library\Zend\Ldap\Attribute.php	/^                $attribName = 'unicodePwd';$/;"	v
attribName	library\Zend\Ldap\Attribute.php	/^                $attribName = 'userPassword';$/;"	v
attribName	library\Zend\Ldap\Attribute.php	/^        $attribName = null)$/;"	v
attribName	library\Zend\Ldap\Attribute.php	/^        $attribName = strtolower($attribName);$/;"	v
convertedValues	library\Zend\Ldap\Attribute.php	/^        $convertedValues = array();$/;"	v
hash	library\Zend\Ldap\Attribute.php	/^        $hash = self::createPassword($password, $hashType);$/;"	v
keys	library\Zend\Ldap\Attribute.php	/^            $keys = array_keys($resultArray, $rv);$/;"	v
len	library\Zend\Ldap\Attribute.php	/^                    $len = strlen($password);$/;"	v
method	library\Zend\Ldap\Attribute.php	/^                $method  = '{MD5}';$/;"	v
method	library\Zend\Ldap\Attribute.php	/^                $method  = '{SHA}';$/;"	v
method	library\Zend\Ldap\Attribute.php	/^                $method  = '{SMD5}';$/;"	v
method	library\Zend\Ldap\Attribute.php	/^                $method  = '{SSHA}';$/;"	v
new	library\Zend\Ldap\Attribute.php	/^                    $new = '';$/;"	v
newVal	library\Zend\Ldap\Attribute.php	/^                $newVal = self::_valueFromLdapDateTime($values[$i]);$/;"	v
newVal	library\Zend\Ldap\Attribute.php	/^            $newVal = self::_valueFromLdapDateTime($values);$/;"	v
password	library\Zend\Ldap\Attribute.php	/^                    $password = $new;$/;"	v
password	library\Zend\Ldap\Attribute.php	/^                    $password = iconv('UTF-8', 'UTF-16LE', $password);$/;"	v
password	library\Zend\Ldap\Attribute.php	/^                    $password = mb_convert_encoding($password, 'UTF-16LE', 'UTF-8');$/;"	v
password	library\Zend\Ldap\Attribute.php	/^                $password = '"' . $password . '"';$/;"	v
rawHash	library\Zend\Ldap\Attribute.php	/^                $rawHash = md5($password . $salt, true) . $salt;$/;"	v
rawHash	library\Zend\Ldap\Attribute.php	/^                $rawHash = md5($password, true);$/;"	v
rawHash	library\Zend\Ldap\Attribute.php	/^                $rawHash = sha1($password . $salt, true) . $salt;$/;"	v
rawHash	library\Zend\Ldap\Attribute.php	/^                $rawHash = sha1($password, true);$/;"	v
resultArray	library\Zend\Ldap\Attribute.php	/^        $resultArray = $data[$attribName];$/;"	v
resultArray	library\Zend\Ldap\Attribute.php	/^        $resultArray = array_values($resultArray);$/;"	v
retArray	library\Zend\Ldap\Attribute.php	/^            $retArray = array();$/;"	v
return	library\Zend\Ldap\Attribute.php	/^            $return = Zend_Ldap_Converter::fromLdap($value, Zend_Ldap_Converter::STANDARD, false);$/;"	v
salt	library\Zend\Ldap\Attribute.php	/^                $salt    = substr(sha1(uniqid(mt_rand(), true), true), 0, 4);$/;"	v
v	library\Zend\Ldap\Attribute.php	/^                $v = self::_valueToLdap($v);$/;"	v
v	library\Zend\Ldap\Attribute.php	/^                $v = self::_valueToLdapDateTime($v, $utc);$/;"	v
v	library\Zend\Ldap\Attribute.php	/^            $v = self::_valueToLdap($v);$/;"	v
valArray	library\Zend\Ldap\Attribute.php	/^        $valArray = array();$/;"	v
value	library\Zend\Ldap\Attribute.php	/^            $value = array($value);$/;"	v
value	library\Zend\Ldap\Attribute.php	/^            $value = self::_valueToLdap($value);$/;"	v
value	library\Zend\Ldap\Attribute.php	/^            $value = self::_valueToLdapDateTime($value, $utc);$/;"	v
values	library\Zend\Ldap\Attribute.php	/^        $values = self::getAttribute($data, $attribName, $index);$/;"	v
Zend_Ldap_Collection	library\Zend\Ldap\Collection.php	/^class Zend_Ldap_Collection implements Iterator, Countable$/;"	c
current	library\Zend\Ldap\Collection.php	/^                $current = $this->_iterator->current();$/;"	v
data	library\Zend\Ldap\Collection.php	/^        $data = array();$/;"	v
Zend_Ldap_Collection_Iterator_Default	library\Zend\Ldap\Collection\Iterator\Default.php	/^class Zend_Ldap_Collection_Iterator_Default implements Iterator, Countable$/;"	c
attrName	library\Zend\Ldap\Collection\Iterator\Default.php	/^                    $attrName = $name;$/;"	v
attrName	library\Zend\Ldap\Collection\Iterator\Default.php	/^                    $attrName = call_user_func($this->_attributeNameTreatment, $name);$/;"	v
attrName	library\Zend\Ldap\Collection\Iterator\Default.php	/^                    $attrName = strtolower($name);$/;"	v
attrName	library\Zend\Ldap\Collection\Iterator\Default.php	/^                    $attrName = strtoupper($name);$/;"	v
attributeNameTreatment	library\Zend\Ldap\Collection\Iterator\Default.php	/^            $attributeNameTreatment = (int)$attributeNameTreatment;$/;"	v
ber_identifier	library\Zend\Ldap\Collection\Iterator\Default.php	/^        $ber_identifier = null;$/;"	v
currentDn	library\Zend\Ldap\Collection\Iterator\Default.php	/^            $currentDn = @ldap_get_dn($this->_ldap->getResource(), $this->_current);$/;"	v
data	library\Zend\Ldap\Collection\Iterator\Default.php	/^            $data = @ldap_get_values_len($this->_ldap->getResource(), $this->_current, $name);$/;"	v
entry	library\Zend\Ldap\Collection\Iterator\Default.php	/^        $entry = array('dn' => $this->key());$/;"	v
isClosed	library\Zend\Ldap\Collection\Iterator\Default.php	/^             $isClosed = @ldap_free_result($this->_resultId);$/;"	v
isClosed	library\Zend\Ldap\Collection\Iterator\Default.php	/^        $isClosed = false;$/;"	v
msg	library\Zend\Ldap\Collection\Iterator\Default.php	/^                $msg = $this->_ldap->getLastError($code);$/;"	v
name	library\Zend\Ldap\Collection\Iterator\Default.php	/^            $name = @ldap_next_attribute($this->_ldap->getResource(), $this->_current,$/;"	v
name	library\Zend\Ldap\Collection\Iterator\Default.php	/^        $name = @ldap_first_attribute($this->_ldap->getResource(), $this->_current,$/;"	v
Zend_Ldap_Converter	library\Zend\Ldap\Converter.php	/^class Zend_Ldap_Converter$/;"	c
char	library\Zend\Ldap\Converter.php	/^            $char = substr($string, $i, 1);$/;"	v
date	library\Zend\Ldap\Converter.php	/^                $date = new DateTime($date);$/;"	v
date	library\Zend\Ldap\Converter.php	/^                $date = new DateTime($date->get(Zend_Date::ISO_8601));$/;"	v
date	library\Zend\Ldap\Converter.php	/^                $date = new DateTime('@' . $date);$/;"	v
date	library\Zend\Ldap\Converter.php	/^        $date = new DateTime($timestring);$/;"	v
datepart	library\Zend\Ldap\Converter.php	/^        $datepart = array ();$/;"	v
day	library\Zend\Ldap\Converter.php	/^            $day = substr($date, 6, 2);$/;"	v
hex	library\Zend\Ldap\Converter.php	/^                $hex = dechex(ord($char));$/;"	v
hour	library\Zend\Ldap\Converter.php	/^            $hour = substr($date, 8, 2);$/;"	v
length	library\Zend\Ldap\Converter.php	/^        $length = strlen($date);$/;"	v
minute	library\Zend\Ldap\Converter.php	/^            $minute = substr($date, 10, 2);$/;"	v
month	library\Zend\Ldap\Converter.php	/^            $month = substr($date, 4, 2);$/;"	v
off	library\Zend\Ldap\Converter.php	/^        $off         = array ();$/;"	v
offset	library\Zend\Ldap\Converter.php	/^            $offset = $off[1];$/;"	v
offset	library\Zend\Ldap\Converter.php	/^        $offset = $time['offdir']$/;"	v
offsetHours	library\Zend\Ldap\Converter.php	/^                    $offsetHours = substr($off[2], 0, 2);$/;"	v
offsetMinutes	library\Zend\Ldap\Converter.php	/^                    $offsetMinutes = substr($off[3], 0, 2);$/;"	v
offsetRegEx	library\Zend\Ldap\Converter.php	/^        $offsetRegEx = '\/([Z\\-\\+])(\\d{2}\\'?){0,1}(\\d{2}\\'?){0,1}$\/';$/;"	v
return	library\Zend\Ldap\Converter.php	/^            $return = 'TRUE';$/;"	v
return	library\Zend\Ldap\Converter.php	/^        $return = 'FALSE';$/;"	v
second	library\Zend\Ldap\Converter.php	/^            $second = substr($date, 12, 2);$/;"	v
string	library\Zend\Ldap\Converter.php	/^                $string = str_replace($char, '\\\\' . $hex, $string);$/;"	v
string	library\Zend\Ldap\Converter.php	/^        $string = preg_replace("\/\\\\\\([0-9A-Fa-f]{2})\/e", "''.chr(hexdec('\\\\1')).''", $string);$/;"	v
time	library\Zend\Ldap\Converter.php	/^        $time = array ($/;"	v
timestring	library\Zend\Ldap\Converter.php	/^        $timestring = $time['year'] . '-'$/;"	v
timezone	library\Zend\Ldap\Converter.php	/^            $timezone = 'Z';$/;"	v
timezone	library\Zend\Ldap\Converter.php	/^        $timezone = $date->format('O');$/;"	v
v	library\Zend\Ldap\Converter.php	/^        $v = @unserialize($value);$/;"	v
Zend_Ldap_Converter_Exception	library\Zend\Ldap\Converter\Exception.php	/^class Zend_Ldap_Converter_Exception extends Zend_Exception$/;"	c
Zend_Ldap_Dn	library\Zend\Ldap\Dn.php	/^class Zend_Ldap_Dn implements ArrayAccess$/;"	c
caseFold	library\Zend\Ldap\Dn.php	/^        $caseFold = self::ATTR_CASEFOLD_NONE)$/;"	v
caseFold	library\Zend\Ldap\Dn.php	/^        $caseFold = self::_sanitizeCaseFold($caseFold, $this->_caseFold);$/;"	v
cdn	library\Zend\Ldap\Dn.php	/^                $cdn = $childDn->toArray(Zend_Ldap_Dn::ATTR_CASEFOLD_LOWER);$/;"	v
cdn	library\Zend\Ldap\Dn.php	/^                $cdn = self::explodeDn($childDn, $keys, $vals, Zend_Ldap_Dn::ATTR_CASEFOLD_LOWER);$/;"	v
ch	library\Zend\Ldap\Dn.php	/^            $ch = ($di == $slen) ? 0 : $dn[$di];$/;"	v
dn	library\Zend\Ldap\Dn.php	/^        $dn = trim($dn);$/;"	v
dnArray	library\Zend\Ldap\Dn.php	/^            $dnArray = array();$/;"	v
dnArray	library\Zend\Ldap\Dn.php	/^            $dnArray = self::explodeDn((string)$dn);$/;"	v
first	library\Zend\Ldap\Dn.php	/^        $first = array_slice($this->_dn, 0, $index + 1);$/;"	v
k	library\Zend\Ldap\Dn.php	/^        $k = array();$/;"	v
ka	library\Zend\Ldap\Dn.php	/^        $ka = array();$/;"	v
key	library\Zend\Ldap\Dn.php	/^                        $key = trim(substr($dn, $ko, $di - $ko));$/;"	v
key	library\Zend\Ldap\Dn.php	/^                    $key=$k[$i][$j];$/;"	v
key	library\Zend\Ldap\Dn.php	/^        $key = null;$/;"	v
keyId	library\Zend\Ldap\Dn.php	/^                            $keyId = strtolower($key);$/;"	v
keyId	library\Zend\Ldap\Dn.php	/^            $keyId = strtolower($key);$/;"	v
keys	library\Zend\Ldap\Dn.php	/^            $keys = $ka;$/;"	v
keys	library\Zend\Ldap\Dn.php	/^            $keys = array();$/;"	v
ko	library\Zend\Ldap\Dn.php	/^                        $ko = $di + 1;$/;"	v
ko	library\Zend\Ldap\Dn.php	/^        $ko = $vo = 0;$/;"	v
lastKey	library\Zend\Ldap\Dn.php	/^                            $lastKey = array_pop($ka);$/;"	v
lastVal	library\Zend\Ldap\Dn.php	/^                            $lastVal = array_pop($va);$/;"	v
length	library\Zend\Ldap\Dn.php	/^            $length = 1;$/;"	v
length	library\Zend\Ldap\Dn.php	/^        $length = (int)$length;$/;"	v
levelUp	library\Zend\Ldap\Dn.php	/^        $levelUp = (int)$levelUp;$/;"	v
multi	library\Zend\Ldap\Dn.php	/^                            $multi = array(strtolower($lastKey));$/;"	v
multi	library\Zend\Ldap\Dn.php	/^                            $multi = false;$/;"	v
multi	library\Zend\Ldap\Dn.php	/^                $multi = array();$/;"	v
multi	library\Zend\Ldap\Dn.php	/^        $multi = false;$/;"	v
newDn	library\Zend\Ldap\Dn.php	/^        $newDn = array_slice($this->_dn, $levelUp);$/;"	v
offset	library\Zend\Ldap\Dn.php	/^        $offset = (int)$offset;$/;"	v
part	library\Zend\Ldap\Dn.php	/^        $part = self::_caseFoldRdn($part, $caseFold);$/;"	v
parts	library\Zend\Ldap\Dn.php	/^        $parts = array();$/;"	v
pdn	library\Zend\Ldap\Dn.php	/^                $pdn = $parentDn->toArray(Zend_Ldap_Dn::ATTR_CASEFOLD_LOWER);$/;"	v
pdn	library\Zend\Ldap\Dn.php	/^                $pdn = self::explodeDn($parentDn, $keys, $vals, Zend_Ldap_Dn::ATTR_CASEFOLD_LOWER);$/;"	v
rdnParts	library\Zend\Ldap\Dn.php	/^        $rdnParts = array();$/;"	v
ret	library\Zend\Ldap\Dn.php	/^        $ret = array();$/;"	v
return	library\Zend\Ldap\Dn.php	/^        $return = array();$/;"	v
second	library\Zend\Ldap\Dn.php	/^        $second = array_slice($this->_dn, $index + 1);$/;"	v
slen	library\Zend\Ldap\Dn.php	/^        $slen = strlen($dn);$/;"	v
startIndex	library\Zend\Ldap\Dn.php	/^        $startIndex = count($cdn)-count($pdn);$/;"	v
state	library\Zend\Ldap\Dn.php	/^                        $state = 1;$/;"	v
state	library\Zend\Ldap\Dn.php	/^                        $state = 2;$/;"	v
state	library\Zend\Ldap\Dn.php	/^                        $state = 3;$/;"	v
state	library\Zend\Ldap\Dn.php	/^                    $state = 2;$/;"	v
state	library\Zend\Ldap\Dn.php	/^        $state = 1;$/;"	v
v	library\Zend\Ldap\Dn.php	/^        $v = array();$/;"	v
va	library\Zend\Ldap\Dn.php	/^        $va = array();$/;"	v
val	library\Zend\Ldap\Dn.php	/^                    $val = $val . '\\20';$/;"	v
val	library\Zend\Ldap\Dn.php	/^                    $val = '\\20' . $val;$/;"	v
val	library\Zend\Ldap\Dn.php	/^                    $val=$v[$i][$j];$/;"	v
val	library\Zend\Ldap\Dn.php	/^                $val = $matches[2];$/;"	v
val	library\Zend\Ldap\Dn.php	/^            $val = Zend_Ldap_Converter::ascToHex32($val);$/;"	v
val	library\Zend\Ldap\Dn.php	/^            $val = str_replace(array('\\\\', ',', '+', '"', '<', '>', ';', '#', '=', ),$/;"	v
val	library\Zend\Ldap\Dn.php	/^            $val = str_replace(array('\\\\\\\\', '\\,', '\\+', '\\"', '\\<', '\\>', '\\;', '\\#', '\\='),$/;"	v
vals	library\Zend\Ldap\Dn.php	/^            $vals = $va;$/;"	v
vals	library\Zend\Ldap\Dn.php	/^            $vals = array();$/;"	v
value	library\Zend\Ldap\Dn.php	/^                        $value = self::unescapeValue(trim(substr($dn, $vo, $di - $vo)));$/;"	v
value	library\Zend\Ldap\Dn.php	/^            $value = self::escapeValue($value);$/;"	v
value	library\Zend\Ldap\Dn.php	/^        $value = null;$/;"	v
vo	library\Zend\Ldap\Dn.php	/^                        $vo = $di + 1;$/;"	v
Zend_Ldap_Exception	library\Zend\Ldap\Exception.php	/^class Zend_Ldap_Exception extends Zend_Exception$/;"	c
code	library\Zend\Ldap\Exception.php	/^                $code = $oldCode;$/;"	v
errorMessages	library\Zend\Ldap\Exception.php	/^        $errorMessages = array();$/;"	v
message	library\Zend\Ldap\Exception.php	/^                $message = '';$/;"	v
message	library\Zend\Ldap\Exception.php	/^                $message = '0x' . dechex($code) . ': ';$/;"	v
message	library\Zend\Ldap\Exception.php	/^            $message = $ldap->getLastError($code, $errorMessages) . ': ';$/;"	v
message	library\Zend\Ldap\Exception.php	/^        $message = '';$/;"	v
oldCode	library\Zend\Ldap\Exception.php	/^            $oldCode = $code;$/;"	v
Zend_Ldap_Filter	library\Zend\Ldap\Filter.php	/^class Zend_Ldap_Filter extends Zend_Ldap_Filter_String$/;"	c
filter	library\Zend\Ldap\Filter.php	/^        $filter = self::_createFilterString($attr, $value, $filtertype, $prepend, $append);$/;"	v
str	library\Zend\Ldap\Filter.php	/^        $str = $attr . $filtertype;$/;"	v
args	library\Zend\Ldap\Filter\Abstract.php	/^        $args = array_merge(array($this), $fa);$/;"	v
fa	library\Zend\Ldap\Filter\Abstract.php	/^        $fa = func_get_args();$/;"	v
val	library\Zend\Ldap\Filter\Abstract.php	/^            $val = Zend_Ldap_Converter::ascToHex32($val);$/;"	v
val	library\Zend\Ldap\Filter\Abstract.php	/^            $val = str_replace(array('\\\\', '*', '(', ')'), array('\\5c', '\\2a', '\\28', '\\29'), $val);$/;"	v
Zend_Ldap_Filter_And	library\Zend\Ldap\Filter\And.php	/^class Zend_Ldap_Filter_And extends Zend_Ldap_Filter_Logical$/;"	c
Zend_Ldap_Filter_Exception	library\Zend\Ldap\Filter\Exception.php	/^class Zend_Ldap_Filter_Exception extends Zend_Exception$/;"	c
new	library\Zend\Ldap\Filter\Logical.php	/^        $new = clone $this;$/;"	v
return	library\Zend\Ldap\Filter\Logical.php	/^        $return = '(' . $this->_symbol;$/;"	v
Zend_Ldap_Filter_Mask	library\Zend\Ldap\Filter\Mask.php	/^class Zend_Ldap_Filter_Mask extends Zend_Ldap_Filter_String$/;"	c
args	library\Zend\Ldap\Filter\Mask.php	/^        $args = func_get_args();$/;"	v
filter	library\Zend\Ldap\Filter\Mask.php	/^        $filter = vsprintf($mask, $args);$/;"	v
Zend_Ldap_Filter_Not	library\Zend\Ldap\Filter\Not.php	/^class Zend_Ldap_Filter_Not extends Zend_Ldap_Filter_Abstract$/;"	c
Zend_Ldap_Filter_Or	library\Zend\Ldap\Filter\Or.php	/^class Zend_Ldap_Filter_Or extends Zend_Ldap_Filter_Logical$/;"	c
Zend_Ldap_Filter_String	library\Zend\Ldap\Filter\String.php	/^class Zend_Ldap_Filter_String extends Zend_Ldap_Filter_Abstract$/;"	c
Zend_Ldap_Ldif_Encoder	library\Zend\Ldap\Ldif\Encoder.php	/^class Zend_Ldap_Ldif_Encoder$/;"	c
attribute	library\Zend\Ldap\Ldif\Encoder.php	/^                $attribute = trim(chunk_split($attribute, $this->_options['wrap'], PHP_EOL . ' '));$/;"	v
attribute	library\Zend\Ldap\Ldif\Encoder.php	/^            $attribute = $name . ':';$/;"	v
attributes	library\Zend\Ldap\Ldif\Encoder.php	/^                $attributes = array_merge(array('dn' => $dn), $attributes);$/;"	v
attributes	library\Zend\Ldap\Ldif\Encoder.php	/^                $attributes = array_merge(array('objectclass' => $oc), $attributes);$/;"	v
attributes	library\Zend\Ldap\Ldif\Encoder.php	/^        $attributes = array_change_key_case($attributes, CASE_LOWER);$/;"	v
base64	library\Zend\Ldap\Ldif\Encoder.php	/^                $base64 = true;$/;"	v
base64	library\Zend\Ldap\Ldif\Encoder.php	/^            $base64 = null;$/;"	v
base64	library\Zend\Ldap\Ldif\Encoder.php	/^            $base64 = true;$/;"	v
base64	library\Zend\Ldap\Ldif\Encoder.php	/^        $base64 = false;$/;"	v
char	library\Zend\Ldap\Ldif\Encoder.php	/^            $char = ord(substr($string, $i, 1));$/;"	v
dn	library\Zend\Ldap\Ldif\Encoder.php	/^                $dn = $attributes['dn'];$/;"	v
encoder	library\Zend\Ldap\Ldif\Encoder.php	/^        $encoder = new self($options);$/;"	v
encoder	library\Zend\Ldap\Ldif\Encoder.php	/^        $encoder = new self(array());$/;"	v
item	library\Zend\Ldap\Ldif\Encoder.php	/^                    $item = array();$/;"	v
item	library\Zend\Ldap\Ldif\Encoder.php	/^        $item = array();$/;"	v
items	library\Zend\Ldap\Ldif\Encoder.php	/^        $items = array();$/;"	v
last	library\Zend\Ldap\Ldif\Encoder.php	/^                    $last = null;$/;"	v
last	library\Zend\Ldap\Ldif\Encoder.php	/^                $last = array($name, $type, $value);$/;"	v
last	library\Zend\Ldap\Ldif\Encoder.php	/^        $last = null;$/;"	v
line	library\Zend\Ldap\Ldif\Encoder.php	/^            $line = rtrim($line, "\\x09\\x0A\\x0D\\x00\\x0B");$/;"	v
matches	library\Zend\Ldap\Ldif\Encoder.php	/^            $matches = array();$/;"	v
name	library\Zend\Ldap\Ldif\Encoder.php	/^                $name = strtolower($matches[1]);$/;"	v
name	library\Zend\Ldap\Ldif\Encoder.php	/^        $name = $attribute[0];$/;"	v
oc	library\Zend\Ldap\Ldif\Encoder.php	/^                $oc = $attributes['objectclass'];$/;"	v
output	library\Zend\Ldap\Ldif\Encoder.php	/^        $output = '';$/;"	v
string	library\Zend\Ldap\Ldif\Encoder.php	/^            $string = base64_encode($string);$/;"	v
string	library\Zend\Ldap\Ldif\Encoder.php	/^        $string = '';$/;"	v
string	library\Zend\Ldap\Ldif\Encoder.php	/^        $string = (string)$string;$/;"	v
type	library\Zend\Ldap\Ldif\Encoder.php	/^                $type = trim($matches[2]);$/;"	v
type	library\Zend\Ldap\Ldif\Encoder.php	/^        $type = $attribute[1];$/;"	v
unsafe_char	library\Zend\Ldap\Ldif\Encoder.php	/^        $unsafe_char      = array(0, 10, 13);$/;"	v
unsafe_init_char	library\Zend\Ldap\Ldif\Encoder.php	/^        $unsafe_init_char = array(0, 10, 13, 32, 58, 60);$/;"	v
v	library\Zend\Ldap\Ldif\Encoder.php	/^            $v = $this->_encodeString($v, $base64);$/;"	v
value	library\Zend\Ldap\Ldif\Encoder.php	/^                $value = $matches[3];$/;"	v
value	library\Zend\Ldap\Ldif\Encoder.php	/^            $value = array($value);$/;"	v
value	library\Zend\Ldap\Ldif\Encoder.php	/^            $value = base64_decode($value);$/;"	v
value	library\Zend\Ldap\Ldif\Encoder.php	/^        $value = $attribute[2];$/;"	v
Zend_Ldap_Node	library\Zend\Ldap\Node.php	/^class Zend_Ldap_Node extends Zend_Ldap_Node_Abstract implements Iterator, RecursiveIterator$/;"	c
attribName	library\Zend\Ldap\Node.php	/^        $attribName = 'userPassword')$/;"	v
attributes	library\Zend\Ldap\Node.php	/^        $attributes = array_merge(array('dn' => $this->getDnString()), $this->getData(false));$/;"	v
changed	library\Zend\Ldap\Node.php	/^        $changed = array();$/;"	v
changedData	library\Zend\Ldap\Node.php	/^        $changedData = $this->getChangedData();$/;"	v
changes	library\Zend\Ldap\Node.php	/^        $changes = array($/;"	v
children	library\Zend\Ldap\Node.php	/^                $children = $this->searchChildren('(objectClass=*)', null);$/;"	v
data	library\Zend\Ldap\Node.php	/^            $data = $this->getData();$/;"	v
data	library\Zend\Ldap\Node.php	/^        $data = $ldap->getEntry($dn, array('*', '+'), true);$/;"	v
dn	library\Zend\Ldap\Node.php	/^            $dn = Zend_Ldap_Dn::factory($data['dn']);$/;"	v
dn	library\Zend\Ldap\Node.php	/^            $dn = Zend_Ldap_Dn::factory($dn);$/;"	v
dn	library\Zend\Ldap\Node.php	/^            $dn = clone $data['dn'];$/;"	v
dn	library\Zend\Ldap\Node.php	/^            $dn = clone $dn;$/;"	v
dn	library\Zend\Ldap\Node.php	/^        $dn = clone parent::_getDn();$/;"	v
entry	library\Zend\Ldap\Node.php	/^        $entry = new self($dn, $data, true, $ldap);$/;"	v
fromDataSource	library\Zend\Ldap\Node.php	/^        $fromDataSource = ($fromDataSource === true) ? true : false;$/;"	v
ldap	library\Zend\Ldap\Node.php	/^        $ldap = $this->getLdap();$/;"	v
name	library\Zend\Ldap\Node.php	/^        $name = strtolower($name);$/;"	v
new	library\Zend\Ldap\Node.php	/^        $new = new self($dn, $data, $fromDataSource, null);$/;"	v
new	library\Zend\Ldap\Node.php	/^        $new = new self($dn, array(), false, null);$/;"	v
parentDn	library\Zend\Ldap\Node.php	/^        $parentDn = $this->_getDn()->getParentDn(1);$/;"	v
rdn	library\Zend\Ldap\Node.php	/^        $rdn = $this->getRdnArray(Zend_Ldap_Dn::ATTR_CASEFOLD_LOWER);$/;"	v
recursive	library\Zend\Ldap\Node.php	/^            $recursive = $this->hasChildren();$/;"	v
attributes	library\Zend\Ldap\Node\Abstract.php	/^        $attributes = $this->getAttributes($includeSystemAttributes);$/;"	v
data	library\Zend\Ldap\Node\Abstract.php	/^            $data = $ldap->getEntry($this->_getDn(), array('*', '+'), true);$/;"	v
data	library\Zend\Ldap\Node\Abstract.php	/^            $data = array();$/;"	v
data	library\Zend\Ldap\Node\Abstract.php	/^        $data = array();$/;"	v
dn	library\Zend\Ldap\Node\Abstract.php	/^        $dn = clone $this->_getDn();$/;"	v
name	library\Zend\Ldap\Node\Abstract.php	/^        $name = strtolower($name);$/;"	v
Zend_Ldap_Node_ChildrenIterator	library\Zend\Ldap\Node\ChildrenIterator.php	/^class Zend_Ldap_Node_ChildrenIterator implements Iterator, Countable, RecursiveIterator, ArrayAccess$/;"	c
data	library\Zend\Ldap\Node\ChildrenIterator.php	/^        $data = array();$/;"	v
Zend_Ldap_Node_Collection	library\Zend\Ldap\Node\Collection.php	/^class Zend_Ldap_Node_Collection extends Zend_Ldap_Collection$/;"	c
node	library\Zend\Ldap\Node\Collection.php	/^        $node = Zend_Ldap_Node::fromArray($data, true);$/;"	v
Zend_Ldap_Node_RootDse	library\Zend\Ldap\Node\RootDse.php	/^class Zend_Ldap_Node_RootDse extends Zend_Ldap_Node_Abstract$/;"	c
data	library\Zend\Ldap\Node\RootDse.php	/^        $data = $ldap->getEntry($dn, array('*', '+'), true);$/;"	v
dn	library\Zend\Ldap\Node\RootDse.php	/^        $dn = Zend_Ldap_Dn::fromString('');$/;"	v
schemaDn	library\Zend\Ldap\Node\RootDse.php	/^        $schemaDn = $this->getSubschemaSubentry();$/;"	v
Zend_Ldap_Node_RootDse_ActiveDirectory	library\Zend\Ldap\Node\RootDse\ActiveDirectory.php	/^class Zend_Ldap_Node_RootDse_ActiveDirectory extends Zend_Ldap_Node_RootDse$/;"	c
schemaDn	library\Zend\Ldap\Node\RootDse\ActiveDirectory.php	/^        $schemaDn = $this->getSchemaNamingContext();$/;"	v
Zend_Ldap_Node_RootDse_OpenLdap	library\Zend\Ldap\Node\RootDse\OpenLdap.php	/^class Zend_Ldap_Node_RootDse_OpenLdap extends Zend_Ldap_Node_RootDse$/;"	c
Zend_Ldap_Node_RootDse_eDirectory	library\Zend\Ldap\Node\RootDse\eDirectory.php	/^class Zend_Ldap_Node_RootDse_eDirectory extends Zend_Ldap_Node_RootDse$/;"	c
Zend_Ldap_Node_Schema	library\Zend\Ldap\Node\Schema.php	/^class Zend_Ldap_Node_Schema extends Zend_Ldap_Node_Abstract$/;"	c
data	library\Zend\Ldap\Node\Schema.php	/^        $data = $ldap->getEntry($dn, array('*', '+'), true);$/;"	v
dn	library\Zend\Ldap\Node\Schema.php	/^        $dn = $ldap->getRootDse()->getSchemaDn();$/;"	v
Zend_Ldap_Node_Schema_ActiveDirectory	library\Zend\Ldap\Node\Schema\ActiveDirectory.php	/^class Zend_Ldap_Node_Schema_ActiveDirectory extends Zend_Ldap_Node_Schema$/;"	c
val	library\Zend\Ldap\Node\Schema\ActiveDirectory.php	/^            $val = new Zend_Ldap_Node_Schema_AttributeType_ActiveDirectory($node);$/;"	v
val	library\Zend\Ldap\Node\Schema\ActiveDirectory.php	/^            $val = new Zend_Ldap_Node_Schema_ObjectClass_ActiveDirectory($node);$/;"	v
Zend_Ldap_Node_Schema_AttributeType_ActiveDirectory	library\Zend\Ldap\Node\Schema\AttributeType\ActiveDirectory.php	/^class Zend_Ldap_Node_Schema_AttributeType_ActiveDirectory extends Zend_Ldap_Node_Schema_Item$/;"	c
Zend_Ldap_Node_Schema_AttributeType_OpenLdap	library\Zend\Ldap\Node\Schema\AttributeType\OpenLdap.php	/^class Zend_Ldap_Node_Schema_AttributeType_OpenLdap extends Zend_Ldap_Node_Schema_Item$/;"	c
maxLength	library\Zend\Ldap\Node\Schema\AttributeType\OpenLdap.php	/^        $maxLength = $this->{'max-length'};$/;"	v
parent	library\Zend\Ldap\Node\Schema\AttributeType\OpenLdap.php	/^            $parent = $this->getParent();$/;"	v
Zend_Ldap_Node_Schema_ObjectClass_ActiveDirectory	library\Zend\Ldap\Node\Schema\ObjectClass\ActiveDirectory.php	/^class Zend_Ldap_Node_Schema_ObjectClass_ActiveDirectory extends Zend_Ldap_Node_Schema_Item$/;"	c
Zend_Ldap_Node_Schema_ObjectClass_OpenLdap	library\Zend\Ldap\Node\Schema\ObjectClass\OpenLdap.php	/^class Zend_Ldap_Node_Schema_ObjectClass_OpenLdap extends Zend_Ldap_Node_Schema_Item$/;"	c
may	library\Zend\Ldap\Node\Schema\ObjectClass\OpenLdap.php	/^            $may = array_merge($may, $p->getMayContain());$/;"	v
may	library\Zend\Ldap\Node\Schema\ObjectClass\OpenLdap.php	/^        $may = $this->may;$/;"	v
may	library\Zend\Ldap\Node\Schema\ObjectClass\OpenLdap.php	/^        $may = array_diff($may, $must);$/;"	v
may	library\Zend\Ldap\Node\Schema\ObjectClass\OpenLdap.php	/^        $may = array_unique($may);$/;"	v
must	library\Zend\Ldap\Node\Schema\ObjectClass\OpenLdap.php	/^            $must = array_merge($must, $p->getMustContain());$/;"	v
must	library\Zend\Ldap\Node\Schema\ObjectClass\OpenLdap.php	/^        $must = $this->must;$/;"	v
must	library\Zend\Ldap\Node\Schema\ObjectClass\OpenLdap.php	/^        $must = array_unique($must);$/;"	v
Zend_Ldap_Node_Schema_OpenLdap	library\Zend\Ldap\Node\Schema\OpenLdap.php	/^class Zend_Ldap_Node_Schema_OpenLdap extends Zend_Ldap_Node_Schema$/;"	c
aliases	library\Zend\Ldap\Node\Schema\OpenLdap.php	/^            $aliases = $data['name'];$/;"	v
attributeType	library\Zend\Ldap\Node\Schema\OpenLdap.php	/^        $attributeType = array($/;"	v
cMatches	library\Zend\Ldap\Node\Schema\OpenLdap.php	/^        $cMatches = count($matches[0]);$/;"	v
cPattern	library\Zend\Ldap\Node\Schema\OpenLdap.php	/^        $cPattern = count($matches);$/;"	v
data	library\Zend\Ldap\Node\Schema\OpenLdap.php	/^        $data = $node->getData();$/;"	v
ldapSyntax	library\Zend\Ldap\Node\Schema\OpenLdap.php	/^        $ldapSyntax = array($/;"	v
matches	library\Zend\Ldap\Node\Schema\OpenLdap.php	/^        $matches = array();$/;"	v
matchingRule	library\Zend\Ldap\Node\Schema\OpenLdap.php	/^        $matchingRule = array($/;"	v
matchingRuleUse	library\Zend\Ldap\Node\Schema\OpenLdap.php	/^        $matchingRuleUse = array($/;"	v
multiValue	library\Zend\Ldap\Node\Schema\OpenLdap.php	/^        $multiValue = array('must', 'may', 'sup');$/;"	v
noValue	library\Zend\Ldap\Node\Schema\OpenLdap.php	/^        $noValue = array('single-value',$/;"	v
objectClass	library\Zend\Ldap\Node\Schema\OpenLdap.php	/^        $objectClass = array($/;"	v
parents	library\Zend\Ldap\Node\Schema\OpenLdap.php	/^        $parents = $data['sup'];$/;"	v
pattern	library\Zend\Ldap\Node\Schema\OpenLdap.php	/^        $pattern = "\/\\s* (?:([()]) | ([^'\\s()]+) | '((?:[^']+|'[^\\s)])*)') \\s*\/x";$/;"	v
tok	library\Zend\Ldap\Node\Schema\OpenLdap.php	/^                $tok = trim($matches[$j][$i]);$/;"	v
token	library\Zend\Ldap\Node\Schema\OpenLdap.php	/^            $token = strtolower(array_shift($tokens));$/;"	v
tokens	library\Zend\Ldap\Node\Schema\OpenLdap.php	/^        $tokens = $this->_tokenizeString($value);$/;"	v
tokens	library\Zend\Ldap\Node\Schema\OpenLdap.php	/^        $tokens = array();$/;"	v
val	library\Zend\Ldap\Node\Schema\OpenLdap.php	/^            $val = $this->_parseAttributeType($value);$/;"	v
val	library\Zend\Ldap\Node\Schema\OpenLdap.php	/^            $val = $this->_parseLdapSyntax($value);$/;"	v
val	library\Zend\Ldap\Node\Schema\OpenLdap.php	/^            $val = $this->_parseMatchingRule($value);$/;"	v
val	library\Zend\Ldap\Node\Schema\OpenLdap.php	/^            $val = $this->_parseMatchingRuleUse($value);$/;"	v
val	library\Zend\Ldap\Node\Schema\OpenLdap.php	/^            $val = $this->_parseObjectClass($value);$/;"	v
val	library\Zend\Ldap\Node\Schema\OpenLdap.php	/^            $val = new Zend_Ldap_Node_Schema_AttributeType_OpenLdap($val);$/;"	v
val	library\Zend\Ldap\Node\Schema\OpenLdap.php	/^            $val = new Zend_Ldap_Node_Schema_ObjectClass_OpenLdap($val);$/;"	v
Zend_Loader	library\Zend\Loader.php	/^class Zend_Loader$/;"	c
autoloader	library\Zend\Loader.php	/^        $autoloader = Zend_Loader_Autoloader::getInstance();$/;"	v
callback	library\Zend\Loader.php	/^            $callback = array($class, 'autoload');$/;"	v
className	library\Zend\Loader.php	/^            $className = substr($className, $lastNsPos + 1);$/;"	v
className	library\Zend\Loader.php	/^        $className = ltrim($class, '\\\\');$/;"	v
dir	library\Zend\Loader.php	/^                    $dir = rtrim($dir, '\\\\\/');$/;"	v
dirPath	library\Zend\Loader.php	/^            $dirPath = dirname($file);$/;"	v
dirs	library\Zend\Loader.php	/^                $dirs = explode(PATH_SEPARATOR, $dirs);$/;"	v
dirs	library\Zend\Loader.php	/^                $dirs = implode(PATH_SEPARATOR, $dirs);$/;"	v
file	library\Zend\Loader.php	/^            $file      = str_replace('\\\\', DIRECTORY_SEPARATOR, $namespace) . DIRECTORY_SEPARATOR;$/;"	v
file	library\Zend\Loader.php	/^            $file = $path . '\/' . $filename;$/;"	v
file	library\Zend\Loader.php	/^            $file = basename($file);$/;"	v
file	library\Zend\Loader.php	/^        $file      = '';$/;"	v
incPath	library\Zend\Loader.php	/^            $incPath = get_include_path();$/;"	v
incPath	library\Zend\Loader.php	/^        $incPath = false;$/;"	v
methods	library\Zend\Loader.php	/^            $methods = get_class_methods($class);$/;"	v
namespace	library\Zend\Loader.php	/^            $namespace = substr($className, 0, $lastNsPos);$/;"	v
namespace	library\Zend\Loader.php	/^        $namespace = '';$/;"	v
path	library\Zend\Loader.php	/^            $path = get_include_path();$/;"	v
paths	library\Zend\Loader.php	/^            $paths = explode(PATH_SEPARATOR, $path);$/;"	v
paths	library\Zend\Loader.php	/^            $paths = preg_split('#:(?!\/\/)#', $path);$/;"	v
Zend_Loader_Autoloader	library\Zend\Loader\Autoloader.php	/^class Zend_Loader_Autoloader$/;"	c
autoloaders	library\Zend\Loader\Autoloader.php	/^                    $autoloaders = $this->getNamespaceAutoloaders($ns);$/;"	v
autoloaders	library\Zend\Loader\Autoloader.php	/^                $autoloaders = $this->getNamespaceAutoloaders($ns);$/;"	v
autoloaders	library\Zend\Loader\Autoloader.php	/^            $autoloaders = $this->getAutoloaders();$/;"	v
autoloaders	library\Zend\Loader\Autoloader.php	/^            $autoloaders = $this->getNamespaceAutoloaders($ns);$/;"	v
autoloaders	library\Zend\Loader\Autoloader.php	/^        $autoloaders = $this->getAutoloaders();$/;"	v
autoloaders	library\Zend\Loader\Autoloader.php	/^        $autoloaders = array();$/;"	v
autoloadersNonNamespace	library\Zend\Loader\Autoloader.php	/^        $autoloadersNonNamespace = $this->getNamespaceAutoloaders('');$/;"	v
availableVersions	library\Zend\Loader\Autoloader.php	/^        $availableVersions = $this->_getAvailableVersions($path, $version);$/;"	v
callback	library\Zend\Loader\Autoloader.php	/^        $callback = $this->getDefaultAutoloader();$/;"	v
count	library\Zend\Loader\Autoloader.php	/^        $count = count($parts);$/;"	v
dirName	library\Zend\Loader\Autoloader.php	/^            $dirName = substr($dir, strlen($path) + 1);$/;"	v
dirs	library\Zend\Loader\Autoloader.php	/^        $dirs       = glob("$path\/*", GLOB_ONLYDIR);$/;"	v
matchedVersion	library\Zend\Loader\Autoloader.php	/^            $matchedVersion = $matches[1];$/;"	v
matchedVersion	library\Zend\Loader\Autoloader.php	/^        $matchedVersion = array_pop($availableVersions);$/;"	v
namespace	library\Zend\Loader\Autoloader.php	/^                    $namespace = $ns;$/;"	v
namespace	library\Zend\Loader\Autoloader.php	/^                $namespace     = $ns;$/;"	v
namespace	library\Zend\Loader\Autoloader.php	/^            $namespace = (array) $namespace;$/;"	v
namespace	library\Zend\Loader\Autoloader.php	/^        $namespace   = false;$/;"	v
namespace	library\Zend\Loader\Autoloader.php	/^        $namespace = (array) $namespace;$/;"	v
namespace	library\Zend\Loader\Autoloader.php	/^        $namespace = (string) $namespace;$/;"	v
parts	library\Zend\Loader\Autoloader.php	/^        $parts = explode('.', $version);$/;"	v
path	library\Zend\Loader\Autoloader.php	/^            $path = $spec['path'];$/;"	v
path	library\Zend\Loader\Autoloader.php	/^        $path       = rtrim($path, '\/');$/;"	v
path	library\Zend\Loader\Autoloader.php	/^        $path       = rtrim($path, '\\\\');$/;"	v
path	library\Zend\Loader\Autoloader.php	/^        $path = $spec;$/;"	v
self	library\Zend\Loader\Autoloader.php	/^        $self = self::getInstance();$/;"	v
type	library\Zend\Loader\Autoloader.php	/^        $type = $this->_getVersionType($version);$/;"	v
version	library\Zend\Loader\Autoloader.php	/^                $version = $spec['version'];$/;"	v
version	library\Zend\Loader\Autoloader.php	/^            $version = 'latest';$/;"	v
versionLen	library\Zend\Loader\Autoloader.php	/^        $versionLen = strlen($version);$/;"	v
versions	library\Zend\Loader\Autoloader.php	/^        $versions   = array();$/;"	v
Zend_Loader_Autoloader_Resource	library\Zend\Loader\Autoloader\Resource.php	/^class Zend_Loader_Autoloader_Resource implements Zend_Loader_Autoloader_Interface$/;"	c
class	library\Zend\Loader\Autoloader\Resource.php	/^        $class     = $namespace . '_' . ucfirst($resource);$/;"	v
classPath	library\Zend\Loader\Autoloader\Resource.php	/^        $classPath = $path . '\/' . str_replace('_', '\/', $final) . '.php';$/;"	v
classPath	library\Zend\Loader\Autoloader\Resource.php	/^        $classPath = $this->getClassPath($class);$/;"	v
component	library\Zend\Loader\Autoloader\Resource.php	/^        $component = $namespace;$/;"	v
component	library\Zend\Loader\Autoloader\Resource.php	/^        $component = $this->_resourceTypes[$type]['namespace'];$/;"	v
final	library\Zend\Loader\Autoloader\Resource.php	/^        $final     = array_pop($segments);$/;"	v
final	library\Zend\Loader\Autoloader\Resource.php	/^        $final = substr($class, strlen($lastMatch) + 1);$/;"	v
lastMatch	library\Zend\Loader\Autoloader\Resource.php	/^                $lastMatch = $component;$/;"	v
lastMatch	library\Zend\Loader\Autoloader\Resource.php	/^        $lastMatch = false;$/;"	v
method	library\Zend\Loader\Autoloader\Resource.php	/^            $method = 'set' . ucfirst($key);$/;"	v
methods	library\Zend\Loader\Autoloader\Resource.php	/^        $methods = get_class_methods($this);$/;"	v
namespace	library\Zend\Loader\Autoloader\Resource.php	/^                $namespace = $spec['namespace'];$/;"	v
namespace	library\Zend\Loader\Autoloader\Resource.php	/^            $namespace = $this->_resourceTypes[$type]['namespace'];$/;"	v
namespace	library\Zend\Loader\Autoloader\Resource.php	/^            $namespace = array();$/;"	v
namespace	library\Zend\Loader\Autoloader\Resource.php	/^            $namespace = implode('_', $namespace);$/;"	v
namespace	library\Zend\Loader\Autoloader\Resource.php	/^            $namespace = null;$/;"	v
namespace	library\Zend\Loader\Autoloader\Resource.php	/^            $namespace = ucfirst(trim($namespace, '_'));$/;"	v
namespace	library\Zend\Loader\Autoloader\Resource.php	/^        $namespace         = '';$/;"	v
namespace	library\Zend\Loader\Autoloader\Resource.php	/^        $namespace = $this->_resourceTypes[$type]['namespace'];$/;"	v
namespace	library\Zend\Loader\Autoloader\Resource.php	/^        $namespace = $this->getNamespace();$/;"	v
namespaceTopLevel	library\Zend\Loader\Autoloader\Resource.php	/^            $namespaceTopLevel = $this->getNamespace();$/;"	v
namespaceTopLevel	library\Zend\Loader\Autoloader\Resource.php	/^        $namespaceTopLevel = $this->getNamespace();$/;"	v
options	library\Zend\Loader\Autoloader\Resource.php	/^            $options = $options->toArray();$/;"	v
path	library\Zend\Loader\Autoloader\Resource.php	/^        $path = $this->_components[$lastMatch];$/;"	v
paths	library\Zend\Loader\Autoloader\Resource.php	/^            $paths  = $spec['path'];$/;"	v
resource	library\Zend\Loader\Autoloader\Resource.php	/^            $resource = array_shift($args);$/;"	v
segment	library\Zend\Loader\Autoloader\Resource.php	/^            $segment    = array_shift($segments);$/;"	v
segments	library\Zend\Loader\Autoloader\Resource.php	/^        $segments          = explode('_', $class);$/;"	v
topLevelSegments	library\Zend\Loader\Autoloader\Resource.php	/^            $topLevelSegments = count(explode('_', $namespaceTopLevel));$/;"	v
type	library\Zend\Loader\Autoloader\Resource.php	/^            $type  = strtolower(substr($method, 3));$/;"	v
type	library\Zend\Loader\Autoloader\Resource.php	/^            $type = $this->getDefaultResourceType();$/;"	v
type	library\Zend\Loader\Autoloader\Resource.php	/^        $type = strtolower($type);$/;"	v
Zend_Loader_Exception	library\Zend\Loader\Exception.php	/^class Zend_Loader_Exception extends Zend_Exception$/;"	c
Zend_Loader_PluginLoader	library\Zend\Loader\PluginLoader.php	/^class Zend_Loader_PluginLoader implements Zend_Loader_PluginLoader_Interface$/;"	c
class	library\Zend\Loader\PluginLoader.php	/^            $class = $this->getClassName($name);$/;"	v
classFile	library\Zend\Loader\PluginLoader.php	/^        $classFile = str_replace('_', DIRECTORY_SEPARATOR, $name) . '.php';$/;"	v
className	library\Zend\Loader\PluginLoader.php	/^            $className = $prefix . $name;$/;"	v
file	library\Zend\Loader\PluginLoader.php	/^            $file = '<?php';$/;"	v
file	library\Zend\Loader\PluginLoader.php	/^            $file = file_get_contents(self::$_includeFileCache);$/;"	v
found	library\Zend\Loader\PluginLoader.php	/^                        $found = true;$/;"	v
found	library\Zend\Loader\PluginLoader.php	/^                $found = true;$/;"	v
found	library\Zend\Loader\PluginLoader.php	/^        $found     = false;$/;"	v
incFile	library\Zend\Loader\PluginLoader.php	/^        $incFile   = self::getIncludeFileCache();$/;"	v
last	library\Zend\Loader\PluginLoader.php	/^        $last = strlen($prefix) - 1;$/;"	v
loadFile	library\Zend\Loader\PluginLoader.php	/^                $loadFile = $path . $classFile;$/;"	v
message	library\Zend\Loader\PluginLoader.php	/^            $message = "Plugin by name '$name' was not found in the registry; used paths:";$/;"	v
name	library\Zend\Loader\PluginLoader.php	/^        $name = $this->_formatName($name);$/;"	v
path	library\Zend\Loader\PluginLoader.php	/^            $path  = $r->getFileName();$/;"	v
path	library\Zend\Loader\PluginLoader.php	/^        $path   = rtrim($path, '\/\\\\') . '\/';$/;"	v
paths	library\Zend\Loader\PluginLoader.php	/^            $paths     = array_reverse($paths, true);$/;"	v
pos	library\Zend\Loader\PluginLoader.php	/^            $pos = array_search($path, $registry[$prefix]);$/;"	v
prefix	library\Zend\Loader\PluginLoader.php	/^            $prefix = $this->_formatPrefix($prefix);$/;"	v
prefix	library\Zend\Loader\PluginLoader.php	/^        $prefix = $this->_formatPrefix($prefix);$/;"	v
r	library\Zend\Loader\PluginLoader.php	/^            $r     = new ReflectionClass($class);$/;"	v
registry	library\Zend\Loader\PluginLoader.php	/^            $registry = $this->_prefixToPaths;$/;"	v
registry	library\Zend\Loader\PluginLoader.php	/^            $registry = self::$_staticPrefixToPaths[$this->_useStaticRegistry];$/;"	v
registry	library\Zend\Loader\PluginLoader.php	/^            $registry =& $this->_prefixToPaths;$/;"	v
registry	library\Zend\Loader\PluginLoader.php	/^            $registry =& self::$_staticPrefixToPaths[$this->_useStaticRegistry];$/;"	v
registry	library\Zend\Loader\PluginLoader.php	/^        $registry  = array_reverse($registry, true);$/;"	v
Zend_Loader_PluginLoader_Exception	library\Zend\Loader\PluginLoader\Exception.php	/^class Zend_Loader_PluginLoader_Exception extends Zend_Loader_Exception$/;"	c
Zend_Locale	library\Zend\Locale.php	/^class Zend_Locale$/;"	c
accepted	library\Zend\Locale.php	/^        $accepted = preg_split('\/,\\s*\/', $httpcharsets);$/;"	v
accepted	library\Zend\Locale.php	/^        $accepted = preg_split('\/,\\s*\/', $httplanguages);$/;"	v
charsets	library\Zend\Locale.php	/^        $charsets = array();$/;"	v
country2	library\Zend\Locale.php	/^            $country2 = explode('_', $region);$/;"	v
countrys	library\Zend\Locale.php	/^            $countrys = explode('-', $match[1]);$/;"	v
elocale	library\Zend\Locale.php	/^            $elocale = explode('_', (string) $locale);$/;"	v
httpcharsets	library\Zend\Locale.php	/^        $httpcharsets = getenv('HTTP_ACCEPT_CHARSET');$/;"	v
httplanguages	library\Zend\Locale.php	/^            $httplanguages = $_SERVER['HTTP_ACCEPT_LANGUAGE'];$/;"	v
httplanguages	library\Zend\Locale.php	/^        $httplanguages = getenv('HTTP_ACCEPT_LANGUAGE');$/;"	v
language	library\Zend\Locale.php	/^                    $language = substr($language, 0, strpos($language, '.'));$/;"	v
language	library\Zend\Locale.php	/^                    $language = substr($language, 0, strpos($language, '@'));$/;"	v
language	library\Zend\Locale.php	/^                $language = str_ireplace($/;"	v
language	library\Zend\Locale.php	/^                $language = substr($language, 1);$/;"	v
language	library\Zend\Locale.php	/^                $language = substr($locale, strpos($locale, '='));$/;"	v
language	library\Zend\Locale.php	/^        $language      = setlocale(LC_ALL, 0);$/;"	v
languagearray	library\Zend\Locale.php	/^        $languagearray = array();$/;"	v
languages	library\Zend\Locale.php	/^                $languages         = self::getBrowser() + self::getEnvironment() + self::getDefault();$/;"	v
languages	library\Zend\Locale.php	/^                $languages         = self::getDefault() + self::getEnvironment() + self::getBrowser();$/;"	v
languages	library\Zend\Locale.php	/^                $languages         = self::getEnvironment() + self::getBrowser() + self::getDefault();$/;"	v
languages	library\Zend\Locale.php	/^        $languages     = array();$/;"	v
languages	library\Zend\Locale.php	/^        $languages     = explode(';', $language);$/;"	v
list	library\Zend\Locale.php	/^        $list = self::$_localeData;$/;"	v
locale	library\Zend\Locale.php	/^                $locale = Zend_Locale::getLocaleToTerritory($locale);$/;"	v
locale	library\Zend\Locale.php	/^                $locale = Zend_Registry::get('Zend_Locale');$/;"	v
locale	library\Zend\Locale.php	/^                $locale = explode('_', $locale);$/;"	v
locale	library\Zend\Locale.php	/^                $locale = key($locale);$/;"	v
locale	library\Zend\Locale.php	/^                $locale = new Zend_Locale($locale);$/;"	v
locale	library\Zend\Locale.php	/^                $locale = self::$_auto;$/;"	v
locale	library\Zend\Locale.php	/^                $locale = self::$_browser;$/;"	v
locale	library\Zend\Locale.php	/^                $locale = self::$_default;$/;"	v
locale	library\Zend\Locale.php	/^                $locale = self::$_environment;$/;"	v
locale	library\Zend\Locale.php	/^            $locale = $locale->toString();$/;"	v
locale	library\Zend\Locale.php	/^            $locale = new Zend_Locale();$/;"	v
locale	library\Zend\Locale.php	/^            $locale = self::_prepareLocale($locale, $strict);$/;"	v
locale	library\Zend\Locale.php	/^            $locale = strtr($locale, '-', '_');$/;"	v
locale	library\Zend\Locale.php	/^        $locale            = self::findLocale($locale);$/;"	v
locale	library\Zend\Locale.php	/^        $locale = explode('_', $this->_locale);$/;"	v
locale	library\Zend\Locale.php	/^        $locale = implode('_', $parts);$/;"	v
locale	library\Zend\Locale.php	/^        $locale = self::_prepareLocale($locale);$/;"	v
locale	library\Zend\Locale.php	/^        $locale = self::findLocale($locale);$/;"	v
match	library\Zend\Locale.php	/^            $match  = null;$/;"	v
no	library\Zend\Locale.php	/^        $no                = explode(':', $quest['no']);$/;"	v
one	library\Zend\Locale.php	/^                        $one    = false;$/;"	v
one	library\Zend\Locale.php	/^                    $one = true;$/;"	v
one	library\Zend\Locale.php	/^                $one    = null;$/;"	v
param	library\Zend\Locale.php	/^                    $param = $params[0];$/;"	v
param	library\Zend\Locale.php	/^                $param = null;$/;"	v
params	library\Zend\Locale.php	/^                $params = func_get_args();$/;"	v
parts	library\Zend\Locale.php	/^        $parts = explode('_', $locale);$/;"	v
pos	library\Zend\Locale.php	/^                $pos            = substr($accept, 0, strpos($accept, ';'));$/;"	v
quality	library\Zend\Locale.php	/^                $quality           = 1.0;$/;"	v
quality	library\Zend\Locale.php	/^                $quality        = (float) substr($accept, (strpos($accept, '=') + 1));$/;"	v
quality	library\Zend\Locale.php	/^                $quality = (float) $match[2];$/;"	v
quality	library\Zend\Locale.php	/^                $quality = 1.0;$/;"	v
quest	library\Zend\Locale.php	/^        $quest             = Zend_Locale_Data::getList($locale, 'question');$/;"	v
regex	library\Zend\Locale.php	/^            $regex = '^';$/;"	v
regex	library\Zend\Locale.php	/^        $regex = '';$/;"	v
region	library\Zend\Locale.php	/^                    $region = substr($region, 0, 2);$/;"	v
region	library\Zend\Locale.php	/^            $region   = array_shift($country2);$/;"	v
region	library\Zend\Locale.php	/^            $region   = array_shift($countrys);$/;"	v
region	library\Zend\Locale.php	/^            $region = substr((string) $locale, 0, 3);$/;"	v
result	library\Zend\Locale.php	/^            $result = preg_match('\/^([a-z]{1,8}(?:[-_][a-z]{1,8})*)(?:;\\s*q=(0(?:\\.[0-9]{1,3})?|1(?:\\.0{1,3})?))?$\/i',$/;"	v
result	library\Zend\Locale.php	/^        $result = Zend_Locale_Data::getContent($locale, $path, $value);$/;"	v
result	library\Zend\Locale.php	/^        $result = Zend_Locale_Data::getList($locale, $path, $value);$/;"	v
start	library\Zend\Locale.php	/^                $start  = false;$/;"	v
start	library\Zend\Locale.php	/^            $start = true;$/;"	v
territory	library\Zend\Locale.php	/^        $territory = strtoupper($territory);$/;"	v
yes	library\Zend\Locale.php	/^        $yes               = explode(':', $quest['yes']);$/;"	v
Zend_Locale_Data	library\Zend\Locale\Data.php	/^class Zend_Locale_Data$/;"	c
_temp	library\Zend\Locale\Data.php	/^                $_temp  = self::_getFile($locale, '\/ldml\/dates\/timeZoneNames\/zone', 'type');$/;"	v
_temp	library\Zend\Locale\Data.php	/^                $_temp = array();$/;"	v
_temp	library\Zend\Locale\Data.php	/^                $_temp = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value . '\\']\/dateTimeFormats\/availableFormats\/dateFormatItem', 'id');$/;"	v
_temp	library\Zend\Locale\Data.php	/^                $_temp = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value . '\\']\/dateTimeFormats\/intervalFormats\/intervalFormatItem', 'id');$/;"	v
_temp	library\Zend\Locale\Data.php	/^                $_temp = self::_getFile($locale, '\/ldml\/dates\/timeZoneNames\/zone', 'type');$/;"	v
_temp	library\Zend\Locale\Data.php	/^                $_temp = self::_getFile($locale, '\/ldml\/numbers\/currencies\/currency', 'type');$/;"	v
_temp	library\Zend\Locale\Data.php	/^                $_temp = self::_getFile($locale, '\/ldml\/units\/unit', 'type');$/;"	v
_temp	library\Zend\Locale\Data.php	/^                $_temp = self::_getFile('characters', '\/supplementalData\/characters\/character-fallback\/character', 'value');$/;"	v
_temp	library\Zend\Locale\Data.php	/^                $_temp = self::_getFile('likelySubtags', '\/supplementalData\/likelySubtags\/likelySubtag', 'from');$/;"	v
_temp	library\Zend\Locale\Data.php	/^                $_temp = self::_getFile('numberingSystems', '\/supplementalData\/numberingSystems\/numberingSystem', 'id');$/;"	v
_temp	library\Zend\Locale\Data.php	/^                $_temp = self::_getFile('postalCodeData', '\/supplementalData\/postalCodeData\/postCodeRegex', 'territoryId');$/;"	v
_temp	library\Zend\Locale\Data.php	/^                $_temp = self::_getFile('supplementalData', '\/supplementalData\/codeMappings\/territoryCodes', 'alpha3');$/;"	v
_temp	library\Zend\Locale\Data.php	/^                $_temp = self::_getFile('supplementalData', '\/supplementalData\/codeMappings\/territoryCodes', 'numeric');$/;"	v
_temp	library\Zend\Locale\Data.php	/^                $_temp = self::_getFile('supplementalData', '\/supplementalData\/codeMappings\/territoryCodes', 'type');$/;"	v
_temp	library\Zend\Locale\Data.php	/^                $_temp = self::_getFile('supplementalData', '\/supplementalData\/currencyData\/fractions\/info', 'iso4217');$/;"	v
_temp	library\Zend\Locale\Data.php	/^                $_temp = self::_getFile('supplementalData', '\/supplementalData\/currencyData\/region', 'iso3166');$/;"	v
_temp	library\Zend\Locale\Data.php	/^                $_temp = self::_getFile('supplementalData', '\/supplementalData\/languageData\/language', 'type');$/;"	v
_temp	library\Zend\Locale\Data.php	/^                $_temp = self::_getFile('supplementalData', '\/supplementalData\/territoryContainment\/group', 'type');$/;"	v
_temp	library\Zend\Locale\Data.php	/^                $_temp = self::_getFile('supplementalData', '\/supplementalData\/timezoneData\/mapTimezones[@type=\\'windows\\']\/mapZone', 'other');$/;"	v
_temp	library\Zend\Locale\Data.php	/^                $_temp = self::_getFile('supplementalData', '\/supplementalData\/timezoneData\/mapTimezones[@type=\\'windows\\']\/mapZone', 'type');$/;"	v
_temp	library\Zend\Locale\Data.php	/^                $_temp = self::_getFile('supplementalData', '\/supplementalData\/timezoneData\/zoneFormatting\/zoneItem', 'territory');$/;"	v
_temp	library\Zend\Locale\Data.php	/^                $_temp = self::_getFile('supplementalData', '\/supplementalData\/timezoneData\/zoneFormatting\/zoneItem', 'type');$/;"	v
_temp	library\Zend\Locale\Data.php	/^                $_temp = self::_getFile('telephoneCodeData', '\/supplementalData\/telephoneCodeData\/codesByTerritory', 'territory');$/;"	v
_temp2	library\Zend\Locale\Data.php	/^                    $_temp2 = self::_getFile($locale, '\/ldml\/units\/unit[@type=\\'' . $key . '\\']\/unitPattern', 'count');$/;"	v
_temp2	library\Zend\Locale\Data.php	/^                $_temp2 = self::_getFile('supplementalData', '\/supplementalData\/languageData\/language', 'type');$/;"	v
_temp2	library\Zend\Locale\Data.php	/^                $_temp2 = self::_getFile('supplementalData', '\/supplementalData\/territoryContainment\/group', 'type');$/;"	v
_temp2	library\Zend\Locale\Data.php	/^                $_temp2 = self::_getFile('telephoneCodeData', '\/supplementalData\/telephoneCodeData\/codesByTerritory', 'territory');$/;"	v
_temp3	library\Zend\Locale\Data.php	/^                    $_temp3 = explode(" ", $found);$/;"	v
backend	library\Zend\Locale\Data.php	/^        $backend = self::$_cache->getBackend();$/;"	v
cacheOptions	library\Zend\Locale\Data.php	/^            $cacheOptions = $backend->getCapabilities();$/;"	v
date	library\Zend\Locale\Data.php	/^                $date     = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value[0] . '\\']\/dateFormats\/dateFormatLength[@type=\\'' . $value[1] . '\\']\/dateFormat\/pattern', '', 'pattern');$/;"	v
datefull	library\Zend\Locale\Data.php	/^                $datefull = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value . '\\']\/dateFormats\/dateFormatLength[@type=\\'full\\']\/dateFormat\/pattern', '', 'full');$/;"	v
datelong	library\Zend\Locale\Data.php	/^                $datelong = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value . '\\']\/dateFormats\/dateFormatLength[@type=\\'long\\']\/dateFormat\/pattern', '', 'long');$/;"	v
datemedi	library\Zend\Locale\Data.php	/^                $datemedi = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value . '\\']\/dateFormats\/dateFormatLength[@type=\\'medium\\']\/dateFormat\/pattern', '', 'medi');$/;"	v
dateshor	library\Zend\Locale\Data.php	/^                $dateshor = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value . '\\']\/dateFormats\/dateFormatLength[@type=\\'short\\']\/dateFormat\/pattern', '', 'shor');$/;"	v
datetime	library\Zend\Locale\Data.php	/^                $datetime = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value[0] . '\\']\/dateTimeFormats\/dateTimeFormatLength[@type=\\'' . $value[1] . '\\']\/dateTimeFormat\/pattern', '', 'pattern');$/;"	v
filename	library\Zend\Locale\Data.php	/^            $filename = dirname(__FILE__) . '\/Data\/' . $locale . '.xml';$/;"	v
firstDay	library\Zend\Locale\Data.php	/^                $firstDay  = self::_calendarDetail($locale, self::_getFile('supplementalData', '\/supplementalData\/weekData\/firstDay', 'territories'));$/;"	v
full	library\Zend\Locale\Data.php	/^                $full = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value . '\\']\/dateTimeFormats\/dateTimeFormatLength[@type=\\'full\\']\/dateTimeFormat\/pattern', '', 'full');$/;"	v
id	library\Zend\Locale\Data.php	/^        $id = strtr('Zend_LocaleC_' . $locale . '_' . $path . '_' . $val, array('-' => '_', '%' => '_', '+' => '_'));$/;"	v
id	library\Zend\Locale\Data.php	/^        $id = strtr('Zend_LocaleL_' . $locale . '_' . $path . '_' . $val, array('-' => '_', '%' => '_', '+' => '_'));$/;"	v
locale	library\Zend\Locale\Data.php	/^                        $locale = $source;$/;"	v
locale	library\Zend\Locale\Data.php	/^                $locale = substr($locale, strpos($locale, '_') + 1);$/;"	v
locale	library\Zend\Locale\Data.php	/^            $locale = new Zend_Locale();$/;"	v
locale	library\Zend\Locale\Data.php	/^            $locale = substr($locale, 0, -strlen(strrchr($locale, '_')));$/;"	v
locale	library\Zend\Locale\Data.php	/^        $locale = self::_checkLocale($locale);$/;"	v
long	library\Zend\Locale\Data.php	/^                $long = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value . '\\']\/dateTimeFormats\/dateTimeFormatLength[@type=\\'long\\']\/dateTimeFormat\/pattern', '', 'long');$/;"	v
medi	library\Zend\Locale\Data.php	/^                $medi = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value . '\\']\/dateTimeFormats\/dateTimeFormatLength[@type=\\'medium\\']\/dateTimeFormat\/pattern', '', 'medi');$/;"	v
minDays	library\Zend\Locale\Data.php	/^                $minDays   = self::_calendarDetail($locale, self::_getFile('supplementalData', '\/supplementalData\/weekData\/minDays', 'territories'));$/;"	v
newpath	library\Zend\Locale\Data.php	/^                            $newpath = substr($newpath, 3);$/;"	v
newpath	library\Zend\Locale\Data.php	/^                    $newpath = $result[0]['path'];$/;"	v
path	library\Zend\Locale\Data.php	/^                            $path = $path . '\/' . $tok;$/;"	v
path	library\Zend\Locale\Data.php	/^                        $path = $search . '\/' . $newpath;$/;"	v
result	library\Zend\Locale\Data.php	/^                $result = self::$_ldml[(string) $locale]->xpath($search . '\/alias');$/;"	v
result	library\Zend\Locale\Data.php	/^            $result = self::$_ldml[(string) $locale]->xpath($path);$/;"	v
result	library\Zend\Locale\Data.php	/^        $result = self::_findRoute($locale, $path, $attribute, $value, $temp);$/;"	v
ret	library\Zend\Locale\Data.php	/^                $ret = $key;$/;"	v
ret	library\Zend\Locale\Data.php	/^        $ret = "001";$/;"	v
search	library\Zend\Locale\Data.php	/^                            $search = substr($search, 0, strrpos($search, '\/'));$/;"	v
search	library\Zend\Locale\Data.php	/^                        $search = $search . '\/' . $tok;$/;"	v
search	library\Zend\Locale\Data.php	/^        $search = '';$/;"	v
shor	library\Zend\Locale\Data.php	/^                $shor = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value . '\\']\/dateTimeFormats\/dateTimeFormatLength[@type=\\'short\\']\/dateTimeFormat\/pattern', '', 'shor');$/;"	v
source	library\Zend\Locale\Data.php	/^                    $source = $result[0]['source'];$/;"	v
temp	library\Zend\Locale\Data.php	/^                        $temp = $key;$/;"	v
temp	library\Zend\Locale\Data.php	/^                        $temp = self::_getFile($locale, '\/ldml\/localeDisplayNames\/types\/type[@key=\\'' . $value . '\\']', 'type');$/;"	v
temp	library\Zend\Locale\Data.php	/^                        $temp = self::_getFile($locale, '\/ldml\/localeDisplayNames\/types\/type[@type=\\'' . $value . '\\']', 'type');$/;"	v
temp	library\Zend\Locale\Data.php	/^                    $temp = $value;$/;"	v
temp	library\Zend\Locale\Data.php	/^                    $temp = self::_getFile($locale, $path, $attribute, $value, $temp);$/;"	v
temp	library\Zend\Locale\Data.php	/^                    $temp = self::_getFile($locale, '\/ldml\/localeDisplayNames\/types\/type', 'type');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp  = self::_getFile($locale, '\/ldml\/characters\/exemplarCharacters',                           '', 'characters');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp  = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value . '\\']\/dateFormats\/dateFormatLength[@type=\\'full\\']\/dateFormat\/pattern', '', 'full');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp  = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value . '\\']\/days\/default', 'choice', 'context');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp  = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value . '\\']\/months\/default', 'choice', 'context');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp  = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value . '\\']\/timeFormats\/timeFormatLength[@type=\\'full\\']\/timeFormat\/pattern', '', 'full');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp  = self::_getFile($locale, '\/ldml\/delimiters\/quotationStart',          '', 'quoteStart');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp  = self::_getFile($locale, '\/ldml\/layout\/orientation',                 'lines',      'lines');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp  = self::_getFile($locale, '\/ldml\/numbers\/symbols\/decimal',         '', 'decimal');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp  = self::_getFile($locale, '\/ldml\/posix\/messages\/yesstr',  '', 'yes');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp  = self::_getFile('supplementalData', "\/supplementalData\/weekData\/minDays[@territories='" . $minDays . "']", 'count', 'minDays');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp  = self::_getFile('supplementalData', '\/supplementalData\/measurementData\/measurementSystem[@type=\\'metric\\']', 'territories', 'metric');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = array();$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, $path, $attribute, $value, $temp);$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value . '\\']\/am', '', 'am');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value . '\\']\/dateFormats\/default', 'choice', 'default');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value . '\\']\/days\/dayContext[@type=\\'format\\']\/default', 'choice', 'default');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value . '\\']\/days\/default', 'choice', 'context');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value . '\\']\/fields\/field\/relative', 'type');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value . '\\']\/months\/default', 'choice', 'context');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value . '\\']\/months\/monthContext[@type=\\'format\\']\/default', 'choice', 'default');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value . '\\']\/pm', '', 'pm');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value . '\\']\/timeFormats\/default', 'choice', 'default');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value[0] . '\\']\/dateFormats\/dateFormatLength[@type=\\'' . $value[1] . '\\']\/dateFormat\/pattern', '', 'pattern');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value[0] . '\\']\/dateTimeFormats\/availableFormats\/dateFormatItem[@id=\\'' . $value[1] . '\\']', '');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value[0] . '\\']\/dateTimeFormats\/intervalFormats\/intervalFormatItem[@id=\\'' . $value[1] . '\\']\/greatestDifference[@id=\\'' . $value[2] . '\\']', '');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value[0] . '\\']\/days\/dayContext[@type=\\'' . $value[1] . '\\']\/dayWidth[@type=\\'' . $value[2] . '\\']\/day', 'type');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value[0] . '\\']\/days\/dayContext[@type=\\'' . $value[1] . '\\']\/dayWidth[@type=\\'' . $value[2] . '\\']\/day[@type=\\'' . $value[3] . '\\']', 'type');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value[0] . '\\']\/eras\/era' . $value[1] . '\/era', 'type');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value[0] . '\\']\/eras\/era' . $value[1] . '\/era[@type=\\'' . $value[2] . '\\']', 'type');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value[0] . '\\']\/fields\/field[@type=\\'' . $value[1] . '\\']\/displayName', '', $value[1]);$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value[0] . '\\']\/fields\/field\/relative[@type=\\'' . $value[1] . '\\']', '', $value[1]);$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value[0] . '\\']\/months\/monthContext[@type=\\'' . $value[1] . '\\']\/monthWidth[@type=\\'' . $value[2] . '\\']\/month', 'type');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value[0] . '\\']\/months\/monthContext[@type=\\'' . $value[1] . '\\']\/monthWidth[@type=\\'' . $value[2] . '\\']\/month[@type=\\'' . $value[3] . '\\']', 'type');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value[0] . '\\']\/quarters\/quarterContext[@type=\\'' . $value[1] . '\\']\/quarterWidth[@type=\\'' . $value[2] . '\\']\/quarter', 'type');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value[0] . '\\']\/quarters\/quarterContext[@type=\\'' . $value[1] . '\\']\/quarterWidth[@type=\\'' . $value[2] . '\\']\/quarter[@type=\\'' . $value[3] . '\\']', 'type');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value[0] . '\\']\/timeFormats\/timeFormatLength[@type=\\'' . $value[1] . '\\']\/timeFormat\/pattern', '', 'pattern');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/dates\/calendars\/default', 'choice', 'default');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/dates\/timeZoneNames\/zone[@type=\\'' . $value . '\\']\/exemplarCity', '', $value);$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/localeDisplayNames\/keys\/key', 'type');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/localeDisplayNames\/keys\/key[@type=\\'' . $value . '\\']', 'type');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/localeDisplayNames\/languages\/language', 'type');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/localeDisplayNames\/languages\/language[@type=\\'' . $value . '\\']', 'type');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/localeDisplayNames\/scripts\/script', 'type');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/localeDisplayNames\/scripts\/script[@type=\\'' . $value . '\\']', 'type');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/localeDisplayNames\/territories\/territory', 'type');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/localeDisplayNames\/territories\/territory[@type=\\'' . $value . '\\']', 'type');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/localeDisplayNames\/variants\/variant', 'type');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/localeDisplayNames\/variants\/variant[@type=\\'' . $value . '\\']', 'type');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/numbers\/currencies\/currency[@type=\\'' . $value . '\\']\/displayName', '', $value);$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/numbers\/currencies\/currency[@type=\\'' . $value . '\\']\/symbol', '', $value);$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/numbers\/currencyFormats\/currencyFormatLength\/currencyFormat\/pattern', '', 'default');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/numbers\/decimalFormats\/decimalFormatLength\/decimalFormat\/pattern', '', 'default');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/numbers\/defaultNumberingSystem', '', 'default');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/numbers\/percentFormats\/percentFormatLength\/percentFormat\/pattern', '', 'default');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/numbers\/scientificFormats\/scientificFormatLength\/scientificFormat\/pattern', '', 'default');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/posix\/messages\/' . $value . 'str',  '', $value);$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile($locale, '\/ldml\/units\/unit[@type=\\'' . $value[0] . '\\']\/unitPattern[@count=\\'' . $value[1] . '\\']', '');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile('characters', '\/supplementalData\/characters\/character-fallback\/character[@value=\\'' . $value . '\\']\/substitute', '');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile('characters', '\/supplementalData\/characters\/character-fallback\/character[@value=\\'' . $value . '\\']\/substitute', '', $value);$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile('likelySubtags', '\/supplementalData\/likelySubtags\/likelySubtag[@from=\\'' . $value . '\\']', 'to', $value);$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile('numberingSystems', '\/supplementalData\/numberingSystems\/numberingSystem[@id=\\'' . strtolower($value) . '\\']', 'digits', $value);$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile('postalCodeData', '\/supplementalData\/postalCodeData\/postCodeRegex[@territoryId=\\'' . $value . '\\']', 'territoryId');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile('root', $path, $attribute, $value, $temp);$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile('supplementalData', '\/supplementalData\/codeMappings\/territoryCodes[@alpha3=\\''.$value.'\\']', 'type', $value);$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile('supplementalData', '\/supplementalData\/codeMappings\/territoryCodes[@numeric=\\''.$value.'\\']', 'type', $value);$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile('supplementalData', '\/supplementalData\/codeMappings\/territoryCodes[@type=\\''.$value.'\\']', 'alpha3', $value);$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile('supplementalData', '\/supplementalData\/codeMappings\/territoryCodes[@type=\\''.$value.'\\']', 'numeric', $value);$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile('supplementalData', '\/supplementalData\/currencyData\/fractions\/info[@iso4217=\\'' . $value . '\\']', 'digits', 'digits');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile('supplementalData', '\/supplementalData\/currencyData\/fractions\/info[@iso4217=\\'' . $value . '\\']', 'rounding', 'rounding');$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile('supplementalData', '\/supplementalData\/currencyData\/region[@iso3166=\\'' . $value . '\\']\/currency', 'iso4217', $value);$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile('supplementalData', '\/supplementalData\/languageData\/language[@type=\\'' . $value . '\\']', 'scripts', $value);$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile('supplementalData', '\/supplementalData\/languageData\/language[@type=\\'' . $value . '\\']', 'territories', $value);$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile('supplementalData', '\/supplementalData\/territoryContainment\/group[@type=\\'' . $value . '\\']', 'contains', $value);$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile('supplementalData', '\/supplementalData\/timezoneData\/mapTimezones[@type=\\'windows\\']\/mapZone[@other=\\''.$value.'\\']', 'type', $value);$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile('supplementalData', '\/supplementalData\/timezoneData\/mapTimezones[@type=\\'windows\\']\/mapZone[@type=\\''.$value.'\\']', 'other', $value);$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile('supplementalData', '\/supplementalData\/timezoneData\/zoneFormatting\/zoneItem[@territory=\\'' . $value . '\\']', 'type', $value);$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile('supplementalData', '\/supplementalData\/timezoneData\/zoneFormatting\/zoneItem[@type=\\'' . $value . '\\']', 'territory', $value);$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = self::_getFile('telephoneCodeData', '\/supplementalData\/telephoneCodeData\/codesByTerritory[@territory=\\'' . $value . '\\']\/telephoneCountryCode', 'code', $value);$/;"	v
temp	library\Zend\Locale\Data.php	/^                $temp = str_replace(array('{0}', '{1}'), array(current($time), current($date)), current($datetime));$/;"	v
temp	library\Zend\Locale\Data.php	/^            $temp = current($temp);$/;"	v
temp	library\Zend\Locale\Data.php	/^            $temp = self::_readFile($locale, $path, $attribute, $value, $temp);$/;"	v
temp	library\Zend\Locale\Data.php	/^        $temp = array();$/;"	v
temp2	library\Zend\Locale\Data.php	/^                    $temp2 = self::_getFile('characters', '\/supplementalData\/characters\/character-fallback\/character[@value=\\'' . $key . '\\']\/substitute', '', $key);$/;"	v
temp2	library\Zend\Locale\Data.php	/^                $temp2 = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value . '\\']\/fields\/field', 'type');$/;"	v
time	library\Zend\Locale\Data.php	/^                $time     = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value[0] . '\\']\/timeFormats\/timeFormatLength[@type=\\'' . $value[1] . '\\']\/timeFormat\/pattern', '', 'pattern');$/;"	v
timefull	library\Zend\Locale\Data.php	/^                $timefull = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value . '\\']\/timeFormats\/timeFormatLength[@type=\\'full\\']\/timeFormat\/pattern', '', 'full');$/;"	v
timelong	library\Zend\Locale\Data.php	/^                $timelong = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value . '\\']\/timeFormats\/timeFormatLength[@type=\\'long\\']\/timeFormat\/pattern', '', 'long');$/;"	v
timemedi	library\Zend\Locale\Data.php	/^                $timemedi = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value . '\\']\/timeFormats\/timeFormatLength[@type=\\'medium\\']\/timeFormat\/pattern', '', 'medi');$/;"	v
timeshor	library\Zend\Locale\Data.php	/^                $timeshor = self::_getFile($locale, '\/ldml\/dates\/calendars\/calendar[@type=\\'' . $value . '\\']\/timeFormats\/timeFormatLength[@type=\\'short\\']\/timeFormat\/pattern', '', 'shor');$/;"	v
tok	library\Zend\Locale\Data.php	/^                        $tok = strtok('\/');$/;"	v
tok	library\Zend\Locale\Data.php	/^                $tok = strtok('\/');$/;"	v
tok	library\Zend\Locale\Data.php	/^        $tok = strtok($path, '\/');$/;"	v
val	library\Zend\Locale\Data.php	/^                    $val = self::_getFile($locale, '\/ldml\/numbers\/currencies\/currency[@type=\\'' . $key . '\\']\/displayName', '', $key);$/;"	v
val	library\Zend\Locale\Data.php	/^                    $val = self::_getFile('supplementalData', '\/supplementalData\/currencyData\/region[@iso3166=\\'' . $key . '\\']\/currency', 'iso4217', $key);$/;"	v
val	library\Zend\Locale\Data.php	/^                    $val = self::_getFile('telephoneCodeData', '\/supplementalData\/telephoneCodeData\/codesByTerritory[@territory=\\'' . $key . '\\']\/telephoneCountryCode', 'code', $key);$/;"	v
val	library\Zend\Locale\Data.php	/^            $val = implode('_' , $value);$/;"	v
val	library\Zend\Locale\Data.php	/^        $val = $value;$/;"	v
val	library\Zend\Locale\Data.php	/^        $val = urlencode($val);$/;"	v
value	library\Zend\Locale\Data.php	/^                    $value = "DEFAULT";$/;"	v
value	library\Zend\Locale\Data.php	/^                    $value = "gregorian";$/;"	v
value	library\Zend\Locale\Data.php	/^                    $value = array("gregorian", "Abbr");$/;"	v
value	library\Zend\Locale\Data.php	/^                    $value = array("gregorian", "Abbr", $temp);$/;"	v
value	library\Zend\Locale\Data.php	/^                    $value = array("gregorian", "format", "wide");$/;"	v
value	library\Zend\Locale\Data.php	/^                    $value = array("gregorian", "format", "wide", $temp);$/;"	v
value	library\Zend\Locale\Data.php	/^                    $value = array("gregorian", "medium");$/;"	v
value	library\Zend\Locale\Data.php	/^                    $value = array("gregorian", "yMd", "y");$/;"	v
value	library\Zend\Locale\Data.php	/^                    $value = array("gregorian", "yyMMdd");$/;"	v
value	library\Zend\Locale\Data.php	/^                    $value = array("gregorian", $temp);$/;"	v
value	library\Zend\Locale\Data.php	/^                    $value = array("gregorian", $temp, $temp[0]);$/;"	v
weekEnd	library\Zend\Locale\Data.php	/^                $weekEnd   = self::_calendarDetail($locale, self::_getFile('supplementalData', '\/supplementalData\/weekData\/weekendEnd', 'territories'));$/;"	v
weekStart	library\Zend\Locale\Data.php	/^                $weekStart = self::_calendarDetail($locale, self::_getFile('supplementalData', '\/supplementalData\/weekData\/weekendStart', 'territories'));$/;"	v
Zend_Locale_Data_Translation	library\Zend\Locale\Data\Translation.php	/^class Zend_Locale_Data_Translation$/;"	c
Zend_Locale_Exception	library\Zend\Locale\Exception.php	/^class Zend_Locale_Exception extends Zend_Exception$/;"	c
Zend_Locale_Format	library\Zend\Locale\Format.php	/^class Zend_Locale_Format$/;"	c
am	library\Zend\Locale\Format.php	/^                $am = false;$/;"	v
am	library\Zend\Locale\Format.php	/^                $am = true;$/;"	v
am	library\Zend\Locale\Format.php	/^        $am    = null;$/;"	v
cnt	library\Zend\Locale\Format.php	/^        $cnt = 0;$/;"	v
convert	library\Zend\Locale\Format.php	/^        $convert = array('d' => 'dd'  , 'D' => 'EE'  , 'j' => 'd'   , 'l' => 'EEEE', 'N' => 'eee' , 'S' => 'SS'  ,$/;"	v
count	library\Zend\Locale\Format.php	/^                $count = count($parts);$/;"	v
date	library\Zend\Locale\Format.php	/^            $date = self::getDate($date, $options);$/;"	v
day	library\Zend\Locale\Format.php	/^                $day = iconv_strpos($format, 'D');$/;"	v
day	library\Zend\Locale\Format.php	/^            $day = iconv_strpos($format, 'E');$/;"	v
day	library\Zend\Locale\Format.php	/^        $day   = iconv_strpos($format, 'd');$/;"	v
daylist	library\Zend\Locale\Format.php	/^                    $daylist = Zend_Locale_Data::getList($options['locale'], 'day');$/;"	v
decimal	library\Zend\Locale\Format.php	/^        $decimal  = Zend_Locale_Data::getContent($options['locale'], $type);$/;"	v
decimal	library\Zend\Locale\Format.php	/^        $decimal  = preg_replace('\/[^#0,;\\.\\-Ee]\/u', '',$decimal);$/;"	v
end	library\Zend\Locale\Format.php	/^                $end     = substr($pattern, strpos($pattern, '.') + 1);$/;"	v
end	library\Zend\Locale\Format.php	/^            $end    = null;$/;"	v
format	library\Zend\Locale\Format.php	/^                        $format = iconv_substr($format, 0, iconv_strpos($format, '.') + 1) . '###'$/;"	v
format	library\Zend\Locale\Format.php	/^                    $format = $tmpformat;$/;"	v
format	library\Zend\Locale\Format.php	/^                    $format = iconv_substr($format, 0, iconv_strpos($format, ';'));$/;"	v
format	library\Zend\Locale\Format.php	/^                $format = $symbols['minus'] . $format;$/;"	v
format	library\Zend\Locale\Format.php	/^                $format = iconv_substr($format, 0, $point)$/;"	v
format	library\Zend\Locale\Format.php	/^                $format = iconv_substr($format, 0, $point);$/;"	v
format	library\Zend\Locale\Format.php	/^                $format = iconv_substr($format, 0, iconv_strpos($format, ';'));$/;"	v
format	library\Zend\Locale\Format.php	/^                $format = str_replace('-', $symbols['minus'], $format);$/;"	v
format	library\Zend\Locale\Format.php	/^            $format  = Zend_Locale_Data::getContent($options['locale'], 'decimalnumber');$/;"	v
format	library\Zend\Locale\Format.php	/^            $format  = self::_seperateFormat($format, $value, $options['precision']);$/;"	v
format	library\Zend\Locale\Format.php	/^            $format = $number . iconv_substr($format, $point);$/;"	v
format	library\Zend\Locale\Format.php	/^            $format = iconv_substr($format, 0, $point) . $symbols['decimal']$/;"	v
format	library\Zend\Locale\Format.php	/^            $format = iconv_substr($format, 0, iconv_strlen($format) - iconv_strlen($rest));$/;"	v
format	library\Zend\Locale\Format.php	/^            $format = iconv_substr($format, 0, iconv_strpos($format, '#')) . $number . iconv_substr($format, $point);$/;"	v
format	library\Zend\Locale\Format.php	/^        $format = $options['date_format'];$/;"	v
format	library\Zend\Locale\Format.php	/^        $format = $options['number_format'];$/;"	v
format	library\Zend\Locale\Format.php	/^        $format = Zend_Locale_Data::getContent($locale, 'date');$/;"	v
format	library\Zend\Locale\Format.php	/^        $format = Zend_Locale_Data::getContent($locale, 'datetime');$/;"	v
format	library\Zend\Locale\Format.php	/^        $format = Zend_Locale_Data::getContent($locale, 'time');$/;"	v
from	library\Zend\Locale\Format.php	/^        $from   = strtolower($from);$/;"	v
group	library\Zend\Locale\Format.php	/^        $group  = iconv_strrpos($format, ',');$/;"	v
group2	library\Zend\Locale\Format.php	/^        $group2 = iconv_strpos ($format, ',');$/;"	v
hour	library\Zend\Locale\Format.php	/^            $hour = iconv_strpos($format, 'h');$/;"	v
hour	library\Zend\Locale\Format.php	/^        $hour  = iconv_strpos($format, 'H');$/;"	v
input	library\Zend\Locale\Format.php	/^                $input = str_replace($symbols['decimal'], ".", $input);$/;"	v
input	library\Zend\Locale\Format.php	/^                $input = substr($input, 0, -1);$/;"	v
input	library\Zend\Locale\Format.php	/^                $input = substr($input, 0, strlen($input) - strlen($pre) + $options['precision']);$/;"	v
input	library\Zend\Locale\Format.php	/^            $input = '-' . $input;$/;"	v
input	library\Zend\Locale\Format.php	/^            $input = 0 . $input;$/;"	v
input	library\Zend\Locale\Format.php	/^            $input = strtr($input, array($symbols['minus'] => '', '-' => ''));$/;"	v
input	library\Zend\Locale\Format.php	/^        $input = str_replace($symbols['group'],'', $input);$/;"	v
length	library\Zend\Locale\Format.php	/^                        $length = 4;$/;"	v
length	library\Zend\Locale\Format.php	/^                    $length = 2;$/;"	v
length	library\Zend\Locale\Format.php	/^            $length = iconv_strlen($rest);$/;"	v
locale	library\Zend\Locale\Format.php	/^                            $locale = $options['locale'];$/;"	v
locale	library\Zend\Locale\Format.php	/^                        $locale = self::$_options['locale'];$/;"	v
min	library\Zend\Locale\Format.php	/^        $min   = iconv_strpos($format, 'm');$/;"	v
month	library\Zend\Locale\Format.php	/^        $month = iconv_strpos($format, 'M');$/;"	v
name	library\Zend\Locale\Format.php	/^            $name  = strtolower($name);$/;"	v
number	library\Zend\Locale\Format.php	/^                        $number = iconv_substr($number, 0, $x - $seperation2) . $symbols['group']$/;"	v
number	library\Zend\Locale\Format.php	/^                        $number = str_replace($name, "EEEE", $number);$/;"	v
number	library\Zend\Locale\Format.php	/^                    $number   = str_ireplace($name, $key, $number);$/;"	v
number	library\Zend\Locale\Format.php	/^                    $number = iconv_substr($number, 0, $x - $seperation) . $symbols['group']$/;"	v
number	library\Zend\Locale\Format.php	/^                $number = iconv_substr($number, 0, iconv_strlen($number) - $seperation) . $symbols['group']$/;"	v
number	library\Zend\Locale\Format.php	/^            $number = $value;$/;"	v
number	library\Zend\Locale\Format.php	/^            $number = iconv_substr($number, 1);$/;"	v
number	library\Zend\Locale\Format.php	/^            $number = substr((string) $value, 0, strpos($value, '.'));$/;"	v
number	library\Zend\Locale\Format.php	/^        $number = $date; \/\/ working copy$/;"	v
oenc	library\Zend\Locale\Format.php	/^        $oenc = iconv_get_encoding('internal_encoding');$/;"	v
options	library\Zend\Locale\Format.php	/^        $options           = self::_checkOptions($options) + self::$_options;$/;"	v
options	library\Zend\Locale\Format.php	/^        $options = self::_checkOptions($options) + self::$_options;$/;"	v
parts	library\Zend\Locale\Format.php	/^                $parts = explode(',', $pattern);$/;"	v
pattern	library\Zend\Locale\Format.php	/^                $pattern = substr($pattern, 0, -strlen($end) - 1);$/;"	v
patterns	library\Zend\Locale\Format.php	/^        $patterns = explode(';', $decimal);$/;"	v
point	library\Zend\Locale\Format.php	/^        $point  = iconv_strpos ($format, '0');$/;"	v
pos	library\Zend\Locale\Format.php	/^        $pos = iconv_strpos($value, '.');$/;"	v
position	library\Zend\Locale\Format.php	/^                    $position = self::_replaceMonth($number, Zend_Locale_Data::getList($options['locale'],$/;"	v
position	library\Zend\Locale\Format.php	/^        $position = false;$/;"	v
pre	library\Zend\Locale\Format.php	/^            $pre = substr($input, strpos($input, '.') + 1);$/;"	v
prec	library\Zend\Locale\Format.php	/^            $prec = "0.0";$/;"	v
prec	library\Zend\Locale\Format.php	/^            $prec = iconv_substr($prec, 1);$/;"	v
prec	library\Zend\Locale\Format.php	/^            $prec = str_pad((string) $prec, $options['precision'] + 2, "0", STR_PAD_RIGHT);$/;"	v
prec	library\Zend\Locale\Format.php	/^        $prec = Zend_Locale_Math::floatalize($prec);$/;"	v
prec	library\Zend\Locale\Format.php	/^        $prec = Zend_Locale_Math::normalize($prec);$/;"	v
prec	library\Zend\Locale\Format.php	/^        $prec = call_user_func(Zend_Locale_Math::$sub, $value, $number, $options['precision']);$/;"	v
precstr	library\Zend\Locale\Format.php	/^                    $precstr = $precstr . str_pad("0", ($options['precision'] - iconv_strlen($precstr)), "0");$/;"	v
precstr	library\Zend\Locale\Format.php	/^                $precstr = iconv_substr($value, $pos + 1);$/;"	v
precstr	library\Zend\Locale\Format.php	/^                $precstr = iconv_substr($value, $pos + 1, $options['precision']);$/;"	v
precstr	library\Zend\Locale\Format.php	/^                $precstr = str_pad("0", ($options['precision']), "0");$/;"	v
regexs	library\Zend\Locale\Format.php	/^        $regexs = Zend_Locale_Format::_getRegexForType('decimalnumber', $options);$/;"	v
regexs	library\Zend\Locale\Format.php	/^        $regexs = array_merge($regexs, Zend_Locale_Format::_getRegexForType('scientificnumber', $options));$/;"	v
rest	library\Zend\Locale\Format.php	/^                    $rest = iconv_substr($rest, 1);$/;"	v
rest	library\Zend\Locale\Format.php	/^            $rest   = 0;$/;"	v
rest	library\Zend\Locale\Format.php	/^            $rest   = iconv_substr($format, iconv_strpos($format, '.') + 1);$/;"	v
rest	library\Zend\Locale\Format.php	/^        $rest = "";$/;"	v
sec	library\Zend\Locale\Format.php	/^        $sec   = iconv_strpos($format, 's');$/;"	v
seperation	library\Zend\Locale\Format.php	/^                $seperation = ($point - $group);$/;"	v
seperation	library\Zend\Locale\Format.php	/^            $seperation = ($point - $group);$/;"	v
seperation2	library\Zend\Locale\Format.php	/^                    $seperation2 = ($group - $group2 - 1);$/;"	v
source	library\Zend\Locale\Format.php	/^        $source = Zend_Locale_Data::getContent('en', 'numberingsystem', $from);$/;"	v
split	library\Zend\Locale\Format.php	/^            $split = 0;$/;"	v
split	library\Zend\Locale\Format.php	/^        $split = false;$/;"	v
symbols	library\Zend\Locale\Format.php	/^        $symbols = Zend_Locale_Data::getList($options['locale'], 'symbols');$/;"	v
symbols	library\Zend\Locale\Format.php	/^        $symbols = Zend_Locale_Data::getList($options['locale'],'symbols');$/;"	v
target	library\Zend\Locale\Format.php	/^            $target = '0123456789';$/;"	v
target	library\Zend\Locale\Format.php	/^            $target = Zend_Locale_Data::getContent('en', 'numberingsystem', $to);$/;"	v
temp	library\Zend\Locale\Format.php	/^                    $temp = $result['day'];$/;"	v
temp	library\Zend\Locale\Format.php	/^                    $temp = $result['year'];$/;"	v
test	library\Zend\Locale\Format.php	/^        $test = array('h', 'H', 'm', 's', 'y', 'Y', 'M', 'd', 'D', 'E', 'S', 'l', 'B', 'I',$/;"	v
tmpformat	library\Zend\Locale\Format.php	/^                $tmpformat = iconv_substr($format, iconv_strpos($format, ';') + 1);$/;"	v
to	library\Zend\Locale\Format.php	/^            $to     = strtolower($to);$/;"	v
value	library\Zend\Locale\Format.php	/^                        $value = -1;$/;"	v
value	library\Zend\Locale\Format.php	/^                    $value = Zend_Locale_Math::round($value, $options['precision']);$/;"	v
value	library\Zend\Locale\Format.php	/^                    $value = strtolower($value);$/;"	v
value	library\Zend\Locale\Format.php	/^                $value   = Zend_Locale_Math::normalize(Zend_Locale_Math::round($value, $options['precision']));$/;"	v
value	library\Zend\Locale\Format.php	/^                $value = Zend_Locale_Math::round($value, 0);$/;"	v
value	library\Zend\Locale\Format.php	/^            $value = Zend_Locale_Math::normalize($value);$/;"	v
value	library\Zend\Locale\Format.php	/^        $value             = Zend_Locale_Math::floatalize($value);$/;"	v
value	library\Zend\Locale\Format.php	/^        $value             = Zend_Locale_Math::normalize($value);$/;"	v
values	library\Zend\Locale\Format.php	/^        $values = str_split($format);$/;"	v
year	library\Zend\Locale\Format.php	/^            $year = iconv_strpos($format, 'Y');$/;"	v
year	library\Zend\Locale\Format.php	/^        $year  = iconv_strpos($format, 'y');$/;"	v
Zend_Locale_Math	library\Zend\Locale\Math.php	/^class Zend_Locale_Math$/;"	c
convert	library\Zend\Locale\Math.php	/^        $convert = localeconv();$/;"	v
decPos	library\Zend\Locale\Math.php	/^            $decPos = $length;$/;"	v
digitsBeforeDot	library\Zend\Locale\Math.php	/^        $digitsBeforeDot = $length - ($decPos + 1);$/;"	v
length	library\Zend\Locale\Math.php	/^        $length = strlen($op1);$/;"	v
mantis	library\Zend\Locale\Math.php	/^            $mantis = substr($value, strpos($value, 'E') + 1);$/;"	v
number	library\Zend\Locale\Math.php	/^        $number = substr($value, 0, strpos($value, 'E'));$/;"	v
op1	library\Zend\Locale\Math.php	/^            $op1 = round($op1, $precision);$/;"	v
op1	library\Zend\Locale\Math.php	/^            $op1 = self::floatalize($op1);$/;"	v
op1	library\Zend\Locale\Math.php	/^            $op1 = substr($op1, 0, $decPos + $precision) . str_pad('', abs($precision), '0');$/;"	v
op1	library\Zend\Locale\Math.php	/^        $op1    = trim(self::normalize($op1));$/;"	v
op1	library\Zend\Locale\Math.php	/^        $op1 = self::exponent($op1);$/;"	v
op1	library\Zend\Locale\Math.php	/^        $op1 = self::exponent($op1, $scale);$/;"	v
op2	library\Zend\Locale\Math.php	/^        $op2 = self::exponent($op2);$/;"	v
op2	library\Zend\Locale\Math.php	/^        $op2 = self::exponent($op2, $scale);$/;"	v
post	library\Zend\Locale\Math.php	/^            $post   = strlen(substr($number, strpos($number, '.') + 1));$/;"	v
roundPos	library\Zend\Locale\Math.php	/^            $roundPos   = $precision -1;$/;"	v
roundPos	library\Zend\Locale\Math.php	/^            $roundPos   = $precision;$/;"	v
roundPos	library\Zend\Locale\Math.php	/^            $roundPos   = -1;$/;"	v
roundUp	library\Zend\Locale\Math.php	/^            $roundUp = str_pad('', $length, '0');$/;"	v
split	library\Zend\Locale\Math.php	/^            $split = explode('E', $value);$/;"	v
split	library\Zend\Locale\Math.php	/^        $split = explode('e', $value);$/;"	v
triggerDigit	library\Zend\Locale\Math.php	/^        $triggerDigit = $op1[$triggerPos + $decPos];$/;"	v
triggerPos	library\Zend\Locale\Math.php	/^            $triggerPos = $precision + 1;$/;"	v
triggerPos	library\Zend\Locale\Math.php	/^            $triggerPos = $precision;$/;"	v
triggerPos	library\Zend\Locale\Math.php	/^            $triggerPos = 1;$/;"	v
value	library\Zend\Locale\Math.php	/^            $value = "-" . $value;$/;"	v
value	library\Zend\Locale\Math.php	/^            $value = bcmul($split[0], bcpow(10, $split[1], $scale), $scale);$/;"	v
value	library\Zend\Locale\Math.php	/^            $value = number_format($value, $post, '.', '');$/;"	v
value	library\Zend\Locale\Math.php	/^            $value = number_format($value, 0, '.', '');$/;"	v
value	library\Zend\Locale\Math.php	/^            $value = str_replace("-", $convert['negative_sign'], $value);$/;"	v
value	library\Zend\Locale\Math.php	/^            $value = str_replace($convert['negative_sign'], "", $value);$/;"	v
value	library\Zend\Locale\Math.php	/^        $value = str_replace(".", $convert['decimal_point'], (string) $value);$/;"	v
value	library\Zend\Locale\Math.php	/^        $value = str_replace($convert['decimal_point'], ".",$value);$/;"	v
value	library\Zend\Locale\Math.php	/^        $value = str_replace($convert['positive_sign'], "", $value);$/;"	v
value	library\Zend\Locale\Math.php	/^        $value = str_replace($convert['thousands_sep'], "",(string) $value);$/;"	v
value	library\Zend\Locale\Math.php	/^        $value = strtoupper($value);$/;"	v
Zend_Locale_Math_Exception	library\Zend\Locale\Math\Exception.php	/^class Zend_Locale_Math_Exception extends Zend_Locale_Exception$/;"	c
Zend_Locale_Math_PhpMath	library\Zend\Locale\Math\PhpMath.php	/^class Zend_Locale_Math_PhpMath extends Zend_Locale_Math$/;"	c
op1	library\Zend\Locale\Math\PhpMath.php	/^            $op1 = ($op1 > 0) ? floor($op1) : ceil($op1);$/;"	v
op1	library\Zend\Locale\Math\PhpMath.php	/^            $op1 = 0;$/;"	v
op1	library\Zend\Locale\Math\PhpMath.php	/^            $op1 = self::round($op1, $scale);$/;"	v
op1	library\Zend\Locale\Math\PhpMath.php	/^        $op1  = self::normalize($op1);$/;"	v
op1	library\Zend\Locale\Math\PhpMath.php	/^        $op1 = self::normalize($op1);$/;"	v
op2	library\Zend\Locale\Math\PhpMath.php	/^            $op2 = ($op2 > 0) ? floor($op2) : ceil($op2);$/;"	v
op2	library\Zend\Locale\Math\PhpMath.php	/^            $op2 = self::round($op2, $scale);$/;"	v
op2	library\Zend\Locale\Math\PhpMath.php	/^        $op2  = self::normalize($op2);$/;"	v
op2	library\Zend\Locale\Math\PhpMath.php	/^        $op2 = ($op2 > 0) ? floor($op2) : ceil($op2);$/;"	v
op2	library\Zend\Locale\Math\PhpMath.php	/^        $op2 = self::normalize($op2);$/;"	v
precision	library\Zend\Locale\Math\PhpMath.php	/^            $precision = Zend_Locale_Math_PhpMath::$defaultPrecision;$/;"	v
precision	library\Zend\Locale\Math\PhpMath.php	/^            $precision = pow(10, -$scale);$/;"	v
result	library\Zend\Locale\Math\PhpMath.php	/^        $result = $op1 % $op2;$/;"	v
result	library\Zend\Locale\Math\PhpMath.php	/^        $result = $op1 * $op2;$/;"	v
result	library\Zend\Locale\Math\PhpMath.php	/^        $result = $op1 + $op2;$/;"	v
result	library\Zend\Locale\Math\PhpMath.php	/^        $result = $op1 - $op2;$/;"	v
result	library\Zend\Locale\Math\PhpMath.php	/^        $result = $op1 \/ $op2;$/;"	v
result	library\Zend\Locale\Math\PhpMath.php	/^        $result = pow($op1, $op2);$/;"	v
result	library\Zend\Locale\Math\PhpMath.php	/^        $result = sqrt($op1);$/;"	v
scale	library\Zend\Locale\Math\PhpMath.php	/^            $scale     = Zend_Locale_Math_PhpMath::$defaultScale;$/;"	v
scale	library\Zend\Locale\Math\PhpMath.php	/^            $scale = Zend_Locale_Math_PhpMath::$defaultScale;$/;"	v
Zend_Log	library\Zend\Log.php	/^class Zend_Log$/;"	c
className	library\Zend\Log.php	/^        $className = $config[ $type . 'Name' ];$/;"	v
className	library\Zend\Log.php	/^        $className = $this->getClassName($config, $type, $namespace);$/;"	v
config	library\Zend\Log.php	/^            $config = $config->toArray();$/;"	v
errorLevel	library\Zend\Log.php	/^        $errorLevel = error_reporting();$/;"	v
event	library\Zend\Log.php	/^        $event = $this->_packEvent($message, $priority);$/;"	v
extras	library\Zend\Log.php	/^                    $extras  = array_shift($params);$/;"	v
extras	library\Zend\Log.php	/^                    $extras = null;$/;"	v
filter	library\Zend\Log.php	/^            $filter = $this->_constructFilterFromConfig($config);$/;"	v
filter	library\Zend\Log.php	/^            $filter = $this->_constructFilterFromConfig($filter);$/;"	v
filter	library\Zend\Log.php	/^            $filter = new Zend_Log_Filter_Priority($filter);$/;"	v
filter	library\Zend\Log.php	/^        $filter = $this->_constructFromConfig('filter', $config, $this->_defaultFilterNamespace);$/;"	v
filterName	library\Zend\Log.php	/^             $filterName = is_object($filter)$/;"	v
formatter	library\Zend\Log.php	/^            $formatter = $this->_constructFormatterFromConfig($config);$/;"	v
formatter	library\Zend\Log.php	/^        $formatter = $this->_constructFromConfig('formatter', $config, $this->_defaultFormatterNamespace);$/;"	v
formatterName	library\Zend\Log.php	/^             $formatterName = is_object($formatter)$/;"	v
fullClassName	library\Zend\Log.php	/^        $fullClassName = $namespace . '_' . $className;$/;"	v
info	library\Zend\Log.php	/^                $info = $extras;$/;"	v
info	library\Zend\Log.php	/^            $info = array();$/;"	v
log	library\Zend\Log.php	/^        $log = new self;$/;"	v
message	library\Zend\Log.php	/^                    $message = array_shift($params);$/;"	v
name	library\Zend\Log.php	/^        $name = strtoupper($name);$/;"	v
namespace	library\Zend\Log.php	/^            $namespace = $config[ $type . 'Namespace' ];$/;"	v
namespace	library\Zend\Log.php	/^        $namespace = $defaultNamespace;$/;"	v
params	library\Zend\Log.php	/^        $params    = isset($config[ $type .'Params' ]) ? $config[ $type .'Params' ] : array();$/;"	v
priority	library\Zend\Log.php	/^                $priority = $this->_errorHandlerMap[$errno];$/;"	v
priority	library\Zend\Log.php	/^                $priority = Zend_Log::INFO;$/;"	v
priority	library\Zend\Log.php	/^        $priority = strtoupper($method);$/;"	v
r	library\Zend\Log.php	/^        $r = new ReflectionClass($this);$/;"	v
reflection	library\Zend\Log.php	/^        $reflection = new ReflectionClass($className);$/;"	v
writer	library\Zend\Log.php	/^            $writer = $this->_constructWriterFromConfig($writer);$/;"	v
writer	library\Zend\Log.php	/^        $writer = $this->_constructFromConfig('writer', $config, $this->_defaultWriterNamespace);$/;"	v
writerName	library\Zend\Log.php	/^            $writerName = is_object($writer)$/;"	v
Zend_Log_Exception	library\Zend\Log\Exception.php	/^class Zend_Log_Exception extends Zend_Exception$/;"	c
config	library\Zend\Log\Filter\Abstract.php	/^            $config = $config->toArray();$/;"	v
Zend_Log_Filter_Message	library\Zend\Log\Filter\Message.php	/^class Zend_Log_Filter_Message extends Zend_Log_Filter_Abstract$/;"	c
config	library\Zend\Log\Filter\Message.php	/^        $config = array_merge(array($/;"	v
config	library\Zend\Log\Filter\Message.php	/^        $config = self::_parseConfig($config);$/;"	v
Zend_Log_Filter_Priority	library\Zend\Log\Filter\Priority.php	/^class Zend_Log_Filter_Priority extends Zend_Log_Filter_Abstract$/;"	c
config	library\Zend\Log\Filter\Priority.php	/^        $config = array_merge(array($/;"	v
config	library\Zend\Log\Filter\Priority.php	/^        $config = self::_parseConfig($config);$/;"	v
Zend_Log_Filter_Suppress	library\Zend\Log\Filter\Suppress.php	/^class Zend_Log_Filter_Suppress extends Zend_Log_Filter_Abstract$/;"	c
Zend_Log_Formatter_Firebug	library\Zend\Log\Formatter\Firebug.php	/^class Zend_Log_Formatter_Firebug extends Zend_Log_Formatter_Abstract$/;"	c
Zend_Log_Formatter_Simple	library\Zend\Log\Formatter\Simple.php	/^class Zend_Log_Formatter_Simple extends Zend_Log_Formatter_Abstract$/;"	c
format	library\Zend\Log\Formatter\Simple.php	/^                $format = $options['format'];$/;"	v
format	library\Zend\Log\Formatter\Simple.php	/^            $format = self::DEFAULT_FORMAT . PHP_EOL;$/;"	v
format	library\Zend\Log\Formatter\Simple.php	/^        $format = null;$/;"	v
options	library\Zend\Log\Formatter\Simple.php	/^                $options = $options->toArray();$/;"	v
output	library\Zend\Log\Formatter\Simple.php	/^            $output = str_replace("%$name%", $value, $output);$/;"	v
output	library\Zend\Log\Formatter\Simple.php	/^        $output = $this->_format;$/;"	v
value	library\Zend\Log\Formatter\Simple.php	/^                $value = gettype($value);$/;"	v
Zend_Log_Formatter_Xml	library\Zend\Log\Formatter\Xml.php	/^class Zend_Log_Formatter_Xml extends Zend_Log_Formatter_Abstract$/;"	c
args	library\Zend\Log\Formatter\Xml.php	/^            $args = func_get_args();$/;"	v
dataToInsert	library\Zend\Log\Formatter\Xml.php	/^            $dataToInsert = $event;$/;"	v
dataToInsert	library\Zend\Log\Formatter\Xml.php	/^            $dataToInsert = array();$/;"	v
dom	library\Zend\Log\Formatter\Xml.php	/^        $dom = new DOMDocument('1.0', $enc);$/;"	v
elt	library\Zend\Log\Formatter\Xml.php	/^        $elt = $dom->appendChild(new DOMElement($this->_rootElement));$/;"	v
enc	library\Zend\Log\Formatter\Xml.php	/^        $enc = $this->getEncoding();$/;"	v
options	library\Zend\Log\Formatter\Xml.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Log\Formatter\Xml.php	/^            $options = array($/;"	v
value	library\Zend\Log\Formatter\Xml.php	/^                    $value = htmlspecialchars($value, ENT_COMPAT, $enc);$/;"	v
xml	library\Zend\Log\Formatter\Xml.php	/^        $xml = $dom->saveXML();$/;"	v
xml	library\Zend\Log\Formatter\Xml.php	/^        $xml = preg_replace('\/<\\?xml version="1.0"( encoding="[^\\"]*")?\\?>\\n\/u', '', $xml);$/;"	v
config	library\Zend\Log\Writer\Abstract.php	/^            $config = $config->toArray();$/;"	v
filter	library\Zend\Log\Writer\Abstract.php	/^            $filter = new Zend_Log_Filter_Priority($filter);$/;"	v
Zend_Log_Writer_Db	library\Zend\Log\Writer\Db.php	/^class Zend_Log_Writer_Db extends Zend_Log_Writer_Abstract$/;"	c
config	library\Zend\Log\Writer\Db.php	/^        $config = array_merge(array($/;"	v
config	library\Zend\Log\Writer\Db.php	/^        $config = self::_parseConfig($config);$/;"	v
dataToInsert	library\Zend\Log\Writer\Db.php	/^            $dataToInsert = $event;$/;"	v
dataToInsert	library\Zend\Log\Writer\Db.php	/^            $dataToInsert = array();$/;"	v
Zend_Log_Writer_Firebug	library\Zend\Log\Writer\Firebug.php	/^class Zend_Log_Writer_Firebug extends Zend_Log_Writer_Abstract$/;"	c
label	library\Zend\Log\Writer\Firebug.php	/^        $label = isset($event['firebugLabel'])?$event['firebugLabel']:null;$/;"	v
message	library\Zend\Log\Writer\Firebug.php	/^        $message = $this->_formatter->format($event);$/;"	v
previous	library\Zend\Log\Writer\Firebug.php	/^            $previous = $this->_priorityStyles[$priority];$/;"	v
previous	library\Zend\Log\Writer\Firebug.php	/^        $previous = $this->_defaultPriorityStyle;$/;"	v
previous	library\Zend\Log\Writer\Firebug.php	/^        $previous = $this->_enabled;$/;"	v
previous	library\Zend\Log\Writer\Firebug.php	/^        $previous = true;$/;"	v
type	library\Zend\Log\Writer\Firebug.php	/^            $type = $this->_defaultPriorityStyle;$/;"	v
type	library\Zend\Log\Writer\Firebug.php	/^            $type = $this->_priorityStyles[$event['priority']];$/;"	v
Zend_Log_Writer_Mail	library\Zend\Log\Writer\Mail.php	/^class Zend_Log_Writer_Mail extends Zend_Log_Writer_Abstract$/;"	c
config	library\Zend\Log\Writer\Mail.php	/^        $config = array_merge(array($/;"	v
config	library\Zend\Log\Writer\Mail.php	/^        $config = self::_parseConfig($config);$/;"	v
formattedEvent	library\Zend\Log\Writer\Mail.php	/^        $formattedEvent = $this->_formatter->format($event);$/;"	v
headerAddresses	library\Zend\Log\Writer\Mail.php	/^        $headerAddresses = array_intersect_key($config, self::$_methodMapHeaders);$/;"	v
layout	library\Zend\Log\Writer\Mail.php	/^            $layout = $this->_constructLayoutFromConfig($layout);$/;"	v
layout	library\Zend\Log\Writer\Mail.php	/^        $layout = new $layoutClass($config['layoutOptions']);$/;"	v
layoutClass	library\Zend\Log\Writer\Mail.php	/^        $layoutClass = $config['layout'];$/;"	v
layoutFormatter	library\Zend\Log\Writer\Mail.php	/^            $layoutFormatter = new $config['layoutFormatter'];$/;"	v
mail	library\Zend\Log\Writer\Mail.php	/^        $mail = new $mailClass($config['charset']);$/;"	v
mail	library\Zend\Log\Writer\Mail.php	/^        $mail = self::_constructMailFromConfig($config);$/;"	v
mailClass	library\Zend\Log\Writer\Mail.php	/^            $mailClass = $config['mail'];$/;"	v
mailClass	library\Zend\Log\Writer\Mail.php	/^        $mailClass = 'Zend_Mail';$/;"	v
method	library\Zend\Log\Writer\Mail.php	/^                $method = self::$_methodMapHeaders[$header];$/;"	v
numEntries	library\Zend\Log\Writer\Mail.php	/^            $numEntries = $this->_getFormattedNumEntriesPerPriority();$/;"	v
params	library\Zend\Log\Writer\Mail.php	/^                    $params = array($/;"	v
params	library\Zend\Log\Writer\Mail.php	/^                    $params = array($address);$/;"	v
params	library\Zend\Log\Writer\Mail.php	/^                    $params = array($address['email']);$/;"	v
strings	library\Zend\Log\Writer\Mail.php	/^        $strings = array();$/;"	v
writer	library\Zend\Log\Writer\Mail.php	/^        $writer = new self($mail);$/;"	v
Zend_Log_Writer_Mock	library\Zend\Log\Writer\Mock.php	/^class Zend_Log_Writer_Mock extends Zend_Log_Writer_Abstract$/;"	c
Zend_Log_Writer_Null	library\Zend\Log\Writer\Null.php	/^class Zend_Log_Writer_Null extends Zend_Log_Writer_Abstract$/;"	c
Zend_Log_Writer_Stream	library\Zend\Log\Writer\Stream.php	/^class Zend_Log_Writer_Stream extends Zend_Log_Writer_Abstract$/;"	c
config	library\Zend\Log\Writer\Stream.php	/^        $config = array_merge(array($/;"	v
config	library\Zend\Log\Writer\Stream.php	/^        $config = self::_parseConfig($config);$/;"	v
line	library\Zend\Log\Writer\Stream.php	/^        $line = $this->_formatter->format($event);$/;"	v
mode	library\Zend\Log\Writer\Stream.php	/^            $mode = 'a';$/;"	v
msg	library\Zend\Log\Writer\Stream.php	/^                $msg = "\\"$streamOrUrl\\" cannot be opened with mode \\"$mode\\"";$/;"	v
streamOrUrl	library\Zend\Log\Writer\Stream.php	/^                $streamOrUrl = $streamOrUrl['stream'];$/;"	v
streamOrUrl	library\Zend\Log\Writer\Stream.php	/^        $streamOrUrl = isset($config['url']) ? $config['url'] : $config['stream'];$/;"	v
Zend_Log_Writer_Syslog	library\Zend\Log\Writer\Syslog.php	/^class Zend_Log_Writer_Syslog extends Zend_Log_Writer_Abstract$/;"	c
constants	library\Zend\Log\Writer\Syslog.php	/^        $constants = array($/;"	v
message	library\Zend\Log\Writer\Syslog.php	/^            $message = $this->_formatter->format($event);$/;"	v
message	library\Zend\Log\Writer\Syslog.php	/^        $message = $event['message'];$/;"	v
priority	library\Zend\Log\Writer\Syslog.php	/^            $priority = $this->_defaultPriority;$/;"	v
priority	library\Zend\Log\Writer\Syslog.php	/^            $priority = $this->_priorities[$event['priority']];$/;"	v
runInitializeSyslog	library\Zend\Log\Writer\Syslog.php	/^            $runInitializeSyslog = false;$/;"	v
runInitializeSyslog	library\Zend\Log\Writer\Syslog.php	/^        $runInitializeSyslog = true;$/;"	v
Zend_Log_Writer_ZendMonitor	library\Zend\Log\Writer\ZendMonitor.php	/^class Zend_Log_Writer_ZendMonitor extends Zend_Log_Writer_Abstract$/;"	c
message	library\Zend\Log\Writer\ZendMonitor.php	/^        $message  = $event['message'];$/;"	v
priority	library\Zend\Log\Writer\ZendMonitor.php	/^        $priority = $event['priority'];$/;"	v
Zend_Mail	library\Zend\Mail.php	/^class Zend_Mail extends Zend_Mime_Message$/;"	c
allowed	library\Zend\Mail.php	/^        $allowed = array($/;"	v
body	library\Zend\Mail.php	/^            $body = $this->_bodyHtml;$/;"	v
body	library\Zend\Mail.php	/^            $body = $this->_bodyText;$/;"	v
charset	library\Zend\Mail.php	/^            $charset = $this->_charset;$/;"	v
date	library\Zend\Mail.php	/^                $date = $date->get(Zend_Date::RFC_2822);$/;"	v
date	library\Zend\Mail.php	/^                $date = date('r');$/;"	v
date	library\Zend\Mail.php	/^                $date = date('r', $date);$/;"	v
date	library\Zend\Mail.php	/^                $date = strtotime($date);$/;"	v
disposition	library\Zend\Mail.php	/^                                     $disposition = Zend_Mime::DISPOSITION_ATTACHMENT,$/;"	v
email	library\Zend\Mail.php	/^            $email = $this->_filterEmail($email);$/;"	v
email	library\Zend\Mail.php	/^            $email = array($email);$/;"	v
email	library\Zend\Mail.php	/^            $email = array($name => $email);$/;"	v
email	library\Zend\Mail.php	/^        $email = $this->_filterEmail($email);$/;"	v
encodedName	library\Zend\Mail.php	/^            $encodedName = $this->_encodeHeader($name);$/;"	v
encoding	library\Zend\Mail.php	/^                                     $encoding    = Zend_Mime::ENCODING_BASE64,$/;"	v
filename	library\Zend\Mail.php	/^                                     $filename    = null)$/;"	v
format	library\Zend\Mail.php	/^                $format = '"%s" <%s>';$/;"	v
format	library\Zend\Mail.php	/^                $format = '%s <%s>';$/;"	v
from	library\Zend\Mail.php	/^        $from = self::getDefaultFrom();$/;"	v
hostName	library\Zend\Mail.php	/^            $hostName = $_SERVER["SERVER_NAME"];$/;"	v
hostName	library\Zend\Mail.php	/^            $hostName = php_uname('n');$/;"	v
id	library\Zend\Mail.php	/^            $id = $this->_filterOther($id);$/;"	v
id	library\Zend\Mail.php	/^            $id = $this->createMessageId();$/;"	v
mimeType	library\Zend\Mail.php	/^                                     $mimeType    = Zend_Mime::TYPE_OCTETSTREAM,$/;"	v
mp	library\Zend\Mail.php	/^        $mp = new Zend_Mime_Part($body);$/;"	v
mp	library\Zend\Mail.php	/^        $mp = new Zend_Mime_Part($html);$/;"	v
mp	library\Zend\Mail.php	/^        $mp = new Zend_Mime_Part($txt);$/;"	v
name	library\Zend\Mail.php	/^        $name  = $this->_filterName($name);$/;"	v
prohibit	library\Zend\Mail.php	/^        $prohibit = array('to', 'cc', 'bcc', 'from', 'subject',$/;"	v
rand	library\Zend\Mail.php	/^        $rand = mt_rand();$/;"	v
recipient	library\Zend\Mail.php	/^            $recipient = 'unknown';$/;"	v
recipient	library\Zend\Mail.php	/^            $recipient = array_rand($this->_recipients);$/;"	v
replyTo	library\Zend\Mail.php	/^        $replyTo = self::getDefaultReplyTo();$/;"	v
rule	library\Zend\Mail.php	/^        $rule = array("\\r" => '',$/;"	v
subject	library\Zend\Mail.php	/^            $subject = $this->_filterOther($subject);$/;"	v
time	library\Zend\Mail.php	/^        $time = time();$/;"	v
transport	library\Zend\Mail.php	/^                $transport = new Zend_Mail_Transport_Sendmail();$/;"	v
transport	library\Zend\Mail.php	/^                $transport = self::$_defaultTransport;$/;"	v
user	library\Zend\Mail.php	/^            $user = $_SERVER['REMOTE_ADDR'];$/;"	v
user	library\Zend\Mail.php	/^            $user = $this->_from;$/;"	v
user	library\Zend\Mail.php	/^            $user = getmypid();$/;"	v
value	library\Zend\Mail.php	/^                $value = Zend_Mime::encodeBase64Header($value, $this->getCharset(), Zend_Mime::LINELENGTH, Zend_Mime::LINEEND);$/;"	v
value	library\Zend\Mail.php	/^                $value = Zend_Mime::encodeQuotedPrintableHeader($value, $this->getCharset(), Zend_Mime::LINELENGTH, Zend_Mime::LINEEND);$/;"	v
value	library\Zend\Mail.php	/^        $value = $this->_encodeHeader($value);$/;"	v
value	library\Zend\Mail.php	/^        $value = $this->_filterOther($value);$/;"	v
Zend_Mail_Exception	library\Zend\Mail\Exception.php	/^class Zend_Mail_Exception extends Zend_Exception$/;"	c
Zend_Mail_Message	library\Zend\Mail\Message.php	/^class Zend_Mail_Message extends Zend_Mail_Part implements Zend_Mail_Message_Interface$/;"	c
Zend_Mail_Message_File	library\Zend\Mail\Message\File.php	/^class Zend_Mail_Message_File extends Zend_Mail_Part_File implements Zend_Mail_Message_Interface$/;"	c
Zend_Mail_Part	library\Zend\Mail\Part.php	/^class Zend_Mail_Part implements RecursiveIterator, Zend_Mail_Part_Interface$/;"	c
boundary	library\Zend\Mail\Part.php	/^        $boundary = $this->getHeaderField('content-type', 'boundary');$/;"	v
counter	library\Zend\Mail\Part.php	/^        $counter = 1;$/;"	v
current	library\Zend\Mail\Part.php	/^        $current = $this->current();$/;"	v
header	library\Zend\Mail\Part.php	/^                    $header = implode(Zend_Mime::LINEEND, $header);$/;"	v
header	library\Zend\Mail\Part.php	/^                $header = (array)$header;$/;"	v
header	library\Zend\Mail\Part.php	/^        $header = $this->_headers[$name];$/;"	v
lowerName	library\Zend\Mail\Part.php	/^            $lowerName = strtolower(preg_replace('%([a-z])([A-Z])%', '\\1-\\2', $name));$/;"	v
lowerName	library\Zend\Mail\Part.php	/^        $lowerName = strtolower($name);$/;"	v
name	library\Zend\Mail\Part.php	/^        $name = $lowerName;$/;"	v
name	library\Zend\Mail\Part.php	/^        $name = strtolower($name);$/;"	v
part	library\Zend\Mail\Part.php	/^                $part = $this->_mail->getRawHeader($this->_messageNum);$/;"	v
parts	library\Zend\Mail\Part.php	/^        $parts = Zend_Mime_Decode::splitMessageStruct($this->_content, $boundary);$/;"	v
Zend_Mail_Part_File	library\Zend\Mail\Part\File.php	/^class Zend_Mail_Part_File extends Zend_Mail_Part$/;"	c
boundary	library\Zend\Mail\Part\File.php	/^        $boundary = $this->getHeaderField('content-type', 'boundary');$/;"	v
endPos	library\Zend\Mail\Part\File.php	/^        $endPos = isset($params['endPos']) ? $params['endPos'] : null;$/;"	v
header	library\Zend\Mail\Part\File.php	/^        $header = '';$/;"	v
lastPos	library\Zend\Mail\Part\File.php	/^            $lastPos = $pos;$/;"	v
length	library\Zend\Mail\Part\File.php	/^        $length = $this->_contentPos[1] - $this->_contentPos[0];$/;"	v
line	library\Zend\Mail\Part\File.php	/^            $line = fgets($this->_fh);$/;"	v
line	library\Zend\Mail\Part\File.php	/^            $line = trim($line);$/;"	v
part	library\Zend\Mail\Part\File.php	/^                $part = array($pos);$/;"	v
part	library\Zend\Mail\Part\File.php	/^        $part = array();$/;"	v
pos	library\Zend\Mail\Part\File.php	/^            $pos = ftell($this->_fh);$/;"	v
pos	library\Zend\Mail\Part\File.php	/^        $pos = $this->_contentPos[0];$/;"	v
cmd	library\Zend\Mail\Protocol\Abstract.php	/^        $cmd  = '';$/;"	v
code	library\Zend\Mail\Protocol\Abstract.php	/^            $code = array($code);$/;"	v
errMsg	library\Zend\Mail\Protocol\Abstract.php	/^                $errMsg =  $msg;$/;"	v
errMsg	library\Zend\Mail\Protocol\Abstract.php	/^        $errMsg = '';$/;"	v
errorNum	library\Zend\Mail\Protocol\Abstract.php	/^        $errorNum = 0;$/;"	v
errorStr	library\Zend\Mail\Protocol\Abstract.php	/^                $errorStr = 'Could not open socket';$/;"	v
errorStr	library\Zend\Mail\Protocol\Abstract.php	/^        $errorStr = '';$/;"	v
info	library\Zend\Mail\Protocol\Abstract.php	/^        $info = stream_get_meta_data($this->_socket);$/;"	v
more	library\Zend\Mail\Protocol\Abstract.php	/^        $more = '';$/;"	v
msg	library\Zend\Mail\Protocol\Abstract.php	/^        $msg  = '';$/;"	v
reponse	library\Zend\Mail\Protocol\Abstract.php	/^        $reponse = fgets($this->_socket, 1024);$/;"	v
result	library\Zend\Mail\Protocol\Abstract.php	/^        $result = fwrite($this->_socket, $request . self::EOL);$/;"	v
Zend_Mail_Protocol_Exception	library\Zend\Mail\Protocol\Exception.php	/^class Zend_Mail_Protocol_Exception extends Zend_Mail_Exception$/;"	c
Zend_Mail_Protocol_Imap	library\Zend\Mail\Protocol\Imap.php	/^class Zend_Mail_Protocol_Imap$/;"	c
__construct	library\Zend\Mail\Protocol\Imap.php	/^    function __construct($host = '', $port = null, $ssl = false)$/;"	f
braces	library\Zend\Mail\Protocol\Imap.php	/^                $braces = strlen($token);$/;"	v
capabilities	library\Zend\Mail\Protocol\Imap.php	/^            $capabilities = array_merge($capabilities, $line);$/;"	v
capabilities	library\Zend\Mail\Protocol\Imap.php	/^        $capabilities = array();$/;"	v
chars	library\Zend\Mail\Protocol\Imap.php	/^                $chars = substr($token, 1, $endPos - 1);$/;"	v
child	library\Zend\Mail\Protocol\Imap.php	/^            $child = $tokens;$/;"	v
count	library\Zend\Mail\Protocol\Imap.php	/^                    $count = count($tokens[2]);$/;"	v
data	library\Zend\Mail\Protocol\Imap.php	/^                        $data = $tokens[2][$i + 1];$/;"	v
data	library\Zend\Mail\Protocol\Imap.php	/^                    $data = $tokens[2][1];$/;"	v
data	library\Zend\Mail\Protocol\Imap.php	/^                $data = array();$/;"	v
endPos	library\Zend\Mail\Protocol\Imap.php	/^                $endPos = strpos($token, '}');$/;"	v
errno	library\Zend\Mail\Protocol\Imap.php	/^        $errno  =  0;$/;"	v
errstr	library\Zend\Mail\Protocol\Imap.php	/^        $errstr = '';$/;"	v
flags	library\Zend\Mail\Protocol\Imap.php	/^        $flags = $this->escapeList($flags);$/;"	v
host	library\Zend\Mail\Protocol\Imap.php	/^            $host = 'ssl:\/\/' . $host;$/;"	v
item	library\Zend\Mail\Protocol\Imap.php	/^            $item = $mode . $item;$/;"	v
item	library\Zend\Mail\Protocol\Imap.php	/^        $item = 'FLAGS';$/;"	v
itemList	library\Zend\Mail\Protocol\Imap.php	/^        $itemList = $this->escapeList($items);$/;"	v
items	library\Zend\Mail\Protocol\Imap.php	/^        $items = (array)$items;$/;"	v
line	library\Zend\Mail\Protocol\Imap.php	/^                        $line = substr($token, $chars);$/;"	v
line	library\Zend\Mail\Protocol\Imap.php	/^                    $line = '';$/;"	v
line	library\Zend\Mail\Protocol\Imap.php	/^                    $line = substr($line, strlen($matches[0]));$/;"	v
line	library\Zend\Mail\Protocol\Imap.php	/^                    $line = trim($line) . ' ';$/;"	v
line	library\Zend\Mail\Protocol\Imap.php	/^                $line = $token[1];$/;"	v
line	library\Zend\Mail\Protocol\Imap.php	/^            $line = substr($line, $pos + 1);$/;"	v
line	library\Zend\Mail\Protocol\Imap.php	/^        $line = $tag . ' ' . $command;$/;"	v
line	library\Zend\Mail\Protocol\Imap.php	/^        $line = $this->_nextLine();$/;"	v
line	library\Zend\Mail\Protocol\Imap.php	/^        $line = $this->_nextTaggedLine($tag);$/;"	v
line	library\Zend\Mail\Protocol\Imap.php	/^        $line = @fgets($this->_socket);$/;"	v
line	library\Zend\Mail\Protocol\Imap.php	/^        $line = rtrim($line) . ' ';$/;"	v
lines	library\Zend\Mail\Protocol\Imap.php	/^        $lines = array();$/;"	v
list	library\Zend\Mail\Protocol\Imap.php	/^        $list = $this->requestAndResponse('LIST', $this->escapeString($reference, $mailbox));$/;"	v
port	library\Zend\Mail\Protocol\Imap.php	/^            $port = $ssl === 'SSL' ? 993 : 143;$/;"	v
response	library\Zend\Mail\Protocol\Imap.php	/^        $response = $this->readResponse($tag, $dontParse);$/;"	v
response	library\Zend\Mail\Protocol\Imap.php	/^        $response = $this->requestAndResponse('CAPABILITY');$/;"	v
response	library\Zend\Mail\Protocol\Imap.php	/^        $response = $this->requestAndResponse('SEARCH', $params);$/;"	v
result	library\Zend\Mail\Protocol\Imap.php	/^                $result = $this->requestAndResponse('LOGOUT', array(), true);$/;"	v
result	library\Zend\Mail\Protocol\Imap.php	/^            $result = $result && stream_socket_enable_crypto($this->_socket, true, STREAM_CRYPTO_METHOD_TLS_CLIENT);$/;"	v
result	library\Zend\Mail\Protocol\Imap.php	/^            $result = $this->requestAndResponse('STARTTLS');$/;"	v
result	library\Zend\Mail\Protocol\Imap.php	/^        $result = $this->requestAndResponse('STORE', array($set, $item, $flags), $silent);$/;"	v
result	library\Zend\Mail\Protocol\Imap.php	/^        $result = array();$/;"	v
result	library\Zend\Mail\Protocol\Imap.php	/^        $result = false;$/;"	v
set	library\Zend\Mail\Protocol\Imap.php	/^            $set = (int)$from . ':' . (int)$to;$/;"	v
set	library\Zend\Mail\Protocol\Imap.php	/^            $set = (int)$from . ':*';$/;"	v
set	library\Zend\Mail\Protocol\Imap.php	/^            $set = (int)$from;$/;"	v
set	library\Zend\Mail\Protocol\Imap.php	/^            $set = implode(',', $from);$/;"	v
set	library\Zend\Mail\Protocol\Imap.php	/^        $set = (int)$from;$/;"	v
stack	library\Zend\Mail\Protocol\Imap.php	/^        $stack = array();$/;"	v
tag	library\Zend\Mail\Protocol\Imap.php	/^            $tag = 'TAG' . $this->_tagCount;$/;"	v
token	library\Zend\Mail\Protocol\Imap.php	/^                        $token = substr($token, 0, $chars);$/;"	v
token	library\Zend\Mail\Protocol\Imap.php	/^                    $token = $tokens;$/;"	v
token	library\Zend\Mail\Protocol\Imap.php	/^                    $token = '';$/;"	v
token	library\Zend\Mail\Protocol\Imap.php	/^                $token = $tokens;$/;"	v
token	library\Zend\Mail\Protocol\Imap.php	/^                $token = rtrim($token, ')');$/;"	v
token	library\Zend\Mail\Protocol\Imap.php	/^                $token = substr($token, 1);$/;"	v
token	library\Zend\Mail\Protocol\Imap.php	/^            $token = substr($line, 0, $pos);$/;"	v
tokens	library\Zend\Mail\Protocol\Imap.php	/^                    $tokens = array_pop($stack);$/;"	v
tokens	library\Zend\Mail\Protocol\Imap.php	/^                $tokens = array();$/;"	v
tokens	library\Zend\Mail\Protocol\Imap.php	/^                $tokens = array_pop($stack);$/;"	v
tokens	library\Zend\Mail\Protocol\Imap.php	/^            $tokens = $line;$/;"	v
tokens	library\Zend\Mail\Protocol\Imap.php	/^            $tokens = $this->_decodeLine($line);$/;"	v
tokens	library\Zend\Mail\Protocol\Imap.php	/^            $tokens = array(substr($tokens, 0, 2));$/;"	v
tokens	library\Zend\Mail\Protocol\Imap.php	/^            $tokens = array_pop($stack);$/;"	v
tokens	library\Zend\Mail\Protocol\Imap.php	/^        $tokens = $result;$/;"	v
tokens	library\Zend\Mail\Protocol\Imap.php	/^        $tokens = array();$/;"	v
Zend_Mail_Protocol_Pop3	library\Zend\Mail\Protocol\Pop3.php	/^class Zend_Mail_Protocol_Pop3$/;"	c
errno	library\Zend\Mail\Protocol\Pop3.php	/^        $errno  =  0;$/;"	v
errstr	library\Zend\Mail\Protocol\Pop3.php	/^        $errstr = '';$/;"	v
host	library\Zend\Mail\Protocol\Pop3.php	/^            $host = 'ssl:\/\/' . $host;$/;"	v
line	library\Zend\Mail\Protocol\Pop3.php	/^                    $line = substr($line, 1);$/;"	v
line	library\Zend\Mail\Protocol\Pop3.php	/^                $line = fgets($this->_socket);$/;"	v
line	library\Zend\Mail\Protocol\Pop3.php	/^            $line = fgets($this->_socket);$/;"	v
line	library\Zend\Mail\Protocol\Pop3.php	/^            $line = strtok("\\n");$/;"	v
line	library\Zend\Mail\Protocol\Pop3.php	/^        $line = strtok($result, "\\n");$/;"	v
lines	library\Zend\Mail\Protocol\Pop3.php	/^        $lines = (!$lines || $lines < 1) ? 0 : (int)$lines;$/;"	v
message	library\Zend\Mail\Protocol\Pop3.php	/^            $message = '';$/;"	v
messages	library\Zend\Mail\Protocol\Pop3.php	/^        $messages = 0;$/;"	v
messages	library\Zend\Mail\Protocol\Pop3.php	/^        $messages = array();$/;"	v
octets	library\Zend\Mail\Protocol\Pop3.php	/^        $octets = 0;$/;"	v
port	library\Zend\Mail\Protocol\Pop3.php	/^            $port = $ssl == 'SSL' ? 995 : 110;$/;"	v
result	library\Zend\Mail\Protocol\Pop3.php	/^                $result = $this->retrieve($msgno);$/;"	v
result	library\Zend\Mail\Protocol\Pop3.php	/^            $result = $this->request("LIST $msgno");$/;"	v
result	library\Zend\Mail\Protocol\Pop3.php	/^            $result = $this->request("TOP $msgno $lines", true);$/;"	v
result	library\Zend\Mail\Protocol\Pop3.php	/^            $result = $this->request("UIDL $msgno");$/;"	v
result	library\Zend\Mail\Protocol\Pop3.php	/^            $result = stream_socket_enable_crypto($this->_socket, true, STREAM_CRYPTO_METHOD_TLS_CLIENT);$/;"	v
result	library\Zend\Mail\Protocol\Pop3.php	/^        $result = $this->request("PASS $password");$/;"	v
result	library\Zend\Mail\Protocol\Pop3.php	/^        $result = $this->request("RETR $msgno", true);$/;"	v
result	library\Zend\Mail\Protocol\Pop3.php	/^        $result = $this->request("USER $user");$/;"	v
result	library\Zend\Mail\Protocol\Pop3.php	/^        $result = $this->request('CAPA', true);$/;"	v
result	library\Zend\Mail\Protocol\Pop3.php	/^        $result = $this->request('LIST', true);$/;"	v
result	library\Zend\Mail\Protocol\Pop3.php	/^        $result = $this->request('STAT');$/;"	v
result	library\Zend\Mail\Protocol\Pop3.php	/^        $result = $this->request('UIDL', true);$/;"	v
result	library\Zend\Mail\Protocol\Pop3.php	/^        $result = @fgets($this->_socket);$/;"	v
result	library\Zend\Mail\Protocol\Pop3.php	/^        $result = @fputs($this->_socket, $request . "\\r\\n");$/;"	v
result	library\Zend\Mail\Protocol\Pop3.php	/^        $result = explode("\\n", $result);$/;"	v
result	library\Zend\Mail\Protocol\Pop3.php	/^        $result = trim($result);$/;"	v
status	library\Zend\Mail\Protocol\Pop3.php	/^            $status = $result;$/;"	v
welcome	library\Zend\Mail\Protocol\Pop3.php	/^        $welcome = $this->readResponse();$/;"	v
Zend_Mail_Protocol_Smtp	library\Zend\Mail\Protocol\Smtp.php	/^class Zend_Mail_Protocol_Smtp extends Zend_Mail_Protocol_Abstract$/;"	c
line	library\Zend\Mail\Protocol\Smtp.php	/^                $line = '.' . $line;$/;"	v
port	library\Zend\Mail\Protocol\Smtp.php	/^                        $port = 465;$/;"	v
port	library\Zend\Mail\Protocol\Smtp.php	/^                $port = 25;$/;"	v
Zend_Mail_Protocol_Smtp_Auth_Crammd5	library\Zend\Mail\Protocol\Smtp\Auth\Crammd5.php	/^class Zend_Mail_Protocol_Smtp_Auth_Crammd5 extends Zend_Mail_Protocol_Smtp$/;"	c
challenge	library\Zend\Mail\Protocol\Smtp\Auth\Crammd5.php	/^        $challenge = $this->_expect(334);$/;"	v
challenge	library\Zend\Mail\Protocol\Smtp\Auth\Crammd5.php	/^        $challenge = base64_decode($challenge);$/;"	v
digest	library\Zend\Mail\Protocol\Smtp\Auth\Crammd5.php	/^        $digest = $this->_hmacMd5($this->_password, $challenge);$/;"	v
digest	library\Zend\Mail\Protocol\Smtp\Auth\Crammd5.php	/^        $digest = md5($k_opad . $inner);$/;"	v
inner	library\Zend\Mail\Protocol\Smtp\Auth\Crammd5.php	/^        $inner = pack('H32', md5($k_ipad . $data));$/;"	v
k_ipad	library\Zend\Mail\Protocol\Smtp\Auth\Crammd5.php	/^        $k_ipad = substr($key, 0, 64) ^ str_repeat(chr(0x36), 64);$/;"	v
k_opad	library\Zend\Mail\Protocol\Smtp\Auth\Crammd5.php	/^        $k_opad = substr($key, 0, 64) ^ str_repeat(chr(0x5C), 64);$/;"	v
key	library\Zend\Mail\Protocol\Smtp\Auth\Crammd5.php	/^            $key = pack('H32', md5($key));$/;"	v
key	library\Zend\Mail\Protocol\Smtp\Auth\Crammd5.php	/^            $key = str_pad($key, $block, "\\0");$/;"	v
Zend_Mail_Protocol_Smtp_Auth_Login	library\Zend\Mail\Protocol\Smtp\Auth\Login.php	/^class Zend_Mail_Protocol_Smtp_Auth_Login extends Zend_Mail_Protocol_Smtp$/;"	c
Zend_Mail_Protocol_Smtp_Auth_Plain	library\Zend\Mail\Protocol\Smtp\Auth\Plain.php	/^class Zend_Mail_Protocol_Smtp_Auth_Plain extends Zend_Mail_Protocol_Smtp$/;"	c
Zend_Mail_Storage	library\Zend\Mail\Storage.php	/^class Zend_Mail_Storage$/;"	c
var	library\Zend\Mail\Storage\Abstract.php	/^            $var = strtolower(substr($var, 3));$/;"	v
Zend_Mail_Storage_Exception	library\Zend\Mail\Storage\Exception.php	/^class Zend_Mail_Storage_Exception extends Zend_Mail_Exception$/;"	c
Zend_Mail_Storage_Folder	library\Zend\Mail\Storage\Folder.php	/^class Zend_Mail_Storage_Folder implements RecursiveIterator$/;"	c
current	library\Zend\Mail\Storage\Folder.php	/^        $current = $this->current();$/;"	v
Zend_Mail_Storage_Folder_Maildir	library\Zend\Mail\Storage\Folder\Maildir.php	/^class Zend_Mail_Storage_Folder_Maildir extends Zend_Mail_Storage_Maildir implements Zend_Mail_Storage_Folder_Interface$/;"	c
currentFolder	library\Zend\Mail\Storage\Folder\Maildir.php	/^            $currentFolder = $currentFolder->$entry;$/;"	v
currentFolder	library\Zend\Mail\Storage\Folder\Maildir.php	/^        $currentFolder = $this->_rootFolder;$/;"	v
dh	library\Zend\Mail\Storage\Folder\Maildir.php	/^        $dh = @opendir($this->_rootdir);$/;"	v
dirs	library\Zend\Mail\Storage\Folder\Maildir.php	/^        $dirs = array();$/;"	v
folder	library\Zend\Mail\Storage\Folder\Maildir.php	/^                    $folder = new Zend_Mail_Storage_Folder($local, substr($dir, 1), true);$/;"	v
folder	library\Zend\Mail\Storage\Folder\Maildir.php	/^        $folder = $this->getFolders($this->_currentFolder);$/;"	v
folderStack	library\Zend\Mail\Storage\Folder\Maildir.php	/^        $folderStack = array(null);$/;"	v
local	library\Zend\Mail\Storage\Folder\Maildir.php	/^                    $local = substr($dir, strlen($parent));$/;"	v
params	library\Zend\Mail\Storage\Folder\Maildir.php	/^            $params = (object)$params;$/;"	v
parent	library\Zend\Mail\Storage\Folder\Maildir.php	/^                    $parent = $dir . $this->_delim;$/;"	v
parent	library\Zend\Mail\Storage\Folder\Maildir.php	/^                    $parent = array_pop($stack);$/;"	v
parent	library\Zend\Mail\Storage\Folder\Maildir.php	/^        $parent = '.';$/;"	v
parentFolder	library\Zend\Mail\Storage\Folder\Maildir.php	/^                    $parentFolder = $folder;$/;"	v
parentFolder	library\Zend\Mail\Storage\Folder\Maildir.php	/^                    $parentFolder = array_pop($folderStack);$/;"	v
parentFolder	library\Zend\Mail\Storage\Folder\Maildir.php	/^        $parentFolder = $this->_rootFolder;$/;"	v
rootFolder	library\Zend\Mail\Storage\Folder\Maildir.php	/^            $rootFolder = substr($rootFolder, 6);$/;"	v
stack	library\Zend\Mail\Storage\Folder\Maildir.php	/^        $stack = array(null);$/;"	v
subname	library\Zend\Mail\Storage\Folder\Maildir.php	/^        $subname = trim($rootFolder, $this->_delim);$/;"	v
Zend_Mail_Storage_Folder_Mbox	library\Zend\Mail\Storage\Folder\Mbox.php	/^class Zend_Mail_Storage_Folder_Mbox extends Zend_Mail_Storage_Mbox implements Zend_Mail_Storage_Folder_Interface$/;"	c
absoluteEntry	library\Zend\Mail\Storage\Folder\Mbox.php	/^            $absoluteEntry = $currentDir . $entry;$/;"	v
currentFolder	library\Zend\Mail\Storage\Folder\Mbox.php	/^            $currentFolder = $currentFolder->$entry;$/;"	v
currentFolder	library\Zend\Mail\Storage\Folder\Mbox.php	/^        $currentFolder = $this->_rootFolder;$/;"	v
dh	library\Zend\Mail\Storage\Folder\Mbox.php	/^        $dh = @opendir($currentDir);$/;"	v
folder	library\Zend\Mail\Storage\Folder\Mbox.php	/^            $folder = new Zend_Mail_Storage_Folder($entry, $globalName, false);$/;"	v
folder	library\Zend\Mail\Storage\Folder\Mbox.php	/^        $folder = $this->getFolders($this->_currentFolder);$/;"	v
globalName	library\Zend\Mail\Storage\Folder\Mbox.php	/^            $globalName = $parentGlobalName . DIRECTORY_SEPARATOR . $entry;$/;"	v
params	library\Zend\Mail\Storage\Folder\Mbox.php	/^            $params = (object)$params;$/;"	v
parentFolder	library\Zend\Mail\Storage\Folder\Mbox.php	/^            $parentFolder = $this->_rootFolder;$/;"	v
subname	library\Zend\Mail\Storage\Folder\Mbox.php	/^        $subname = trim($rootFolder, DIRECTORY_SEPARATOR);$/;"	v
Zend_Mail_Storage_Imap	library\Zend\Mail\Storage\Imap.php	/^class Zend_Mail_Storage_Imap extends Zend_Mail_Storage_Abstract$/;"	c
data	library\Zend\Mail\Storage\Imap.php	/^        $data = $this->_protocol->fetch(array('FLAGS', 'RFC822.HEADER'), $id);$/;"	v
flags	library\Zend\Mail\Storage\Imap.php	/^            $flags = array(Zend_Mail_Storage::FLAG_SEEN);$/;"	v
flags	library\Zend\Mail\Storage\Imap.php	/^        $flags = array();$/;"	v
folder	library\Zend\Mail\Storage\Imap.php	/^                    $folder = new Zend_Mail_Storage_Folder($localName, $globalName, $selectable);$/;"	v
folder	library\Zend\Mail\Storage\Imap.php	/^            $folder = $name;$/;"	v
folder	library\Zend\Mail\Storage\Imap.php	/^            $folder = $parentFolder . '\/' . $name;$/;"	v
folder	library\Zend\Mail\Storage\Imap.php	/^            $folder = $parentFolder->getGlobalName() . '\/' . $name;$/;"	v
folder	library\Zend\Mail\Storage\Imap.php	/^            $folder = $this->_currentFolder;$/;"	v
folderStack	library\Zend\Mail\Storage\Imap.php	/^        $folderStack = array(null);$/;"	v
folders	library\Zend\Mail\Storage\Imap.php	/^        $folders = $this->_protocol->listMailbox((string)$rootFolder);$/;"	v
header	library\Zend\Mail\Storage\Imap.php	/^        $header = $data['RFC822.HEADER'];$/;"	v
host	library\Zend\Mail\Storage\Imap.php	/^        $host     = isset($params->host)     ? $params->host     : 'localhost';$/;"	v
ids	library\Zend\Mail\Storage\Imap.php	/^        $ids = $this->getUniqueId();$/;"	v
localName	library\Zend\Mail\Storage\Imap.php	/^                        $localName = $globalName;$/;"	v
localName	library\Zend\Mail\Storage\Imap.php	/^                        $localName = substr($globalName, $pos + 1);$/;"	v
name	library\Zend\Mail\Storage\Imap.php	/^            $name = $name->getGlobalName();$/;"	v
oldName	library\Zend\Mail\Storage\Imap.php	/^            $oldName = $oldName->getGlobalName();$/;"	v
params	library\Zend\Mail\Storage\Imap.php	/^            $params = (object)$params;$/;"	v
params	library\Zend\Mail\Storage\Imap.php	/^        $params = array();$/;"	v
parent	library\Zend\Mail\Storage\Imap.php	/^                    $parent = $globalName . $data['delim'];$/;"	v
parent	library\Zend\Mail\Storage\Imap.php	/^                    $parent = array_pop($stack);$/;"	v
parent	library\Zend\Mail\Storage\Imap.php	/^        $parent = '';$/;"	v
parentFolder	library\Zend\Mail\Storage\Imap.php	/^                    $parentFolder = $folder;$/;"	v
parentFolder	library\Zend\Mail\Storage\Imap.php	/^                    $parentFolder = array_pop($folderStack);$/;"	v
parentFolder	library\Zend\Mail\Storage\Imap.php	/^        $parentFolder = $root;$/;"	v
password	library\Zend\Mail\Storage\Imap.php	/^        $password = isset($params->password) ? $params->password : '';$/;"	v
port	library\Zend\Mail\Storage\Imap.php	/^        $port     = isset($params->port)     ? $params->port     : null;$/;"	v
pos	library\Zend\Mail\Storage\Imap.php	/^                    $pos = strrpos($globalName, $data['delim']);$/;"	v
root	library\Zend\Mail\Storage\Imap.php	/^        $root = new Zend_Mail_Storage_Folder('\/', '\/', false);$/;"	v
selectable	library\Zend\Mail\Storage\Imap.php	/^                    $selectable = !$data['flags'] || !in_array('\\\\Noselect', $data['flags']);$/;"	v
ssl	library\Zend\Mail\Storage\Imap.php	/^        $ssl      = isset($params->ssl)      ? $params->ssl      : false;$/;"	v
stack	library\Zend\Mail\Storage\Imap.php	/^        $stack = array(null);$/;"	v
Zend_Mail_Storage_Maildir	library\Zend\Mail\Storage\Maildir.php	/^class Zend_Mail_Storage_Maildir extends Zend_Mail_Storage_Abstract$/;"	c
content	library\Zend\Mail\Storage\Maildir.php	/^        $content = '';$/;"	v
content	library\Zend\Mail\Storage\Maildir.php	/^        $content = stream_get_contents($fh);$/;"	v
count	library\Zend\Mail\Storage\Maildir.php	/^        $count = 0;$/;"	v
data	library\Zend\Mail\Storage\Maildir.php	/^            $data = array('uniq'       => $uniq,$/;"	v
dh	library\Zend\Mail\Storage\Maildir.php	/^        $dh = @opendir($dirname . '\/cur\/');$/;"	v
dh	library\Zend\Mail\Storage\Maildir.php	/^        $dh = @opendir($dirname . '\/new\/');$/;"	v
fh	library\Zend\Mail\Storage\Maildir.php	/^        $fh = fopen($this->_getFileData($id, 'filename'), 'r');$/;"	v
filedata	library\Zend\Mail\Storage\Maildir.php	/^            $filedata = $this->_getFileData($id);$/;"	v
flag	library\Zend\Mail\Storage\Maildir.php	/^                $flag = $flags[$i];$/;"	v
flags	library\Zend\Mail\Storage\Maildir.php	/^                $flags = '';$/;"	v
flags	library\Zend\Mail\Storage\Maildir.php	/^        $flags = array_flip($flags);$/;"	v
ids	library\Zend\Mail\Storage\Maildir.php	/^        $ids = array();$/;"	v
length	library\Zend\Mail\Storage\Maildir.php	/^            $length = strlen($flags);$/;"	v
line	library\Zend\Mail\Storage\Maildir.php	/^            $line = fgets($fh);$/;"	v
named_flags	library\Zend\Mail\Storage\Maildir.php	/^            $named_flags = $default_flags;$/;"	v
params	library\Zend\Mail\Storage\Maildir.php	/^            $params = (object)$params;$/;"	v
result	library\Zend\Mail\Storage\Maildir.php	/^        $result = array();$/;"	v
size	library\Zend\Mail\Storage\Maildir.php	/^                $size = null;$/;"	v
size	library\Zend\Mail\Storage\Maildir.php	/^                $size = substr($size, 2);$/;"	v
Zend_Mail_Storage_Mbox	library\Zend\Mail\Storage\Mbox.php	/^class Zend_Mail_Storage_Mbox extends Zend_Mail_Storage_Abstract$/;"	c
bodyLines	library\Zend\Mail\Storage\Mbox.php	/^        $bodyLines = 0; \/\/ TODO: need a way to change that$/;"	v
file	library\Zend\Mail\Storage\Mbox.php	/^            $file = @fopen($file, 'r');$/;"	v
line	library\Zend\Mail\Storage\Mbox.php	/^        $line = fgets($file);$/;"	v
message	library\Zend\Mail\Storage\Mbox.php	/^        $message = $this->getRawHeader($id);$/;"	v
messagePos	library\Zend\Mail\Storage\Mbox.php	/^                $messagePos = array('start' => ftell($this->_fh), 'separator' => 0, 'end' => 0);$/;"	v
messagePos	library\Zend\Mail\Storage\Mbox.php	/^            $messagePos = $this->_getPos($id);$/;"	v
messagePos	library\Zend\Mail\Storage\Mbox.php	/^        $messagePos = $this->_getPos($id);$/;"	v
messagePos	library\Zend\Mail\Storage\Mbox.php	/^        $messagePos = array('start' => ftell($this->_fh), 'separator' => 0, 'end' => 0);$/;"	v
params	library\Zend\Mail\Storage\Mbox.php	/^            $params = (object)$params;$/;"	v
pos	library\Zend\Mail\Storage\Mbox.php	/^            $pos = $this->_positions[$id - 1];$/;"	v
range	library\Zend\Mail\Storage\Mbox.php	/^        $range = range(1, $this->countMessages());$/;"	v
result	library\Zend\Mail\Storage\Mbox.php	/^            $result = true;$/;"	v
result	library\Zend\Mail\Storage\Mbox.php	/^        $result = array();$/;"	v
result	library\Zend\Mail\Storage\Mbox.php	/^        $result = false;$/;"	v
Zend_Mail_Storage_Pop3	library\Zend\Mail\Storage\Pop3.php	/^class Zend_Mail_Storage_Pop3 extends Zend_Mail_Storage_Abstract$/;"	c
bodyLines	library\Zend\Mail\Storage\Pop3.php	/^        $bodyLines = 0;$/;"	v
content	library\Zend\Mail\Storage\Pop3.php	/^        $content = $this->_protocol->retrieve($id);$/;"	v
count	library\Zend\Mail\Storage\Pop3.php	/^            $count = $this->countMessages();$/;"	v
host	library\Zend\Mail\Storage\Pop3.php	/^        $host     = isset($params->host)     ? $params->host     : 'localhost';$/;"	v
id	library\Zend\Mail\Storage\Pop3.php	/^                $id = $this->_protocol->uniqueid(1);$/;"	v
id	library\Zend\Mail\Storage\Pop3.php	/^            $id = null;$/;"	v
id	library\Zend\Mail\Storage\Pop3.php	/^        $id = $id ? $id : null;$/;"	v
ids	library\Zend\Mail\Storage\Pop3.php	/^        $ids = $this->getUniqueId();$/;"	v
message	library\Zend\Mail\Storage\Pop3.php	/^        $message = $this->_protocol->top($id, $bodyLines, true);$/;"	v
params	library\Zend\Mail\Storage\Pop3.php	/^            $params = (object)$params;$/;"	v
password	library\Zend\Mail\Storage\Pop3.php	/^        $password = isset($params->password) ? $params->password : '';$/;"	v
port	library\Zend\Mail\Storage\Pop3.php	/^        $port     = isset($params->port)     ? $params->port     : null;$/;"	v
range	library\Zend\Mail\Storage\Pop3.php	/^            $range = range(1, $count);$/;"	v
result	library\Zend\Mail\Storage\Pop3.php	/^        $result = parent::__get($var);$/;"	v
ssl	library\Zend\Mail\Storage\Pop3.php	/^        $ssl      = isset($params->ssl)      ? $params->ssl      : false;$/;"	v
Zend_Mail_Storage_Writable_Maildir	library\Zend\Mail\Storage\Writable\Maildir.php	/^class Zend_Mail_Storage_Writable_Maildir extends    Zend_Mail_Storage_Folder_Maildir$/;"	c
count	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $count = (int)$count;$/;"	v
definition	library\Zend\Mail\Storage\Writable\Maildir.php	/^                $definition = explode(',', $maildirsize[0]);$/;"	v
definition	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $definition = explode(',', trim($definition));$/;"	v
definition	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $definition = fgets($fh);$/;"	v
definition	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $definition = array();$/;"	v
definition	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $definition = implode(',', $definition);$/;"	v
dh	library\Zend\Mail\Storage\Writable\Maildir.php	/^                $dh = opendir($dirname);$/;"	v
dh	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $dh = opendir($dir);$/;"	v
dir	library\Zend\Mail\Storage\Writable\Maildir.php	/^                $dir = dirname($dir);$/;"	v
dir	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $dir = $this->_rootdir . '.' . $name . DIRECTORY_SEPARATOR . $subdir;$/;"	v
dirname	library\Zend\Mail\Storage\Writable\Maildir.php	/^                $dirname = $this->_rootdir . $subdir . DIRECTORY_SEPARATOR . $subsubdir . DIRECTORY_SEPARATOR;$/;"	v
exception	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $exception = new Zend_Mail_Storage_Exception('cannot copy message file');$/;"	v
exception	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $exception = new Zend_Mail_Storage_Exception('cannot link message file to final dir');$/;"	v
exception	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $exception = new Zend_Mail_Storage_Exception('cannot move message file');$/;"	v
exception	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $exception = null;$/;"	v
exists	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $exists = $this->getFolders($folder);$/;"	v
exists	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $exists = null;$/;"	v
fh	library\Zend\Mail\Storage\Writable\Maildir.php	/^                $fh = fopen($tmpdir . $uniq, 'w');$/;"	v
fh	library\Zend\Mail\Storage\Writable\Maildir.php	/^                $fh = null;$/;"	v
fh	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $fh = @fopen($this->_rootdir . 'maildirsize', 'r');$/;"	v
fh	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $fh = fopen($this->_rootdir . 'maildirsize', 'r');$/;"	v
fh	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $fh = $tmp['handle'];$/;"	v
fh	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $fh = null;$/;"	v
filedata	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $filedata = $this->_getFileData($id);$/;"	v
filename	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $filename = $this->_getFileData($id, 'filename');$/;"	v
filesize	library\Zend\Mail\Storage\Writable\Maildir.php	/^                        $filesize = strtok(':');$/;"	v
flags	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $flags = array(Zend_Mail_Storage::FLAG_SEEN);$/;"	v
flags	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $flags = $filedata['flags'];$/;"	v
flags	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $flags = array();$/;"	v
folder	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $folder = $name;$/;"	v
folder	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $folder = $parentFolder->getGlobalName() . $this->_delim . $name;$/;"	v
folder	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $folder = $this->_currentFolder;$/;"	v
folder	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $folder = $this->getFolders($folder);$/;"	v
folder	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $folder = rtrim($parentFolder, $this->_delim) . $this->_delim . $name;$/;"	v
folder	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $folder = substr($folder, 6);$/;"	v
folder	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $folder = $this->getFolders($oldName);$/;"	v
folder	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $folder = trim($folder, $this->_delim);$/;"	v
folders	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $folders = new RecursiveIteratorIterator($this->getFolders(), RecursiveIteratorIterator::SELF_FIRST);$/;"	v
fulldir	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $fulldir = $this->_rootdir . '.' . $folder;$/;"	v
id	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $id = '';$/;"	v
info	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $info = ',S=' . $size . $info;$/;"	v
info	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $info = $this->_getInfoString($flags);$/;"	v
info	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $info = ':2,';$/;"	v
key	library\Zend\Mail\Storage\Writable\Maildir.php	/^                        $key = $key == 'C' ? 'count' : 'size';$/;"	v
key	library\Zend\Mail\Storage\Writable\Maildir.php	/^                    $key = $key == 'C' ? 'count' : 'size';$/;"	v
key	library\Zend\Mail\Storage\Writable\Maildir.php	/^                    $key = $member[strlen($member) - 1];$/;"	v
key	library\Zend\Mail\Storage\Writable\Maildir.php	/^                $key = $member[strlen($member) - 1];$/;"	v
localName	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $localName = $parent ? substr($folder, strlen($parent) + 1) : $folder;$/;"	v
localName	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $localName = $parent ? substr($name, strlen($parent) + 1) : $name;$/;"	v
maildirsize	library\Zend\Mail\Storage\Writable\Maildir.php	/^                $maildirsize = '';$/;"	v
maildirsize	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $maildirsize = explode("\\n", $maildirsize);$/;"	v
maildirsize	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $maildirsize = fread($fh, 5120);$/;"	v
maildirsize	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $maildirsize = '';$/;"	v
max_tries	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $max_tries = 5;$/;"	v
messages	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $messages   = $result['count'];$/;"	v
messages	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $messages   = 0;$/;"	v
messages	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $messages = 0;$/;"	v
name	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $name = $name->getGlobalName();$/;"	v
name	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $name = substr($name, 6);$/;"	v
name	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $name = trim($name, $this->_delim);$/;"	v
newName	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $newName = substr($newName, 6);$/;"	v
newName	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $newName = trim($newName, $this->_delim);$/;"	v
new_file	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $new_file = $temp_file['dirname'] . DIRECTORY_SEPARATOR . 'cur' . DIRECTORY_SEPARATOR . $temp_file['uniq'] . $info;$/;"	v
new_filename	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $new_filename = $temp_file['dirname'] . DIRECTORY_SEPARATOR;$/;"	v
new_filename	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $new_filename = dirname(dirname($filedata['filename'])) . DIRECTORY_SEPARATOR . 'cur' . DIRECTORY_SEPARATOR . "$filedata[uniq]$info";$/;"	v
newdir	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $newdir = $this->createFolder($newName);$/;"	v
oldName	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $oldName = $oldName->getGlobalName();$/;"	v
oldName	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $oldName = substr($oldName, 6);$/;"	v
oldName	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $oldName = trim($oldName, $this->_delim);$/;"	v
old_file	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $old_file = $filedata['filename'];$/;"	v
olddir	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $olddir = $this->_rootdir . '.' . $folder;$/;"	v
over_quota	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $over_quota = $over_quota || (isset($quota['count']) && $messages   > $quota['count']);$/;"	v
over_quota	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $over_quota = $over_quota || (isset($quota['size'])  && $total_size > $quota['size']);$/;"	v
over_quota	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $over_quota = false;$/;"	v
over_quota	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $over_quota = $over_quota || (isset($quota['count']) && $messages   > $quota['count']);$/;"	v
over_quota	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $over_quota = $over_quota || (isset($quota['size'])  && $total_size > $quota['size']);$/;"	v
over_quota	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $over_quota = false;$/;"	v
params	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $params = (object)$params;$/;"	v
parent	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $parent = substr($folder, 0, strrpos($folder, $this->_delim));$/;"	v
parent	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $parent = null;$/;"	v
parent	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $parent = strpos($name, $this->_delim) ? substr($name, 0, strrpos($name, $this->_delim)) : null;$/;"	v
quota	library\Zend\Mail\Storage\Writable\Maildir.php	/^                $quota = $this->_quota;$/;"	v
quota	library\Zend\Mail\Storage\Writable\Maildir.php	/^                $quota = $this->getQuota(true);$/;"	v
quota	library\Zend\Mail\Storage\Writable\Maildir.php	/^                $quota = array();$/;"	v
quota	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $quota      = $result['quota'];$/;"	v
quota	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $quota = $this->_quota;$/;"	v
quota	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $quota = array();$/;"	v
result	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $result = $this->_calculateMaildirsize();$/;"	v
result	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $result = $this->_calculateQuota($forceRecalc);$/;"	v
size	library\Zend\Mail\Storage\Writable\Maildir.php	/^                    $size = filesize($dirname . $entry);$/;"	v
size	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $size = filesize($filename);$/;"	v
size	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $size = (int)$size;$/;"	v
size	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $size = filesize($old_file);$/;"	v
size	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $size = filesize($temp_file['filename']);$/;"	v
subdir	library\Zend\Mail\Storage\Writable\Maildir.php	/^                $subdir = '';$/;"	v
subdir	library\Zend\Mail\Storage\Writable\Maildir.php	/^                $subdir = '.' . $subdir;$/;"	v
subdir	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $subdir = $folder->getGlobalName();$/;"	v
subdir	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $subdir = DIRECTORY_SEPARATOR . $subdir;$/;"	v
temp_file	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $temp_file = $this->_createTmpFile($folder->getGlobalName());$/;"	v
timestamps	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $timestamps = array();$/;"	v
tmp	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $tmp = $this->_createTmpFile();$/;"	v
tmpdir	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $tmpdir = $this->_rootdir . '.' . $folder . DIRECTORY_SEPARATOR . 'tmp' . DIRECTORY_SEPARATOR;$/;"	v
tmpdir	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $tmpdir = $this->_rootdir . DIRECTORY_SEPARATOR . 'tmp' . DIRECTORY_SEPARATOR;$/;"	v
total_size	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $total_size = $result['size'];$/;"	v
total_size	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $total_size = 0;$/;"	v
type	library\Zend\Mail\Storage\Writable\Maildir.php	/^                $type = $type == 'count' ? 'C' : 'S';$/;"	v
uniq	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $uniq = $this->_createUniqueId();$/;"	v
wanted_flags	library\Zend\Mail\Storage\Writable\Maildir.php	/^            $wanted_flags = implode(', ', array_keys($wanted_flags));$/;"	v
wanted_flags	library\Zend\Mail\Storage\Writable\Maildir.php	/^        $wanted_flags = array_flip($flags);$/;"	v
body	library\Zend\Mail\Transport\Abstract.php	/^            $body = $boundaryLine$/;"	v
boundary	library\Zend\Mail\Transport\Abstract.php	/^            $boundary = $mime->boundary();$/;"	v
boundary	library\Zend\Mail\Transport\Abstract.php	/^            $boundary = $this->_parts[0]->boundary;$/;"	v
boundary	library\Zend\Mail\Transport\Abstract.php	/^        $boundary = null;$/;"	v
boundaryEnd	library\Zend\Mail\Transport\Abstract.php	/^            $boundaryEnd  = $mime->mimeEnd($this->EOL);$/;"	v
boundaryLine	library\Zend\Mail\Transport\Abstract.php	/^            $boundaryLine = $mime->boundaryLine($this->EOL);$/;"	v
count	library\Zend\Mail\Transport\Abstract.php	/^        $count    = count($this->_parts);$/;"	v
headers	library\Zend\Mail\Transport\Abstract.php	/^        $headers = $body->getHeadersArray($this->EOL);$/;"	v
item	library\Zend\Mail\Transport\Abstract.php	/^        $item = $prefix . ': ' . $item;$/;"	v
message	library\Zend\Mail\Transport\Abstract.php	/^        $message = new Zend_Mime_Message();$/;"	v
mime	library\Zend\Mail\Transport\Abstract.php	/^            $mime     = new Zend_Mime($this->_mail->getMimeBoundary());$/;"	v
mime	library\Zend\Mail\Transport\Abstract.php	/^            $mime = new Zend_Mime(null);$/;"	v
mime	library\Zend\Mail\Transport\Abstract.php	/^        $mime               = $mail->getMime();$/;"	v
mp	library\Zend\Mail\Transport\Abstract.php	/^            $mp           = new Zend_Mime_Part($body);$/;"	v
sane	library\Zend\Mail\Transport\Abstract.php	/^                $sane = false;$/;"	v
sane	library\Zend\Mail\Transport\Abstract.php	/^        $sane = true;$/;"	v
type	library\Zend\Mail\Transport\Abstract.php	/^                    $type = Zend_Mime::MULTIPART_ALTERNATIVE;$/;"	v
type	library\Zend\Mail\Transport\Abstract.php	/^                    $type = Zend_Mime::MULTIPART_MIXED;$/;"	v
type	library\Zend\Mail\Transport\Abstract.php	/^            $type = $this->_mail->getType();$/;"	v
value	library\Zend\Mail\Transport\Abstract.php	/^                $value = implode(',' . $this->EOL . ' ', $content);$/;"	v
Zend_Mail_Transport_Exception	library\Zend\Mail\Transport\Exception.php	/^class Zend_Mail_Transport_Exception extends Zend_Mail_Exception$/;"	c
Zend_Mail_Transport_File	library\Zend\Mail\Transport\File.php	/^class Zend_Mail_Transport_File extends Zend_Mail_Transport_Abstract$/;"	c
email	library\Zend\Mail\Transport\File.php	/^        $email = $this->header . $this->EOL . $this->body;$/;"	v
file	library\Zend\Mail\Transport\File.php	/^        $file = $this->_path . DIRECTORY_SEPARATOR . call_user_func($this->_callback, $this);$/;"	v
options	library\Zend\Mail\Transport\File.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Mail\Transport\File.php	/^            $options = array();$/;"	v
Zend_Mail_Transport_Sendmail	library\Zend\Mail\Transport\Sendmail.php	/^class Zend_Mail_Transport_Sendmail extends Zend_Mail_Transport_Abstract$/;"	c
parameters	library\Zend\Mail\Transport\Sendmail.php	/^            $parameters = $parameters->toArray();$/;"	v
parameters	library\Zend\Mail\Transport\Sendmail.php	/^            $parameters = implode(' ', $parameters);$/;"	v
result	library\Zend\Mail\Transport\Sendmail.php	/^            $result = mail($/;"	v
Zend_Mail_Transport_Smtp	library\Zend\Mail\Transport\Smtp.php	/^class Zend_Mail_Transport_Smtp extends Zend_Mail_Transport_Abstract$/;"	c
connectionClass	library\Zend\Mail\Transport\Smtp.php	/^            $connectionClass = 'Zend_Mail_Protocol_Smtp';$/;"	v
Zend_Markup	library\Zend\Markup.php	/^class Zend_Markup$/;"	c
parser	library\Zend\Markup.php	/^        $parser            = new $parserClass();$/;"	v
parserClass	library\Zend\Markup.php	/^        $parserClass   = self::getParserLoader()->load($parser);$/;"	v
renderer	library\Zend\Markup.php	/^        $renderer          = new $rendererClass($options);$/;"	v
rendererClass	library\Zend\Markup.php	/^        $rendererClass = self::getRendererLoader()->load($renderer);$/;"	v
Zend_Markup_Exception	library\Zend\Markup\Exception.php	/^class Zend_Markup_Exception extends Zend_Exception$/;"	c
Zend_Markup_Parser_Bbcode	library\Zend\Markup\Parser\Bbcode.php	/^class Zend_Markup_Parser_Bbcode implements Zend_Markup_Parser_ParserInterface$/;"	c
attribute	library\Zend\Markup\Parser\Bbcode.php	/^                        $attribute           = $this->_temp['name'];$/;"	v
attribute	library\Zend\Markup\Parser\Bbcode.php	/^                        $attribute = $matches['attribute'];$/;"	v
attribute	library\Zend\Markup\Parser\Bbcode.php	/^        $attribute = '';$/;"	v
child	library\Zend\Markup\Parser\Bbcode.php	/^                        $child = new Zend_Markup_Token($/;"	v
matches	library\Zend\Markup\Parser\Bbcode.php	/^                    $matches = array();$/;"	v
oldItems	library\Zend\Markup\Parser\Bbcode.php	/^                $oldItems = array();$/;"	v
regex	library\Zend\Markup\Parser\Bbcode.php	/^                    $regex   = '#\\G((?<end>\\s*\\])|\\s+(?<attribute>[' . self::NAME_CHARSET . ']+)(?<eq>=?))#';$/;"	v
regex	library\Zend\Markup\Parser\Bbcode.php	/^                    $regex   = '#\\G((?<quote>"|\\')(?<valuequote>.*?)\\\\2|(?<value>[^\\]\\s]+))#';$/;"	v
regex	library\Zend\Markup\Parser\Bbcode.php	/^                    $regex   = '#\\G(?<text>[^\\[]*)(?<open>\\[(?<name>[' . self::NAME_CHARSET . ']+)?)?#';$/;"	v
Zend_Markup_Parser_Exception	library\Zend\Markup\Parser\Exception.php	/^class Zend_Markup_Parser_Exception extends Zend_Markup_Exception$/;"	c
Zend_Markup_Parser_Textile	library\Zend\Markup\Parser\Textile.php	/^class Zend_Markup_Parser_Textile implements Zend_Markup_Parser_ParserInterface$/;"	c
acronym	library\Zend\Markup\Parser\Textile.php	/^                    $acronym = '(?<acronym>[A-Z]{2,})\\((?<title>[^\\)]+)\\)';$/;"	v
attributes	library\Zend\Markup\Parser\Textile.php	/^                            $attributes = $this->_extractAttributes($matches);$/;"	v
attributes	library\Zend\Markup\Parser\Textile.php	/^                        $attributes = $this->_extractAttributes($matches);$/;"	v
attributes	library\Zend\Markup\Parser\Textile.php	/^                        $attributes = array();$/;"	v
attributes	library\Zend\Markup\Parser\Textile.php	/^                    $attributes = $this->_extractAttributes($matches);$/;"	v
attributes	library\Zend\Markup\Parser\Textile.php	/^        $attributes = array();$/;"	v
attrsMatch	library\Zend\Markup\Parser\Textile.php	/^        $attrsMatch = implode('|', array($/;"	v
child	library\Zend\Markup\Parser\Textile.php	/^                            $child = new Zend_Markup_Token($/;"	v
child	library\Zend\Markup\Parser\Textile.php	/^                    $child = new Zend_Markup_Token($/;"	v
inside	library\Zend\Markup\Parser\Textile.php	/^                        $inside = false;$/;"	v
inside	library\Zend\Markup\Parser\Textile.php	/^                $inside = true;$/;"	v
inside	library\Zend\Markup\Parser\Textile.php	/^        $inside = true;$/;"	v
matches	library\Zend\Markup\Parser\Textile.php	/^                    $matches = array(); \/\/[^\\n*_?+~%@!-] (\\()? [^()]+ (?(1)\\))$/;"	v
matches	library\Zend\Markup\Parser\Textile.php	/^                    $matches = array(); \/\/[^\\n*_?+~%@!-]$/;"	v
name	library\Zend\Markup\Parser\Textile.php	/^                                $name = 'acronym';$/;"	v
name	library\Zend\Markup\Parser\Textile.php	/^                                $name = 'url';$/;"	v
name	library\Zend\Markup\Parser\Textile.php	/^                            $name               = 'list';$/;"	v
name	library\Zend\Markup\Parser\Textile.php	/^                            $name = 'list';$/;"	v
name	library\Zend\Markup\Parser\Textile.php	/^                        $name               = 'list';$/;"	v
name	library\Zend\Markup\Parser\Textile.php	/^                        $name       = $matches['name'];$/;"	v
name	library\Zend\Markup\Parser\Textile.php	/^                        $name = 'list';$/;"	v
name	library\Zend\Markup\Parser\Textile.php	/^                    $name       = $matches['name'];$/;"	v
paragraph	library\Zend\Markup\Parser\Textile.php	/^        $paragraph = '';$/;"	v
regex	library\Zend\Markup\Parser\Textile.php	/^                    $regex   = "#\\G(?<name>(h[1-6])|(?:\\#|\\*))(?:{$attrsMatch})*(?(2)\\.\\s|\\s)#si";$/;"	v
regex	library\Zend\Markup\Parser\Textile.php	/^                    $regex   = "#\\G(?<name>(h[1-6]|p)|(?:\\#|\\*))(?:{$attrsMatch})*(?(2)\\.\\s|\\s)#i";$/;"	v
regex	library\Zend\Markup\Parser\Textile.php	/^                    $regex   = '#\\G(?<text>.*?)(?:'$/;"	v
state	library\Zend\Markup\Parser\Textile.php	/^                        $state    = self::STATE_SCAN;$/;"	v
state	library\Zend\Markup\Parser\Textile.php	/^                        $state   = self::STATE_NEWLINE;$/;"	v
state	library\Zend\Markup\Parser\Textile.php	/^                        $state = self::STATE_NEW_PARAGRAPH;$/;"	v
state	library\Zend\Markup\Parser\Textile.php	/^                        $state = self::STATE_SCAN;$/;"	v
state	library\Zend\Markup\Parser\Textile.php	/^                    $state = self::STATE_SCAN;$/;"	v
state	library\Zend\Markup\Parser\Textile.php	/^        $state    = self::STATE_NEW_PARAGRAPH;$/;"	v
Zend_Markup_Renderer_Exception	library\Zend\Markup\Renderer\Exception.php	/^class Zend_Markup_Renderer_Exception extends Zend_Markup_Exception$/;"	c
Zend_Markup_Renderer_Html	library\Zend\Markup\Renderer\Html.php	/^class Zend_Markup_Renderer_Html extends Zend_Markup_Renderer_RendererAbstract$/;"	c
attributes	library\Zend\Markup\Renderer\Html.php	/^        $attributes = array_merge(self::$_defaultAttributes, $attributes);$/;"	v
attrs	library\Zend\Markup\Renderer\Html.php	/^            $attrs = self::renderAttributes($token, $markup['attributes']);$/;"	v
colors	library\Zend\Markup\Renderer\Html.php	/^        $colors = array($/;"	v
components	library\Zend\Markup\Renderer\Html.php	/^                $components = @parse_url($uri);$/;"	v
options	library\Zend\Markup\Renderer\Html.php	/^            $options = $options->toArray();$/;"	v
return	library\Zend\Markup\Renderer\Html.php	/^        $return = '';$/;"	v
scheme	library\Zend\Markup\Renderer\Html.php	/^        $scheme = strtolower($matches[1]);$/;"	v
tokenAttributes	library\Zend\Markup\Renderer\Html.php	/^        $tokenAttributes = $token->getAttributes();$/;"	v
Zend_Markup_Renderer_Html_Code	library\Zend\Markup\Renderer\Html\Code.php	/^class Zend_Markup_Renderer_Html_Code extends Zend_Markup_Renderer_Html_HtmlAbstract$/;"	c
Zend_Markup_Renderer_Html_Img	library\Zend\Markup\Renderer\Html\Img.php	/^class Zend_Markup_Renderer_Html_Img extends Zend_Markup_Renderer_Html_HtmlAbstract$/;"	c
alt	library\Zend\Markup\Renderer\Html\Img.php	/^                $alt = substr($alt, 1, strpos($alt, '.') - 1);$/;"	v
alt	library\Zend\Markup\Renderer\Html\Img.php	/^            $alt = $token->getAttribute('alt');$/;"	v
alt	library\Zend\Markup\Renderer\Html\Img.php	/^            $alt = rtrim($text, '\/');$/;"	v
alt	library\Zend\Markup\Renderer\Html\Img.php	/^            $alt = strrchr($alt, '\/');$/;"	v
alt	library\Zend\Markup\Renderer\Html\Img.php	/^        $alt = htmlentities($alt, ENT_QUOTES, Zend_Markup_Renderer_Html::getEncoding());$/;"	v
uri	library\Zend\Markup\Renderer\Html\Img.php	/^            $uri = 'http:\/\/' . $uri;$/;"	v
uri	library\Zend\Markup\Renderer\Html\Img.php	/^        $uri = $text;$/;"	v
uri	library\Zend\Markup\Renderer\Html\Img.php	/^        $uri = htmlentities($uri, ENT_QUOTES, Zend_Markup_Renderer_Html::getEncoding());$/;"	v
Zend_Markup_Renderer_Html_List	library\Zend\Markup\Renderer\Html\List.php	/^class Zend_Markup_Renderer_Html_List extends Zend_Markup_Renderer_Html_HtmlAbstract$/;"	c
type	library\Zend\Markup\Renderer\Html\List.php	/^                        $type = $token->getAttribute('list');$/;"	v
type	library\Zend\Markup\Renderer\Html\List.php	/^                        $type = 'decimal';$/;"	v
type	library\Zend\Markup\Renderer\Html\List.php	/^                        $type = 'lower-alpha';$/;"	v
type	library\Zend\Markup\Renderer\Html\List.php	/^                        $type = 'lower-greek';$/;"	v
type	library\Zend\Markup\Renderer\Html\List.php	/^                        $type = 'lower-roman';$/;"	v
type	library\Zend\Markup\Renderer\Html\List.php	/^                        $type = 'upper-alpha';$/;"	v
type	library\Zend\Markup\Renderer\Html\List.php	/^                        $type = 'upper-roman';$/;"	v
type	library\Zend\Markup\Renderer\Html\List.php	/^                $type = 'decimal-leading-zero';$/;"	v
type	library\Zend\Markup\Renderer\Html\List.php	/^        $type = null;$/;"	v
Zend_Markup_Renderer_Html_Url	library\Zend\Markup\Renderer\Html\Url.php	/^class Zend_Markup_Renderer_Html_Url extends Zend_Markup_Renderer_Html_HtmlAbstract$/;"	c
attributes	library\Zend\Markup\Renderer\Html\Url.php	/^        $attributes = Zend_Markup_Renderer_Html::renderAttributes($token);$/;"	v
uri	library\Zend\Markup\Renderer\Html\Url.php	/^            $uri = $text;$/;"	v
uri	library\Zend\Markup\Renderer\Html\Url.php	/^            $uri = $token->getAttribute('url');$/;"	v
uri	library\Zend\Markup\Renderer\Html\Url.php	/^            $uri = 'http:\/\/' . $uri;$/;"	v
uri	library\Zend\Markup\Renderer\Html\Url.php	/^        $uri = htmlentities($uri, ENT_QUOTES, Zend_Markup_Renderer_Html::getEncoding());$/;"	v
class	library\Zend\Markup\Renderer\RendererAbstract.php	/^                $class = $this->getPluginLoader()->load($name);$/;"	v
defaultFilter	library\Zend\Markup\Renderer\RendererAbstract.php	/^            $defaultFilter = new Zend_Filter();$/;"	v
empty	library\Zend\Markup\Renderer\RendererAbstract.php	/^        $empty  = (is_array($markup) && array_key_exists('empty', $markup) && $markup['empty']);$/;"	v
filter	library\Zend\Markup\Renderer\RendererAbstract.php	/^                $filter = $options['filter'];$/;"	v
filter	library\Zend\Markup\Renderer\RendererAbstract.php	/^                $filter = $this->getDefaultFilter();$/;"	v
filter	library\Zend\Markup\Renderer\RendererAbstract.php	/^                $filter = false;$/;"	v
filter	library\Zend\Markup\Renderer\RendererAbstract.php	/^            $filter = $this->getDefaultFilter();$/;"	v
markup	library\Zend\Markup\Renderer\RendererAbstract.php	/^        $markup = $this->_resolveMarkupName($markup);$/;"	v
markup	library\Zend\Markup\Renderer\RendererAbstract.php	/^        $markup = (!$name) ? false : $this->_markups[$name];$/;"	v
name	library\Zend\Markup\Renderer\RendererAbstract.php	/^            $name = $this->_markups[$name]['name'];$/;"	v
name	library\Zend\Markup\Renderer\RendererAbstract.php	/^        $name   = $this->_getMarkupName($token);$/;"	v
name	library\Zend\Markup\Renderer\RendererAbstract.php	/^        $name = $token->getName();$/;"	v
oldFilter	library\Zend\Markup\Renderer\RendererAbstract.php	/^            $oldFilter = clone $oldFilter;$/;"	v
oldFilter	library\Zend\Markup\Renderer\RendererAbstract.php	/^        $oldFilter = $this->_filter;$/;"	v
oldFilter	library\Zend\Markup\Renderer\RendererAbstract.php	/^        $oldFilter = $this->getFilter($markup);$/;"	v
oldGroup	library\Zend\Markup\Renderer\RendererAbstract.php	/^        $oldGroup  = $this->_group;$/;"	v
oldToken	library\Zend\Markup\Renderer\RendererAbstract.php	/^            $oldToken  = $this->_token;$/;"	v
oldToken	library\Zend\Markup\Renderer\RendererAbstract.php	/^            $oldToken = $this->_token;$/;"	v
options	library\Zend\Markup\Renderer\RendererAbstract.php	/^            $options = $options->toArray();$/;"	v
return	library\Zend\Markup\Renderer\RendererAbstract.php	/^                $return = $markup['callback']->convert($token, $this->_render($token));$/;"	v
return	library\Zend\Markup\Renderer\RendererAbstract.php	/^                $return = $markup['callback']->convert($token, null);$/;"	v
return	library\Zend\Markup\Renderer\RendererAbstract.php	/^                $return = $this->_executeReplace($token, $markup);$/;"	v
return	library\Zend\Markup\Renderer\RendererAbstract.php	/^                $return = $this->_executeSingleReplace($token, $markup);$/;"	v
return	library\Zend\Markup\Renderer\RendererAbstract.php	/^            $return   = $this->_filter($token->getTag()) . $this->_render($token) . $token->getStopper();$/;"	v
return	library\Zend\Markup\Renderer\RendererAbstract.php	/^            $return = $this->_filter($token->getTag()) . $this->_render($token) . $token->getStopper();$/;"	v
return	library\Zend\Markup\Renderer\RendererAbstract.php	/^        $return    = '';$/;"	v
return	library\Zend\Markup\Renderer\RendererAbstract.php	/^        $return = '';$/;"	v
root	library\Zend\Markup\Renderer\RendererAbstract.php	/^        $root = $tokenList->current();$/;"	v
tag	library\Zend\Markup\Renderer\RendererAbstract.php	/^            $tag = $this->_markups[$tag['name']];$/;"	v
tag	library\Zend\Markup\Renderer\RendererAbstract.php	/^        $tag = $this->_markups[$token->getName()];$/;"	v
tokenList	library\Zend\Markup\Renderer\RendererAbstract.php	/^            $tokenList = $this->getParser()->parse($value);$/;"	v
tokenList	library\Zend\Markup\Renderer\RendererAbstract.php	/^            $tokenList = $value;$/;"	v
Zend_Markup_Token	library\Zend\Markup\Token.php	/^class Zend_Markup_Token$/;"	c
name	library\Zend\Markup\Token.php	/^        $name = '',$/;"	v
Zend_Markup_TokenList	library\Zend\Markup\TokenList.php	/^class Zend_Markup_TokenList implements RecursiveIterator$/;"	c
length	library\Zend\Measure\Abstract.php	/^                    $length = 26 - $i;$/;"	v
length	library\Zend\Measure\Abstract.php	/^            $length  = 0;$/;"	v
locale	library\Zend\Measure\Abstract.php	/^                $locale = Zend_Registry::get('Zend_Locale');$/;"	v
locale	library\Zend\Measure\Abstract.php	/^            $locale = $this->_locale;$/;"	v
locale	library\Zend\Measure\Abstract.php	/^            $locale = $type;$/;"	v
locale	library\Zend\Measure\Abstract.php	/^            $locale = new Zend_Locale($locale);$/;"	v
locale	library\Zend\Measure\Abstract.php	/^            $locale = new Zend_Locale();$/;"	v
return	library\Zend\Measure\Abstract.php	/^            $return = $this->_value;$/;"	v
return	library\Zend\Measure\Abstract.php	/^            $return = Zend_Locale_Math::round($this->_value, $round);$/;"	v
slength	library\Zend\Measure\Abstract.php	/^            $slength = strlen($value);$/;"	v
type	library\Zend\Measure\Abstract.php	/^            $type = $this->_units['STANDARD'];$/;"	v
type	library\Zend\Measure\Abstract.php	/^            $type = null;$/;"	v
value	library\Zend\Measure\Abstract.php	/^                                $value = call_user_func(Zend_Locale_Math::$div, $value, $found, 25);$/;"	v
value	library\Zend\Measure\Abstract.php	/^                            $value = call_user_func(Zend_Locale_Math::$add, $value, $found, 25);$/;"	v
value	library\Zend\Measure\Abstract.php	/^                            $value = call_user_func(Zend_Locale_Math::$mul, $value, $found, 25);$/;"	v
value	library\Zend\Measure\Abstract.php	/^                            $value = call_user_func(Zend_Locale_Math::$sub, $value, $found, 25);$/;"	v
value	library\Zend\Measure\Abstract.php	/^                $value = call_user_func(Zend_Locale_Math::$div, $value, $this->_units[$type][0], 25);$/;"	v
value	library\Zend\Measure\Abstract.php	/^                $value = call_user_func(Zend_Locale_Math::$mul, $value, $this->_units[$this->getType()][0], 25);$/;"	v
value	library\Zend\Measure\Abstract.php	/^            $value = $this->_value;$/;"	v
value	library\Zend\Measure\Abstract.php	/^            $value = Zend_Locale_Format::getNumber($value, array('locale' => $locale));$/;"	v
value	library\Zend\Measure\Abstract.php	/^        $value  = $this->getValue(-1) + $object->getValue(-1);$/;"	v
value	library\Zend\Measure\Abstract.php	/^        $value  = $this->getValue(-1) - $object->getValue(-1);$/;"	v
Zend_Measure_Acceleration	library\Zend\Measure\Acceleration.php	/^class Zend_Measure_Acceleration extends Zend_Measure_Abstract$/;"	c
Zend_Measure_Angle	library\Zend\Measure\Angle.php	/^class Zend_Measure_Angle extends Zend_Measure_Abstract$/;"	c
Zend_Measure_Area	library\Zend\Measure\Area.php	/^class Zend_Measure_Area extends Zend_Measure_Abstract$/;"	c
Zend_Measure_Binary	library\Zend\Measure\Binary.php	/^class Zend_Measure_Binary extends Zend_Measure_Abstract$/;"	c
Zend_Measure_Capacitance	library\Zend\Measure\Capacitance.php	/^class Zend_Measure_Capacitance extends Zend_Measure_Abstract$/;"	c
Zend_Measure_Cooking_Volume	library\Zend\Measure\Cooking\Volume.php	/^class Zend_Measure_Cooking_Volume extends Zend_Measure_Abstract$/;"	c
Zend_Measure_Cooking_Weight	library\Zend\Measure\Cooking\Weight.php	/^class Zend_Measure_Cooking_Weight extends Zend_Measure_Abstract$/;"	c
Zend_Measure_Current	library\Zend\Measure\Current.php	/^class Zend_Measure_Current extends Zend_Measure_Abstract$/;"	c
Zend_Measure_Density	library\Zend\Measure\Density.php	/^class Zend_Measure_Density extends Zend_Measure_Abstract$/;"	c
Zend_Measure_Energy	library\Zend\Measure\Energy.php	/^class Zend_Measure_Energy extends Zend_Measure_Abstract$/;"	c
Zend_Measure_Exception	library\Zend\Measure\Exception.php	/^class Zend_Measure_Exception extends Zend_Exception$/;"	c
Zend_Measure_Flow_Mass	library\Zend\Measure\Flow\Mass.php	/^class Zend_Measure_Flow_Mass extends Zend_Measure_Abstract$/;"	c
Zend_Measure_Flow_Mole	library\Zend\Measure\Flow\Mole.php	/^class Zend_Measure_Flow_Mole extends Zend_Measure_Abstract$/;"	c
Zend_Measure_Flow_Volume	library\Zend\Measure\Flow\Volume.php	/^class Zend_Measure_Flow_Volume extends Zend_Measure_Abstract$/;"	c
Zend_Measure_Force	library\Zend\Measure\Force.php	/^class Zend_Measure_Force extends Zend_Measure_Abstract$/;"	c
Zend_Measure_Frequency	library\Zend\Measure\Frequency.php	/^class Zend_Measure_Frequency extends Zend_Measure_Abstract$/;"	c
Zend_Measure_Illumination	library\Zend\Measure\Illumination.php	/^class Zend_Measure_Illumination extends Zend_Measure_Abstract$/;"	c
Zend_Measure_Length	library\Zend\Measure\Length.php	/^class Zend_Measure_Length extends Zend_Measure_Abstract$/;"	c
Zend_Measure_Lightness	library\Zend\Measure\Lightness.php	/^class Zend_Measure_Lightness extends Zend_Measure_Abstract$/;"	c
Zend_Measure_Number	library\Zend\Measure\Number.php	/^class Zend_Measure_Number extends Zend_Measure_Abstract$/;"	c
base	library\Zend\Measure\Number.php	/^            $base     = $this->_units[$type][0];$/;"	v
count	library\Zend\Measure\Number.php	/^            $count    = 200;$/;"	v
i	library\Zend\Measure\Number.php	/^            $i        = 0;$/;"	v
input	library\Zend\Measure\Number.php	/^            $input = preg_replace(array_keys(self::$_romanconvert), array_values(self::$_romanconvert), $input);$/;"	v
input	library\Zend\Measure\Number.php	/^            $input = strtoupper($input);$/;"	v
length	library\Zend\Measure\Number.php	/^            $length = strlen($input);$/;"	v
locale	library\Zend\Measure\Number.php	/^            $locale = $this->_locale;$/;"	v
locale	library\Zend\Measure\Number.php	/^            $locale = $type;$/;"	v
locale	library\Zend\Measure\Number.php	/^            $locale = new Zend_Locale($locale);$/;"	v
locale	library\Zend\Measure\Number.php	/^            $locale = new Zend_Locale();$/;"	v
newvalue	library\Zend\Measure\Number.php	/^                $newvalue = '0';$/;"	v
newvalue	library\Zend\Measure\Number.php	/^                $newvalue = strtoupper(dechex($target)) . $newvalue;$/;"	v
newvalue	library\Zend\Measure\Number.php	/^            $newvalue = '';$/;"	v
newvalue	library\Zend\Measure\Number.php	/^            $newvalue = str_replace('\/', '', preg_replace(array_values(self::$_romanconvert), array_keys(self::$_romanconvert), $newvalue));$/;"	v
num	library\Zend\Measure\Number.php	/^                $num = self::$_roman[$split[$x]];$/;"	v
romankey	library\Zend\Measure\Number.php	/^            $romankey = array_keys(array_reverse(self::$_roman));$/;"	v
romanval	library\Zend\Measure\Number.php	/^            $romanval = array_values(array_reverse(self::$_roman));$/;"	v
split	library\Zend\Measure\Number.php	/^            $split  = str_split($input);$/;"	v
split	library\Zend\Measure\Number.php	/^            $split = preg_split('\/\/', strrev($input), -1, PREG_SPLIT_NO_EMPTY);$/;"	v
target	library\Zend\Measure\Number.php	/^                $target = call_user_func(Zend_Locale_Math::$mod, $value, $base);$/;"	v
tempvalue	library\Zend\Measure\Number.php	/^        $tempvalue = $value;$/;"	v
type	library\Zend\Measure\Number.php	/^            $type = $this->_units['STANDARD'];$/;"	v
type	library\Zend\Measure\Number.php	/^            $type = null;$/;"	v
value	library\Zend\Measure\Number.php	/^                    $value = Zend_Locale_Format::getInteger($value, array('locale' => $locale));$/;"	v
value	library\Zend\Measure\Number.php	/^                    $value = call_user_func(Zend_Locale_Math::$sqrt, call_user_func(Zend_Locale_Math::$pow, $value, 2));$/;"	v
value	library\Zend\Measure\Number.php	/^                $value     = call_user_func(Zend_Locale_Math::$add, $value,$/;"	v
value	library\Zend\Measure\Number.php	/^                $value = $ergebnis[0];$/;"	v
value	library\Zend\Measure\Number.php	/^                $value = call_user_func(Zend_Locale_Math::$div, $value, $base, 0);$/;"	v
value	library\Zend\Measure\Number.php	/^                $value = call_user_func(Zend_Locale_Math::$sub, $value, $target, 0);$/;"	v
value	library\Zend\Measure\Number.php	/^        $value = $this->_fromDecimal($value, $type);$/;"	v
value	library\Zend\Measure\Number.php	/^        $value = $this->_toDecimal($this->getValue(-1), $this->getType(-1));$/;"	v
value	library\Zend\Measure\Number.php	/^        $value = '';$/;"	v
Zend_Measure_Power	library\Zend\Measure\Power.php	/^class Zend_Measure_Power extends Zend_Measure_Abstract$/;"	c
Zend_Measure_Pressure	library\Zend\Measure\Pressure.php	/^class Zend_Measure_Pressure extends Zend_Measure_Abstract$/;"	c
Zend_Measure_Speed	library\Zend\Measure\Speed.php	/^class Zend_Measure_Speed extends Zend_Measure_Abstract$/;"	c
Zend_Measure_Temperature	library\Zend\Measure\Temperature.php	/^class Zend_Measure_Temperature extends Zend_Measure_Abstract$/;"	c
Zend_Measure_Time	library\Zend\Measure\Time.php	/^class Zend_Measure_Time extends Zend_Measure_Abstract$/;"	c
Zend_Measure_Torque	library\Zend\Measure\Torque.php	/^class Zend_Measure_Torque extends Zend_Measure_Abstract$/;"	c
Zend_Measure_Viscosity_Dynamic	library\Zend\Measure\Viscosity\Dynamic.php	/^class Zend_Measure_Viscosity_Dynamic extends Zend_Measure_Abstract$/;"	c
Zend_Measure_Viscosity_Kinematic	library\Zend\Measure\Viscosity\Kinematic.php	/^class Zend_Measure_Viscosity_Kinematic extends Zend_Measure_Abstract$/;"	c
Zend_Measure_Volume	library\Zend\Measure\Volume.php	/^class Zend_Measure_Volume extends Zend_Measure_Abstract$/;"	c
Zend_Measure_Weight	library\Zend\Measure\Weight.php	/^class Zend_Measure_Weight extends Zend_Measure_Abstract$/;"	c
Zend_Memory	library\Zend\Memory.php	/^class Zend_Memory$/;"	c
backend	library\Zend\Memory.php	/^                $backend = $zendCacheBackend;$/;"	v
backendClass	library\Zend\Memory.php	/^        $backendClass = 'Zend_Cache_Backend_' . $backend;$/;"	v
backendIsFound	library\Zend\Memory.php	/^                $backendIsFound = true;$/;"	v
backendIsFound	library\Zend\Memory.php	/^        $backendIsFound = false;$/;"	v
backendObject	library\Zend\Memory.php	/^        $backendObject = new $backendClass($backendOptions);$/;"	v
Zend_Memory_AccessController	library\Zend\Memory\AccessController.php	/^class Zend_Memory_AccessController implements Zend_Memory_Container_Interface$/;"	c
Zend_Memory_Container_Locked	library\Zend\Memory\Container\Locked.php	/^class Zend_Memory_Container_Locked extends Zend_Memory_Container$/;"	c
Zend_Memory_Container_Movable	library\Zend\Memory\Container\Movable.php	/^class Zend_Memory_Container_Movable extends Zend_Memory_Container {$/;"	c
Zend_Memory_Exception	library\Zend\Memory\Exception.php	/^class Zend_Memory_Exception extends Zend_Exception$/;"	c
Zend_Memory_Manager	library\Zend\Memory\Manager.php	/^class Zend_Memory_Manager$/;"	c
id	library\Zend\Memory\Manager.php	/^        $id = $container->getId();$/;"	v
id	library\Zend\Memory\Manager.php	/^        $id = $this->_nextId++;$/;"	v
memoryLimitStr	library\Zend\Memory\Manager.php	/^        $memoryLimitStr = trim(ini_get('memory_limit'));$/;"	v
value	library\Zend\Memory\Manager.php	/^        $value = $this->_backend->load($this->_managerId . $id, true);$/;"	v
valueObject	library\Zend\Memory\Manager.php	/^        $valueObject = new Zend_Memory_Container_Movable($this, $id, $value);$/;"	v
Zend_Memory_Value	library\Zend\Memory\Value.php	/^class Zend_Memory_Value implements ArrayAccess {$/;"	c
Zend_Mime	library\Zend\Mime.php	/^class Zend_Mime$/;"	c
currentLine	library\Zend\Mime.php	/^            $currentLine = max(count($lines)-1, 0);$/;"	v
encodedValue	library\Zend\Mime.php	/^        $encodedValue = $prefix . $encodedValue . $suffix;$/;"	v
encodedValue	library\Zend\Mime.php	/^        $encodedValue = self::encodeBase64($str, $remainingLength, $lineEnd);$/;"	v
encodedValue	library\Zend\Mime.php	/^        $encodedValue = str_replace($lineEnd, $suffix . $lineEnd . ' ' . $prefix, $encodedValue);$/;"	v
lineEnd	library\Zend\Mime.php	/^        $lineEnd = self::LINEEND)$/;"	v
lineLength	library\Zend\Mime.php	/^        $lineLength = $lineLength-strlen($prefix)-3;$/;"	v
lineLength	library\Zend\Mime.php	/^        $lineLength = self::LINELENGTH,$/;"	v
lines	library\Zend\Mime.php	/^        $lines = array(0 => "");$/;"	v
out	library\Zend\Mime.php	/^        $out = '';$/;"	v
out	library\Zend\Mime.php	/^        $out = rtrim($out, $lineEnd);$/;"	v
out	library\Zend\Mime.php	/^        $out = rtrim($out, '=');$/;"	v
pos	library\Zend\Mime.php	/^            $pos = strrpos(substr($str, 0, $ptr), '=');$/;"	v
prefix	library\Zend\Mime.php	/^        $prefix = '=?' . $charset . '?B?';$/;"	v
prefix	library\Zend\Mime.php	/^        $prefix = sprintf('=?%s?Q?', $charset);$/;"	v
ptr	library\Zend\Mime.php	/^                $ptr = $lineLength;$/;"	v
ptr	library\Zend\Mime.php	/^                $ptr = $pos;$/;"	v
ptr	library\Zend\Mime.php	/^            $ptr = strlen($str);$/;"	v
remainingLength	library\Zend\Mime.php	/^        $remainingLength = $lineLength - strlen($prefix) - strlen($suffix);$/;"	v
str	library\Zend\Mime.php	/^            $str         = substr($str, strlen($token));$/;"	v
str	library\Zend\Mime.php	/^            $str = substr($str, $ptr);$/;"	v
str	library\Zend\Mime.php	/^        $str = rtrim($str);$/;"	v
str	library\Zend\Mime.php	/^        $str = self::_encodeQuotedPrintable($str);$/;"	v
str	library\Zend\Mime.php	/^        $str = str_replace('=', '=3D', $str);$/;"	v
str	library\Zend\Mime.php	/^        $str = str_replace(array('?', ' ', '_'), array('=3F', '=20', '=5F'), $str);$/;"	v
str	library\Zend\Mime.php	/^        $str = str_replace(self::$qpKeys, self::$qpReplaceValues, $str);$/;"	v
str	library\Zend\Mime.php	/^        $str = trim(implode($lineEnd, $lines));$/;"	v
suffix	library\Zend\Mime.php	/^        $suffix = '?=';$/;"	v
tmp	library\Zend\Mime.php	/^                $tmp = "";$/;"	v
tmp	library\Zend\Mime.php	/^        $tmp = "";$/;"	v
token	library\Zend\Mime.php	/^            $token       = self::getNextQuotedPrintableToken($str);$/;"	v
token	library\Zend\Mime.php	/^            $token = substr($str, 0, 1);$/;"	v
token	library\Zend\Mime.php	/^            $token = substr($str, 0, 3);$/;"	v
Zend_Mime_Decode	library\Zend\Mime\Decode.php	/^class Zend_Mime_Decode$/;"	c
body	library\Zend\Mime\Decode.php	/^            $body = str_replace(array("\\r", "\\n"), array('', $EOL), $message);$/;"	v
body	library\Zend\Mime\Decode.php	/^        $body = str_replace("\\r", '', $body);$/;"	v
field	library\Zend\Mime\Decode.php	/^            $field = strtok($field, ';');$/;"	v
field	library\Zend\Mime\Decode.php	/^        $field = $firstName . '=' . $field;$/;"	v
firstName	library\Zend\Mime\Decode.php	/^        $firstName = strtolower($firstName);$/;"	v
firstline	library\Zend\Mime\Decode.php	/^        $firstline = strtok($message, "\\n");$/;"	v
headers	library\Zend\Mime\Decode.php	/^            $headers = array();$/;"	v
headers	library\Zend\Mime\Decode.php	/^        $headers = iconv_mime_decode_headers($headers, ICONV_MIME_DECODE_CONTINUE_ON_ERROR);$/;"	v
lower	library\Zend\Mime\Decode.php	/^            $lower = strtolower($name);$/;"	v
name	library\Zend\Mime\Decode.php	/^            $name = strtolower($name);$/;"	v
p	library\Zend\Mime\Decode.php	/^        $p = strpos($body, '--' . $boundary . "\\n", $start);$/;"	v
p	library\Zend\Mime\Decode.php	/^        $p = strpos($body, '--' . $boundary . '--', $start);$/;"	v
parts	library\Zend\Mime\Decode.php	/^        $parts = self::splitMime($message, $boundary);$/;"	v
res	library\Zend\Mime\Decode.php	/^        $res = array();$/;"	v
result	library\Zend\Mime\Decode.php	/^        $result = array();$/;"	v
split	library\Zend\Mime\Decode.php	/^        $split = array();$/;"	v
start	library\Zend\Mime\Decode.php	/^            $start = $p + 3 + strlen($boundary);$/;"	v
start	library\Zend\Mime\Decode.php	/^        $start = $p + 3 + strlen($boundary);$/;"	v
start	library\Zend\Mime\Decode.php	/^        $start = 0;$/;"	v
wantedPart	library\Zend\Mime\Decode.php	/^        $wantedPart = strtolower($wantedPart);$/;"	v
Zend_Mime_Exception	library\Zend\Mime\Exception.php	/^class Zend_Mime_Exception extends Zend_Exception$/;"	c
Zend_Mime_Message	library\Zend\Mime\Message.php	/^class Zend_Mime_Message$/;"	c
body	library\Zend\Mime\Message.php	/^            $body = $body->getContent($EOL);$/;"	v
body	library\Zend\Mime\Message.php	/^            $body = 'This is a message in Mime Format.  If you see this, '$/;"	v
body	library\Zend\Mime\Message.php	/^            $body = array_shift($this->_parts);$/;"	v
boundaryLine	library\Zend\Mime\Message.php	/^            $boundaryLine = $mime->boundaryLine($EOL);$/;"	v
mime	library\Zend\Mime\Message.php	/^            $mime = $this->getMime();$/;"	v
newPart	library\Zend\Mime\Message.php	/^            $newPart = new Zend_Mime_Part($part['body']);$/;"	v
p	library\Zend\Mime\Message.php	/^        $p = strpos($body, '--' . $boundary . '--', $start);$/;"	v
p	library\Zend\Mime\Message.php	/^        $p = strpos($body, '--'.$boundary."\\n", $start);$/;"	v
parts	library\Zend\Mime\Message.php	/^        $parts = Zend_Mime_Decode::splitMessageStruct($message, $boundary, $EOL);$/;"	v
res	library\Zend\Mime\Message.php	/^        $res = array();$/;"	v
res	library\Zend\Mime\Message.php	/^        $res = new self();$/;"	v
start	library\Zend\Mime\Message.php	/^            $start = $p + 3 + strlen($boundary);$/;"	v
start	library\Zend\Mime\Message.php	/^        $start = $p + 3 + strlen($boundary);$/;"	v
start	library\Zend\Mime\Message.php	/^        $start = 0;$/;"	v
Zend_Mime_Part	library\Zend\Mime\Part.php	/^class Zend_Mime_Part {$/;"	c
contentType	library\Zend\Mime\Part.php	/^        $contentType = $this->type;$/;"	v
disposition	library\Zend\Mime\Part.php	/^            $disposition = $this->disposition;$/;"	v
filter	library\Zend\Mime\Part.php	/^                $filter = stream_filter_append($/;"	v
headers	library\Zend\Mime\Part.php	/^        $headers = array();$/;"	v
res	library\Zend\Mime\Part.php	/^        $res = '';$/;"	v
Zend_Navigation	library\Zend\Navigation.php	/^class Zend_Navigation extends Zend_Navigation_Container$/;"	c
found	library\Zend\Navigation\Container.php	/^        $found = array();$/;"	v
hash	library\Zend\Navigation\Container.php	/^            $hash = $page->hashCode();$/;"	v
hash	library\Zend\Navigation\Container.php	/^        $hash = $page->hashCode();$/;"	v
hash	library\Zend\Navigation\Container.php	/^        $hash = key($this->_index);$/;"	v
index	library\Zend\Navigation\Container.php	/^            $index = 0;$/;"	v
indexes	library\Zend\Navigation\Container.php	/^        $indexes = array_keys($this->_index);$/;"	v
iterator	library\Zend\Navigation\Container.php	/^        $iterator = new RecursiveIteratorIterator($this,$/;"	v
newIndex	library\Zend\Navigation\Container.php	/^            $newIndex = array();$/;"	v
order	library\Zend\Navigation\Container.php	/^                $order = $page->getOrder();$/;"	v
page	library\Zend\Navigation\Container.php	/^            $page = Zend_Navigation_Page::factory($page);$/;"	v
pages	library\Zend\Navigation\Container.php	/^            $pages = $pages->toArray();$/;"	v
pages	library\Zend\Navigation\Container.php	/^        $pages = array();$/;"	v
Zend_Navigation_Exception	library\Zend\Navigation\Exception.php	/^class Zend_Navigation_Exception extends Zend_Exception$/;"	c
hasMvc	library\Zend\Navigation\Page.php	/^        $hasMvc = isset($options['action']) || isset($options['controller']) ||$/;"	v
hasUri	library\Zend\Navigation\Page.php	/^        $hasUri = isset($options['uri']);$/;"	v
method	library\Zend\Navigation\Page.php	/^        $method = 'get' . self::_normalizePropertyName($name);$/;"	v
method	library\Zend\Navigation\Page.php	/^        $method = 'get' . self::_normalizePropertyName($property);$/;"	v
method	library\Zend\Navigation\Page.php	/^        $method = 'set' . self::_normalizePropertyName($name);$/;"	v
method	library\Zend\Navigation\Page.php	/^        $method = 'set' . self::_normalizePropertyName($property);$/;"	v
options	library\Zend\Navigation\Page.php	/^            $options = $options->toArray();$/;"	v
order	library\Zend\Navigation\Page.php	/^                $order = $temp;$/;"	v
page	library\Zend\Navigation\Page.php	/^                $page = new $type($options);$/;"	v
relations	library\Zend\Navigation\Page.php	/^                $relations = $relations->toArray();$/;"	v
temp	library\Zend\Navigation\Page.php	/^            $temp = (int) $order;$/;"	v
type	library\Zend\Navigation\Page.php	/^                        $type = 'Zend_Navigation_Page_Mvc';$/;"	v
type	library\Zend\Navigation\Page.php	/^                        $type = 'Zend_Navigation_Page_Uri';$/;"	v
type	library\Zend\Navigation\Page.php	/^            $type = $options['type'];$/;"	v
type	library\Zend\Navigation\Page.php	/^            $type = self::getDefaultPageType();$/;"	v
Zend_Navigation_Page_Mvc	library\Zend\Navigation\Page\Mvc.php	/^class Zend_Navigation_Page_Mvc extends Zend_Navigation_Page$/;"	c
front	library\Zend\Navigation\Page\Mvc.php	/^            $front = Zend_Controller_Front::getInstance();$/;"	v
myParams	library\Zend\Navigation\Page\Mvc.php	/^                    $myParams = array_merge($route->getDefaults(), $myParams);$/;"	v
myParams	library\Zend\Navigation\Page\Mvc.php	/^            $myParams = $this->_params;$/;"	v
params	library\Zend\Navigation\Page\Mvc.php	/^        $params = $this->getParams();$/;"	v
reqParams	library\Zend\Navigation\Page\Mvc.php	/^            $reqParams = $front->getRequest()->getParams();$/;"	v
route	library\Zend\Navigation\Page\Mvc.php	/^                $route = $front->getRouter()->getRoute($this->_route);$/;"	v
url	library\Zend\Navigation\Page\Mvc.php	/^        $url = self::$_urlHelper->url($params,$/;"	v
Zend_Navigation_Page_Uri	library\Zend\Navigation\Page\Uri.php	/^class Zend_Navigation_Page_Uri extends Zend_Navigation_Page$/;"	c
Zend_Oauth	library\Zend\Oauth.php	/^class Zend_Oauth$/;"	c
Zend_Oauth_Client	library\Zend\Oauth\Client.php	/^class Zend_Oauth_Client extends Zend_Http_Client$/;"	c
config	library\Zend\Oauth\Client.php	/^            $config                   = $config->toArray();$/;"	v
kvTuple	library\Zend\Oauth\Client.php	/^                    $kvTuple = explode('=', $queryPart);$/;"	v
oauthHeaderValue	library\Zend\Oauth\Client.php	/^            $oauthHeaderValue = $this->getToken()->toHeader($/;"	v
oauthOptions	library\Zend\Oauth\Client.php	/^                $oauthOptions = $oauthOptions->toArray();$/;"	v
params	library\Zend\Oauth\Client.php	/^                $params = array_merge($params, $this->paramsGet);$/;"	v
params	library\Zend\Oauth\Client.php	/^                $params = array_merge($params, $this->paramsPost);$/;"	v
params	library\Zend\Oauth\Client.php	/^            $params = array();$/;"	v
params	library\Zend\Oauth\Client.php	/^        $params = array();$/;"	v
query	library\Zend\Oauth\Client.php	/^                $query  = $this->getToken()->toQueryString($/;"	v
query	library\Zend\Oauth\Client.php	/^            $query = $this->getToken()->toQueryString($/;"	v
query	library\Zend\Oauth\Client.php	/^            $query = $this->getUri()->getQuery();$/;"	v
query	library\Zend\Oauth\Client.php	/^        $query = null;$/;"	v
queryParts	library\Zend\Oauth\Client.php	/^                $queryParts = explode('&', $this->getUri()->getQuery());$/;"	v
raw	library\Zend\Oauth\Client.php	/^            $raw = $this->getToken()->toQueryString($/;"	v
requestMethod	library\Zend\Oauth\Client.php	/^        $requestMethod = $this->getRequestMethod();$/;"	v
requestScheme	library\Zend\Oauth\Client.php	/^        $requestScheme = $this->getRequestScheme();$/;"	v
Zend_Oauth_Config	library\Zend\Oauth\Config.php	/^class Zend_Oauth_Config implements Zend_Oauth_Config_ConfigInterface$/;"	c
method	library\Zend\Oauth\Config.php	/^        $method = strtoupper($method);$/;"	v
options	library\Zend\Oauth\Config.php	/^                $options = $options->toArray();$/;"	v
scheme	library\Zend\Oauth\Config.php	/^        $scheme = strtolower($scheme);$/;"	v
Zend_Oauth_Consumer	library\Zend\Oauth\Consumer.php	/^class Zend_Oauth_Consumer extends Zend_Oauth$/;"	c
authorizedToken	library\Zend\Oauth\Consumer.php	/^        $authorizedToken = new Zend_Oauth_Token_AuthorizedRequest($queryData);$/;"	v
httpMethod	library\Zend\Oauth\Consumer.php	/^        $httpMethod = null,$/;"	v
options	library\Zend\Oauth\Consumer.php	/^                $options = $options->toArray();$/;"	v
params	library\Zend\Oauth\Consumer.php	/^            $params = array_merge($request->getParameters(), array($/;"	v
redirect	library\Zend\Oauth\Consumer.php	/^            $redirect = new Zend_Oauth_Http_UserAuthorization($this, $customServiceParameters);$/;"	v
redirectUrl	library\Zend\Oauth\Consumer.php	/^        $redirectUrl = $this->getRedirectUrl($customServiceParameters, $token, $request);$/;"	v
request	library\Zend\Oauth\Consumer.php	/^            $request = $token;$/;"	v
request	library\Zend\Oauth\Consumer.php	/^            $request = new Zend_Oauth_Http_AccessToken($this);$/;"	v
request	library\Zend\Oauth\Consumer.php	/^            $request = new Zend_Oauth_Http_RequestToken($this, $customServiceParameters);$/;"	v
token	library\Zend\Oauth\Consumer.php	/^            $token = null;$/;"	v
Zend_Oauth_Exception	library\Zend\Oauth\Exception.php	/^class Zend_Oauth_Exception extends Zend_Exception {}/;"	c
Zend_Oauth_Http	library\Zend\Oauth\Http.php	/^class Zend_Oauth_Http$/;"	c
body	library\Zend\Oauth\Http.php	/^            $body   = $response->getBody();$/;"	v
body	library\Zend\Oauth\Http.php	/^        $body     = null;$/;"	v
client	library\Zend\Oauth\Http.php	/^        $client = Zend_Oauth::getHttpClient();$/;"	v
headerValue	library\Zend\Oauth\Http.php	/^        $headerValue = array();$/;"	v
response	library\Zend\Oauth\Http.php	/^            $response = $this->_attemptRequest($params);$/;"	v
response	library\Zend\Oauth\Http.php	/^            $response = $this->startRequestCycle($params);$/;"	v
response	library\Zend\Oauth\Http.php	/^        $response = null;$/;"	v
status	library\Zend\Oauth\Http.php	/^            $status = $response->getStatus();$/;"	v
status	library\Zend\Oauth\Http.php	/^        $status   = null;$/;"	v
Zend_Oauth_Http_AccessToken	library\Zend\Oauth\Http\AccessToken.php	/^class Zend_Oauth_Http_AccessToken extends Zend_Oauth_Http$/;"	c
client	library\Zend\Oauth\Http\AccessToken.php	/^        $client      = Zend_Oauth::getHttpClient();$/;"	v
client	library\Zend\Oauth\Http\AccessToken.php	/^        $client = Zend_Oauth::getHttpClient();$/;"	v
headerValue	library\Zend\Oauth\Http\AccessToken.php	/^        $headerValue = $this->_toAuthorizationHeader($params);$/;"	v
httpClient	library\Zend\Oauth\Http\AccessToken.php	/^                $httpClient = $this->getRequestSchemeHeaderClient($params);$/;"	v
httpClient	library\Zend\Oauth\Http\AccessToken.php	/^                $httpClient = $this->getRequestSchemePostBodyClient($params);$/;"	v
httpClient	library\Zend\Oauth\Http\AccessToken.php	/^                $httpClient = $this->getRequestSchemeQueryStringClient($params,$/;"	v
params	library\Zend\Oauth\Http\AccessToken.php	/^            $params = array_merge($params, $this->_parameters);$/;"	v
params	library\Zend\Oauth\Http\AccessToken.php	/^        $params      = $this->_cleanParamsOfIllegalCustomParameters($params);$/;"	v
params	library\Zend\Oauth\Http\AccessToken.php	/^        $params   = $this->assembleParams();$/;"	v
params	library\Zend\Oauth\Http\AccessToken.php	/^        $params = $this->_cleanParamsOfIllegalCustomParameters($params);$/;"	v
params	library\Zend\Oauth\Http\AccessToken.php	/^        $params = array($/;"	v
response	library\Zend\Oauth\Http\AccessToken.php	/^        $response = $this->startRequestCycle($params);$/;"	v
return	library\Zend\Oauth\Http\AccessToken.php	/^        $return   = new Zend_Oauth_Token_Access($response);$/;"	v
Zend_Oauth_Http_RequestToken	library\Zend\Oauth\Http\RequestToken.php	/^class Zend_Oauth_Http_RequestToken extends Zend_Oauth_Http$/;"	c
client	library\Zend\Oauth\Http\RequestToken.php	/^        $client = Zend_Oauth::getHttpClient();$/;"	v
headerValue	library\Zend\Oauth\Http\RequestToken.php	/^        $headerValue = $this->_httpUtility->toAuthorizationHeader($/;"	v
httpClient	library\Zend\Oauth\Http\RequestToken.php	/^                $httpClient = $this->getRequestSchemeHeaderClient($params);$/;"	v
httpClient	library\Zend\Oauth\Http\RequestToken.php	/^                $httpClient = $this->getRequestSchemePostBodyClient($params);$/;"	v
httpClient	library\Zend\Oauth\Http\RequestToken.php	/^                $httpClient = $this->getRequestSchemeQueryStringClient($params,$/;"	v
params	library\Zend\Oauth\Http\RequestToken.php	/^            $params = array_merge($params, $this->_parameters);$/;"	v
params	library\Zend\Oauth\Http\RequestToken.php	/^        $params   = $this->assembleParams();$/;"	v
params	library\Zend\Oauth\Http\RequestToken.php	/^        $params = array($/;"	v
rawdata	library\Zend\Oauth\Http\RequestToken.php	/^        $rawdata = $this->_httpUtility->toEncodedQueryString($params, true);$/;"	v
response	library\Zend\Oauth\Http\RequestToken.php	/^        $response = $this->startRequestCycle($params);$/;"	v
return	library\Zend\Oauth\Http\RequestToken.php	/^        $return   = new Zend_Oauth_Token_Request($response);$/;"	v
Zend_Oauth_Http_UserAuthorization	library\Zend\Oauth\Http\UserAuthorization.php	/^class Zend_Oauth_Http_UserAuthorization extends Zend_Oauth_Http$/;"	c
callback	library\Zend\Oauth\Http\UserAuthorization.php	/^            $callback = $this->_consumer->getCallbackUrl();$/;"	v
params	library\Zend\Oauth\Http\UserAuthorization.php	/^            $params = array_merge($params, $this->_parameters);$/;"	v
params	library\Zend\Oauth\Http\UserAuthorization.php	/^        $params = $this->assembleParams();$/;"	v
params	library\Zend\Oauth\Http\UserAuthorization.php	/^        $params = array($/;"	v
uri	library\Zend\Oauth\Http\UserAuthorization.php	/^        $uri    = Zend_Uri_Http::fromString($this->_consumer->getUserAuthorizationUrl());$/;"	v
Zend_Oauth_Http_Utility	library\Zend\Oauth\Http\Utility.php	/^class Zend_Oauth_Http_Utility$/;"	c
className	library\Zend\Oauth\Http\Utility.php	/^            $className = 'Zend_Oauth_Signature_' . ucfirst(strtolower($parts[0]));$/;"	v
className	library\Zend\Oauth\Http\Utility.php	/^            $className = 'Zend_Oauth_Signature_' . ucfirst(strtolower($signatureMethod));$/;"	v
className	library\Zend\Oauth\Http\Utility.php	/^        $className = '';$/;"	v
encoded	library\Zend\Oauth\Http\Utility.php	/^        $encoded = rawurlencode($value);$/;"	v
encoded	library\Zend\Oauth\Http\Utility.php	/^        $encoded = str_replace('%7E', '~', $encoded);$/;"	v
encodedParams	library\Zend\Oauth\Http\Utility.php	/^        $encodedParams = array();$/;"	v
hashAlgo	library\Zend\Oauth\Http\Utility.php	/^            $hashAlgo  = $parts[1];$/;"	v
hashAlgo	library\Zend\Oauth\Http\Utility.php	/^        $hashAlgo  = null;$/;"	v
headerValue	library\Zend\Oauth\Http\Utility.php	/^        $headerValue = array($/;"	v
kv	library\Zend\Oauth\Http\Utility.php	/^            $kv = explode('=', $pair);$/;"	v
params	library\Zend\Oauth\Http\Utility.php	/^            $params = array_merge($params, $serviceProviderParams);$/;"	v
params	library\Zend\Oauth\Http\Utility.php	/^        $params = array($/;"	v
params	library\Zend\Oauth\Http\Utility.php	/^        $params = array();$/;"	v
parts	library\Zend\Oauth\Http\Utility.php	/^        $parts     = explode('-', $signatureMethod);$/;"	v
parts	library\Zend\Oauth\Http\Utility.php	/^        $parts = explode('&', $query);$/;"	v
signatureObject	library\Zend\Oauth\Http\Utility.php	/^        $signatureObject = new $className($consumerSecret, $tokenSecret, $hashAlgo);$/;"	v
Zend_Oauth_Signature_Hmac	library\Zend\Oauth\Signature\Hmac.php	/^class Zend_Oauth_Signature_Hmac extends Zend_Oauth_Signature_SignatureAbstract$/;"	c
binaryHash	library\Zend\Oauth\Signature\Hmac.php	/^        $binaryHash = Zend_Crypt_Hmac::compute($/;"	v
Zend_Oauth_Signature_Plaintext	library\Zend\Oauth\Signature\Plaintext.php	/^class Zend_Oauth_Signature_Plaintext extends Zend_Oauth_Signature_SignatureAbstract$/;"	c
return	library\Zend\Oauth\Signature\Plaintext.php	/^        $return = implode('&', array($this->_consumerSecret, $this->_tokenSecret));$/;"	v
Zend_Oauth_Signature_Rsa	library\Zend\Oauth\Signature\Rsa.php	/^class Zend_Oauth_Signature_Rsa extends Zend_Oauth_Signature_SignatureAbstract$/;"	c
rsa	library\Zend\Oauth\Signature\Rsa.php	/^        $rsa = new Zend_Crypt_Rsa;$/;"	v
sign	library\Zend\Oauth\Signature\Rsa.php	/^        $sign = $rsa->sign($/;"	v
baseStrings	library\Zend\Oauth\Signature\SignatureAbstract.php	/^        $baseStrings = array();$/;"	v
encodedParams	library\Zend\Oauth\Signature\SignatureAbstract.php	/^        $encodedParams = array();$/;"	v
parts	library\Zend\Oauth\Signature\SignatureAbstract.php	/^        $parts = array($this->_consumerSecret);$/;"	v
return	library\Zend\Oauth\Signature\SignatureAbstract.php	/^        $return = array();$/;"	v
uri	library\Zend\Oauth\Signature\SignatureAbstract.php	/^        $uri = Zend_Uri_Http::fromString($url);$/;"	v
body	library\Zend\Oauth\Token.php	/^        $body   = $response->getBody();$/;"	v
pair	library\Zend\Oauth\Token.php	/^            $pair = explode('=', $kvpair);$/;"	v
params	library\Zend\Oauth\Token.php	/^            $params = $this->_parseParameters($response);$/;"	v
params	library\Zend\Oauth\Token.php	/^        $params = array();$/;"	v
parts	library\Zend\Oauth\Token.php	/^        $parts = explode('&', $body);$/;"	v
Zend_Oauth_Token_Access	library\Zend\Oauth\Token\Access.php	/^class Zend_Oauth_Token_Access extends Zend_Oauth_Token$/;"	c
client	library\Zend\Oauth\Token\Access.php	/^        $client = new Zend_Oauth_Client($oauthOptions, $uri, $config, $excludeCustomParamsFromHeader);$/;"	v
params	library\Zend\Oauth\Token\Access.php	/^        $params = $this->_httpUtility->assembleParams($url, $config, $customParams);$/;"	v
params	library\Zend\Oauth\Token\Access.php	/^        $params = $this->_httpUtility->assembleParams($url, $config, $params);$/;"	v
Zend_Oauth_Token_AuthorizedRequest	library\Zend\Oauth\Token\AuthorizedRequest.php	/^class Zend_Oauth_Token_AuthorizedRequest extends Zend_Oauth_Token$/;"	c
params	library\Zend\Oauth\Token\AuthorizedRequest.php	/^            $params = $this->_parseData();$/;"	v
params	library\Zend\Oauth\Token\AuthorizedRequest.php	/^        $params = array();$/;"	v
Zend_Oauth_Token_Request	library\Zend\Oauth\Token\Request.php	/^class Zend_Oauth_Token_Request extends Zend_Oauth_Token$/;"	c
Zend_OpenId	library\Zend\OpenId.php	/^class Zend_OpenId$/;"	c
auth	library\Zend\OpenId.php	/^                $auth = $reg[2];$/;"	v
auth	library\Zend\OpenId.php	/^        $auth = $reg[2];$/;"	v
bin	library\Zend\OpenId.php	/^                $bin = "\\0" . $bin;$/;"	v
bin	library\Zend\OpenId.php	/^                $bin = chr(bcmod($bn, 256)) . $bin;$/;"	v
bin	library\Zend\OpenId.php	/^            $bin = "";$/;"	v
bn	library\Zend\OpenId.php	/^                $bn = bcadd($bn, ord($bin[$i]));$/;"	v
bn	library\Zend\OpenId.php	/^                $bn = bcdiv($bn, 256);$/;"	v
bn	library\Zend\OpenId.php	/^                $bn = bcmul($bn, 256);$/;"	v
bn	library\Zend\OpenId.php	/^            $bn = 0;$/;"	v
bn_g	library\Zend\OpenId.php	/^            $bn_g        = self::binToBigNum($g);$/;"	v
bn_p	library\Zend\OpenId.php	/^            $bn_p        = self::binToBigNum($p);$/;"	v
bn_priv_key	library\Zend\OpenId.php	/^            $bn_priv_key = self::binToBigNum($priv_key);$/;"	v
bn_pub_key	library\Zend\OpenId.php	/^                $bn_pub_key  = bcpowmod($bn_g, $bn_priv_key, $bn_p);$/;"	v
bn_pub_key	library\Zend\OpenId.php	/^                $bn_pub_key  = gmp_powm($bn_g, $bn_priv_key, $bn_p);$/;"	v
bn_pub_key	library\Zend\OpenId.php	/^            $bn_pub_key = self::binToBigNum($pub_key);$/;"	v
bn_secret	library\Zend\OpenId.php	/^            $bn_secret  = bcpowmod($bn_pub_key, $dh['priv_key'], $dh['p']);$/;"	v
bn_secret	library\Zend\OpenId.php	/^            $bn_secret  = gmp_powm($bn_pub_key, $dh['priv_key'], $dh['p']);$/;"	v
body	library\Zend\OpenId.php	/^            $body = "<html><body onLoad=\\"document.forms[0].submit();\\">\\n";$/;"	v
body	library\Zend\OpenId.php	/^        $body = "";$/;"	v
c	library\Zend\OpenId.php	/^                    $c = $c & 0xf;$/;"	v
c	library\Zend\OpenId.php	/^                    $c = ($c << 4) | (ord($id[$i]) - ord('0'));$/;"	v
c	library\Zend\OpenId.php	/^                    $c = ($c << 4) | (ord($id[$i]) - ord('A') + 10);$/;"	v
c	library\Zend\OpenId.php	/^                    $c = ($c << 4) | (ord($id[$i]) - ord('a') + 10);$/;"	v
c	library\Zend\OpenId.php	/^                    $c = ord($id[$i]) - ord('0');$/;"	v
c	library\Zend\OpenId.php	/^                    $c = ord($id[$i]) - ord('A') + 10;$/;"	v
c	library\Zend\OpenId.php	/^                    $c = ord($id[$i]) - ord('a') + 10;$/;"	v
ch	library\Zend\OpenId.php	/^                    $ch == '-' ||$/;"	v
ch	library\Zend\OpenId.php	/^                    $ch == '.' ||$/;"	v
ch	library\Zend\OpenId.php	/^                    $ch == '_' ||$/;"	v
ch	library\Zend\OpenId.php	/^                    $ch == '~') {$/;"	v
ch	library\Zend\OpenId.php	/^                $ch = chr($c);$/;"	v
cmp	library\Zend\OpenId.php	/^            $cmp = bccomp($bn, 0);$/;"	v
details	library\Zend\OpenId.php	/^            $details = openssl_pkey_get_details($dh);$/;"	v
dh_details	library\Zend\OpenId.php	/^            $dh_details = array($/;"	v
dir	library\Zend\OpenId.php	/^                    $dir = dirname($path);$/;"	v
fragment	library\Zend\OpenId.php	/^        $fragment = $reg[7]; \/* strip it *\/$/;"	v
hash1	library\Zend\OpenId.php	/^            $hash1 = self::digest($macFunc, ($secret ^ $ipad) . $data);$/;"	v
host	library\Zend\OpenId.php	/^                $host = $reg[3];$/;"	v
host	library\Zend\OpenId.php	/^        $host = $reg[3];$/;"	v
host	library\Zend\OpenId.php	/^        $host = strtolower($host);$/;"	v
i	library\Zend\OpenId.php	/^            $i = 0;$/;"	v
i	library\Zend\OpenId.php	/^        $i = 0;$/;"	v
id	library\Zend\OpenId.php	/^            $id = 'http:\/\/' . $id;$/;"	v
id	library\Zend\OpenId.php	/^            $id = substr($id, strlen('xri:\/\/$dns*'));$/;"	v
id	library\Zend\OpenId.php	/^            $id = substr($id, strlen('xri:\/\/$ip*'));$/;"	v
id	library\Zend\OpenId.php	/^            $id = substr($id, strlen('xri:\/\/'));$/;"	v
id	library\Zend\OpenId.php	/^        $id = $scheme$/;"	v
id	library\Zend\OpenId.php	/^        $id = trim($id);$/;"	v
ipad	library\Zend\OpenId.php	/^            $ipad = str_repeat(chr(0x36), 64);$/;"	v
key	library\Zend\OpenId.php	/^        $key = '';$/;"	v
len	library\Zend\OpenId.php	/^            $len = Zend_OpenId::strlen($bin);$/;"	v
n	library\Zend\OpenId.php	/^            $n = strlen($path);$/;"	v
n	library\Zend\OpenId.php	/^        $n = strlen($id);$/;"	v
opad	library\Zend\OpenId.php	/^            $opad = str_repeat(chr(0x5c), 64);$/;"	v
path	library\Zend\OpenId.php	/^                $path = $reg[5];$/;"	v
path	library\Zend\OpenId.php	/^            $path = $res;$/;"	v
path	library\Zend\OpenId.php	/^            $path = '\/';$/;"	v
path	library\Zend\OpenId.php	/^        $path = $reg[5];$/;"	v
port	library\Zend\OpenId.php	/^                    $port = ':' . $_SERVER['SERVER_PORT'];$/;"	v
port	library\Zend\OpenId.php	/^                $port = $reg[4];$/;"	v
port	library\Zend\OpenId.php	/^                $port = '';$/;"	v
port	library\Zend\OpenId.php	/^                $port = ':' . $_SERVER['SERVER_PORT'];$/;"	v
port	library\Zend\OpenId.php	/^                $port = substr($_SERVER['HTTP_HOST'], $pos);$/;"	v
port	library\Zend\OpenId.php	/^        $port = $reg[4];$/;"	v
port	library\Zend\OpenId.php	/^        $port = '';$/;"	v
priv_key	library\Zend\OpenId.php	/^                $priv_key    = self::randomBytes(Zend_OpenId::strlen($p));$/;"	v
pub_key	library\Zend\OpenId.php	/^            $pub_key     = self::bigNumToBin($bn_pub_key);$/;"	v
query	library\Zend\OpenId.php	/^                $query = $key . '=' . urlencode($value);$/;"	v
query	library\Zend\OpenId.php	/^                $query = $reg[6];$/;"	v
query	library\Zend\OpenId.php	/^            $query = strpos($_SERVER['REQUEST_URI'], '?');$/;"	v
query	library\Zend\OpenId.php	/^        $query = $reg[6];$/;"	v
res	library\Zend\OpenId.php	/^                                    $res = substr($res, 0, $pos);$/;"	v
res	library\Zend\OpenId.php	/^            $res = "";$/;"	v
res	library\Zend\OpenId.php	/^        $res = '';$/;"	v
response	library\Zend\OpenId.php	/^            $response = new Zend_Controller_Response_Http();$/;"	v
ret	library\Zend\OpenId.php	/^                $ret = "\\0" . $ret;$/;"	v
ret	library\Zend\OpenId.php	/^            $ret = openssl_dh_compute_key($pub_key, $dh);$/;"	v
ret	library\Zend\OpenId.php	/^        $ret = self::$selfUrl;$/;"	v
s	library\Zend\OpenId.php	/^                $s = '0' . $s;$/;"	v
s	library\Zend\OpenId.php	/^                $s = '00' . $s;$/;"	v
s	library\Zend\OpenId.php	/^            $s = gmp_strval($bn, 16);$/;"	v
scheme	library\Zend\OpenId.php	/^                $scheme = $reg[1];$/;"	v
scheme	library\Zend\OpenId.php	/^        $scheme = $reg[1];$/;"	v
scheme	library\Zend\OpenId.php	/^        $scheme = strtolower($scheme);$/;"	v
secret	library\Zend\OpenId.php	/^                $secret = self::digest($macFunc, $secret);$/;"	v
secret	library\Zend\OpenId.php	/^            $secret = str_pad($secret, 64, chr(0x00));$/;"	v
url	library\Zend\OpenId.php	/^                $url = $_SERVER['HTTP_HOST'];$/;"	v
url	library\Zend\OpenId.php	/^                $url = substr($_SERVER['HTTP_HOST'], 0, $pos);$/;"	v
url	library\Zend\OpenId.php	/^            $url = $_SERVER['SERVER_NAME'];$/;"	v
url	library\Zend\OpenId.php	/^            $url = 'http:\/\/' . $url;$/;"	v
url	library\Zend\OpenId.php	/^            $url = 'https:\/\/' . $url;$/;"	v
url	library\Zend\OpenId.php	/^        $url = '';$/;"	v
url	library\Zend\OpenId.php	/^        $url = Zend_OpenId::absoluteUrl($url);$/;"	v
Zend_OpenId_Consumer	library\Zend\OpenId\Consumer.php	/^class Zend_OpenId_Consumer$/;"	c
bad_response	library\Zend\OpenId\Consumer.php	/^                        $bad_response = true;$/;"	v
bad_response	library\Zend\OpenId\Consumer.php	/^            $bad_response = false;$/;"	v
body	library\Zend\OpenId\Consumer.php	/^        $body = $response->getBody();$/;"	v
claimedId	library\Zend\OpenId\Consumer.php	/^        $claimedId = $id;$/;"	v
client	library\Zend\OpenId\Consumer.php	/^            $client = new Zend_Http_Client($/;"	v
client	library\Zend\OpenId\Consumer.php	/^        $client = $this->_httpClient;$/;"	v
data	library\Zend\OpenId\Consumer.php	/^            $data = '';$/;"	v
dh	library\Zend\OpenId\Consumer.php	/^        $dh = Zend_OpenId::createDhKey(pack('H*', Zend_OpenId::DH_P),$/;"	v
dhFunc	library\Zend\OpenId\Consumer.php	/^            $dhFunc = 'sha1';$/;"	v
dhFunc	library\Zend\OpenId\Consumer.php	/^            $dhFunc = 'sha256';$/;"	v
dhSec	library\Zend\OpenId\Consumer.php	/^            $dhSec = Zend_OpenId::computeDhSecret($serverPub, $dh);$/;"	v
dh_details	library\Zend\OpenId\Consumer.php	/^        $dh_details = Zend_OpenId::getDhKeyDetails($dh);$/;"	v
dumbMode	library\Zend\OpenId\Consumer.php	/^                                $dumbMode = false)$/;"	v
expire	library\Zend\OpenId\Consumer.php	/^        $expire = time() + 60 * 60;$/;"	v
expires	library\Zend\OpenId\Consumer.php	/^            $expires  = $this->_cache[$url][3];$/;"	v
expiresIn	library\Zend\OpenId\Consumer.php	/^        $expiresIn = $ret['expires_in'];$/;"	v
extensions	library\Zend\OpenId\Consumer.php	/^        $extensions=null, Zend_Controller_Response_Abstract $response = null)$/;"	v
handle	library\Zend\OpenId\Consumer.php	/^            $handle   = $this->_cache[$url][0];$/;"	v
handle	library\Zend\OpenId\Consumer.php	/^        $handle     = $ret['assoc_handle'];$/;"	v
id	library\Zend\OpenId\Consumer.php	/^                    $id = $params['openid_claimed_id'];$/;"	v
id	library\Zend\OpenId\Consumer.php	/^                $id = $params['openid_claimed_id'];$/;"	v
id	library\Zend\OpenId\Consumer.php	/^                $id = $params['openid_identity'];$/;"	v
id	library\Zend\OpenId\Consumer.php	/^            $id = $realId;$/;"	v
id	library\Zend\OpenId\Consumer.php	/^        $id = $realId;$/;"	v
identity	library\Zend\OpenId\Consumer.php	/^                    $identity = $_SESSION["zend_openid"]["claimed_id"];$/;"	v
identity	library\Zend\OpenId\Consumer.php	/^                    $identity = $this->_session->claimed_id;$/;"	v
identity	library\Zend\OpenId\Consumer.php	/^            $identity = "";$/;"	v
identity	library\Zend\OpenId\Consumer.php	/^            $identity = $params["openid_claimed_id"];$/;"	v
identity	library\Zend\OpenId\Consumer.php	/^            $identity = $params["openid_identity"];$/;"	v
key	library\Zend\OpenId\Consumer.php	/^                    $key = 'openid.' . substr($key, strlen('openid_'));$/;"	v
key	library\Zend\OpenId\Consumer.php	/^                    $key = 'openid.ns.' . substr($key, strlen('openid_ns_'));$/;"	v
key	library\Zend\OpenId\Consumer.php	/^                    $key = 'openid.sreg.' . substr($key, strlen('openid_sreg_'));$/;"	v
line	library\Zend\OpenId\Consumer.php	/^                    $line = trim($line);$/;"	v
line	library\Zend\OpenId\Consumer.php	/^                $line = trim($line);$/;"	v
macFunc	library\Zend\OpenId\Consumer.php	/^            $macFunc = $this->_cache[$url][1];$/;"	v
macFunc	library\Zend\OpenId\Consumer.php	/^            $macFunc = 'sha1';$/;"	v
macFunc	library\Zend\OpenId\Consumer.php	/^            $macFunc = 'sha256';$/;"	v
params	library\Zend\OpenId\Consumer.php	/^            $params = array($/;"	v
params	library\Zend\OpenId\Consumer.php	/^        $params = array();$/;"	v
params2	library\Zend\OpenId\Consumer.php	/^            $params2 = array();$/;"	v
pos	library\Zend\OpenId\Consumer.php	/^            $pos = strpos($params['openid_return_to'], '?');$/;"	v
r	library\Zend\OpenId\Consumer.php	/^            $r = array();$/;"	v
realId	library\Zend\OpenId\Consumer.php	/^                $realId = $r[2];$/;"	v
realId	library\Zend\OpenId\Consumer.php	/^                $realId = $r[3];$/;"	v
realId	library\Zend\OpenId\Consumer.php	/^        $realId = $id;$/;"	v
response	library\Zend\OpenId\Consumer.php	/^            $response = $client->request();$/;"	v
response	library\Zend\OpenId\Consumer.php	/^        $response = $this->_httpRequest($id, 'GET', array(), $status);$/;"	v
ret	library\Zend\OpenId\Consumer.php	/^            $ret = $r;$/;"	v
ret	library\Zend\OpenId\Consumer.php	/^            $ret = $this->_httpRequest($server, 'POST', $params2, $status);$/;"	v
ret	library\Zend\OpenId\Consumer.php	/^            $ret = $this->_httpRequest($url, 'POST', $params, $status);$/;"	v
root	library\Zend\OpenId\Consumer.php	/^                $root = dirname($root);$/;"	v
root	library\Zend\OpenId\Consumer.php	/^            $root = Zend_OpenId::selfUrl();$/;"	v
sec	library\Zend\OpenId\Consumer.php	/^            $sec = Zend_OpenId::digest($dhFunc, $dhSec);$/;"	v
secret	library\Zend\OpenId\Consumer.php	/^            $secret   = $this->_cache[$url][2];$/;"	v
secret	library\Zend\OpenId\Consumer.php	/^            $secret = $sec ^ base64_decode($ret['enc_mac_key']);$/;"	v
secret	library\Zend\OpenId\Consumer.php	/^            $secret = base64_decode($ret['mac_key']);$/;"	v
server	library\Zend\OpenId\Consumer.php	/^            $server = $r[2];$/;"	v
server	library\Zend\OpenId\Consumer.php	/^            $server = $r[3];$/;"	v
serverPub	library\Zend\OpenId\Consumer.php	/^            $serverPub = base64_decode($ret['dh_server_public']);$/;"	v
signed	library\Zend\OpenId\Consumer.php	/^            $signed = explode(',', $params['openid_signed']);$/;"	v
status	library\Zend\OpenId\Consumer.php	/^        $status = $response->getStatus();$/;"	v
version	library\Zend\OpenId\Consumer.php	/^            $version = 1.1;$/;"	v
version	library\Zend\OpenId\Consumer.php	/^            $version = 2.0;$/;"	v
version	library\Zend\OpenId\Consumer.php	/^        $version = 1.1;$/;"	v
x	library\Zend\OpenId\Consumer.php	/^                        $x = explode(':', $line, 2);$/;"	v
x	library\Zend\OpenId\Consumer.php	/^                    $x = explode(':', $line, 2);$/;"	v
Zend_OpenId_Consumer_Storage_File	library\Zend\OpenId\Consumer\Storage\File.php	/^class Zend_OpenId_Consumer_Storage_File extends Zend_OpenId_Consumer_Storage$/;"	c
data	library\Zend\OpenId\Consumer\Storage\File.php	/^            $data = serialize(array($id, $realId, $server, $version, $expires));$/;"	v
data	library\Zend\OpenId\Consumer\Storage\File.php	/^            $data = serialize(array($url, $handle, $macFunc, $secret, $expires));$/;"	v
data	library\Zend\OpenId\Consumer\Storage\File.php	/^            $data = stream_get_contents($f);$/;"	v
dir	library\Zend\OpenId\Consumer\Storage\File.php	/^            $dir = $tmp . '\/openid\/consumer';$/;"	v
f	library\Zend\OpenId\Consumer\Storage\File.php	/^            $f = @fopen($name, 'r');$/;"	v
f	library\Zend\OpenId\Consumer\Storage\File.php	/^            $f = @fopen($name, 'w+');$/;"	v
f	library\Zend\OpenId\Consumer\Storage\File.php	/^            $f = @fopen($name, 'x');$/;"	v
f	library\Zend\OpenId\Consumer\Storage\File.php	/^            $f = @fopen($name1, 'r');$/;"	v
f	library\Zend\OpenId\Consumer\Storage\File.php	/^            $f = @fopen($name1, 'w+');$/;"	v
f	library\Zend\OpenId\Consumer\Storage\File.php	/^            $f = @fopen($name2, 'r');$/;"	v
f2	library\Zend\OpenId\Consumer\Storage\File.php	/^            $f2 = @fopen($name2, 'w+');$/;"	v
lock	library\Zend\OpenId\Consumer\Storage\File.php	/^        $lock = @fopen($this->_dir . '\/assoc.lock', 'w+');$/;"	v
lock	library\Zend\OpenId\Consumer\Storage\File.php	/^        $lock = @fopen($this->_dir . '\/discovery.lock', 'w+');$/;"	v
lock	library\Zend\OpenId\Consumer\Storage\File.php	/^        $lock = @fopen($this->_dir . '\/nonce.lock', 'w+');$/;"	v
name	library\Zend\OpenId\Consumer\Storage\File.php	/^        $name = $this->_dir . '\/discovery_' . md5($id);$/;"	v
name	library\Zend\OpenId\Consumer\Storage\File.php	/^        $name = $this->_dir . '\/nonce_' . md5($provider.';'.$nonce);$/;"	v
name1	library\Zend\OpenId\Consumer\Storage\File.php	/^                    $name1 = $this->_dir . '\/assoc_url_' . md5($url);$/;"	v
name1	library\Zend\OpenId\Consumer\Storage\File.php	/^        $name1 = $this->_dir . '\/assoc_url_' . md5($url);$/;"	v
name2	library\Zend\OpenId\Consumer\Storage\File.php	/^                    $name2 = $this->_dir . '\/assoc_handle_' . md5($handle);$/;"	v
name2	library\Zend\OpenId\Consumer\Storage\File.php	/^        $name2 = $this->_dir . '\/assoc_handle_' . md5($handle);$/;"	v
nonceFiles	library\Zend\OpenId\Consumer\Storage\File.php	/^                $nonceFiles = glob($this->_dir . '\/nonce_*');$/;"	v
ret	library\Zend\OpenId\Consumer\Storage\File.php	/^                    $ret = true;$/;"	v
ret	library\Zend\OpenId\Consumer\Storage\File.php	/^                $ret = false;$/;"	v
ret	library\Zend\OpenId\Consumer\Storage\File.php	/^                $ret = true;$/;"	v
ret	library\Zend\OpenId\Consumer\Storage\File.php	/^            $ret = false;$/;"	v
time	library\Zend\OpenId\Consumer\Storage\File.php	/^                    $time = $date;$/;"	v
time	library\Zend\OpenId\Consumer\Storage\File.php	/^                    $time = time($date);$/;"	v
tmp	library\Zend\OpenId\Consumer\Storage\File.php	/^                    $tmp = "\/tmp";$/;"	v
tmp	library\Zend\OpenId\Consumer\Storage\File.php	/^                $tmp = getenv('TEMP');$/;"	v
tmp	library\Zend\OpenId\Consumer\Storage\File.php	/^            $tmp = getenv('TMP');$/;"	v
user	library\Zend\OpenId\Consumer\Storage\File.php	/^            $user = get_current_user();$/;"	v
Zend_OpenId_Exception	library\Zend\OpenId\Exception.php	/^class Zend_OpenId_Exception extends Zend_Exception$/;"	c
Zend_OpenId_Extension_Sreg	library\Zend\OpenId\Extension\Sreg.php	/^class Zend_OpenId_Extension_Sreg extends Zend_OpenId_Extension$/;"	c
name	library\Zend\OpenId\Extension\Sreg.php	/^            $name = get_class();$/;"	v
optional	library\Zend\OpenId\Extension\Sreg.php	/^                        $optional = $prop;$/;"	v
prop	library\Zend\OpenId\Extension\Sreg.php	/^                $prop = trim($prop);$/;"	v
props	library\Zend\OpenId\Extension\Sreg.php	/^                $props = $data[$name];$/;"	v
props	library\Zend\OpenId\Extension\Sreg.php	/^                $props = array();$/;"	v
props	library\Zend\OpenId\Extension\Sreg.php	/^            $props = array();$/;"	v
props	library\Zend\OpenId\Extension\Sreg.php	/^        $props = array();$/;"	v
props2	library\Zend\OpenId\Extension\Sreg.php	/^            $props2 = array();$/;"	v
props2	library\Zend\OpenId\Extension\Sreg.php	/^        $props2 = array();$/;"	v
required	library\Zend\OpenId\Extension\Sreg.php	/^                        $required = $prop;$/;"	v
Zend_OpenId_Provider	library\Zend\OpenId\Provider.php	/^class Zend_OpenId_Provider$/;"	c
data	library\Zend\OpenId\Provider.php	/^            $data = array();$/;"	v
data	library\Zend\OpenId\Provider.php	/^            $data = true;$/;"	v
data	library\Zend\OpenId\Provider.php	/^        $data = '';$/;"	v
dh	library\Zend\OpenId\Provider.php	/^            $dh = Zend_OpenId::createDhKey($p, $g);$/;"	v
dhFunc	library\Zend\OpenId\Provider.php	/^            $dhFunc = 'sha1';$/;"	v
dhFunc	library\Zend\OpenId\Provider.php	/^            $dhFunc = 'sha256';$/;"	v
dh_details	library\Zend\OpenId\Provider.php	/^            $dh_details = Zend_OpenId::getDhKeyDetails($dh);$/;"	v
expiresIn	library\Zend\OpenId\Provider.php	/^            $expiresIn = $this->_sessionTtl;$/;"	v
expiresIn	library\Zend\OpenId\Provider.php	/^        $expiresIn = $this->_sessionTtl;$/;"	v
g	library\Zend\OpenId\Provider.php	/^                $g = base64_decode($params['openid_dh_gen']);$/;"	v
g	library\Zend\OpenId\Provider.php	/^                $g = pack('H*', Zend_OpenId::DH_G);$/;"	v
handle	library\Zend\OpenId\Provider.php	/^            $handle = uniqid();$/;"	v
handle	library\Zend\OpenId\Provider.php	/^        $handle = uniqid();$/;"	v
id	library\Zend\OpenId\Provider.php	/^        $id = $this->getLoggedInUser();$/;"	v
key	library\Zend\OpenId\Provider.php	/^                    $key = 'openid.' . substr($key, strlen('openid_'));$/;"	v
key	library\Zend\OpenId\Provider.php	/^                    $key = 'openid.ns.' . substr($key, strlen('openid_ns_'));$/;"	v
key	library\Zend\OpenId\Provider.php	/^                    $key = 'openid.sreg.' . substr($key, strlen('openid_sreg_'));$/;"	v
key	library\Zend\OpenId\Provider.php	/^                $key = substr($key, strlen('openid.'));$/;"	v
loginUrl	library\Zend\OpenId\Provider.php	/^            $loginUrl = Zend_OpenId::absoluteUrl($loginUrl);$/;"	v
loginUrl	library\Zend\OpenId\Provider.php	/^            $loginUrl = Zend_OpenId::selfUrl() . '?openid.action=login';$/;"	v
macFunc	library\Zend\OpenId\Provider.php	/^            $macFunc = $version >= 2.0 ? 'sha256' : 'sha1';$/;"	v
macFunc	library\Zend\OpenId\Provider.php	/^            $macFunc = 'sha1';$/;"	v
macFunc	library\Zend\OpenId\Provider.php	/^            $macFunc = 'sha256';$/;"	v
macLen	library\Zend\OpenId\Provider.php	/^            $macLen = 20; \/* 160 bit *\/$/;"	v
macLen	library\Zend\OpenId\Provider.php	/^            $macLen = 32; \/* 256 bit *\/$/;"	v
n	library\Zend\OpenId\Provider.php	/^                    $n = strpos($site, ':\/\/*.');$/;"	v
p	library\Zend\OpenId\Provider.php	/^                $p = base64_decode($params['openid_dh_modulus']);$/;"	v
p	library\Zend\OpenId\Provider.php	/^                $p = pack('H*', Zend_OpenId::DH_P);$/;"	v
params	library\Zend\OpenId\Provider.php	/^                $params = $_GET;$/;"	v
params	library\Zend\OpenId\Provider.php	/^                $params = $_POST;$/;"	v
params2	library\Zend\OpenId\Provider.php	/^            $params2 = array();$/;"	v
regex	library\Zend\OpenId\Provider.php	/^                        $regex = '\/^'$/;"	v
response	library\Zend\OpenId\Provider.php	/^                $response = $this->_associate($version, $params);$/;"	v
response	library\Zend\OpenId\Provider.php	/^                $response = $this->_checkAuthentication($version, $params);$/;"	v
result	library\Zend\OpenId\Provider.php	/^        $result = 0;$/;"	v
ret	library\Zend\OpenId\Provider.php	/^                $ret = $this->_checkId($version, $params, 0, $extensions, $response);$/;"	v
ret	library\Zend\OpenId\Provider.php	/^                $ret = $this->_checkId($version, $params, 1, $extensions, $response);$/;"	v
ret	library\Zend\OpenId\Provider.php	/^                $ret = '';$/;"	v
ret	library\Zend\OpenId\Provider.php	/^        $ret = $this->_respond($version, $ret, $params, $extensions);$/;"	v
ret	library\Zend\OpenId\Provider.php	/^        $ret = array();$/;"	v
root	library\Zend\OpenId\Provider.php	/^            $root = $params['openid_realm'];$/;"	v
root	library\Zend\OpenId\Provider.php	/^            $root = $params['openid_return_to'];$/;"	v
root	library\Zend\OpenId\Provider.php	/^            $root = $params['openid_trust_root'];$/;"	v
root	library\Zend\OpenId\Provider.php	/^        $root = $this->getSiteRoot($params);$/;"	v
sec	library\Zend\OpenId\Provider.php	/^            $sec = Zend_OpenId::computeDhSecret($/;"	v
sec	library\Zend\OpenId\Provider.php	/^            $sec = Zend_OpenId::digest($dhFunc, $sec);$/;"	v
secret	library\Zend\OpenId\Provider.php	/^            $secret = $this->_genSecret($macFunc);$/;"	v
secret	library\Zend\OpenId\Provider.php	/^        $secret = $this->_genSecret($macFunc);$/;"	v
sessionTtl	library\Zend\OpenId\Provider.php	/^                                $sessionTtl = 3600)$/;"	v
signed	library\Zend\OpenId\Provider.php	/^        $signed = '';$/;"	v
signed	library\Zend\OpenId\Provider.php	/^        $signed = explode(',', $params['openid_signed']);$/;"	v
sites	library\Zend\OpenId\Provider.php	/^        $sites = $this->_storage->getTrustedSites($params['openid_identity']);$/;"	v
trustUrl	library\Zend\OpenId\Provider.php	/^                                $trustUrl = null,$/;"	v
trustUrl	library\Zend\OpenId\Provider.php	/^            $trustUrl = Zend_OpenId::absoluteUrl($trustUrl);$/;"	v
trustUrl	library\Zend\OpenId\Provider.php	/^            $trustUrl = Zend_OpenId::selfUrl() . '?openid.action=trust';$/;"	v
trusted	library\Zend\OpenId\Provider.php	/^                            $trusted = $t;$/;"	v
trusted	library\Zend\OpenId\Provider.php	/^                    $trusted = $t;$/;"	v
trusted	library\Zend\OpenId\Provider.php	/^                $trusted = null;$/;"	v
trusted	library\Zend\OpenId\Provider.php	/^            $trusted = $sites[$root];$/;"	v
trusted	library\Zend\OpenId\Provider.php	/^        $trusted = null;$/;"	v
version	library\Zend\OpenId\Provider.php	/^            $version = 2.0;$/;"	v
version	library\Zend\OpenId\Provider.php	/^        $version = 1.1;$/;"	v
Zend_OpenId_Provider_Storage_File	library\Zend\OpenId\Provider\Storage\File.php	/^class Zend_OpenId_Provider_Storage_File extends Zend_OpenId_Provider_Storage$/;"	c
data	library\Zend\OpenId\Provider\Storage\File.php	/^                    $data = serialize(array($id, $storedPassword, $sites));$/;"	v
data	library\Zend\OpenId\Provider\Storage\File.php	/^            $data = serialize(array($handle, $macFunc, $secret, $expires));$/;"	v
data	library\Zend\OpenId\Provider\Storage\File.php	/^            $data = serialize(array($id, $password, array()));$/;"	v
data	library\Zend\OpenId\Provider\Storage\File.php	/^            $data = stream_get_contents($f);$/;"	v
dir	library\Zend\OpenId\Provider\Storage\File.php	/^            $dir = $tmp . '\/openid\/provider';$/;"	v
f	library\Zend\OpenId\Provider\Storage\File.php	/^            $f = @fopen($name, 'r');$/;"	v
f	library\Zend\OpenId\Provider\Storage\File.php	/^            $f = @fopen($name, 'r+');$/;"	v
f	library\Zend\OpenId\Provider\Storage\File.php	/^            $f = @fopen($name, 'w+');$/;"	v
f	library\Zend\OpenId\Provider\Storage\File.php	/^            $f = @fopen($name, 'x');$/;"	v
lock	library\Zend\OpenId\Provider\Storage\File.php	/^        $lock = @fopen($this->_dir . '\/assoc.lock', 'w+');$/;"	v
lock	library\Zend\OpenId\Provider\Storage\File.php	/^        $lock = @fopen($this->_dir . '\/user.lock', 'w+');$/;"	v
name	library\Zend\OpenId\Provider\Storage\File.php	/^        $name = $this->_dir . '\/assoc_' . md5($handle);$/;"	v
name	library\Zend\OpenId\Provider\Storage\File.php	/^        $name = $this->_dir . '\/user_' . md5($id);$/;"	v
ret	library\Zend\OpenId\Provider\Storage\File.php	/^                    $ret = $trusted;$/;"	v
ret	library\Zend\OpenId\Provider\Storage\File.php	/^                    $ret = true;$/;"	v
ret	library\Zend\OpenId\Provider\Storage\File.php	/^            $ret = false;$/;"	v
tmp	library\Zend\OpenId\Provider\Storage\File.php	/^                    $tmp = "\/tmp";$/;"	v
tmp	library\Zend\OpenId\Provider\Storage\File.php	/^                $tmp = getenv('TEMP');$/;"	v
tmp	library\Zend\OpenId\Provider\Storage\File.php	/^            $tmp = getenv('TMP');$/;"	v
user	library\Zend\OpenId\Provider\Storage\File.php	/^            $user = get_current_user();$/;"	v
Zend_OpenId_Provider_User_Session	library\Zend\OpenId\Provider\User\Session.php	/^class Zend_OpenId_Provider_User_Session extends Zend_OpenId_Provider_User$/;"	c
Zend_Paginator	library\Zend\Paginator.php	/^class Zend_Paginator implements Countable, IteratorAggregate$/;"	c
adapter	library\Zend\Paginator.php	/^                    $adapter = 'Array';$/;"	v
adapter	library\Zend\Paginator.php	/^                    $adapter = 'DbSelect';$/;"	v
adapter	library\Zend\Paginator.php	/^                    $adapter = 'DbTableSelect';$/;"	v
adapter	library\Zend\Paginator.php	/^                    $adapter = 'Iterator';$/;"	v
adapter	library\Zend\Paginator.php	/^                    $adapter = 'Null';$/;"	v
adapterClassName	library\Zend\Paginator.php	/^            $adapterClassName = $pluginLoader->load($adapter);$/;"	v
adapterPaths	library\Zend\Paginator.php	/^        $adapterPaths = $config->get('adapterpaths');$/;"	v
className	library\Zend\Paginator.php	/^                $className = self::getScrollingStyleLoader()->load($scrollingStyle);$/;"	v
cleanId	library\Zend\Paginator.php	/^            $cleanId = $this->_getCacheId($pageNumber);$/;"	v
config	library\Zend\Paginator.php	/^        $config = self::$_config;$/;"	v
currentItems	library\Zend\Paginator.php	/^        $currentItems = $this->getCurrentItems();$/;"	v
currentPageNumber	library\Zend\Paginator.php	/^        $currentPageNumber = $this->getCurrentPageNumber();$/;"	v
data	library\Zend\Paginator.php	/^            $data = self::$_cache->load($this->_getCacheId($pageNumber));$/;"	v
data	library\Zend\Paginator.php	/^        $data = array();$/;"	v
filter	library\Zend\Paginator.php	/^        $filter = $this->getFilter();$/;"	v
itemCount	library\Zend\Paginator.php	/^            $itemCount = count($items);$/;"	v
itemCount	library\Zend\Paginator.php	/^            $itemCount = iterator_count($items);$/;"	v
itemCount	library\Zend\Paginator.php	/^        $itemCount = $this->getItemCount($page);$/;"	v
itemCount	library\Zend\Paginator.php	/^        $itemCount = 0;$/;"	v
itemNumber	library\Zend\Paginator.php	/^            $itemNumber = $this->getItemCountPerPage();$/;"	v
itemNumber	library\Zend\Paginator.php	/^            $itemNumber = ($itemCount + 1) + $itemNumber;$/;"	v
itemNumber	library\Zend\Paginator.php	/^            $itemNumber = 1;$/;"	v
itemNumber	library\Zend\Paginator.php	/^        $itemNumber = $this->normalizeItemNumber($itemNumber);$/;"	v
itemNumber	library\Zend\Paginator.php	/^        $itemNumber = (integer) $itemNumber;$/;"	v
items	library\Zend\Paginator.php	/^            $items = $filter->filter($items);$/;"	v
items	library\Zend\Paginator.php	/^            $items = new ArrayIterator($items);$/;"	v
items	library\Zend\Paginator.php	/^        $items = $this->_adapter->getItems($offset, $this->getItemCountPerPage());$/;"	v
lowerBound	library\Zend\Paginator.php	/^        $lowerBound = $this->normalizePageNumber($lowerBound);$/;"	v
offset	library\Zend\Paginator.php	/^        $offset = ($pageNumber - 1) * $this->getItemCountPerPage();$/;"	v
page	library\Zend\Paginator.php	/^            $page = $this->getCurrentPageNumber();$/;"	v
page	library\Zend\Paginator.php	/^        $page = $this->getItemsByPage($pageNumber);$/;"	v
pageCount	library\Zend\Paginator.php	/^        $pageCount         = $this->count();$/;"	v
pageCount	library\Zend\Paginator.php	/^        $pageCount = $this->count();$/;"	v
pageNumber	library\Zend\Paginator.php	/^            $pageNumber = $pageCount;$/;"	v
pageNumber	library\Zend\Paginator.php	/^            $pageNumber = $this->getCurrentPageNumber();$/;"	v
pageNumber	library\Zend\Paginator.php	/^            $pageNumber = ($this->count() + 1) + $pageNumber;$/;"	v
pageNumber	library\Zend\Paginator.php	/^            $pageNumber = 1;$/;"	v
pageNumber	library\Zend\Paginator.php	/^        $pageNumber = $this->normalizePageNumber($pageNumber);$/;"	v
pageNumber	library\Zend\Paginator.php	/^        $pageNumber = (integer) $pageNumber;$/;"	v
pages	library\Zend\Paginator.php	/^        $pages = array();$/;"	v
pages	library\Zend\Paginator.php	/^        $pages = new stdClass();$/;"	v
path	library\Zend\Paginator.php	/^                    $path   = $path['path'];$/;"	v
pluginLoader	library\Zend\Paginator.php	/^            $pluginLoader = self::getAdapterLoader();$/;"	v
prefix	library\Zend\Paginator.php	/^                    $prefix = $path['prefix'];$/;"	v
prefixPaths	library\Zend\Paginator.php	/^        $prefixPaths = $config->get('prefixpaths');$/;"	v
relativeItemNumber	library\Zend\Paginator.php	/^        $relativeItemNumber = $this->normalizeItemNumber($relativeItemNumber);$/;"	v
return	library\Zend\Paginator.php	/^            $return = $this->render();$/;"	v
scrollingStyle	library\Zend\Paginator.php	/^            $scrollingStyle = self::$_defaultScrollingStyle;$/;"	v
scrollingStyle	library\Zend\Paginator.php	/^        $scrollingStyle = $config->get('scrollingstyle');$/;"	v
scrollingStyle	library\Zend\Paginator.php	/^        $scrollingStyle = $this->_loadScrollingStyle($scrollingStyle);$/;"	v
setupMethod	library\Zend\Paginator.php	/^                    $setupMethod = 'set' . $setupMethod;$/;"	v
setupMethods	library\Zend\Paginator.php	/^            $setupMethods = array('ItemCountPerPage', 'PageRange');$/;"	v
type	library\Zend\Paginator.php	/^                    $type = (is_object($data)) ? get_class($data) : gettype($data);$/;"	v
upperBound	library\Zend\Paginator.php	/^        $upperBound = $this->normalizePageNumber($upperBound);$/;"	v
value	library\Zend\Paginator.php	/^                $value = $config->get(strtolower($setupMethod));$/;"	v
view	library\Zend\Paginator.php	/^        $view = $this->getView();$/;"	v
viewRenderer	library\Zend\Paginator.php	/^            $viewRenderer = Zend_Controller_Action_HelperBroker::getStaticHelper('viewRenderer');$/;"	v
Zend_Paginator_Adapter_Array	library\Zend\Paginator\Adapter\Array.php	/^class Zend_Paginator_Adapter_Array implements Zend_Paginator_Adapter_Interface$/;"	c
Zend_Paginator_Adapter_DbSelect	library\Zend\Paginator\Adapter\DbSelect.php	/^class Zend_Paginator_Adapter_DbSelect implements Zend_Paginator_Adapter_Interface$/;"	c
column	library\Zend\Paginator\Adapter\DbSelect.php	/^                        $column = $db->quoteIdentifier($part[0], true) . '.' . $column;$/;"	v
column	library\Zend\Paginator\Adapter\DbSelect.php	/^                    $column = $db->quoteIdentifier($part[1], true);$/;"	v
columnParts	library\Zend\Paginator\Adapter\DbSelect.php	/^            $columnParts = $rowCount->getPart(Zend_Db_Select::COLUMNS);$/;"	v
columns	library\Zend\Paginator\Adapter\DbSelect.php	/^            $columns = $rowCount->getPart(Zend_Db_Select::COLUMNS);$/;"	v
countColumn	library\Zend\Paginator\Adapter\DbSelect.php	/^        $countColumn = $db->quoteIdentifier($db->foldCase(self::ROW_COUNT_COLUMN));$/;"	v
countColumnPart	library\Zend\Paginator\Adapter\DbSelect.php	/^                $countColumnPart = $countColumnPart->__toString();$/;"	v
countColumnPart	library\Zend\Paginator\Adapter\DbSelect.php	/^            $countColumnPart = empty($columns[0][2])$/;"	v
countPart	library\Zend\Paginator\Adapter\DbSelect.php	/^                $countPart = 'COUNT(DISTINCT ' . $groupPart . ') AS ';$/;"	v
countPart	library\Zend\Paginator\Adapter\DbSelect.php	/^        $countPart   = 'COUNT(1) AS ';$/;"	v
db	library\Zend\Paginator\Adapter\DbSelect.php	/^        $db = $rowCount->getAdapter();$/;"	v
expression	library\Zend\Paginator\Adapter\DbSelect.php	/^            $expression = new Zend_Db_Expr($countPart . $countColumn);$/;"	v
groupPart	library\Zend\Paginator\Adapter\DbSelect.php	/^                    $groupPart = $column;$/;"	v
groupPart	library\Zend\Paginator\Adapter\DbSelect.php	/^                $groupPart = $db->quoteIdentifier($groupParts[0], true);$/;"	v
groupPart	library\Zend\Paginator\Adapter\DbSelect.php	/^        $groupPart   = null;$/;"	v
groupParts	library\Zend\Paginator\Adapter\DbSelect.php	/^            $groupParts  = $rowCount->getPart(Zend_Db_Select::GROUP);$/;"	v
havingParts	library\Zend\Paginator\Adapter\DbSelect.php	/^            $havingParts = $rowCount->getPart(Zend_Db_Select::HAVING);$/;"	v
isDistinct	library\Zend\Paginator\Adapter\DbSelect.php	/^            $isDistinct  = $rowCount->getPart(Zend_Db_Select::DISTINCT);$/;"	v
part	library\Zend\Paginator\Adapter\DbSelect.php	/^                $part = $columnParts[0];$/;"	v
result	library\Zend\Paginator\Adapter\DbSelect.php	/^            $result = $rowCount->query(Zend_Db::FETCH_ASSOC)->fetch();$/;"	v
rowCount	library\Zend\Paginator\Adapter\DbSelect.php	/^                $rowCount = $db$/;"	v
rowCount	library\Zend\Paginator\Adapter\DbSelect.php	/^            $rowCount = $db$/;"	v
rowCount	library\Zend\Paginator\Adapter\DbSelect.php	/^        $rowCount = clone $this->_select;$/;"	v
rowCountColumn	library\Zend\Paginator\Adapter\DbSelect.php	/^            $rowCountColumn = $this->_select->getAdapter()->foldCase(self::ROW_COUNT_COLUMN);$/;"	v
unionParts	library\Zend\Paginator\Adapter\DbSelect.php	/^        $unionParts  = $rowCount->getPart(Zend_Db_Select::UNION);$/;"	v
Zend_Paginator_Adapter_DbTableSelect	library\Zend\Paginator\Adapter\DbTableSelect.php	/^class Zend_Paginator_Adapter_DbTableSelect extends Zend_Paginator_Adapter_DbSelect$/;"	c
Zend_Paginator_Adapter_Iterator	library\Zend\Paginator\Adapter\Iterator.php	/^class Zend_Paginator_Adapter_Iterator implements Zend_Paginator_Adapter_Interface$/;"	c
Zend_Paginator_Adapter_Null	library\Zend\Paginator\Adapter\Null.php	/^class Zend_Paginator_Adapter_Null implements Zend_Paginator_Adapter_Interface$/;"	c
currentItemCount	library\Zend\Paginator\Adapter\Null.php	/^        $currentItemCount = $remainItemCount > $itemCountPerPage ? $itemCountPerPage : $remainItemCount;$/;"	v
remainItemCount	library\Zend\Paginator\Adapter\Null.php	/^        $remainItemCount  = $this->count() - $offset;$/;"	v
Zend_Paginator_Exception	library\Zend\Paginator\Exception.php	/^class Zend_Paginator_Exception extends Zend_Exception$/;"	c
Zend_Paginator_ScrollingStyle_All	library\Zend\Paginator\ScrollingStyle\All.php	/^class Zend_Paginator_ScrollingStyle_All implements Zend_Paginator_ScrollingStyle_Interface$/;"	c
Zend_Paginator_ScrollingStyle_Elastic	library\Zend\Paginator\ScrollingStyle\Elastic.php	/^class Zend_Paginator_ScrollingStyle_Elastic extends Zend_Paginator_ScrollingStyle_Sliding$/;"	c
originalPageRange	library\Zend\Paginator\ScrollingStyle\Elastic.php	/^        $originalPageRange = $pageRange;$/;"	v
pageNumber	library\Zend\Paginator\ScrollingStyle\Elastic.php	/^        $pageNumber = $paginator->getCurrentPageNumber();$/;"	v
pageRange	library\Zend\Paginator\ScrollingStyle\Elastic.php	/^            $pageRange = $originalPageRange + $pageNumber - 1;$/;"	v
pageRange	library\Zend\Paginator\ScrollingStyle\Elastic.php	/^            $pageRange = $originalPageRange + count($paginator) - $pageNumber;$/;"	v
pageRange	library\Zend\Paginator\ScrollingStyle\Elastic.php	/^        $pageRange         = $pageRange * 2 - 1;$/;"	v
pageRange	library\Zend\Paginator\ScrollingStyle\Elastic.php	/^        $pageRange  = $paginator->getPageRange();$/;"	v
Zend_Paginator_ScrollingStyle_Jumping	library\Zend\Paginator\ScrollingStyle\Jumping.php	/^class Zend_Paginator_ScrollingStyle_Jumping implements Zend_Paginator_ScrollingStyle_Interface$/;"	c
delta	library\Zend\Paginator\ScrollingStyle\Jumping.php	/^            $delta = $pageRange;$/;"	v
delta	library\Zend\Paginator\ScrollingStyle\Jumping.php	/^        $delta = $pageNumber % $pageRange;$/;"	v
lowerBound	library\Zend\Paginator\ScrollingStyle\Jumping.php	/^        $lowerBound = $offset + 1;$/;"	v
offset	library\Zend\Paginator\ScrollingStyle\Jumping.php	/^        $offset     = $pageNumber - $delta;$/;"	v
pageNumber	library\Zend\Paginator\ScrollingStyle\Jumping.php	/^        $pageNumber = $paginator->getCurrentPageNumber();$/;"	v
pageRange	library\Zend\Paginator\ScrollingStyle\Jumping.php	/^        $pageRange  = $paginator->getPageRange();$/;"	v
upperBound	library\Zend\Paginator\ScrollingStyle\Jumping.php	/^        $upperBound = $offset + $pageRange;$/;"	v
Zend_Paginator_ScrollingStyle_Sliding	library\Zend\Paginator\ScrollingStyle\Sliding.php	/^class Zend_Paginator_ScrollingStyle_Sliding implements Zend_Paginator_ScrollingStyle_Interface$/;"	c
delta	library\Zend\Paginator\ScrollingStyle\Sliding.php	/^                $delta = $pageNumber;$/;"	v
delta	library\Zend\Paginator\ScrollingStyle\Sliding.php	/^        $delta = ceil($pageRange \/ 2);$/;"	v
lowerBound	library\Zend\Paginator\ScrollingStyle\Sliding.php	/^            $lowerBound = $offset + 1;$/;"	v
lowerBound	library\Zend\Paginator\ScrollingStyle\Sliding.php	/^            $lowerBound = $pageCount - $pageRange + 1;$/;"	v
offset	library\Zend\Paginator\ScrollingStyle\Sliding.php	/^            $offset     = $pageNumber - $delta;$/;"	v
pageCount	library\Zend\Paginator\ScrollingStyle\Sliding.php	/^        $pageCount  = count($paginator);$/;"	v
pageNumber	library\Zend\Paginator\ScrollingStyle\Sliding.php	/^        $pageNumber = $paginator->getCurrentPageNumber();$/;"	v
pageRange	library\Zend\Paginator\ScrollingStyle\Sliding.php	/^            $pageRange = $pageCount;$/;"	v
pageRange	library\Zend\Paginator\ScrollingStyle\Sliding.php	/^            $pageRange = $paginator->getPageRange();$/;"	v
upperBound	library\Zend\Paginator\ScrollingStyle\Sliding.php	/^            $upperBound = $offset + $pageRange;$/;"	v
upperBound	library\Zend\Paginator\ScrollingStyle\Sliding.php	/^            $upperBound = $pageCount;$/;"	v
Zend_Paginator_SerializableLimitIterator	library\Zend\Paginator\SerializableLimitIterator.php	/^class Zend_Paginator_SerializableLimitIterator extends LimitIterator implements Serializable, ArrayAccess$/;"	c
current	library\Zend\Paginator\SerializableLimitIterator.php	/^                $current = $this->current();$/;"	v
current	library\Zend\Paginator\SerializableLimitIterator.php	/^        $current = $this->current();$/;"	v
currentOffset	library\Zend\Paginator\SerializableLimitIterator.php	/^                $currentOffset = $this->key();$/;"	v
currentOffset	library\Zend\Paginator\SerializableLimitIterator.php	/^        $currentOffset = $this->key();$/;"	v
dataArr	library\Zend\Paginator\SerializableLimitIterator.php	/^        $dataArr = unserialize($data);$/;"	v
DestTree	library\Zend\Pdf.php	/^        $DestTree = $this->_objFactory->newObject(new Zend_Pdf_Element_Dictionary());$/;"	v
Zend_Pdf	library\Zend\Pdf.php	/^class Zend_Pdf$/;"	c
actionsToClean	library\Zend\Pdf.php	/^        $actionsToClean        = array();$/;"	v
count	library\Zend\Pdf.php	/^        $count = 1;$/;"	v
currentOutlineDictionary	library\Zend\Pdf.php	/^                    $currentOutlineDictionary = $outline->dumpOutline($this->_objFactory, $updateOutlinesNavigation, $root->Outlines, $lastOutline);$/;"	v
currentTrailer	library\Zend\Pdf.php	/^            $currentTrailer = $currentTrailer->getPrev();$/;"	v
currentTrailer	library\Zend\Pdf.php	/^        $currentTrailer = $this->_trailer;$/;"	v
date	library\Zend\Pdf.php	/^            $date = date('\\D\\:YmdHisO');$/;"	v
date	library\Zend\Pdf.php	/^            $date = date('\\D\\:YmdHisO', $timestamp);$/;"	v
deletionCandidateKeys	library\Zend\Pdf.php	/^        $deletionCandidateKeys = array();$/;"	v
destArray	library\Zend\Pdf.php	/^        $destArray = $this->_objFactory->newObject(new Zend_Pdf_Element_Array($destArrayItems));$/;"	v
destArrayItems	library\Zend\Pdf.php	/^        $destArrayItems = array();$/;"	v
destination	library\Zend\Pdf.php	/^                $destination = $destination->getDestination();$/;"	v
destination	library\Zend\Pdf.php	/^            $destination = $this->getNamedDestination($destination->getName());$/;"	v
detected	library\Zend\Pdf.php	/^                            $detected = mb_detect_encoding($value);$/;"	v
docCatalog	library\Zend\Pdf.php	/^            $docCatalog = $this->_objFactory->newObject(new Zend_Pdf_Element_Dictionary());$/;"	v
docId	library\Zend\Pdf.php	/^            $docId = md5(uniqid(rand(), true));   \/\/ 32 byte (128 bit) identifier$/;"	v
docIdHigh	library\Zend\Pdf.php	/^            $docIdHigh = substr($docId, 16, 16);  \/\/ second 16 bytes$/;"	v
docIdLow	library\Zend\Pdf.php	/^            $docIdLow  = substr($docId,  0, 16);  \/\/ first 16 bytes$/;"	v
docInfo	library\Zend\Pdf.php	/^            $docInfo = $this->_objFactory->newObject(new Zend_Pdf_Element_Dictionary());$/;"	v
docPages	library\Zend\Pdf.php	/^            $docPages = $this->_objFactory->newObject(new Zend_Pdf_Element_Dictionary());$/;"	v
extractedFont	library\Zend\Pdf.php	/^                $extractedFont = new Zend_Pdf_Resource_Font_Extracted($fontDictionary);$/;"	v
fontDictionary	library\Zend\Pdf.php	/^                $fontDictionary = $fontResources->$fontResourceName;$/;"	v
fontResources	library\Zend\Pdf.php	/^            $fontResources = $pageResources->Font;$/;"	v
fontResourcesUnique	library\Zend\Pdf.php	/^        $fontResourcesUnique = array();$/;"	v
fonts	library\Zend\Pdf.php	/^        $fonts = array();$/;"	v
iterator	library\Zend\Pdf.php	/^        $iterator = new RecursiveIteratorIterator($action, RecursiveIteratorIterator::SELF_FIRST);$/;"	v
iterator	library\Zend\Pdf.php	/^        $iterator = new RecursiveIteratorIterator(new Zend_Pdf_RecursivelyIteratableObjectsContainer($this->outlines), RecursiveIteratorIterator::SELF_FIRST);$/;"	v
lastFreeObject	library\Zend\Pdf.php	/^                $lastFreeObject = $objNum;$/;"	v
lastFreeObject	library\Zend\Pdf.php	/^        $lastFreeObject = $this->_trailer->getLastFreeObject();$/;"	v
lastObjNum	library\Zend\Pdf.php	/^            $lastObjNum = $objNum;$/;"	v
lastObjNum	library\Zend\Pdf.php	/^        $lastObjNum = 0;$/;"	v
lastOutline	library\Zend\Pdf.php	/^                    $lastOutline       = $currentOutlineDictionary;$/;"	v
lastOutline	library\Zend\Pdf.php	/^                    $lastOutline = $outline->dumpOutline($this->_objFactory, $updateOutlinesNavigation, $root->Outlines);$/;"	v
lastOutline	library\Zend\Pdf.php	/^                $lastOutline = $outline->dumpOutline($this->_objFactory, $updateOutlinesNavigation, $root->Outlines, $lastOutline);$/;"	v
lastOutline	library\Zend\Pdf.php	/^        $lastOutline = null;$/;"	v
metadataObject	library\Zend\Pdf.php	/^        $metadataObject = $this->_objFactory->newStreamObject($metadata);$/;"	v
newSegmentOnly	library\Zend\Pdf.php	/^            $newSegmentOnly = false;$/;"	v
objNum	library\Zend\Pdf.php	/^            $objNum = $updateInfo->getObjNum();$/;"	v
offset	library\Zend\Pdf.php	/^        $offset = $this->_trailer->getPDFLength();$/;"	v
openAction	library\Zend\Pdf.php	/^        $openAction = $this->getOpenAction();$/;"	v
openOutlinesCount	library\Zend\Pdf.php	/^        $openOutlinesCount = 0;$/;"	v
outlineDictionary	library\Zend\Pdf.php	/^            $outlineDictionary = $outlineDictionary->Next;$/;"	v
outlineDictionary	library\Zend\Pdf.php	/^        $outlineDictionary = $root->Outlines->First;$/;"	v
pageDictionary	library\Zend\Pdf.php	/^            $pageDictionary = $page->getPageDictionary();$/;"	v
pageDictionaryHashId	library\Zend\Pdf.php	/^            $pageDictionaryHashId = spl_object_hash($page->getPageDictionary()->getObject());$/;"	v
pageDictionaryHashId	library\Zend\Pdf.php	/^        $pageDictionaryHashId = spl_object_hash($pageElement->getObject());$/;"	v
pageElement	library\Zend\Pdf.php	/^        $pageElement = $destination->getResource()->items[0];$/;"	v
pageResources	library\Zend\Pdf.php	/^            $pageResources = $page->extractResources();$/;"	v
pagesContainer	library\Zend\Pdf.php	/^        $pagesContainer = $root->Pages;$/;"	v
pdfBlock	library\Zend\Pdf.php	/^                        $pdfBlock = substr($pdfBlock, $byteCount);$/;"	v
pdfBlock	library\Zend\Pdf.php	/^                $pdfBlock = $updateInfo->getObjectDump();$/;"	v
pdfBlock	library\Zend\Pdf.php	/^                $pdfBlock = substr($pdfBlock, $byteCount);$/;"	v
pdfBlock	library\Zend\Pdf.php	/^        $pdfBlock = $xrefTableStr$/;"	v
pdfData	library\Zend\Pdf.php	/^                    $pdfData = substr($pdfData, $byteCount);$/;"	v
pdfData	library\Zend\Pdf.php	/^                $pdfData = $this->_trailer->getPDFString();$/;"	v
pdfSegmentBlocks	library\Zend\Pdf.php	/^            $pdfSegmentBlocks = ($newSegmentOnly) ? array() : array($this->_trailer->getPDFString());$/;"	v
processedDictionaries	library\Zend\Pdf.php	/^        $processedDictionaries = new SplObjectStorage();$/;"	v
resourceId	library\Zend\Pdf.php	/^                $resourceId = spl_object_hash($fontDictionary->getObject());$/;"	v
revisions	library\Zend\Pdf.php	/^        $revisions = 1;$/;"	v
root	library\Zend\Pdf.php	/^        $root = $this->_trailer->Root;$/;"	v
target	library\Zend\Pdf.php	/^            $target = $outline->getTarget();$/;"	v
trailerDictionary	library\Zend\Pdf.php	/^            $trailerDictionary = new Zend_Pdf_Element_Dictionary();$/;"	v
updateOutlinesNavigation	library\Zend\Pdf.php	/^                        $updateOutlinesNavigation = true;$/;"	v
updateOutlinesNavigation	library\Zend\Pdf.php	/^                $updateOutlinesNavigation = true;$/;"	v
updateOutlinesNavigation	library\Zend\Pdf.php	/^            $updateOutlinesNavigation = false;$/;"	v
value	library\Zend\Pdf.php	/^                                $value = "\\xfe\\xff" . mb_convert_encoding($value, 'UTF-16', $detected);$/;"	v
versionIs_1_2_plus	library\Zend\Pdf.php	/^            $versionIs_1_2_plus = version_compare($pdfHeaderVersion, '1.1', '>');$/;"	v
versionIs_1_2_plus	library\Zend\Pdf.php	/^            $versionIs_1_2_plus = version_compare($root->Version->value,    '1.1', '>');$/;"	v
xrefSection	library\Zend\Pdf.php	/^                $xrefSection = array();$/;"	v
xrefSection	library\Zend\Pdf.php	/^        $xrefSection = array();$/;"	v
xrefSectionStartNums	library\Zend\Pdf.php	/^        $xrefSectionStartNums = array();$/;"	v
xrefTable	library\Zend\Pdf.php	/^        $xrefTable = array();$/;"	v
xrefTableStr	library\Zend\Pdf.php	/^        $xrefTableStr = "xref\\n";$/;"	v
child	library\Zend\Pdf\Action.php	/^                    $child = reset($this->next);$/;"	v
childListUpdated	library\Zend\Pdf\Action.php	/^                    $childListUpdated = true;$/;"	v
childListUpdated	library\Zend\Pdf\Action.php	/^            $childListUpdated = true;$/;"	v
childListUpdated	library\Zend\Pdf\Action.php	/^        $childListUpdated = false;$/;"	v
pdfChildArray	library\Zend\Pdf\Action.php	/^                    $pdfChildArray = new Zend_Pdf_Element_Array();$/;"	v
processedActions	library\Zend\Pdf\Action.php	/^            $processedActions = new SplObjectStorage();$/;"	v
Zend_Pdf_Action_GoTo	library\Zend\Pdf\Action\GoTo.php	/^class Zend_Pdf_Action_GoTo extends Zend_Pdf_Action$/;"	c
destination	library\Zend\Pdf\Action\GoTo.php	/^            $destination = Zend_Pdf_Destination_Named::create($destination);$/;"	v
dictionary	library\Zend\Pdf\Action\GoTo.php	/^        $dictionary = new Zend_Pdf_Element_Dictionary();$/;"	v
Zend_Pdf_Action_GoTo3DView	library\Zend\Pdf\Action\GoTo3DView.php	/^class Zend_Pdf_Action_GoTo3DView extends Zend_Pdf_Action$/;"	c
Zend_Pdf_Action_GoToE	library\Zend\Pdf\Action\GoToE.php	/^class Zend_Pdf_Action_GoToE extends Zend_Pdf_Action$/;"	c
Zend_Pdf_Action_GoToR	library\Zend\Pdf\Action\GoToR.php	/^class Zend_Pdf_Action_GoToR extends Zend_Pdf_Action$/;"	c
Zend_Pdf_Action_Hide	library\Zend\Pdf\Action\Hide.php	/^class Zend_Pdf_Action_Hide extends Zend_Pdf_Action$/;"	c
Zend_Pdf_Action_ImportData	library\Zend\Pdf\Action\ImportData.php	/^class Zend_Pdf_Action_ImportData extends Zend_Pdf_Action$/;"	c
Zend_Pdf_Action_JavaScript	library\Zend\Pdf\Action\JavaScript.php	/^class Zend_Pdf_Action_JavaScript extends Zend_Pdf_Action$/;"	c
Zend_Pdf_Action_Launch	library\Zend\Pdf\Action\Launch.php	/^class Zend_Pdf_Action_Launch extends Zend_Pdf_Action$/;"	c
Zend_Pdf_Action_Movie	library\Zend\Pdf\Action\Movie.php	/^class Zend_Pdf_Action_Movie extends Zend_Pdf_Action$/;"	c
Zend_Pdf_Action_Named	library\Zend\Pdf\Action\Named.php	/^class Zend_Pdf_Action_Named extends Zend_Pdf_Action$/;"	c
Zend_Pdf_Action_Rendition	library\Zend\Pdf\Action\Rendition.php	/^class Zend_Pdf_Action_Rendition extends Zend_Pdf_Action$/;"	c
Zend_Pdf_Action_ResetForm	library\Zend\Pdf\Action\ResetForm.php	/^class Zend_Pdf_Action_ResetForm extends Zend_Pdf_Action$/;"	c
Zend_Pdf_Action_SetOCGState	library\Zend\Pdf\Action\SetOCGState.php	/^class Zend_Pdf_Action_SetOCGState extends Zend_Pdf_Action$/;"	c
Zend_Pdf_Action_Sound	library\Zend\Pdf\Action\Sound.php	/^class Zend_Pdf_Action_Sound extends Zend_Pdf_Action$/;"	c
Zend_Pdf_Action_SubmitForm	library\Zend\Pdf\Action\SubmitForm.php	/^class Zend_Pdf_Action_SubmitForm extends Zend_Pdf_Action$/;"	c
Zend_Pdf_Action_Thread	library\Zend\Pdf\Action\Thread.php	/^class Zend_Pdf_Action_Thread extends Zend_Pdf_Action$/;"	c
Zend_Pdf_Action_Trans	library\Zend\Pdf\Action\Trans.php	/^class Zend_Pdf_Action_Trans extends Zend_Pdf_Action$/;"	c
Zend_Pdf_Action_URI	library\Zend\Pdf\Action\URI.php	/^class Zend_Pdf_Action_URI extends Zend_Pdf_Action$/;"	c
dictionary	library\Zend\Pdf\Action\URI.php	/^        $dictionary = new Zend_Pdf_Element_Dictionary();$/;"	v
scheme	library\Zend\Pdf\Action\URI.php	/^        $scheme = parse_url((string)$uri, PHP_URL_SCHEME);$/;"	v
Zend_Pdf_Action_Unknown	library\Zend\Pdf\Action\Unknown.php	/^class Zend_Pdf_Action_Unknown extends Zend_Pdf_Action$/;"	c
Zend_Pdf_Annotation_FileAttachment	library\Zend\Pdf\Annotation\FileAttachment.php	/^class Zend_Pdf_Annotation_FileAttachment extends Zend_Pdf_Annotation$/;"	c
annotationDictionary	library\Zend\Pdf\Annotation\FileAttachment.php	/^        $annotationDictionary = new Zend_Pdf_Element_Dictionary();$/;"	v
fsDictionary	library\Zend\Pdf\Annotation\FileAttachment.php	/^        $fsDictionary = new Zend_Pdf_Element_Dictionary();$/;"	v
rectangle	library\Zend\Pdf\Annotation\FileAttachment.php	/^        $rectangle = new Zend_Pdf_Element_Array();$/;"	v
Zend_Pdf_Annotation_Link	library\Zend\Pdf\Annotation\Link.php	/^class Zend_Pdf_Annotation_Link extends Zend_Pdf_Annotation$/;"	c
annotationDictionary	library\Zend\Pdf\Annotation\Link.php	/^        $annotationDictionary = new Zend_Pdf_Element_Dictionary();$/;"	v
destination	library\Zend\Pdf\Annotation\Link.php	/^            $destination = Zend_Pdf_Destination_Named::create($target);$/;"	v
rectangle	library\Zend\Pdf\Annotation\Link.php	/^        $rectangle = new Zend_Pdf_Element_Array();$/;"	v
Zend_Pdf_Annotation_Markup	library\Zend\Pdf\Annotation\Markup.php	/^class Zend_Pdf_Annotation_Markup extends Zend_Pdf_Annotation$/;"	c
annotationDictionary	library\Zend\Pdf\Annotation\Markup.php	/^        $annotationDictionary = new Zend_Pdf_Element_Dictionary();$/;"	v
points	library\Zend\Pdf\Annotation\Markup.php	/^        $points = new Zend_Pdf_Element_Array();$/;"	v
rectangle	library\Zend\Pdf\Annotation\Markup.php	/^        $rectangle = new Zend_Pdf_Element_Array();$/;"	v
Zend_Pdf_Annotation_Text	library\Zend\Pdf\Annotation\Text.php	/^class Zend_Pdf_Annotation_Text extends Zend_Pdf_Annotation$/;"	c
annotationDictionary	library\Zend\Pdf\Annotation\Text.php	/^        $annotationDictionary = new Zend_Pdf_Element_Dictionary();$/;"	v
rectangle	library\Zend\Pdf\Annotation\Text.php	/^        $rectangle = new Zend_Pdf_Element_Array();$/;"	v
Zend_Pdf_Canvas	library\Zend\Pdf\Canvas.php	/^class Zend_Pdf_Canvas extends Zend_Pdf_Canvas_Abstract$/;"	c
idCounter	library\Zend\Pdf\Canvas.php	/^        $idCounter = 1;$/;"	v
newResName	library\Zend\Pdf\Canvas.php	/^            $newResName = $type[0] . $idCounter++;$/;"	v
resObject	library\Zend\Pdf\Canvas.php	/^        $resObject = $resource->getResource();$/;"	v
bottomLeftX	library\Zend\Pdf\Canvas\Abstract.php	/^        $bottomLeftX   = $x1;$/;"	v
bottomLeftY	library\Zend\Pdf\Canvas\Abstract.php	/^        $bottomLeftY   = $y1;$/;"	v
bottomRightX	library\Zend\Pdf\Canvas\Abstract.php	/^        $bottomRightX  = $x2;$/;"	v
bottomRightY	library\Zend\Pdf\Canvas\Abstract.php	/^        $bottomRightY  = $y1;$/;"	v
clipPath	library\Zend\Pdf\Canvas\Abstract.php	/^            $clipPath    = $xC->toString() . ' ' . $yC->toString() . " m\\n";$/;"	v
clipRadius	library\Zend\Pdf\Canvas\Abstract.php	/^            $clipRadius  = max($x2 - $x1, $y2 - $y1);$/;"	v
clipSectors	library\Zend\Pdf\Canvas\Abstract.php	/^            $clipSectors = (int)ceil(($endAngle - $startAngle)\/M_PI_4);$/;"	v
contentsToDraw	library\Zend\Pdf\Canvas\Abstract.php	/^        $contentsToDraw = $canvas->getContents();$/;"	v
cos	library\Zend\Pdf\Canvas\Abstract.php	/^        $cos  = new Zend_Pdf_Element_Numeric(cos($angle));$/;"	v
dashElement	library\Zend\Pdf\Canvas\Abstract.php	/^            $dashElement = new Zend_Pdf_Element_Numeric($dashItem);$/;"	v
dashPattern	library\Zend\Pdf\Canvas\Abstract.php	/^        $dashPattern  = new Zend_Pdf_Element_Array();$/;"	v
endAngle	library\Zend\Pdf\Canvas\Abstract.php	/^            $endAngle   = $param6;$/;"	v
fillMethod	library\Zend\Pdf\Canvas\Abstract.php	/^                                $fillMethod = Zend_Pdf_Page::FILL_METHOD_NON_ZERO_WINDING)$/;"	v
fillType	library\Zend\Pdf\Canvas\Abstract.php	/^                                         $fillType = Zend_Pdf_Page::SHAPE_DRAW_FILL_AND_STROKE)$/;"	v
fillType	library\Zend\Pdf\Canvas\Abstract.php	/^                                $fillType = Zend_Pdf_Page::SHAPE_DRAW_FILL_AND_STROKE,$/;"	v
fillType	library\Zend\Pdf\Canvas\Abstract.php	/^                $fillType = $param7;$/;"	v
fillType	library\Zend\Pdf\Canvas\Abstract.php	/^                $fillType = Zend_Pdf_Page::SHAPE_DRAW_FILL_AND_STROKE;$/;"	v
fillType	library\Zend\Pdf\Canvas\Abstract.php	/^            $fillType = $param5;$/;"	v
fillType	library\Zend\Pdf\Canvas\Abstract.php	/^            $fillType = Zend_Pdf_Page::SHAPE_DRAW_FILL_AND_STROKE;$/;"	v
firstPoint	library\Zend\Pdf\Canvas\Abstract.php	/^                $firstPoint = false;$/;"	v
firstPoint	library\Zend\Pdf\Canvas\Abstract.php	/^        $firstPoint = true;$/;"	v
fontName	library\Zend\Pdf\Canvas\Abstract.php	/^        $fontName = $this->_attachResource('Font', $font);$/;"	v
fontNameObj	library\Zend\Pdf\Canvas\Abstract.php	/^        $fontNameObj = new Zend_Pdf_Element_Name($fontName);$/;"	v
fontSizeObj	library\Zend\Pdf\Canvas\Abstract.php	/^        $fontSizeObj = new Zend_Pdf_Element_Numeric($fontSize);$/;"	v
gStateName	library\Zend\Pdf\Canvas\Abstract.php	/^        $gStateName = $this->_attachResource('ExtGState', $graphicsState);$/;"	v
gStateNameObject	library\Zend\Pdf\Canvas\Abstract.php	/^        $gStateNameObject = new Zend_Pdf_Element_Name($gStateName);$/;"	v
graphicsState	library\Zend\Pdf\Canvas\Abstract.php	/^        $graphicsState = new Zend_Pdf_Resource_GraphicsState();$/;"	v
height	library\Zend\Pdf\Canvas\Abstract.php	/^            $height = $canvas->getHeight();$/;"	v
height	library\Zend\Pdf\Canvas\Abstract.php	/^            $height = $y2 - $y1;$/;"	v
height2Obj	library\Zend\Pdf\Canvas\Abstract.php	/^        $height2Obj = new Zend_Pdf_Element_Numeric($y2 - $y1);$/;"	v
heightObj	library\Zend\Pdf\Canvas\Abstract.php	/^        $heightObj = new Zend_Pdf_Element_Numeric($y2 - $y1);$/;"	v
imageName	library\Zend\Pdf\Canvas\Abstract.php	/^        $imageName    = $this->_attachResource('XObject', $image);$/;"	v
imageNameObj	library\Zend\Pdf\Canvas\Abstract.php	/^        $imageNameObj = new Zend_Pdf_Element_Name($imageName);$/;"	v
mSin	library\Zend\Pdf\Canvas\Abstract.php	/^        $mSin = new Zend_Pdf_Element_Numeric(-$sin->value);$/;"	v
mXObj	library\Zend\Pdf\Canvas\Abstract.php	/^        $mXObj = new Zend_Pdf_Element_Numeric(-$x);$/;"	v
mYObj	library\Zend\Pdf\Canvas\Abstract.php	/^        $mYObj = new Zend_Pdf_Element_Numeric(-$y);$/;"	v
pAngle	library\Zend\Pdf\Canvas\Abstract.php	/^                $pAngle = $startAngle + ($endAngle - $startAngle)*$count\/(float)$clipSectors;$/;"	v
pX	library\Zend\Pdf\Canvas\Abstract.php	/^                $pX = new Zend_Pdf_Element_Numeric($x + cos($pAngle)*$clipRadius);$/;"	v
pY	library\Zend\Pdf\Canvas\Abstract.php	/^                $pY = new Zend_Pdf_Element_Numeric($y + sin($pAngle)*$clipRadius);$/;"	v
path	library\Zend\Pdf\Canvas\Abstract.php	/^                $path = $xObj->toString() . ' ' . $yObj->toString() . " m\\n";$/;"	v
pattern	library\Zend\Pdf\Canvas\Abstract.php	/^            $pattern = array();$/;"	v
phase	library\Zend\Pdf\Canvas\Abstract.php	/^            $phase   = 0;$/;"	v
phaseEleemnt	library\Zend\Pdf\Canvas\Abstract.php	/^        $phaseEleemnt = new Zend_Pdf_Element_Numeric($phase);$/;"	v
radius	library\Zend\Pdf\Canvas\Abstract.php	/^            $radius = array($radius, $radius, $radius, $radius);$/;"	v
sin	library\Zend\Pdf\Canvas\Abstract.php	/^        $sin  = new Zend_Pdf_Element_Numeric(sin($angle));$/;"	v
startAngle	library\Zend\Pdf\Canvas\Abstract.php	/^            $startAngle = $param5;$/;"	v
startAngle	library\Zend\Pdf\Canvas\Abstract.php	/^            $startAngle = null;$/;"	v
tanXObj	library\Zend\Pdf\Canvas\Abstract.php	/^        $tanXObj = new Zend_Pdf_Element_Numeric(tan($xAngle));$/;"	v
tanYObj	library\Zend\Pdf\Canvas\Abstract.php	/^        $tanYObj = new Zend_Pdf_Element_Numeric(-tan($yAngle));$/;"	v
temp	library\Zend\Pdf\Canvas\Abstract.php	/^            $temp = $x1;$/;"	v
temp	library\Zend\Pdf\Canvas\Abstract.php	/^            $temp = $y1;$/;"	v
textObj	library\Zend\Pdf\Canvas\Abstract.php	/^        $textObj = new Zend_Pdf_Element_String($this->_font->encodeString($text, $charEncoding));$/;"	v
topLeftX	library\Zend\Pdf\Canvas\Abstract.php	/^        $topLeftX      = $x1;$/;"	v
topLeftY	library\Zend\Pdf\Canvas\Abstract.php	/^        $topLeftY      = $y2;$/;"	v
topRightX	library\Zend\Pdf\Canvas\Abstract.php	/^        $topRightX     = $x2;$/;"	v
topRightY	library\Zend\Pdf\Canvas\Abstract.php	/^        $topRightY     = $y2;$/;"	v
widthObj	library\Zend\Pdf\Canvas\Abstract.php	/^        $widthObj   = new Zend_Pdf_Element_Numeric($x2 - $x1);$/;"	v
widthObj	library\Zend\Pdf\Canvas\Abstract.php	/^        $widthObj  = new Zend_Pdf_Element_Numeric($x2 - $x1);$/;"	v
widthObj	library\Zend\Pdf\Canvas\Abstract.php	/^        $widthObj = new Zend_Pdf_Element_Numeric($width);$/;"	v
with	library\Zend\Pdf\Canvas\Abstract.php	/^            $with = $canvas->getWidth();$/;"	v
with	library\Zend\Pdf\Canvas\Abstract.php	/^            $with = $x2 - $x1;$/;"	v
x	library\Zend\Pdf\Canvas\Abstract.php	/^        $x = ($x1 + $x2)\/2.;$/;"	v
x1	library\Zend\Pdf\Canvas\Abstract.php	/^            $x1   = $x2;$/;"	v
x1Obj	library\Zend\Pdf\Canvas\Abstract.php	/^            $x1Obj = new Zend_Pdf_Element_Numeric($bottomLeftX);$/;"	v
x1Obj	library\Zend\Pdf\Canvas\Abstract.php	/^            $x1Obj = new Zend_Pdf_Element_Numeric($bottomRightX);$/;"	v
x1Obj	library\Zend\Pdf\Canvas\Abstract.php	/^            $x1Obj = new Zend_Pdf_Element_Numeric($topLeftX);$/;"	v
x1Obj	library\Zend\Pdf\Canvas\Abstract.php	/^            $x1Obj = new Zend_Pdf_Element_Numeric($topRightX);$/;"	v
x1Obj	library\Zend\Pdf\Canvas\Abstract.php	/^        $x1Obj      = new Zend_Pdf_Element_Numeric($x1);$/;"	v
x1Obj	library\Zend\Pdf\Canvas\Abstract.php	/^        $x1Obj     = new Zend_Pdf_Element_Numeric($x1);$/;"	v
x1Obj	library\Zend\Pdf\Canvas\Abstract.php	/^        $x1Obj = new Zend_Pdf_Element_Numeric($bottomLeftX + $radius[3]);$/;"	v
x1Obj	library\Zend\Pdf\Canvas\Abstract.php	/^        $x1Obj = new Zend_Pdf_Element_Numeric($bottomRightX);$/;"	v
x1Obj	library\Zend\Pdf\Canvas\Abstract.php	/^        $x1Obj = new Zend_Pdf_Element_Numeric($topLeftX + $radius[0]);$/;"	v
x1Obj	library\Zend\Pdf\Canvas\Abstract.php	/^        $x1Obj = new Zend_Pdf_Element_Numeric($topLeftX);$/;"	v
x1Obj	library\Zend\Pdf\Canvas\Abstract.php	/^        $x1Obj = new Zend_Pdf_Element_Numeric($topRightX - $radius[1]);$/;"	v
x1Obj	library\Zend\Pdf\Canvas\Abstract.php	/^        $x1Obj = new Zend_Pdf_Element_Numeric($x1);$/;"	v
x2	library\Zend\Pdf\Canvas\Abstract.php	/^            $x2   = $temp;$/;"	v
x2Obj	library\Zend\Pdf\Canvas\Abstract.php	/^            $x2Obj = new Zend_Pdf_Element_Numeric($bottomLeftX);$/;"	v
x2Obj	library\Zend\Pdf\Canvas\Abstract.php	/^            $x2Obj = new Zend_Pdf_Element_Numeric($bottomRightX);$/;"	v
x2Obj	library\Zend\Pdf\Canvas\Abstract.php	/^            $x2Obj = new Zend_Pdf_Element_Numeric($topLeftX);$/;"	v
x2Obj	library\Zend\Pdf\Canvas\Abstract.php	/^            $x2Obj = new Zend_Pdf_Element_Numeric($topRightX);$/;"	v
x2Obj	library\Zend\Pdf\Canvas\Abstract.php	/^        $x2Obj = new Zend_Pdf_Element_Numeric($x2);$/;"	v
x3Obj	library\Zend\Pdf\Canvas\Abstract.php	/^            $x3Obj = new Zend_Pdf_Element_Numeric($bottomLeftX);$/;"	v
x3Obj	library\Zend\Pdf\Canvas\Abstract.php	/^            $x3Obj = new Zend_Pdf_Element_Numeric($bottomRightX - $radius[2]);$/;"	v
x3Obj	library\Zend\Pdf\Canvas\Abstract.php	/^            $x3Obj = new Zend_Pdf_Element_Numeric($topLeftX + $radius[0]);$/;"	v
x3Obj	library\Zend\Pdf\Canvas\Abstract.php	/^            $x3Obj = new Zend_Pdf_Element_Numeric($topRightX);$/;"	v
xC	library\Zend\Pdf\Canvas\Abstract.php	/^        $xC = new Zend_Pdf_Element_Numeric($x);$/;"	v
xDelta	library\Zend\Pdf\Canvas\Abstract.php	/^        $xDelta  = 2*(M_SQRT2 - 1)*($x2 - $x1)\/3.;$/;"	v
xLeft	library\Zend\Pdf\Canvas\Abstract.php	/^        $xLeft  = new Zend_Pdf_Element_Numeric($x1);$/;"	v
xObj	library\Zend\Pdf\Canvas\Abstract.php	/^            $xObj = new Zend_Pdf_Element_Numeric($xVal);$/;"	v
xObj	library\Zend\Pdf\Canvas\Abstract.php	/^        $xObj    = new Zend_Pdf_Element_Numeric($x);$/;"	v
xObj	library\Zend\Pdf\Canvas\Abstract.php	/^        $xObj = new Zend_Pdf_Element_Numeric($x);$/;"	v
xRight	library\Zend\Pdf\Canvas\Abstract.php	/^        $xRight = new Zend_Pdf_Element_Numeric($x2);$/;"	v
xScale	library\Zend\Pdf\Canvas\Abstract.php	/^                $xScale = $with\/$canvas->getWidth();$/;"	v
xScale	library\Zend\Pdf\Canvas\Abstract.php	/^                $xScale = 1;$/;"	v
xScaleObj	library\Zend\Pdf\Canvas\Abstract.php	/^        $xScaleObj = new Zend_Pdf_Element_Numeric($xScale);$/;"	v
xShiftObj	library\Zend\Pdf\Canvas\Abstract.php	/^        $xShiftObj = new Zend_Pdf_Element_Numeric($xShift);$/;"	v
xl	library\Zend\Pdf\Canvas\Abstract.php	/^        $xl = new Zend_Pdf_Element_Numeric($x - $xDelta);$/;"	v
xr	library\Zend\Pdf\Canvas\Abstract.php	/^        $xr = new Zend_Pdf_Element_Numeric($x + $xDelta);$/;"	v
y	library\Zend\Pdf\Canvas\Abstract.php	/^        $y = ($y1 + $y2)\/2.;$/;"	v
y1	library\Zend\Pdf\Canvas\Abstract.php	/^            $y1   = $y2;$/;"	v
y1Obj	library\Zend\Pdf\Canvas\Abstract.php	/^            $y1Obj = new Zend_Pdf_Element_Numeric($bottomLeftY);$/;"	v
y1Obj	library\Zend\Pdf\Canvas\Abstract.php	/^            $y1Obj = new Zend_Pdf_Element_Numeric($bottomRightY);$/;"	v
y1Obj	library\Zend\Pdf\Canvas\Abstract.php	/^            $y1Obj = new Zend_Pdf_Element_Numeric($topLeftY);$/;"	v
y1Obj	library\Zend\Pdf\Canvas\Abstract.php	/^            $y1Obj = new Zend_Pdf_Element_Numeric($topRightY);$/;"	v
y1Obj	library\Zend\Pdf\Canvas\Abstract.php	/^        $y1Obj      = new Zend_Pdf_Element_Numeric($y1);$/;"	v
y1Obj	library\Zend\Pdf\Canvas\Abstract.php	/^        $y1Obj     = new Zend_Pdf_Element_Numeric($y1);$/;"	v
y1Obj	library\Zend\Pdf\Canvas\Abstract.php	/^        $y1Obj = new Zend_Pdf_Element_Numeric($bottomLeftY);$/;"	v
y1Obj	library\Zend\Pdf\Canvas\Abstract.php	/^        $y1Obj = new Zend_Pdf_Element_Numeric($bottomRightY + $radius[2]);$/;"	v
y1Obj	library\Zend\Pdf\Canvas\Abstract.php	/^        $y1Obj = new Zend_Pdf_Element_Numeric($topLeftY - $radius[0]);$/;"	v
y1Obj	library\Zend\Pdf\Canvas\Abstract.php	/^        $y1Obj = new Zend_Pdf_Element_Numeric($topLeftY);$/;"	v
y1Obj	library\Zend\Pdf\Canvas\Abstract.php	/^        $y1Obj = new Zend_Pdf_Element_Numeric($topRightY);$/;"	v
y1Obj	library\Zend\Pdf\Canvas\Abstract.php	/^        $y1Obj = new Zend_Pdf_Element_Numeric($y1);$/;"	v
y2	library\Zend\Pdf\Canvas\Abstract.php	/^            $y2   = $temp;$/;"	v
y2Obj	library\Zend\Pdf\Canvas\Abstract.php	/^            $y2Obj = new Zend_Pdf_Element_Numeric($bottomLeftY);$/;"	v
y2Obj	library\Zend\Pdf\Canvas\Abstract.php	/^            $y2Obj = new Zend_Pdf_Element_Numeric($bottomRightY);$/;"	v
y2Obj	library\Zend\Pdf\Canvas\Abstract.php	/^            $y2Obj = new Zend_Pdf_Element_Numeric($topLeftY);$/;"	v
y2Obj	library\Zend\Pdf\Canvas\Abstract.php	/^            $y2Obj = new Zend_Pdf_Element_Numeric($topRightY);$/;"	v
y2Obj	library\Zend\Pdf\Canvas\Abstract.php	/^        $y2Obj = new Zend_Pdf_Element_Numeric($y2);$/;"	v
y3Obj	library\Zend\Pdf\Canvas\Abstract.php	/^            $y3Obj = new Zend_Pdf_Element_Numeric($bottomLeftY + $radius[3]);$/;"	v
y3Obj	library\Zend\Pdf\Canvas\Abstract.php	/^            $y3Obj = new Zend_Pdf_Element_Numeric($bottomRightY);$/;"	v
y3Obj	library\Zend\Pdf\Canvas\Abstract.php	/^            $y3Obj = new Zend_Pdf_Element_Numeric($topLeftY);$/;"	v
y3Obj	library\Zend\Pdf\Canvas\Abstract.php	/^            $y3Obj = new Zend_Pdf_Element_Numeric($topRightY - $radius[1]);$/;"	v
yC	library\Zend\Pdf\Canvas\Abstract.php	/^        $yC = new Zend_Pdf_Element_Numeric($y);$/;"	v
yDelta	library\Zend\Pdf\Canvas\Abstract.php	/^        $yDelta  = 2*(M_SQRT2 - 1)*($y2 - $y1)\/3.;$/;"	v
yDown	library\Zend\Pdf\Canvas\Abstract.php	/^        $yDown  = new Zend_Pdf_Element_Numeric($y1);$/;"	v
yObj	library\Zend\Pdf\Canvas\Abstract.php	/^            $yObj = new Zend_Pdf_Element_Numeric($y[$id]);$/;"	v
yObj	library\Zend\Pdf\Canvas\Abstract.php	/^        $yObj    = new Zend_Pdf_Element_Numeric($y);$/;"	v
yObj	library\Zend\Pdf\Canvas\Abstract.php	/^        $yObj = new Zend_Pdf_Element_Numeric($y);$/;"	v
yScale	library\Zend\Pdf\Canvas\Abstract.php	/^                $yScale = $height\/$canvas->getHeight();$/;"	v
yScale	library\Zend\Pdf\Canvas\Abstract.php	/^                $yScale = 1;$/;"	v
yScaleObj	library\Zend\Pdf\Canvas\Abstract.php	/^        $yScaleObj = new Zend_Pdf_Element_Numeric($yScale);$/;"	v
yShiftObj	library\Zend\Pdf\Canvas\Abstract.php	/^        $yShiftObj = new Zend_Pdf_Element_Numeric($yShift);$/;"	v
yUp	library\Zend\Pdf\Canvas\Abstract.php	/^        $yUp    = new Zend_Pdf_Element_Numeric($y2);$/;"	v
yd	library\Zend\Pdf\Canvas\Abstract.php	/^        $yd = new Zend_Pdf_Element_Numeric($y - $yDelta);$/;"	v
yu	library\Zend\Pdf\Canvas\Abstract.php	/^        $yu = new Zend_Pdf_Element_Numeric($y + $yDelta);$/;"	v
fillMethod	library\Zend\Pdf\Canvas\Interface.php	/^                                $fillMethod = Zend_Pdf_Page::FILL_METHOD_NON_ZERO_WINDING);$/;"	v
fillType	library\Zend\Pdf\Canvas\Interface.php	/^                                         $fillType = Zend_Pdf_Page::SHAPE_DRAW_FILL_AND_STROKE);$/;"	v
fillType	library\Zend\Pdf\Canvas\Interface.php	/^                                $fillType = Zend_Pdf_Page::SHAPE_DRAW_FILL_AND_STROKE,$/;"	v
number	library\Zend\Pdf\Cmap.php	/^            $number = ($number << 8) | ord($data[++$index]);$/;"	v
number	library\Zend\Pdf\Cmap.php	/^            $number = ~((((~ $number) & 0xff) << 8) | ((~ ord($data[++$index])) & 0xff));$/;"	v
number	library\Zend\Pdf\Cmap.php	/^        $number = (ord($data[$index]) << 24) | (ord($data[++$index]) << 16) |$/;"	v
number	library\Zend\Pdf\Cmap.php	/^        $number = (ord($data[$index]) << 8) | ord($data[++$index]);$/;"	v
number	library\Zend\Pdf\Cmap.php	/^        $number = ord($data[$index]);$/;"	v
Zend_Pdf_Cmap_ByteEncoding	library\Zend\Pdf\Cmap\ByteEncoding.php	/^class Zend_Pdf_Cmap_ByteEncoding extends Zend_Pdf_Cmap$/;"	c
actualLength	library\Zend\Pdf\Cmap\ByteEncoding.php	/^        $actualLength = strlen($cmapData);$/;"	v
glyphNumbers	library\Zend\Pdf\Cmap\ByteEncoding.php	/^        $glyphNumbers = array();$/;"	v
i	library\Zend\Pdf\Cmap\ByteEncoding.php	/^        $i = 6;$/;"	v
language	library\Zend\Pdf\Cmap\ByteEncoding.php	/^        $language = $this->_extractUInt2($cmapData, 4);$/;"	v
length	library\Zend\Pdf\Cmap\ByteEncoding.php	/^        $length = $this->_extractUInt2($cmapData, 2);$/;"	v
type	library\Zend\Pdf\Cmap\ByteEncoding.php	/^        $type = $this->_extractUInt2($cmapData, 0);$/;"	v
Zend_Pdf_Cmap_ByteEncoding_Static	library\Zend\Pdf\Cmap\ByteEncoding\Static.php	/^class Zend_Pdf_Cmap_ByteEncoding_Static extends Zend_Pdf_Cmap_ByteEncoding$/;"	c
Zend_Pdf_Cmap_SegmentToDelta	library\Zend\Pdf\Cmap\SegmentToDelta.php	/^class Zend_Pdf_Cmap_SegmentToDelta extends Zend_Pdf_Cmap$/;"	c
actualLength	library\Zend\Pdf\Cmap\SegmentToDelta.php	/^        $actualLength = strlen($cmapData);$/;"	v
characterCodes	library\Zend\Pdf\Cmap\SegmentToDelta.php	/^        $characterCodes = array();$/;"	v
code	library\Zend\Pdf\Cmap\SegmentToDelta.php	/^                $code       = $this->_segmentTableStartCodes[$segmentNum];$/;"	v
delta	library\Zend\Pdf\Cmap\SegmentToDelta.php	/^                $delta = $this->_segmentTableIdDeltas[$segmentNum];$/;"	v
glyphIndex	library\Zend\Pdf\Cmap\SegmentToDelta.php	/^                $glyphIndex = $this->_segmentTableIdRangeOffsets[$segmentNum] - ($this->_segmentCount - $segmentNum) - 1;$/;"	v
glyphIndex	library\Zend\Pdf\Cmap\SegmentToDelta.php	/^                $glyphIndex = ($characterCode - $this->_segmentTableStartCodes[$subtableIndex] +$/;"	v
glyphIndex	library\Zend\Pdf\Cmap\SegmentToDelta.php	/^            $glyphIndex = ($characterCode - $this->_segmentTableStartCodes[$subtableIndex] +$/;"	v
glyphNumber	library\Zend\Pdf\Cmap\SegmentToDelta.php	/^            $glyphNumber = $this->_glyphIndexArray[$glyphIndex];$/;"	v
glyphNumber	library\Zend\Pdf\Cmap\SegmentToDelta.php	/^            $glyphNumber = ($characterCode + $this->_segmentTableIdDeltas[$subtableIndex]) % 65536;$/;"	v
glyphNumbers	library\Zend\Pdf\Cmap\SegmentToDelta.php	/^        $glyphNumbers = array();$/;"	v
language	library\Zend\Pdf\Cmap\SegmentToDelta.php	/^        $language = $this->_extractUInt2($cmapData, 4);$/;"	v
length	library\Zend\Pdf\Cmap\SegmentToDelta.php	/^        $length = $this->_extractUInt2($cmapData, 2);$/;"	v
offset	library\Zend\Pdf\Cmap\SegmentToDelta.php	/^        $offset = 14;$/;"	v
searchIndex	library\Zend\Pdf\Cmap\SegmentToDelta.php	/^                $searchIndex = $this->_searchRange;$/;"	v
searchIndex	library\Zend\Pdf\Cmap\SegmentToDelta.php	/^                $searchIndex = $this->_segmentCount;$/;"	v
searchIndex	library\Zend\Pdf\Cmap\SegmentToDelta.php	/^            $searchIndex = $this->_searchRange;$/;"	v
searchIndex	library\Zend\Pdf\Cmap\SegmentToDelta.php	/^            $searchIndex = $this->_segmentCount;$/;"	v
subtableIndex	library\Zend\Pdf\Cmap\SegmentToDelta.php	/^                    $subtableIndex = $searchIndex;$/;"	v
subtableIndex	library\Zend\Pdf\Cmap\SegmentToDelta.php	/^                $subtableIndex = $searchIndex;$/;"	v
type	library\Zend\Pdf\Cmap\SegmentToDelta.php	/^        $type = $this->_extractUInt2($cmapData, 0);$/;"	v
Zend_Pdf_Cmap_TrimmedTable	library\Zend\Pdf\Cmap\TrimmedTable.php	/^class Zend_Pdf_Cmap_TrimmedTable extends Zend_Pdf_Cmap$/;"	c
actualLength	library\Zend\Pdf\Cmap\TrimmedTable.php	/^        $actualLength = strlen($cmapData);$/;"	v
characterCodes	library\Zend\Pdf\Cmap\TrimmedTable.php	/^        $characterCodes = array();$/;"	v
entryCount	library\Zend\Pdf\Cmap\TrimmedTable.php	/^        $entryCount = $this->_extractUInt2($cmapData, 8);$/;"	v
expectedCount	library\Zend\Pdf\Cmap\TrimmedTable.php	/^        $expectedCount = ($length - 10) >> 1;$/;"	v
glyphIndex	library\Zend\Pdf\Cmap\TrimmedTable.php	/^            $glyphIndex = $characterCode - $this->_startCode;$/;"	v
glyphIndex	library\Zend\Pdf\Cmap\TrimmedTable.php	/^        $glyphIndex = $characterCode - $this->_startCode;$/;"	v
glyphNumbers	library\Zend\Pdf\Cmap\TrimmedTable.php	/^        $glyphNumbers = array();$/;"	v
language	library\Zend\Pdf\Cmap\TrimmedTable.php	/^        $language = $this->_extractUInt2($cmapData, 4);$/;"	v
length	library\Zend\Pdf\Cmap\TrimmedTable.php	/^        $length = $this->_extractUInt2($cmapData, 2);$/;"	v
offset	library\Zend\Pdf\Cmap\TrimmedTable.php	/^        $offset = 10;$/;"	v
type	library\Zend\Pdf\Cmap\TrimmedTable.php	/^        $type = $this->_extractUInt2($cmapData, 0);$/;"	v
Zend_Pdf_Color_Cmyk	library\Zend\Pdf\Color\Cmyk.php	/^class Zend_Pdf_Color_Cmyk extends Zend_Pdf_Color$/;"	c
Zend_Pdf_Color_GrayScale	library\Zend\Pdf\Color\GrayScale.php	/^class Zend_Pdf_Color_GrayScale extends Zend_Pdf_Color$/;"	c
Zend_Pdf_Color_Html	library\Zend\Pdf\Color\Html.php	/^class Zend_Pdf_Color_Html extends Zend_Pdf_Color$/;"	c
b	library\Zend\Pdf\Color\Html.php	/^            $b = round((hexdec($matches[3]) \/ 255), 3);$/;"	v
g	library\Zend\Pdf\Color\Html.php	/^            $g = round((hexdec($matches[2]) \/ 255), 3);$/;"	v
pattern	library\Zend\Pdf\Color\Html.php	/^        $pattern = '\/^#([A-Fa-f0-9]{2})([A-Fa-f0-9]{2})([A-Fa-f0-9]{2})$\/';$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.098; $g = 0.098; $b = 0.439; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.0;   $g = 0.0;   $b = 0.0;   break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.0;   $g = 0.0;   $b = 0.502; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.0;   $g = 0.0;   $b = 0.545; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.0;   $g = 0.0;   $b = 0.804; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.0;   $g = 0.0;   $b = 1.0;   break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.0;   $g = 0.392; $b = 0.0;   break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.0;   $g = 0.502; $b = 0.0;   break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.0;   $g = 0.502; $b = 0.502; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.0;   $g = 0.545; $b = 0.545; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.0;   $g = 0.749; $b = 1.0;   break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.0;   $g = 0.808; $b = 0.820; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.0;   $g = 0.980; $b = 0.604; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.0;   $g = 1.0;   $b = 0.0;   break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.0;   $g = 1.0;   $b = 0.498; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.0;   $g = 1.0;   $b = 1.0;   break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.118; $g = 0.565; $b = 1.0;   break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.125; $g = 0.698; $b = 0.667; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.133; $g = 0.545; $b = 0.133; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.180; $g = 0.545; $b = 0.341; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.184; $g = 0.310; $b = 0.310; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.196; $g = 0.804; $b = 0.196; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.235; $g = 0.702; $b = 0.443; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.251; $g = 0.878; $b = 0.816; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.255; $g = 0.412; $b = 0.882; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.275; $g = 0.510; $b = 0.706; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.282; $g = 0.239; $b = 0.545; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.282; $g = 0.820; $b = 0.8;   break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.294; $g = 0.0;   $b = 0.510; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.333; $g = 0.420; $b = 0.184; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.373; $g = 0.620; $b = 0.627; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.392; $g = 0.584; $b = 0.929; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.412; $g = 0.412; $b = 0.412; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.416; $g = 0.353; $b = 0.804; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.420; $g = 0.557; $b = 0.137; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.439; $g = 0.502; $b = 0.565; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.467; $g = 0.533; $b = 0.6;   break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.482; $g = 0.408; $b = 0.933; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.486; $g = 0.988; $b = 0.0;   break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.498; $g = 1.0;   $b = 0.0;   break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.498; $g = 1.0;   $b = 0.831; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.4;   $g = 0.804; $b = 0.667; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.502; $g = 0.0;   $b = 0.0;   break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.502; $g = 0.0;   $b = 0.502; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.502; $g = 0.502; $b = 0.0;   break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.502; $g = 0.502; $b = 0.502; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.529; $g = 0.808; $b = 0.922; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.529; $g = 0.808; $b = 0.980; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.541; $g = 0.169; $b = 0.886; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.545; $g = 0.0;   $b = 0.0;   break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.545; $g = 0.0;   $b = 0.545; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.545; $g = 0.271; $b = 0.075; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.561; $g = 0.737; $b = 0.561; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.565; $g = 0.933; $b = 0.565; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.576; $g = 0.439; $b = 0.859; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.580; $g = 0.0;   $b = 0.827; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.596; $g = 0.984; $b = 0.596; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.604; $g = 0.804; $b = 0.196; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.627; $g = 0.322; $b = 0.176; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.647; $g = 0.165; $b = 0.165; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.663; $g = 0.663; $b = 0.663; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.678; $g = 0.847; $b = 0.902; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.678; $g = 1.0;   $b = 0.184; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.686; $g = 0.933; $b = 0.933; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.690; $g = 0.769; $b = 0.871; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.690; $g = 0.878; $b = 0.902; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.698; $g = 0.133; $b = 0.133; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.6;   $g = 0.196; $b = 0.8;   break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.722; $g = 0.525; $b = 0.043; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.729; $g = 0.333; $b = 0.827; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.737; $g = 0.561; $b = 0.561; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.741; $g = 0.718; $b = 0.420; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.753; $g = 0.753; $b = 0.753; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.780; $g = 0.082; $b = 0.522; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.804; $g = 0.361; $b = 0.361; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.804; $g = 0.522; $b = 0.247; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.824; $g = 0.412; $b = 0.118; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.824; $g = 0.706; $b = 0.549; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.827; $g = 0.827; $b = 0.827; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.847; $g = 0.749; $b = 0.847; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.855; $g = 0.439; $b = 0.839; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.855; $g = 0.647; $b = 0.125; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.859; $g = 0.439; $b = 0.576; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.863; $g = 0.078; $b = 0.235; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.863; $g = 0.863; $b = 0.863; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.867; $g = 0.627; $b = 0.867; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.871; $g = 0.722; $b = 0.529; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.878; $g = 1.0;   $b = 1.0;   break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.902; $g = 0.902; $b = 0.980; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.914; $g = 0.588; $b = 0.478; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.933; $g = 0.510; $b = 0.933; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.933; $g = 0.910; $b = 0.667; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.941; $g = 0.502; $b = 0.502; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.941; $g = 0.902; $b = 0.549; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.941; $g = 0.973; $b = 1.0;   break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.941; $g = 1.0;   $b = 0.941; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.941; $g = 1.0;   $b = 1.0;   break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.957; $g = 0.643; $b = 0.376; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.961; $g = 0.871; $b = 0.702; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.961; $g = 0.961; $b = 0.863; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.961; $g = 0.961; $b = 0.961; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.961; $g = 1.0;   $b = 0.980; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.973; $g = 0.973; $b = 1.0;   break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.980; $g = 0.502; $b = 0.447; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.980; $g = 0.922; $b = 0.843; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.980; $g = 0.941; $b = 0.902; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.980; $g = 0.980; $b = 0.824; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.992; $g = 0.388; $b = 0.278; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 0.992; $g = 0.961; $b = 0.902; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 1.0;   $g = 0.078; $b = 0.576; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 1.0;   $g = 0.0;   $b = 0.0;   break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 1.0;   $g = 0.0;   $b = 1.0;   break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 1.0;   $g = 0.271; $b = 0.0;   break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 1.0;   $g = 0.412; $b = 0.706; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 1.0;   $g = 0.498; $b = 0.314; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 1.0;   $g = 0.549; $b = 0.0;   break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 1.0;   $g = 0.627; $b = 0.478; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 1.0;   $g = 0.647; $b = 0.0;   break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 1.0;   $g = 0.714; $b = 0.757; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 1.0;   $g = 0.753; $b = 0.796; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 1.0;   $g = 0.843; $b = 0.0;   break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 1.0;   $g = 0.871; $b = 0.678; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 1.0;   $g = 0.894; $b = 0.710; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 1.0;   $g = 0.894; $b = 0.769; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 1.0;   $g = 0.894; $b = 0.882; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 1.0;   $g = 0.937; $b = 0.835; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 1.0;   $g = 0.941; $b = 0.941; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 1.0;   $g = 0.941; $b = 0.961; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 1.0;   $g = 0.961; $b = 0.933; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 1.0;   $g = 0.973; $b = 0.863; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 1.0;   $g = 0.980; $b = 0.804; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 1.0;   $g = 0.980; $b = 0.941; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 1.0;   $g = 0.980; $b = 0.980; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 1.0;   $g = 1.0;   $b = 0.0;   break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 1.0;   $g = 1.0;   $b = 0.804; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 1.0;   $g = 1.0;   $b = 0.878; break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^                $r = 1.0;   $g = 1.0;   $b = 1.0;   break;$/;"	v
r	library\Zend\Pdf\Color\Html.php	/^            $r = round((hexdec($matches[1]) \/ 255), 3);$/;"	v
Zend_Pdf_Color_Rgb	library\Zend\Pdf\Color\Rgb.php	/^class Zend_Pdf_Color_Rgb extends Zend_Pdf_Color$/;"	c
Zend_Pdf_Destination_Fit	library\Zend\Pdf\Destination\Fit.php	/^class Zend_Pdf_Destination_Fit extends Zend_Pdf_Destination_Explicit$/;"	c
destinationArray	library\Zend\Pdf\Destination\Fit.php	/^        $destinationArray = new Zend_Pdf_Element_Array();$/;"	v
Zend_Pdf_Destination_FitBoundingBox	library\Zend\Pdf\Destination\FitBoundingBox.php	/^class Zend_Pdf_Destination_FitBoundingBox extends Zend_Pdf_Destination_Explicit$/;"	c
destinationArray	library\Zend\Pdf\Destination\FitBoundingBox.php	/^        $destinationArray = new Zend_Pdf_Element_Array();$/;"	v
Zend_Pdf_Destination_FitBoundingBoxHorizontally	library\Zend\Pdf\Destination\FitBoundingBoxHorizontally.php	/^class Zend_Pdf_Destination_FitBoundingBoxHorizontally extends Zend_Pdf_Destination_Explicit$/;"	c
destinationArray	library\Zend\Pdf\Destination\FitBoundingBoxHorizontally.php	/^        $destinationArray = new Zend_Pdf_Element_Array();$/;"	v
Zend_Pdf_Destination_FitBoundingBoxVertically	library\Zend\Pdf\Destination\FitBoundingBoxVertically.php	/^class Zend_Pdf_Destination_FitBoundingBoxVertically extends Zend_Pdf_Destination_Explicit$/;"	c
destinationArray	library\Zend\Pdf\Destination\FitBoundingBoxVertically.php	/^        $destinationArray = new Zend_Pdf_Element_Array();$/;"	v
Zend_Pdf_Destination_FitHorizontally	library\Zend\Pdf\Destination\FitHorizontally.php	/^class Zend_Pdf_Destination_FitHorizontally extends Zend_Pdf_Destination_Explicit$/;"	c
destinationArray	library\Zend\Pdf\Destination\FitHorizontally.php	/^        $destinationArray = new Zend_Pdf_Element_Array();$/;"	v
Zend_Pdf_Destination_FitRectangle	library\Zend\Pdf\Destination\FitRectangle.php	/^class Zend_Pdf_Destination_FitRectangle extends Zend_Pdf_Destination_Explicit$/;"	c
destinationArray	library\Zend\Pdf\Destination\FitRectangle.php	/^        $destinationArray = new Zend_Pdf_Element_Array();$/;"	v
Zend_Pdf_Destination_FitVertically	library\Zend\Pdf\Destination\FitVertically.php	/^class Zend_Pdf_Destination_FitVertically extends Zend_Pdf_Destination_Explicit$/;"	c
destinationArray	library\Zend\Pdf\Destination\FitVertically.php	/^        $destinationArray = new Zend_Pdf_Element_Array();$/;"	v
Zend_Pdf_Destination_Named	library\Zend\Pdf\Destination\Named.php	/^class Zend_Pdf_Destination_Named extends Zend_Pdf_Destination$/;"	c
Zend_Pdf_Destination_Unknown	library\Zend\Pdf\Destination\Unknown.php	/^class Zend_Pdf_Destination_Unknown extends Zend_Pdf_Destination_Explicit$/;"	c
Zend_Pdf_Destination_Zoom	library\Zend\Pdf\Destination\Zoom.php	/^class Zend_Pdf_Destination_Zoom extends Zend_Pdf_Destination_Explicit$/;"	c
destinationArray	library\Zend\Pdf\Destination\Zoom.php	/^        $destinationArray = new Zend_Pdf_Element_Array();$/;"	v
isDictionary	library\Zend\Pdf\Element.php	/^                    $isDictionary = true;$/;"	v
isDictionary	library\Zend\Pdf\Element.php	/^            $isDictionary = false;$/;"	v
pdfElementsArray	library\Zend\Pdf\Element.php	/^            $pdfElementsArray = array();$/;"	v
Zend_Pdf_ElementFactory	library\Zend\Pdf\ElementFactory.php	/^class Zend_Pdf_ElementFactory implements Zend_Pdf_ElementFactory_Interface$/;"	c
count	library\Zend\Pdf\ElementFactory.php	/^        $count = $this->_objectCount;$/;"	v
obj	library\Zend\Pdf\ElementFactory.php	/^        $obj = new Zend_Pdf_Element_Object($objectValue, $this->_objectCount++, 0, $this);$/;"	v
obj	library\Zend\Pdf\ElementFactory.php	/^        $obj = new Zend_Pdf_Element_Object_Stream($streamValue, $this->_objectCount++, 0, $this);$/;"	v
result	library\Zend\Pdf\ElementFactory.php	/^        $result = array();$/;"	v
rootFactory	library\Zend\Pdf\ElementFactory.php	/^            $rootFactory = $this;$/;"	v
shift	library\Zend\Pdf\ElementFactory.php	/^            $shift = $rootFactory->getEnumerationShift($this);$/;"	v
shift	library\Zend\Pdf\ElementFactory.php	/^            $shift = 0;$/;"	v
shift	library\Zend\Pdf\ElementFactory.php	/^        $shift = $this->_objectCount - 1;$/;"	v
subFactoryShift	library\Zend\Pdf\ElementFactory.php	/^            $subFactoryShift = $subFactory->calculateShift($factory);$/;"	v
Zend_Pdf_ElementFactory_Proxy	library\Zend\Pdf\ElementFactory\Proxy.php	/^class Zend_Pdf_ElementFactory_Proxy implements Zend_Pdf_ElementFactory_Interface$/;"	c
Zend_Pdf_Element_Array	library\Zend\Pdf\Element\Array.php	/^class Zend_Pdf_Element_Array extends Zend_Pdf_Element$/;"	c
lastNL	library\Zend\Pdf\Element\Array.php	/^                $lastNL = strlen($outStr);$/;"	v
lastNL	library\Zend\Pdf\Element\Array.php	/^        $lastNL = 0;$/;"	v
newArray	library\Zend\Pdf\Element\Array.php	/^        $newArray = new self();$/;"	v
outStr	library\Zend\Pdf\Element\Array.php	/^        $outStr = '[';$/;"	v
phpArray	library\Zend\Pdf\Element\Array.php	/^        $phpArray = array();$/;"	v
Zend_Pdf_Element_Boolean	library\Zend\Pdf\Element\Boolean.php	/^class Zend_Pdf_Element_Boolean extends Zend_Pdf_Element$/;"	c
Zend_Pdf_Element_Dictionary	library\Zend\Pdf\Element\Dictionary.php	/^class Zend_Pdf_Element_Dictionary extends Zend_Pdf_Element$/;"	c
element	library\Zend\Pdf\Element\Dictionary.php	/^        $element = isset($this->_items[$item]) ? $this->_items[$item]$/;"	v
lastNL	library\Zend\Pdf\Element\Dictionary.php	/^                $lastNL = strlen($outStr);$/;"	v
lastNL	library\Zend\Pdf\Element\Dictionary.php	/^        $lastNL = 0;$/;"	v
mode	library\Zend\Pdf\Element\Dictionary.php	/^                $mode == Zend_Pdf_Element::CLONE_MODE_SKIP_PAGES$/;"	v
nameObj	library\Zend\Pdf\Element\Dictionary.php	/^            $nameObj = new Zend_Pdf_Element_Name($name);$/;"	v
newDictionary	library\Zend\Pdf\Element\Dictionary.php	/^        $newDictionary = new self();$/;"	v
outStr	library\Zend\Pdf\Element\Dictionary.php	/^        $outStr = '<<';$/;"	v
phpArray	library\Zend\Pdf\Element\Dictionary.php	/^        $phpArray = array();$/;"	v
Zend_Pdf_Element_Name	library\Zend\Pdf\Element\Name.php	/^class Zend_Pdf_Element_Name extends Zend_Pdf_Element$/;"	c
nextCode	library\Zend\Pdf\Element\Name.php	/^            $nextCode = ord($inStr[$count]);$/;"	v
outStr	library\Zend\Pdf\Element\Name.php	/^        $outStr = '';$/;"	v
Zend_Pdf_Element_Null	library\Zend\Pdf\Element\Null.php	/^class Zend_Pdf_Element_Null extends Zend_Pdf_Element$/;"	c
Zend_Pdf_Element_Numeric	library\Zend\Pdf\Element\Numeric.php	/^class Zend_Pdf_Element_Numeric extends Zend_Pdf_Element$/;"	c
prec	library\Zend\Pdf\Element\Numeric.php	/^        $prec = 0; $v = $this->value;$/;"	v
Zend_Pdf_Element_Object	library\Zend\Pdf\Element\Object.php	/^class Zend_Pdf_Element_Object extends Zend_Pdf_Element$/;"	c
id	library\Zend\Pdf\Element\Object.php	/^        $id = spl_object_hash($this);$/;"	v
shift	library\Zend\Pdf\Element\Object.php	/^            $shift = $factory->getEnumerationShift($this->_factory);$/;"	v
shift	library\Zend\Pdf\Element\Object.php	/^            $shift = 0;$/;"	v
shift	library\Zend\Pdf\Element\Object.php	/^        $shift = $factory->getEnumerationShift($this->_factory);$/;"	v
Zend_Pdf_Element_Object_Stream	library\Zend\Pdf\Element\Object\Stream.php	/^class Zend_Pdf_Element_Object_Stream extends Zend_Pdf_Element_Object$/;"	c
dictionaryArray	library\Zend\Pdf\Element\Object\Stream.php	/^        $dictionaryArray = array();$/;"	v
filters	library\Zend\Pdf\Element\Object\Stream.php	/^        $filters = array_reverse($this->_initialDictionaryData['Filter'], true);$/;"	v
id	library\Zend\Pdf\Element\Object\Stream.php	/^        $id = spl_object_hash($this);$/;"	v
newDictionary	library\Zend\Pdf\Element\Object\Stream.php	/^            $newDictionary   = $this->_extractDictionaryData();$/;"	v
shift	library\Zend\Pdf\Element\Object\Stream.php	/^        $shift = $factory->getEnumerationShift($this->_factory);$/;"	v
streamDictionary	library\Zend\Pdf\Element\Object\Stream.php	/^        $streamDictionary = $this->_dictionary->makeClone($factory, $processed, $mode);$/;"	v
streamValue	library\Zend\Pdf\Element\Object\Stream.php	/^        $streamValue      = $this->_value;$/;"	v
valueRef	library\Zend\Pdf\Element\Object\Stream.php	/^                    $valueRef = Zend_Pdf_Filter_Ascii85::decode($valueRef);$/;"	v
valueRef	library\Zend\Pdf\Element\Object\Stream.php	/^                    $valueRef = Zend_Pdf_Filter_Ascii85::encode($valueRef);$/;"	v
valueRef	library\Zend\Pdf\Element\Object\Stream.php	/^                    $valueRef = Zend_Pdf_Filter_AsciiHex::decode($valueRef);$/;"	v
valueRef	library\Zend\Pdf\Element\Object\Stream.php	/^                    $valueRef = Zend_Pdf_Filter_AsciiHex::encode($valueRef);$/;"	v
valueRef	library\Zend\Pdf\Element\Object\Stream.php	/^                    $valueRef = Zend_Pdf_Filter_Compression_Flate::decode($valueRef,$/;"	v
valueRef	library\Zend\Pdf\Element\Object\Stream.php	/^                    $valueRef = Zend_Pdf_Filter_Compression_Flate::encode($valueRef,$/;"	v
valueRef	library\Zend\Pdf\Element\Object\Stream.php	/^                    $valueRef = Zend_Pdf_Filter_Compression_Lzw::decode($valueRef,$/;"	v
valueRef	library\Zend\Pdf\Element\Object\Stream.php	/^                    $valueRef = Zend_Pdf_Filter_Compression_Lzw::encode($valueRef,$/;"	v
valueRef	library\Zend\Pdf\Element\Object\Stream.php	/^                    $valueRef = Zend_Pdf_Filter_RunLength::decode($valueRef);$/;"	v
valueRef	library\Zend\Pdf\Element\Object\Stream.php	/^                    $valueRef = Zend_Pdf_Filter_RunLength::encode($valueRef);$/;"	v
valueRef	library\Zend\Pdf\Element\Object\Stream.php	/^            $valueRef = $value;$/;"	v
valueRef	library\Zend\Pdf\Element\Object\Stream.php	/^            $valueRef = &$this->_value->value->getRef();$/;"	v
Zend_Pdf_Element_Reference	library\Zend\Pdf\Element\Reference.php	/^class Zend_Pdf_Element_Reference extends Zend_Pdf_Element$/;"	c
id	library\Zend\Pdf\Element\Reference.php	/^        $id = spl_object_hash($this->_ref);$/;"	v
obj	library\Zend\Pdf\Element\Reference.php	/^            $obj = $this->_context->getParser()->getObject($/;"	v
shift	library\Zend\Pdf\Element\Reference.php	/^            $shift = $factory->getEnumerationShift($this->_factory);$/;"	v
shift	library\Zend\Pdf\Element\Reference.php	/^            $shift = 0;$/;"	v
Zend_Pdf_Element_Reference_Context	library\Zend\Pdf\Element\Reference\Context.php	/^class Zend_Pdf_Element_Reference_Context$/;"	c
Zend_Pdf_Element_Reference_Table	library\Zend\Pdf\Element\Reference\Table.php	/^class Zend_Pdf_Element_Reference_Table$/;"	c
genNum	library\Zend\Pdf\Element\Reference\Table.php	/^        $genNum = (int)$refElements[1];$/;"	v
objNum	library\Zend\Pdf\Element\Reference\Table.php	/^        $objNum = (int)$refElements[0];$/;"	v
refElements	library\Zend\Pdf\Element\Reference\Table.php	/^        $refElements = explode(' ', $ref);$/;"	v
Zend_Pdf_Element_Stream	library\Zend\Pdf\Element\Stream.php	/^class Zend_Pdf_Element_Stream extends Zend_Pdf_Element$/;"	c
ref	library\Zend\Pdf\Element\Stream.php	/^        $ref = &$this->value->getRef();$/;"	v
ref	library\Zend\Pdf\Element\Stream.php	/^        $ref = '';$/;"	v
Zend_Pdf_Element_String	library\Zend\Pdf\Element\String.php	/^class Zend_Pdf_Element_String extends Zend_Pdf_Element$/;"	c
chunkOut	library\Zend\Pdf\Element\String.php	/^            $chunkOut = substr($chunk, 0, $offset);$/;"	v
escapeCharOffset	library\Zend\Pdf\Element\String.php	/^            $escapeCharOffset = strpos($str, '\\\\', $offset);$/;"	v
nextCode	library\Zend\Pdf\Element\String.php	/^                            $nextCode = '0' . $str[$offset];$/;"	v
nextCode	library\Zend\Pdf\Element\String.php	/^                $nextCode = ord($chunk[$offset++]);$/;"	v
offset	library\Zend\Pdf\Element\String.php	/^                $offset = $escapeCharOffset + 1;$/;"	v
offset	library\Zend\Pdf\Element\String.php	/^            $offset = strcspn($chunk, "\\n\\r\\t\\x08\\x0C()\\\\");$/;"	v
offset	library\Zend\Pdf\Element\String.php	/^        $offset = 0;$/;"	v
outEntries	library\Zend\Pdf\Element\String.php	/^        $outEntries = array();$/;"	v
start	library\Zend\Pdf\Element\String.php	/^                $start = $offset;$/;"	v
Zend_Pdf_Element_String_Binary	library\Zend\Pdf\Element\String\Binary.php	/^class Zend_Pdf_Element_String_Binary extends Zend_Pdf_Element_String$/;"	c
chunks	library\Zend\Pdf\Element\String\Binary.php	/^        $chunks = array();$/;"	v
length	library\Zend\Pdf\Element\String\Binary.php	/^        $length = 0;$/;"	v
offset	library\Zend\Pdf\Element\String\Binary.php	/^        $offset = 0;$/;"	v
start	library\Zend\Pdf\Element\String\Binary.php	/^            $start = $offset;$/;"	v
Zend_Pdf_Exception	library\Zend\Pdf\Exception.php	/^class Zend_Pdf_Exception extends Zend_Exception$/;"	c
bitMask	library\Zend\Pdf\FileParser.php	/^        $bitMask = 1 << $bit;$/;"	v
bitsToRead	library\Zend\Pdf\FileParser.php	/^        $bitsToRead = $mantissaBits + $fractionBits;$/;"	v
byteCount	library\Zend\Pdf\FileParser.php	/^        $byteCount = $this->readUInt($lengthBytes);$/;"	v
byteOrder	library\Zend\Pdf\FileParser.php	/^                                    $byteOrder = Zend_Pdf_FileParser::BYTE_ORDER_BIG_ENDIAN,$/;"	v
byteOrder	library\Zend\Pdf\FileParser.php	/^                              $byteOrder = Zend_Pdf_FileParser::BYTE_ORDER_BIG_ENDIAN)$/;"	v
bytes	library\Zend\Pdf\FileParser.php	/^        $bytes = $this->_dataSource->readBytes($byteCount);$/;"	v
bytes	library\Zend\Pdf\FileParser.php	/^        $bytes = $this->_dataSource->readBytes($size);$/;"	v
characterSet	library\Zend\Pdf\FileParser.php	/^                                    $characterSet = '')$/;"	v
isSet	library\Zend\Pdf\FileParser.php	/^        $isSet = (($bitField & $bitMask) == $bitMask);$/;"	v
number	library\Zend\Pdf\FileParser.php	/^                    $number = ($number << 8) | ((~ ord($bytes[$i])) & 0xff);$/;"	v
number	library\Zend\Pdf\FileParser.php	/^                    $number = ($number << 8) | ord($bytes[$i]);$/;"	v
number	library\Zend\Pdf\FileParser.php	/^                $number = ($number << 8) | ord($bytes[$i]);$/;"	v
number	library\Zend\Pdf\FileParser.php	/^                $number = (~ $number) & 0xff;$/;"	v
number	library\Zend\Pdf\FileParser.php	/^                $number = 0;$/;"	v
number	library\Zend\Pdf\FileParser.php	/^                $number = ~$number;$/;"	v
number	library\Zend\Pdf\FileParser.php	/^            $number = 0;$/;"	v
number	library\Zend\Pdf\FileParser.php	/^            $number = ord($bytes[$size - 1]);$/;"	v
number	library\Zend\Pdf\FileParser.php	/^            $number = ord($bytes[0]);$/;"	v
number	library\Zend\Pdf\FileParser.php	/^        $number = $this->readInt(($bitsToRead >> 3), $byteOrder) \/ (1 << $fractionBits);$/;"	v
Zend_Pdf_FileParserDataSource_File	library\Zend\Pdf\FileParserDataSource\File.php	/^class Zend_Pdf_FileParserDataSource_File extends Zend_Pdf_FileParserDataSource$/;"	c
bytes	library\Zend\Pdf\FileParserDataSource\File.php	/^        $bytes = @fread($this->_fileResource, $byteCount);$/;"	v
result	library\Zend\Pdf\FileParserDataSource\File.php	/^        $result = @fseek($this->_fileResource, $offset, SEEK_SET);$/;"	v
Zend_Pdf_FileParserDataSource_String	library\Zend\Pdf\FileParserDataSource\String.php	/^class Zend_Pdf_FileParserDataSource_String extends Zend_Pdf_FileParserDataSource$/;"	c
bytes	library\Zend\Pdf\FileParserDataSource\String.php	/^        $bytes = substr($this->_string, $this->_offset, $byteCount);$/;"	v
args	library\Zend\Pdf\FileParser\Font.php	/^            $args = func_get_args();$/;"	v
byteOrder	library\Zend\Pdf\FileParser\Font.php	/^                                    $byteOrder = Zend_Pdf_FileParser::BYTE_ORDER_BIG_ENDIAN,$/;"	v
characterSet	library\Zend\Pdf\FileParser\Font.php	/^                                    $characterSet = '')$/;"	v
logger	library\Zend\Pdf\FileParser\Font.php	/^        $logger = new Zend_Log();$/;"	v
message	library\Zend\Pdf\FileParser\Font.php	/^            $message = array_shift($args);$/;"	v
message	library\Zend\Pdf\FileParser\Font.php	/^            $message = vsprintf($message, $args);$/;"	v
baseOffset	library\Zend\Pdf\FileParser\Font\OpenType.php	/^        $baseOffset = $this->_tableDirectory['cmap']['offset'];$/;"	v
baseOffset	library\Zend\Pdf\FileParser\Font\OpenType.php	/^        $baseOffset = $this->_tableDirectory['name']['offset'];$/;"	v
cmapData	library\Zend\Pdf\FileParser\Font\OpenType.php	/^        $cmapData = $this->readBytes($cmapLength);$/;"	v
cmapLength	library\Zend\Pdf\FileParser\Font\OpenType.php	/^                    $cmapLength = $this->readUInt(2);$/;"	v
cmapOffset	library\Zend\Pdf\FileParser\Font\OpenType.php	/^            $cmapOffset = $baseOffset + $offset;$/;"	v
cmapType	library\Zend\Pdf\FileParser\Font\OpenType.php	/^            $cmapType = $format;$/;"	v
cmapType	library\Zend\Pdf\FileParser\Font\OpenType.php	/^        $cmapType = -1;$/;"	v
embeddingFlags	library\Zend\Pdf\FileParser\Font\OpenType.php	/^        $embeddingFlags = $this->readUInt(2);$/;"	v
encodingID	library\Zend\Pdf\FileParser\Font\OpenType.php	/^            $encodingID = $this->readUInt(2);$/;"	v
familyClass	library\Zend\Pdf\FileParser\Font\OpenType.php	/^        $familyClass = ($this->readUInt(2) >> 8);    \/\/ don't care about subclass$/;"	v
fileSize	library\Zend\Pdf\FileParser\Font\OpenType.php	/^            $fileSize = $this->_dataSource->getSize();$/;"	v
fixedPitch	library\Zend\Pdf\FileParser\Font\OpenType.php	/^        $fixedPitch = $this->readUInt(4);$/;"	v
flags	library\Zend\Pdf\FileParser\Font\OpenType.php	/^        $flags = $this->readUInt(2);$/;"	v
fontNames	library\Zend\Pdf\FileParser\Font\OpenType.php	/^        $fontNames = array();$/;"	v
format	library\Zend\Pdf\FileParser\Font\OpenType.php	/^            $format = $this->readUInt(2);$/;"	v
glyphWidths	library\Zend\Pdf\FileParser\Font\OpenType.php	/^        $glyphWidths = array();$/;"	v
isSubsettable	library\Zend\Pdf\FileParser\Font\OpenType.php	/^        $isSubsettable = $this->isBitSet($embeddingFlags, 8);$/;"	v
language	library\Zend\Pdf\FileParser\Font\OpenType.php	/^                    $language = $this->readUInt(2);$/;"	v
language	library\Zend\Pdf\FileParser\Font\OpenType.php	/^            $language = -1;$/;"	v
languageCode	library\Zend\Pdf\FileParser\Font\OpenType.php	/^            $languageCode = $this->_languageCodeForPlatform($platformID, $languageID);$/;"	v
languageID	library\Zend\Pdf\FileParser\Font\OpenType.php	/^            $languageID = $this->readUInt(2);$/;"	v
macStyleBits	library\Zend\Pdf\FileParser\Font\OpenType.php	/^        $macStyleBits = $this->readUInt(2);$/;"	v
magicNumber	library\Zend\Pdf\FileParser\Font\OpenType.php	/^        $magicNumber = $this->readUInt(4);$/;"	v
nameCount	library\Zend\Pdf\FileParser\Font\OpenType.php	/^        $nameCount = $this->readUInt(2);$/;"	v
nameID	library\Zend\Pdf\FileParser\Font\OpenType.php	/^            $nameID     = $this->readUInt(2);$/;"	v
nameLength	library\Zend\Pdf\FileParser\Font\OpenType.php	/^            $nameLength = $this->readUInt(2);$/;"	v
nameOffset	library\Zend\Pdf\FileParser\Font\OpenType.php	/^            $nameOffset = $this->readUInt(2);$/;"	v
nameRecords	library\Zend\Pdf\FileParser\Font\OpenType.php	/^        $nameRecords = array();$/;"	v
offsets	library\Zend\Pdf\FileParser\Font\OpenType.php	/^        $offsets = array();$/;"	v
platformID	library\Zend\Pdf\FileParser\Font\OpenType.php	/^            $platformID = $this->readUInt(2);$/;"	v
storageOffset	library\Zend\Pdf\FileParser\Font\OpenType.php	/^        $storageOffset = $this->readUInt(2) + $baseOffset;$/;"	v
string	library\Zend\Pdf\FileParser\Font\OpenType.php	/^                    $string = $this->readStringMacRoman($attributes['length']);$/;"	v
string	library\Zend\Pdf\FileParser\Font\OpenType.php	/^                    $string = $this->readStringUTF16($attributes['length']);$/;"	v
stringOffset	library\Zend\Pdf\FileParser\Font\OpenType.php	/^                $stringOffset = $storageOffset + $attributes['offset'];$/;"	v
subtableCount	library\Zend\Pdf\FileParser\Font\OpenType.php	/^        $subtableCount = $this->readUInt(2);$/;"	v
subtableOffset	library\Zend\Pdf\FileParser\Font\OpenType.php	/^            $subtableOffset = $this->readUInt(4);$/;"	v
subtables	library\Zend\Pdf\FileParser\Font\OpenType.php	/^        $subtables = array();$/;"	v
tableCount	library\Zend\Pdf\FileParser\Font\OpenType.php	/^        $tableCount = $this->readUInt(2);$/;"	v
tableFormat	library\Zend\Pdf\FileParser\Font\OpenType.php	/^        $tableFormat = $this->readUInt(2);$/;"	v
tableLength	library\Zend\Pdf\FileParser\Font\OpenType.php	/^            $tableLength = $this->readUInt(4);$/;"	v
tableName	library\Zend\Pdf\FileParser\Font\OpenType.php	/^            $tableName = $this->readBytes(4);$/;"	v
tableOffset	library\Zend\Pdf\FileParser\Font\OpenType.php	/^            $tableOffset = $this->readUInt(4);$/;"	v
tableVersion	library\Zend\Pdf\FileParser\Font\OpenType.php	/^        $tableVersion = $this->_readTableVersion(1, 1);$/;"	v
tableVersion	library\Zend\Pdf\FileParser\Font\OpenType.php	/^        $tableVersion = $this->_readTableVersion(1, 4);$/;"	v
tableVersion	library\Zend\Pdf\FileParser\Font\OpenType.php	/^        $tableVersion = $this->readFixed(16, 16);$/;"	v
tableVersion	library\Zend\Pdf\FileParser\Font\OpenType.php	/^        $tableVersion = $this->readUInt(2);$/;"	v
unicodeRange1	library\Zend\Pdf\FileParser\Font\OpenType.php	/^        $unicodeRange1 = $this->readUInt(4);$/;"	v
unicodeRange2	library\Zend\Pdf\FileParser\Font\OpenType.php	/^        $unicodeRange2 = $this->readUInt(4);$/;"	v
unicodeRange3	library\Zend\Pdf\FileParser\Font\OpenType.php	/^        $unicodeRange3 = $this->readUInt(4);$/;"	v
unicodeRange4	library\Zend\Pdf\FileParser\Font\OpenType.php	/^        $unicodeRange4 = $this->readUInt(4);$/;"	v
Zend_Pdf_FileParser_Font_OpenType_TrueType	library\Zend\Pdf\FileParser\Font\OpenType\TrueType.php	/^class Zend_Pdf_FileParser_Font_OpenType_TrueType extends Zend_Pdf_FileParser_Font_OpenType$/;"	c
Zend_Pdf_FileParser_Image_Png	library\Zend\Pdf\FileParser\Image\Png.php	/^class Zend_Pdf_FileParser_Image_Png extends Zend_Pdf_FileParser_Image$/;"	c
baseColor	library\Zend\Pdf\FileParser\Image\Png.php	/^                  $baseColor = $this->readInt(1);$/;"	v
blue	library\Zend\Pdf\FileParser\Image\Png.php	/^                  $blue = $this->readInt(1);$/;"	v
chunkLength	library\Zend\Pdf\FileParser\Image\Png.php	/^              $chunkLength = $this->readUInt(4);$/;"	v
chunkType	library\Zend\Pdf\FileParser\Image\Png.php	/^              $chunkType = $this->readBytes(4);$/;"	v
green	library\Zend\Pdf\FileParser\Image\Png.php	/^                  $green = $this->readInt(1);$/;"	v
offset	library\Zend\Pdf\FileParser\Image\Png.php	/^              $offset = $this->getOffset();$/;"	v
red	library\Zend\Pdf\FileParser\Image\Png.php	/^                  $red = $this->readInt(1);$/;"	v
size	library\Zend\Pdf\FileParser\Image\Png.php	/^         $size = $this->getSize();$/;"	v
tmpData	library\Zend\Pdf\FileParser\Image\Png.php	/^                  $tmpData = $this->readBytes($chunkLength);$/;"	v
Zend_Pdf_Filter_Ascii85	library\Zend\Pdf\Filter\Ascii85.php	/^class Zend_Pdf_Filter_Ascii85 implements Zend_Pdf_Filter_Interface$/;"	c
b	library\Zend\Pdf\Filter\Ascii85.php	/^            $b = $b[1];$/;"	v
b	library\Zend\Pdf\Filter\Ascii85.php	/^            $b = 0;$/;"	v
b	library\Zend\Pdf\Filter\Ascii85.php	/^            $b = unpack("N", $chunk);$/;"	v
c	library\Zend\Pdf\Filter\Ascii85.php	/^            $c = substr($data, $i, 5);$/;"	v
c	library\Zend\Pdf\Filter\Ascii85.php	/^            $c = unpack('C5', $c);$/;"	v
c	library\Zend\Pdf\Filter\Ascii85.php	/^            $c = unpack('C5', $chunk);$/;"	v
chunk	library\Zend\Pdf\Filter\Ascii85.php	/^            $chunk = substr($data, $i);$/;"	v
chunk	library\Zend\Pdf\Filter\Ascii85.php	/^            $chunk = substr($data, $i, 4);$/;"	v
chunk	library\Zend\Pdf\Filter\Ascii85.php	/^            $chunk = substr($data, -$n);$/;"	v
data	library\Zend\Pdf\Filter\Ascii85.php	/^        $data = str_replace($whiteSpace, '', $data);$/;"	v
data	library\Zend\Pdf\Filter\Ascii85.php	/^        $data = substr($data, 0, (strlen($data) - 2));$/;"	v
dataLength	library\Zend\Pdf\Filter\Ascii85.php	/^        $dataLength = strlen($data);$/;"	v
foo	library\Zend\Pdf\Filter\Ascii85.php	/^                $foo = (int) (($b \/ pow(85,$j)) + 33);$/;"	v
foo	library\Zend\Pdf\Filter\Ascii85.php	/^            $foo = pack("N", $value);$/;"	v
n	library\Zend\Pdf\Filter\Ascii85.php	/^            $n = $dataLength - $i;$/;"	v
output	library\Zend\Pdf\Filter\Ascii85.php	/^        $output = '';$/;"	v
output	library\Zend\Pdf\Filter\Ascii85.php	/^        $output = chunk_split($output, 76, "\\n");$/;"	v
output	library\Zend\Pdf\Filter\Ascii85.php	/^        $output = substr($output, 0, -1);$/;"	v
partialLength	library\Zend\Pdf\Filter\Ascii85.php	/^            $partialLength = strlen($chunk);$/;"	v
value	library\Zend\Pdf\Filter\Ascii85.php	/^            $value = 0;$/;"	v
whiteSpace	library\Zend\Pdf\Filter\Ascii85.php	/^        $whiteSpace = array("\\x00", "\\x09", "\\x0A", "\\x0C", "\\x0D", "\\x20");$/;"	v
Zend_Pdf_Filter_AsciiHex	library\Zend\Pdf\Filter\AsciiHex.php	/^class Zend_Pdf_Filter_AsciiHex implements Zend_Pdf_Filter_Interface$/;"	c
charCode	library\Zend\Pdf\Filter\AsciiHex.php	/^            $charCode = ord($data[$count]);$/;"	v
code	library\Zend\Pdf\Filter\AsciiHex.php	/^                        $code = $charCode - 0x30;$/;"	v
code	library\Zend\Pdf\Filter\AsciiHex.php	/^                        $code = $charCode - 0x37\/*0x41 - 0x0A*\/;$/;"	v
code	library\Zend\Pdf\Filter\AsciiHex.php	/^                        $code = $charCode - 0x57\/*0x61 - 0x0A*\/;$/;"	v
commentMode	library\Zend\Pdf\Filter\AsciiHex.php	/^                    $commentMode = false;$/;"	v
commentMode	library\Zend\Pdf\Filter\AsciiHex.php	/^                    $commentMode = true;$/;"	v
commentMode	library\Zend\Pdf\Filter\AsciiHex.php	/^        $commentMode = false;$/;"	v
hexCodeHigh	library\Zend\Pdf\Filter\AsciiHex.php	/^                        $hexCodeHigh = $code;$/;"	v
oddCode	library\Zend\Pdf\Filter\AsciiHex.php	/^                    $oddCode = !$oddCode;$/;"	v
oddCode	library\Zend\Pdf\Filter\AsciiHex.php	/^        $oddCode = true;$/;"	v
output	library\Zend\Pdf\Filter\AsciiHex.php	/^        $output  = '';$/;"	v
bitsPerComponent	library\Zend\Pdf\Filter\Compression.php	/^            $bitsPerComponent = $params['BitsPerComponent'];$/;"	v
bitsPerComponent	library\Zend\Pdf\Filter\Compression.php	/^        $bitsPerComponent = self::_getBitsPerComponentValue($params);$/;"	v
bitsPerSample	library\Zend\Pdf\Filter\Compression.php	/^            $bitsPerSample  = $bitsPerComponent*$colors;$/;"	v
bytesPerRow	library\Zend\Pdf\Filter\Compression.php	/^            $bytesPerRow    = (int)(($bitsPerSample*$columns + 7)\/8);  \/\/ (int)ceil(...) emulation$/;"	v
bytesPerRow	library\Zend\Pdf\Filter\Compression.php	/^            $bytesPerRow    = ceil($bitsPerSample*$columns\/8);$/;"	v
bytesPerSample	library\Zend\Pdf\Filter\Compression.php	/^            $bytesPerSample = (int)(($bitsPerSample + 7)\/8);           \/\/ (int)ceil(...) emulation$/;"	v
bytesPerSample	library\Zend\Pdf\Filter\Compression.php	/^            $bytesPerSample = ceil($bitsPerSample\/8);$/;"	v
colors	library\Zend\Pdf\Filter\Compression.php	/^            $colors = $params['Colors'];$/;"	v
colors	library\Zend\Pdf\Filter\Compression.php	/^        $colors           = self::_getColorsValue($params);$/;"	v
columns	library\Zend\Pdf\Filter\Compression.php	/^        $columns          = self::_getColumnsValue($params);$/;"	v
currentRow	library\Zend\Pdf\Filter\Compression.php	/^                        $currentRow = array();$/;"	v
currentRow	library\Zend\Pdf\Filter\Compression.php	/^                    $currentRow = array();$/;"	v
decodedByte	library\Zend\Pdf\Filter\Compression.php	/^                            $decodedByte = (ord($data[$offset++]) + $lastRow[$count2]) & 0xFF;$/;"	v
decodedByte	library\Zend\Pdf\Filter\Compression.php	/^                            $decodedByte = (ord($data[$offset++]) + $lastSample[$count2 % $bytesPerSample]) & 0xFF;$/;"	v
decodedByte	library\Zend\Pdf\Filter\Compression.php	/^                            $decodedByte = (ord($data[$offset++]) +$/;"	v
lastRow	library\Zend\Pdf\Filter\Compression.php	/^                        $lastRow = $currentRow;$/;"	v
lastRow	library\Zend\Pdf\Filter\Compression.php	/^                    $lastRow    = array_fill(0, $bytesPerRow, 0);$/;"	v
lastRow	library\Zend\Pdf\Filter\Compression.php	/^                    $lastRow = array_fill(0, $bytesPerRow, 0);$/;"	v
lastRow	library\Zend\Pdf\Filter\Compression.php	/^            $lastRow = array_fill(0, $bytesPerRow, 0);$/;"	v
lastSample	library\Zend\Pdf\Filter\Compression.php	/^                        $lastSample = array_fill(0, $bytesPerSample, 0);$/;"	v
lastSample	library\Zend\Pdf\Filter\Compression.php	/^                $lastSample = array_fill(0, $bytesPerSample, 0);$/;"	v
newByte	library\Zend\Pdf\Filter\Compression.php	/^                            $newByte = ord($data[$offset++]);$/;"	v
offset	library\Zend\Pdf\Filter\Compression.php	/^            $offset         = 0;$/;"	v
output	library\Zend\Pdf\Filter\Compression.php	/^            $output         = '';$/;"	v
p	library\Zend\Pdf\Filter\Compression.php	/^        $p  = $a + $b - $c;       \/\/ initial estimate$/;"	v
pa	library\Zend\Pdf\Filter\Compression.php	/^        $pa = abs($p - $a);       \/\/ distances to a, b, c$/;"	v
pb	library\Zend\Pdf\Filter\Compression.php	/^        $pb = abs($p - $b);$/;"	v
pc	library\Zend\Pdf\Filter\Compression.php	/^        $pc = abs($p - $c);$/;"	v
predictor	library\Zend\Pdf\Filter\Compression.php	/^            $predictor = $params['Predictor'];$/;"	v
predictor	library\Zend\Pdf\Filter\Compression.php	/^            $predictor = 14;$/;"	v
predictor	library\Zend\Pdf\Filter\Compression.php	/^            $predictor == 11 ||  \/** Sub prediction     *\/$/;"	v
predictor	library\Zend\Pdf\Filter\Compression.php	/^            $predictor == 12 ||  \/** Up prediction      *\/$/;"	v
predictor	library\Zend\Pdf\Filter\Compression.php	/^            $predictor == 13 ||  \/** Average prediction *\/$/;"	v
predictor	library\Zend\Pdf\Filter\Compression.php	/^            $predictor == 14     \/** Paeth prediction   *\/$/;"	v
predictor	library\Zend\Pdf\Filter\Compression.php	/^            $predictor == 14 ||  \/** Paeth prediction   *\/$/;"	v
predictor	library\Zend\Pdf\Filter\Compression.php	/^            $predictor == 15     \/** Optimal prediction *\/) {$/;"	v
predictor	library\Zend\Pdf\Filter\Compression.php	/^        $predictor        = self::_getPredictorValue($params);$/;"	v
rows	library\Zend\Pdf\Filter\Compression.php	/^            $rows           = ceil(strlen($data)\/($bytesPerRow + 1));$/;"	v
rows	library\Zend\Pdf\Filter\Compression.php	/^            $rows           = strlen($data)\/$bytesPerRow;$/;"	v
Zend_Pdf_Filter_Compression_Flate	library\Zend\Pdf\Filter\Compression\Flate.php	/^class Zend_Pdf_Filter_Compression_Flate extends Zend_Pdf_Filter_Compression$/;"	c
data	library\Zend\Pdf\Filter\Compression\Flate.php	/^            $data = self::_applyEncodeParams($data, $params);$/;"	v
trackErrors	library\Zend\Pdf\Filter\Compression\Flate.php	/^            $trackErrors = ini_get( "track_errors");$/;"	v
Zend_Pdf_Filter_Compression_Lzw	library\Zend\Pdf\Filter\Compression\Lzw.php	/^class Zend_Pdf_Filter_Compression_Lzw extends Zend_Pdf_Filter_Compression$/;"	c
data	library\Zend\Pdf\Filter\Compression\Lzw.php	/^            $data = self::_applyEncodeParams($data, $params);$/;"	v
earlyChange	library\Zend\Pdf\Filter\Compression\Lzw.php	/^            $earlyChange = $params['EarlyChange'];$/;"	v
Zend_Pdf_Filter_RunLength	library\Zend\Pdf\Filter\RunLength.php	/^class Zend_Pdf_Filter_RunLength implements Zend_Pdf_Filter_Interface$/;"	c
chainStartOffset	library\Zend\Pdf\Filter\RunLength.php	/^                    $chainStartOffset = $offset;$/;"	v
chainStartOffset	library\Zend\Pdf\Filter\RunLength.php	/^                $chainStartOffset = $offset;$/;"	v
chainStartOffset	library\Zend\Pdf\Filter\RunLength.php	/^        $chainStartOffset = 0;$/;"	v
dataLength	library\Zend\Pdf\Filter\RunLength.php	/^        $dataLength = strlen($data);$/;"	v
length	library\Zend\Pdf\Filter\RunLength.php	/^            $length = ord($data[$offset]);$/;"	v
offset	library\Zend\Pdf\Filter\RunLength.php	/^        $offset = 0;$/;"	v
output	library\Zend\Pdf\Filter\RunLength.php	/^        $output = '';$/;"	v
cidFont	library\Zend\Pdf\Font.php	/^                $cidFont = new Zend_Pdf_Resource_Font_CidFont_TrueType($fontParser, $embeddingOptions);$/;"	v
dataSource	library\Zend\Pdf\Font.php	/^        $dataSource = new Zend_Pdf_FileParserDataSource_File($filePath);$/;"	v
dataSource	library\Zend\Pdf\Font.php	/^        $dataSource = null;$/;"	v
fileExtension	library\Zend\Pdf\Font.php	/^        $fileExtension = strtolower(pathinfo($filePath, PATHINFO_EXTENSION));$/;"	v
filePathKey	library\Zend\Pdf\Font.php	/^            $filePathKey = md5($filePath);$/;"	v
filePathKey	library\Zend\Pdf\Font.php	/^        $filePathKey = md5($filePath);$/;"	v
font	library\Zend\Pdf\Font.php	/^                $font    = new Zend_Pdf_Resource_Font_Type0($cidFont);$/;"	v
font	library\Zend\Pdf\Font.php	/^                $font = Zend_Pdf_Font::_extractTrueTypeFont($dataSource, $embeddingOptions);$/;"	v
font	library\Zend\Pdf\Font.php	/^                $font = new Zend_Pdf_Resource_Font_Simple_Parsed_TrueType($fontParser, $embeddingOptions);$/;"	v
font	library\Zend\Pdf\Font.php	/^                $font = new Zend_Pdf_Resource_Font_Simple_Standard_Courier();$/;"	v
font	library\Zend\Pdf\Font.php	/^                $font = new Zend_Pdf_Resource_Font_Simple_Standard_CourierBold();$/;"	v
font	library\Zend\Pdf\Font.php	/^                $font = new Zend_Pdf_Resource_Font_Simple_Standard_CourierBoldOblique();$/;"	v
font	library\Zend\Pdf\Font.php	/^                $font = new Zend_Pdf_Resource_Font_Simple_Standard_CourierOblique();$/;"	v
font	library\Zend\Pdf\Font.php	/^                $font = new Zend_Pdf_Resource_Font_Simple_Standard_Helvetica();$/;"	v
font	library\Zend\Pdf\Font.php	/^                $font = new Zend_Pdf_Resource_Font_Simple_Standard_HelveticaBold();$/;"	v
font	library\Zend\Pdf\Font.php	/^                $font = new Zend_Pdf_Resource_Font_Simple_Standard_HelveticaBoldOblique();$/;"	v
font	library\Zend\Pdf\Font.php	/^                $font = new Zend_Pdf_Resource_Font_Simple_Standard_HelveticaOblique();$/;"	v
font	library\Zend\Pdf\Font.php	/^                $font = new Zend_Pdf_Resource_Font_Simple_Standard_Symbol();$/;"	v
font	library\Zend\Pdf\Font.php	/^                $font = new Zend_Pdf_Resource_Font_Simple_Standard_TimesBold();$/;"	v
font	library\Zend\Pdf\Font.php	/^                $font = new Zend_Pdf_Resource_Font_Simple_Standard_TimesBoldItalic();$/;"	v
font	library\Zend\Pdf\Font.php	/^                $font = new Zend_Pdf_Resource_Font_Simple_Standard_TimesItalic();$/;"	v
font	library\Zend\Pdf\Font.php	/^                $font = new Zend_Pdf_Resource_Font_Simple_Standard_TimesRoman();$/;"	v
font	library\Zend\Pdf\Font.php	/^                $font = new Zend_Pdf_Resource_Font_Simple_Standard_ZapfDingbats();$/;"	v
font	library\Zend\Pdf\Font.php	/^                $font = null;$/;"	v
fontName	library\Zend\Pdf\Font.php	/^            $fontName = $font->getFontName(Zend_Pdf_Font::NAME_POSTSCRIPT, '', '');$/;"	v
fontParser	library\Zend\Pdf\Font.php	/^            $fontParser = new Zend_Pdf_FileParser_Font_OpenType_TrueType($dataSource);$/;"	v
fontParser	library\Zend\Pdf\Font.php	/^            $fontParser = null;$/;"	v
dataSource	library\Zend\Pdf\Image.php	/^        $dataSource = new Zend_Pdf_FileParserDataSource_File($filePath);$/;"	v
dataSource	library\Zend\Pdf\Image.php	/^        $dataSource = null;$/;"	v
fileExtension	library\Zend\Pdf\Image.php	/^        $fileExtension = strtolower(pathinfo($filePath, PATHINFO_EXTENSION));$/;"	v
image	library\Zend\Pdf\Image.php	/^                $image = Zend_Pdf_Image::_extractJpegImage($dataSource);$/;"	v
image	library\Zend\Pdf\Image.php	/^                $image = Zend_Pdf_Image::_extractPngImage($dataSource);$/;"	v
image	library\Zend\Pdf\Image.php	/^                $image = Zend_Pdf_Image::_extractTiffImage($dataSource);$/;"	v
image	library\Zend\Pdf\Image.php	/^        $image = new Zend_Pdf_Resource_Image_Jpeg($imageParser);$/;"	v
image	library\Zend\Pdf\Image.php	/^        $image = new Zend_Pdf_Resource_Image_Png($imageParser);$/;"	v
image	library\Zend\Pdf\Image.php	/^        $image = new Zend_Pdf_Resource_Image_Tiff($imageParser);$/;"	v
imageParser	library\Zend\Pdf\Image.php	/^        $imageParser = new Zend_Pdf_FileParser_Image_Jpeg($dataSource);$/;"	v
imageParser	library\Zend\Pdf\Image.php	/^        $imageParser = new Zend_Pdf_FileParser_Image_Png($dataSource);$/;"	v
imageParser	library\Zend\Pdf\Image.php	/^        $imageParser = new Zend_Pdf_FileParser_Image_Tiff($dataSource);$/;"	v
Zend_Pdf_NameTree	library\Zend\Pdf\NameTree.php	/^class Zend_Pdf_NameTree implements ArrayAccess, Iterator, Countable$/;"	c
destinationsCount	library\Zend\Pdf\NameTree.php	/^            $destinationsCount = count($leafNode->Names->items)\/2;$/;"	v
intermediateNodes	library\Zend\Pdf\NameTree.php	/^            $intermediateNodes = $newIntermediateNodes;$/;"	v
intermediateNodes	library\Zend\Pdf\NameTree.php	/^        $intermediateNodes = array();$/;"	v
leafNodes	library\Zend\Pdf\NameTree.php	/^        $leafNodes         = array();$/;"	v
newIntermediateNodes	library\Zend\Pdf\NameTree.php	/^            $newIntermediateNodes = array();$/;"	v
count	library\Zend\Pdf\Outline.php	/^        $count = 1; \/\/ Include this outline$/;"	v
Zend_Pdf_Outline_Created	library\Zend\Pdf\Outline\Created.php	/^class Zend_Pdf_Outline_Created extends Zend_Pdf_Outline$/;"	c
childOutlineDictionary	library\Zend\Pdf\Outline\Created.php	/^                $childOutlineDictionary = $childOutline->dumpOutline($factory, true, $outlineDictionary, $lastChild, $processedOutlines);$/;"	v
color	library\Zend\Pdf\Outline\Created.php	/^        $color = $this->getColor();$/;"	v
colorComponentElements	library\Zend\Pdf\Outline\Created.php	/^            $colorComponentElements = array(new Zend_Pdf_Element_Numeric($components[0]),$/;"	v
components	library\Zend\Pdf\Outline\Created.php	/^            $components = $color->getComponents();$/;"	v
lastChild	library\Zend\Pdf\Outline\Created.php	/^                $lastChild       = $childOutlineDictionary;$/;"	v
lastChild	library\Zend\Pdf\Outline\Created.php	/^                $lastChild = $childOutline->dumpOutline($factory, true, $outlineDictionary, null, $processedOutlines);$/;"	v
lastChild	library\Zend\Pdf\Outline\Created.php	/^        $lastChild = null;$/;"	v
outlineDictionary	library\Zend\Pdf\Outline\Created.php	/^        $outlineDictionary = $factory->newObject(new Zend_Pdf_Element_Dictionary());$/;"	v
processedOutlines	library\Zend\Pdf\Outline\Created.php	/^            $processedOutlines = new SplObjectStorage();$/;"	v
target	library\Zend\Pdf\Outline\Created.php	/^            $target = new Zend_Pdf_Destination_Named($target);$/;"	v
target	library\Zend\Pdf\Outline\Created.php	/^        $target = $this->getTarget();$/;"	v
Zend_Pdf_Outline_Loaded	library\Zend\Pdf\Outline\Loaded.php	/^class Zend_Pdf_Outline_Loaded extends Zend_Pdf_Outline$/;"	c
childDictionary	library\Zend\Pdf\Outline\Loaded.php	/^                $childDictionary = $childDictionary->Next;$/;"	v
childDictionary	library\Zend\Pdf\Outline\Loaded.php	/^            $childDictionary = $dictionary->First;$/;"	v
childOutlineDictionary	library\Zend\Pdf\Outline\Loaded.php	/^                    $childOutlineDictionary = $childOutline->dumpOutline($factory, $updateChildNavigation, $this->_outlineDictionary, $lastChild, $processedOutlines);$/;"	v
childOutlinesCount	library\Zend\Pdf\Outline\Loaded.php	/^            $childOutlinesCount = $dictionary->Count->value;$/;"	v
childOutlinesCount	library\Zend\Pdf\Outline\Loaded.php	/^            $childOutlinesCount = abs($childOutlinesCount);$/;"	v
children	library\Zend\Pdf\Outline\Loaded.php	/^            $children = new SplObjectStorage();$/;"	v
childrenCount	library\Zend\Pdf\Outline\Loaded.php	/^        $childrenCount = $this->_outlineDictionary->Count->value;$/;"	v
colorComponentElements	library\Zend\Pdf\Outline\Loaded.php	/^            $colorComponentElements = array(new Zend_Pdf_Element_Numeric($components[0]),$/;"	v
components	library\Zend\Pdf\Outline\Loaded.php	/^            $components = $color->getComponents();$/;"	v
components	library\Zend\Pdf\Outline\Loaded.php	/^        $components = $this->_outlineDictionary->C->items;$/;"	v
isOpenCurrentState	library\Zend\Pdf\Outline\Loaded.php	/^        $isOpenCurrentState = ($childrenCount > 0);$/;"	v
lastChild	library\Zend\Pdf\Outline\Loaded.php	/^                    $lastChild       = $childOutlineDictionary;$/;"	v
lastChild	library\Zend\Pdf\Outline\Loaded.php	/^                    $lastChild = $childOutline->dumpOutline($factory, $updateChildNavigation, $this->_outlineDictionary, null, $processedOutlines);$/;"	v
lastChild	library\Zend\Pdf\Outline\Loaded.php	/^                $lastChild = $childOutline->dumpOutline($factory, $updateChildNavigation, $this->_outlineDictionary, $lastChild, $processedOutlines);$/;"	v
lastChild	library\Zend\Pdf\Outline\Loaded.php	/^        $lastChild = null;$/;"	v
processedDictionaries	library\Zend\Pdf\Outline\Loaded.php	/^            $processedDictionaries = new SplObjectStorage();$/;"	v
processedOutlines	library\Zend\Pdf\Outline\Loaded.php	/^            $processedOutlines = new SplObjectStorage();$/;"	v
target	library\Zend\Pdf\Outline\Loaded.php	/^            $target = Zend_Pdf_Destination_Named::create($target);$/;"	v
updateChildNavigation	library\Zend\Pdf\Outline\Loaded.php	/^                    $updateChildNavigation = true;$/;"	v
updateChildNavigation	library\Zend\Pdf\Outline\Loaded.php	/^            $updateChildNavigation = true;$/;"	v
updateChildNavigation	library\Zend\Pdf\Outline\Loaded.php	/^        $updateChildNavigation = false;$/;"	v
Zend_Pdf_Page	library\Zend\Pdf\Page.php	/^class Zend_Pdf_Page extends Zend_Pdf_Canvas_Abstract$/;"	c
annotationDictionary	library\Zend\Pdf\Page.php	/^            $annotationDictionary = $this->_objFactory->newObject($annotationDictionary);$/;"	v
annotationDictionary	library\Zend\Pdf\Page.php	/^        $annotationDictionary = $annotation->getResource();$/;"	v
clonedPage	library\Zend\Pdf\Page.php	/^        $clonedPage = new Zend_Pdf_Page($factory->newObject($dictionary), $factory);$/;"	v
currentPageContents	library\Zend\Pdf\Page.php	/^            $currentPageContents = $this->_dictionary->Contents;$/;"	v
dictionary	library\Zend\Pdf\Page.php	/^        $dictionary = new Zend_Pdf_Element_Dictionary();$/;"	v
extractedFont	library\Zend\Pdf\Page.php	/^                $extractedFont = new Zend_Pdf_Resource_Font_Extracted($fontDictionary);$/;"	v
factory	library\Zend\Pdf\Page.php	/^        $factory = Zend_Pdf_ElementFactory::createFactory(1);$/;"	v
fontDictionary	library\Zend\Pdf\Page.php	/^            $fontDictionary = $fontResources->$fontResourceName;$/;"	v
fontResources	library\Zend\Pdf\Page.php	/^        $fontResources = $this->_dictionary->Resources->Font;$/;"	v
fontResourcesUnique	library\Zend\Pdf\Page.php	/^        $fontResourcesUnique = array();$/;"	v
fonts	library\Zend\Pdf\Page.php	/^        $fonts = array();$/;"	v
idCounter	library\Zend\Pdf\Page.php	/^        $idCounter = 1;$/;"	v
newContentsArray	library\Zend\Pdf\Page.php	/^            $newContentsArray = new Zend_Pdf_Element_Array();$/;"	v
newResName	library\Zend\Pdf\Page.php	/^            $newResName = $type[0] . $idCounter++;$/;"	v
pageDim	library\Zend\Pdf\Page.php	/^            $pageDim = explode(':', $param1);$/;"	v
pageHeight	library\Zend\Pdf\Page.php	/^                $pageHeight = $pageDim[1];$/;"	v
pageHeight	library\Zend\Pdf\Page.php	/^            $pageHeight = $param2;$/;"	v
pageWidth	library\Zend\Pdf\Page.php	/^                    $pageWidth = $pageHeight = 0;$/;"	v
pageWidth	library\Zend\Pdf\Page.php	/^                $pageWidth  = $pageDim[0];$/;"	v
pageWidth	library\Zend\Pdf\Page.php	/^            $pageWidth  = $param1;$/;"	v
param1	library\Zend\Pdf\Page.php	/^                    $param1 = Zend_Pdf_Page::SIZE_A4;$/;"	v
param1	library\Zend\Pdf\Page.php	/^                    $param1 = Zend_Pdf_Page::SIZE_A4_LANDSCAPE;$/;"	v
param1	library\Zend\Pdf\Page.php	/^                    $param1 = Zend_Pdf_Page::SIZE_LETTER;$/;"	v
param1	library\Zend\Pdf\Page.php	/^                    $param1 = Zend_Pdf_Page::SIZE_LETTER_LANDSCAPE;$/;"	v
param3	library\Zend\Pdf\Page.php	/^                   $param3 === null) {$/;"	v
param3	library\Zend\Pdf\Page.php	/^            $param3 === null$/;"	v
processed	library\Zend\Pdf\Page.php	/^        $processed = array();$/;"	v
resDictionary	library\Zend\Pdf\Page.php	/^        $resDictionary = $this->_dictionary->Resources;$/;"	v
resMap	library\Zend\Pdf\Page.php	/^                $resMap = $resDictionary->$resType;$/;"	v
resObject	library\Zend\Pdf\Page.php	/^        $resObject = $resource->getResource();$/;"	v
resourceId	library\Zend\Pdf\Page.php	/^            $resourceId = spl_object_hash($fontDictionary->getObject());$/;"	v
resources	library\Zend\Pdf\Page.php	/^        $resources = array();$/;"	v
Zend_Pdf_Parser	library\Zend\Pdf\Parser.php	/^class Zend_Pdf_Parser$/;"	c
byteCount	library\Zend\Pdf\Parser.php	/^            $byteCount = filesize($source);$/;"	v
context	library\Zend\Pdf\Parser.php	/^        $context  = new Zend_Pdf_Element_Reference_Context($this->_stringParser, $refTable);$/;"	v
data	library\Zend\Pdf\Parser.php	/^            $data = '';$/;"	v
entries	library\Zend\Pdf\Parser.php	/^                    $entries = $trailerDict->Index->items[$count*2 + 1]->value;$/;"	v
entries	library\Zend\Pdf\Parser.php	/^                    $entries = $trailerDict->Size->value;$/;"	v
entries	library\Zend\Pdf\Parser.php	/^            $entries = strlen($xrefStreamData)\/$size;$/;"	v
entryField1Size	library\Zend\Pdf\Parser.php	/^            $entryField1Size = $trailerDict->W->items[0]->value;$/;"	v
entryField2Size	library\Zend\Pdf\Parser.php	/^            $entryField2Size = $trailerDict->W->items[1]->value;$/;"	v
entryField3Size	library\Zend\Pdf\Parser.php	/^            $entryField3Size = $trailerDict->W->items[2]->value;$/;"	v
field2	library\Zend\Pdf\Parser.php	/^                        $field2 = Zend_Pdf_StringParser::parseIntFromStream($xrefStreamData, $streamOffset, $entryField2Size);$/;"	v
field2	library\Zend\Pdf\Parser.php	/^                        $field2 = ord($xrefStreamData[$streamOffset++]);$/;"	v
field3	library\Zend\Pdf\Parser.php	/^                        $field3 = Zend_Pdf_StringParser::parseIntFromStream($xrefStreamData, $streamOffset, $entryField3Size);$/;"	v
field3	library\Zend\Pdf\Parser.php	/^                        $field3 = ord($xrefStreamData[$streamOffset++]);$/;"	v
genNumber	library\Zend\Pdf\Parser.php	/^                    $genNumber = substr($genNumber, $numStart);$/;"	v
genNumber	library\Zend\Pdf\Parser.php	/^                    $genNumber = substr($this->_stringParser->data, $this->_stringParser->offset, 5);$/;"	v
inUseKey	library\Zend\Pdf\Parser.php	/^                    $inUseKey = $this->_stringParser->data[$this->_stringParser->offset];$/;"	v
nextBlock	library\Zend\Pdf\Parser.php	/^                $nextBlock = fread($pdfFile, $byteCount);$/;"	v
nextLexeme	library\Zend\Pdf\Parser.php	/^        $nextLexeme = $this->_stringParser->readLexeme();$/;"	v
objNum	library\Zend\Pdf\Parser.php	/^                    $objNum  = $trailerDict->Index->items[$count*2    ]->value;$/;"	v
objNum	library\Zend\Pdf\Parser.php	/^                    $objNum  = 0;$/;"	v
objNum	library\Zend\Pdf\Parser.php	/^                $objNum = (int)$nextLexeme;$/;"	v
objectOffset	library\Zend\Pdf\Parser.php	/^                    $objectOffset = substr($objectOffset, $numStart);$/;"	v
objectOffset	library\Zend\Pdf\Parser.php	/^                    $objectOffset = substr($this->_stringParser->data, $this->_stringParser->offset, 10);$/;"	v
pdfVersion	library\Zend\Pdf\Parser.php	/^        $pdfVersion = substr($pdfVersionComment, 5);$/;"	v
pdfVersionComment	library\Zend\Pdf\Parser.php	/^        $pdfVersionComment = $this->_stringParser->readComment();$/;"	v
refCount	library\Zend\Pdf\Parser.php	/^                $refCount = $this->_stringParser->readLexeme();$/;"	v
refTable	library\Zend\Pdf\Parser.php	/^        $refTable = new Zend_Pdf_Element_Reference_Table();$/;"	v
sections	library\Zend\Pdf\Parser.php	/^                $sections = 1;$/;"	v
sections	library\Zend\Pdf\Parser.php	/^                $sections = count($trailerDict->Index->items)\/2;$/;"	v
size	library\Zend\Pdf\Parser.php	/^            $size    = $entryField1Size + $entryField2Size + $entryField3Size;$/;"	v
startXref	library\Zend\Pdf\Parser.php	/^        $startXref = $this->_stringParser->readLexeme();$/;"	v
streamOffset	library\Zend\Pdf\Parser.php	/^            $streamOffset = 0;$/;"	v
trailerDict	library\Zend\Pdf\Parser.php	/^            $trailerDict = $this->_stringParser->readElement();$/;"	v
trailerDict	library\Zend\Pdf\Parser.php	/^            $trailerDict = $xrefStream->dictionary;$/;"	v
trailerDictOffset	library\Zend\Pdf\Parser.php	/^            $trailerDictOffset = $this->_stringParser->offset;$/;"	v
trailerObj	library\Zend\Pdf\Parser.php	/^        $trailerObj = new Zend_Pdf_Trailer_Keeper($trailerDict, $context);$/;"	v
type	library\Zend\Pdf\Parser.php	/^                        $type = 1;$/;"	v
type	library\Zend\Pdf\Parser.php	/^                        $type = Zend_Pdf_StringParser::parseIntFromStream($xrefStreamData, $streamOffset, $entryField1Size);$/;"	v
type	library\Zend\Pdf\Parser.php	/^                        $type = ord($xrefStreamData[$streamOffset++]);$/;"	v
xrefStream	library\Zend\Pdf\Parser.php	/^            $xrefStream = $this->_stringParser->getObject($offset, $context);$/;"	v
xrefStreamData	library\Zend\Pdf\Parser.php	/^            $xrefStreamData = $xrefStream->value;$/;"	v
Zend_Pdf_RecursivelyIteratableObjectsContainer	library\Zend\Pdf\RecursivelyIteratableObjectsContainer.php	/^class Zend_Pdf_RecursivelyIteratableObjectsContainer implements RecursiveIterator, Countable$/;"	c
Zend_Pdf_Resource_ContentStream	library\Zend\Pdf\Resource\ContentStream.php	/^class Zend_Pdf_Resource_ContentStream extends Zend_Pdf_Resource$/;"	c
Zend_Pdf_Resource_Extractor	library\Zend\Pdf\Resource\Extractor.php	/^class Zend_Pdf_Resource_Extractor$/;"	c
name	library\Zend\Pdf\Resource\Font.php	/^                    $name = $this->_fontNames[$nameType][$code];$/;"	v
name	library\Zend\Pdf\Resource\Font.php	/^                $name = $this->_fontNames[$nameType][$language];$/;"	v
name	library\Zend\Pdf\Resource\Font.php	/^            $name  = reset($names);$/;"	v
name	library\Zend\Pdf\Resource\Font.php	/^            $name = iconv('UTF-16BE', $characterSet, $name);$/;"	v
name	library\Zend\Pdf\Resource\Font.php	/^        $name = null;$/;"	v
names	library\Zend\Pdf\Resource\Font.php	/^            $names = $this->_fontNames[$nameType];$/;"	v
baseFont	library\Zend\Pdf\Resource\Font\CidFont.php	/^        $baseFont = $this->getFontName(Zend_Pdf_Font::NAME_POSTSCRIPT, 'en', 'UTF-8');$/;"	v
charCode	library\Zend\Pdf\Resource\Font\CidFont.php	/^            $charCode = (ord($string[$i]) << 8) | ord($string[++$i]);$/;"	v
charCodesSequense	library\Zend\Pdf\Resource\Font\CidFont.php	/^                $charCodesSequense = array();$/;"	v
charCount	library\Zend\Pdf\Resource\Font\CidFont.php	/^        $charCount = iconv_strlen($string, 'UTF-16BE');$/;"	v
charGlyphs	library\Zend\Pdf\Resource\Font\CidFont.php	/^        $charGlyphs  = $this->_cmap->getCoveredCharactersGlyphs();$/;"	v
charWidths	library\Zend\Pdf\Resource\Font\CidFont.php	/^        $charWidths  = array();$/;"	v
cidSystemInfo	library\Zend\Pdf\Resource\Font\CidFont.php	/^        $cidSystemInfo = new Zend_Pdf_Element_Dictionary();$/;"	v
cidSystemInfoObject	library\Zend\Pdf\Resource\Font\CidFont.php	/^        $cidSystemInfoObject            = $this->_objectFactory->newObject($cidSystemInfo);$/;"	v
defWidthChars	library\Zend\Pdf\Resource\Font\CidFont.php	/^        $defWidthChars = array_keys($charWidths, $defaultWidth);$/;"	v
defaultWidth	library\Zend\Pdf\Resource\Font\CidFont.php	/^                $defaultWidth          = $width;$/;"	v
defaultWidth	library\Zend\Pdf\Resource\Font\CidFont.php	/^        $defaultWidth          = null;$/;"	v
defaultWidthFrequency	library\Zend\Pdf\Resource\Font\CidFont.php	/^                $defaultWidthFrequency = $frequency;$/;"	v
defaultWidthFrequency	library\Zend\Pdf\Resource\Font\CidFont.php	/^        $defaultWidthFrequency = -1;$/;"	v
glyphWidths	library\Zend\Pdf\Resource\Font\CidFont.php	/^        $glyphWidths = $fontParser->glyphWidths;$/;"	v
lastCharCode	library\Zend\Pdf\Resource\Font\CidFont.php	/^            $lastCharCode = $charCode;$/;"	v
lastCharCode	library\Zend\Pdf\Resource\Font\CidFont.php	/^        $lastCharCode = -1;$/;"	v
lastWidth	library\Zend\Pdf\Resource\Font\CidFont.php	/^                    $lastWidth = $width;$/;"	v
lastWidth	library\Zend\Pdf\Resource\Font\CidFont.php	/^            $lastWidth        = -1;$/;"	v
maxIndex	library\Zend\Pdf\Resource\Font\CidFont.php	/^        $maxIndex = strlen($string);$/;"	v
pdfCharsWidths	library\Zend\Pdf\Resource\Font\CidFont.php	/^        $pdfCharsWidths = array();$/;"	v
pdfWidths	library\Zend\Pdf\Resource\Font\CidFont.php	/^                            $pdfWidths = array();$/;"	v
pdfWidths	library\Zend\Pdf\Resource\Font\CidFont.php	/^            $pdfWidths        = array();$/;"	v
score	library\Zend\Pdf\Resource\Font\CidFont.php	/^        $score = 0;$/;"	v
sequenceStartCode	library\Zend\Pdf\Resource\Font\CidFont.php	/^                $sequenceStartCode = $charCode;$/;"	v
startCode	library\Zend\Pdf\Resource\Font\CidFont.php	/^                        $startCode = $startCode + $widthsInSequence;$/;"	v
string	library\Zend\Pdf\Resource\Font\CidFont.php	/^            $string = iconv($charEncoding, 'UTF-16BE', $string);$/;"	v
widthFrequencies	library\Zend\Pdf\Resource\Font\CidFont.php	/^        $widthFrequencies = array_count_values($charWidths);$/;"	v
widths	library\Zend\Pdf\Resource\Font\CidFont.php	/^        $widths = array();$/;"	v
widthsArrayElement	library\Zend\Pdf\Resource\Font\CidFont.php	/^        $widthsArrayElement = new Zend_Pdf_Element_Array($pdfCharsWidths);$/;"	v
widthsInSequence	library\Zend\Pdf\Resource\Font\CidFont.php	/^                        $widthsInSequence = 0;$/;"	v
widthsInSequence	library\Zend\Pdf\Resource\Font\CidFont.php	/^                        $widthsInSequence = 2;$/;"	v
widthsInSequence	library\Zend\Pdf\Resource\Font\CidFont.php	/^            $widthsInSequence = 0;$/;"	v
widthsObject	library\Zend\Pdf\Resource\Font\CidFont.php	/^        $widthsObject = $this->_objectFactory->newObject($widthsArrayElement);$/;"	v
widthsSequences	library\Zend\Pdf\Resource\Font\CidFont.php	/^        $widthsSequences = array();$/;"	v
Zend_Pdf_Resource_Font_CidFont_TrueType	library\Zend\Pdf\Resource\Font\CidFont\TrueType.php	/^class Zend_Pdf_Resource_Font_CidFont_TrueType extends Zend_Pdf_Resource_Font_CidFont$/;"	c
charGlyphs	library\Zend\Pdf\Resource\Font\CidFont\TrueType.php	/^        $charGlyphs = $this->_cmap->getCoveredCharactersGlyphs();$/;"	v
cidToGidMap	library\Zend\Pdf\Resource\Font\CidFont\TrueType.php	/^        $cidToGidMap = $this->_objectFactory->newStreamObject($cidToGidMapData);$/;"	v
cidToGidMapData	library\Zend\Pdf\Resource\Font\CidFont\TrueType.php	/^        $cidToGidMapData = str_repeat("\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00", 8192);$/;"	v
fontDescriptor	library\Zend\Pdf\Resource\Font\CidFont\TrueType.php	/^        $fontDescriptor = Zend_Pdf_Resource_Font_FontDescriptor::factory($this, $fontParser, $embeddingOptions);$/;"	v
Zend_Pdf_Resource_Font_Extracted	library\Zend\Pdf\Resource\Font\Extracted.php	/^class Zend_Pdf_Resource_Font_Extracted extends Zend_Pdf_Resource_Font$/;"	c
descendantFont	library\Zend\Pdf\Resource\Font\Extracted.php	/^                $descendantFont = $fontDictionaryIterator->current();$/;"	v
fontDescriptor	library\Zend\Pdf\Resource\Font\Extracted.php	/^                $fontDescriptor = $descendantFont->FontDescriptor;$/;"	v
fontDescriptor	library\Zend\Pdf\Resource\Font\Extracted.php	/^                $fontDescriptor = $fontDictionary->FontDescriptor;$/;"	v
fontDictionaryIterator	library\Zend\Pdf\Resource\Font\Extracted.php	/^                $fontDictionaryIterator = $fontDictionary->DescendantFonts->items->getIterator();$/;"	v
standardFont	library\Zend\Pdf\Resource\Font\Extracted.php	/^                    $standardFont = Zend_Pdf_Font::fontWithName($fontDictionary->BaseFont->value);$/;"	v
Zend_Pdf_Resource_Font_FontDescriptor	library\Zend\Pdf\Resource\Font\FontDescriptor.php	/^class Zend_Pdf_Resource_Font_FontDescriptor$/;"	c
flags	library\Zend\Pdf\Resource\Font\FontDescriptor.php	/^        $flags = 0;$/;"	v
fontBBox	library\Zend\Pdf\Resource\Font\FontDescriptor.php	/^        $fontBBox = array(new Zend_Pdf_Element_Numeric($font->toEmSpace($fontParser->xMin)),$/;"	v
fontDescriptor	library\Zend\Pdf\Resource\Font\FontDescriptor.php	/^        $fontDescriptor = new Zend_Pdf_Element_Dictionary();$/;"	v
fontFile	library\Zend\Pdf\Resource\Font\FontDescriptor.php	/^                $fontFile = $fontParser->getDataSource()->readAllBytes();$/;"	v
fontFileObject	library\Zend\Pdf\Resource\Font\FontDescriptor.php	/^                $fontFileObject = $font->getFactory()->newStreamObject($fontFile);$/;"	v
message	library\Zend\Pdf\Resource\Font\FontDescriptor.php	/^                    $message = 'This font cannot be embedded in the PDF document. If you would like to use '$/;"	v
charCode	library\Zend\Pdf\Resource\Font\Simple.php	/^            $charCode = (ord($string[$i]) << 8) | ord($string[++$i]);$/;"	v
charCount	library\Zend\Pdf\Resource\Font\Simple.php	/^        $charCount = (PHP_OS != 'AIX') ? iconv_strlen($string, 'UTF-16BE') : strlen($string);$/;"	v
coveredCharacters	library\Zend\Pdf\Resource\Font\Simple.php	/^        $coveredCharacters = $this->_cmap->getCoveredCharacters();$/;"	v
maxIndex	library\Zend\Pdf\Resource\Font\Simple.php	/^        $maxIndex = strlen($string);$/;"	v
score	library\Zend\Pdf\Resource\Font\Simple.php	/^        $score = 0;$/;"	v
string	library\Zend\Pdf\Resource\Font\Simple.php	/^                $string = iconv($charEncoding, 'UTF-16BE', $string);$/;"	v
widths	library\Zend\Pdf\Resource\Font\Simple.php	/^        $widths = array();$/;"	v
baseFont	library\Zend\Pdf\Resource\Font\Simple\Parsed.php	/^        $baseFont = $this->getFontName(Zend_Pdf_Font::NAME_POSTSCRIPT, 'en', 'UTF-8');$/;"	v
pdfWidths	library\Zend\Pdf\Resource\Font\Simple\Parsed.php	/^        $pdfWidths = array();$/;"	v
widthsArrayElement	library\Zend\Pdf\Resource\Font\Simple\Parsed.php	/^        $widthsArrayElement = new Zend_Pdf_Element_Array($pdfWidths);$/;"	v
widthsObject	library\Zend\Pdf\Resource\Font\Simple\Parsed.php	/^        $widthsObject = $this->_objectFactory->newObject($widthsArrayElement);$/;"	v
Zend_Pdf_Resource_Font_Simple_Parsed_TrueType	library\Zend\Pdf\Resource\Font\Simple\Parsed\TrueType.php	/^class Zend_Pdf_Resource_Font_Simple_Parsed_TrueType extends Zend_Pdf_Resource_Font_Simple_Parsed$/;"	c
fontDescriptor	library\Zend\Pdf\Resource\Font\Simple\Parsed\TrueType.php	/^        $fontDescriptor = Zend_Pdf_Resource_Font_FontDescriptor::factory($this, $fontParser, $embeddingOptions);$/;"	v
Zend_Pdf_Resource_Font_Simple_Standard_Courier	library\Zend\Pdf\Resource\Font\Simple\Standard\Courier.php	/^class Zend_Pdf_Resource_Font_Simple_Standard_Courier extends Zend_Pdf_Resource_Font_Simple_Standard$/;"	c
cmapData	library\Zend\Pdf\Resource\Font\Simple\Standard\Courier.php	/^        $cmapData = array($/;"	v
Zend_Pdf_Resource_Font_Simple_Standard_CourierBold	library\Zend\Pdf\Resource\Font\Simple\Standard\CourierBold.php	/^class Zend_Pdf_Resource_Font_Simple_Standard_CourierBold extends Zend_Pdf_Resource_Font_Simple_Standard$/;"	c
cmapData	library\Zend\Pdf\Resource\Font\Simple\Standard\CourierBold.php	/^        $cmapData = array($/;"	v
Zend_Pdf_Resource_Font_Simple_Standard_CourierBoldOblique	library\Zend\Pdf\Resource\Font\Simple\Standard\CourierBoldOblique.php	/^class Zend_Pdf_Resource_Font_Simple_Standard_CourierBoldOblique extends Zend_Pdf_Resource_Font_Simple_Standard$/;"	c
cmapData	library\Zend\Pdf\Resource\Font\Simple\Standard\CourierBoldOblique.php	/^        $cmapData = array($/;"	v
Zend_Pdf_Resource_Font_Simple_Standard_CourierOblique	library\Zend\Pdf\Resource\Font\Simple\Standard\CourierOblique.php	/^class Zend_Pdf_Resource_Font_Simple_Standard_CourierOblique extends Zend_Pdf_Resource_Font_Simple_Standard$/;"	c
cmapData	library\Zend\Pdf\Resource\Font\Simple\Standard\CourierOblique.php	/^        $cmapData = array($/;"	v
Zend_Pdf_Resource_Font_Simple_Standard_Helvetica	library\Zend\Pdf\Resource\Font\Simple\Standard\Helvetica.php	/^class Zend_Pdf_Resource_Font_Simple_Standard_Helvetica extends Zend_Pdf_Resource_Font_Simple_Standard$/;"	c
cmapData	library\Zend\Pdf\Resource\Font\Simple\Standard\Helvetica.php	/^        $cmapData = array($/;"	v
Zend_Pdf_Resource_Font_Simple_Standard_HelveticaBold	library\Zend\Pdf\Resource\Font\Simple\Standard\HelveticaBold.php	/^class Zend_Pdf_Resource_Font_Simple_Standard_HelveticaBold extends Zend_Pdf_Resource_Font_Simple_Standard$/;"	c
cmapData	library\Zend\Pdf\Resource\Font\Simple\Standard\HelveticaBold.php	/^        $cmapData = array($/;"	v
Zend_Pdf_Resource_Font_Simple_Standard_HelveticaBoldOblique	library\Zend\Pdf\Resource\Font\Simple\Standard\HelveticaBoldOblique.php	/^class Zend_Pdf_Resource_Font_Simple_Standard_HelveticaBoldOblique extends Zend_Pdf_Resource_Font_Simple_Standard$/;"	c
cmapData	library\Zend\Pdf\Resource\Font\Simple\Standard\HelveticaBoldOblique.php	/^        $cmapData = array($/;"	v
Zend_Pdf_Resource_Font_Simple_Standard_HelveticaOblique	library\Zend\Pdf\Resource\Font\Simple\Standard\HelveticaOblique.php	/^class Zend_Pdf_Resource_Font_Simple_Standard_HelveticaOblique extends Zend_Pdf_Resource_Font_Simple_Standard$/;"	c
cmapData	library\Zend\Pdf\Resource\Font\Simple\Standard\HelveticaOblique.php	/^        $cmapData = array($/;"	v
Zend_Pdf_Resource_Font_Simple_Standard_Symbol	library\Zend\Pdf\Resource\Font\Simple\Standard\Symbol.php	/^class Zend_Pdf_Resource_Font_Simple_Standard_Symbol extends Zend_Pdf_Resource_Font_Simple_Standard$/;"	c
characterCode	library\Zend\Pdf\Resource\Font\Simple\Standard\Symbol.php	/^            $characterCode = (ord($string[$i++]) << 8) | ord($string[$i]);$/;"	v
characterCode	library\Zend\Pdf\Resource\Font\Simple\Standard\Symbol.php	/^            $characterCode = ord($string[$i]);$/;"	v
cmapData	library\Zend\Pdf\Resource\Font\Simple\Standard\Symbol.php	/^        $cmapData = array($/;"	v
decodedString	library\Zend\Pdf\Resource\Font\Simple\Standard\Symbol.php	/^            $decodedString = iconv('UTF-16BE', $charEncoding, $decodedString);$/;"	v
decodedString	library\Zend\Pdf\Resource\Font\Simple\Standard\Symbol.php	/^        $decodedString = '';$/;"	v
encodedString	library\Zend\Pdf\Resource\Font\Simple\Standard\Symbol.php	/^        $encodedString = '';$/;"	v
string	library\Zend\Pdf\Resource\Font\Simple\Standard\Symbol.php	/^            $string = iconv($charEncoding, 'ISO-8859-1', $string);$/;"	v
string	library\Zend\Pdf\Resource\Font\Simple\Standard\Symbol.php	/^            $string = iconv($charEncoding, 'UTF-16BE', $string);$/;"	v
Zend_Pdf_Resource_Font_Simple_Standard_TimesBold	library\Zend\Pdf\Resource\Font\Simple\Standard\TimesBold.php	/^class Zend_Pdf_Resource_Font_Simple_Standard_TimesBold extends Zend_Pdf_Resource_Font_Simple_Standard$/;"	c
cmapData	library\Zend\Pdf\Resource\Font\Simple\Standard\TimesBold.php	/^        $cmapData = array($/;"	v
Zend_Pdf_Resource_Font_Simple_Standard_TimesBoldItalic	library\Zend\Pdf\Resource\Font\Simple\Standard\TimesBoldItalic.php	/^class Zend_Pdf_Resource_Font_Simple_Standard_TimesBoldItalic extends Zend_Pdf_Resource_Font_Simple_Standard$/;"	c
cmapData	library\Zend\Pdf\Resource\Font\Simple\Standard\TimesBoldItalic.php	/^        $cmapData = array($/;"	v
Zend_Pdf_Resource_Font_Simple_Standard_TimesItalic	library\Zend\Pdf\Resource\Font\Simple\Standard\TimesItalic.php	/^class Zend_Pdf_Resource_Font_Simple_Standard_TimesItalic extends Zend_Pdf_Resource_Font_Simple_Standard$/;"	c
cmapData	library\Zend\Pdf\Resource\Font\Simple\Standard\TimesItalic.php	/^        $cmapData = array($/;"	v
Zend_Pdf_Resource_Font_Simple_Standard_TimesRoman	library\Zend\Pdf\Resource\Font\Simple\Standard\TimesRoman.php	/^class Zend_Pdf_Resource_Font_Simple_Standard_TimesRoman extends Zend_Pdf_Resource_Font_Simple_Standard$/;"	c
cmapData	library\Zend\Pdf\Resource\Font\Simple\Standard\TimesRoman.php	/^        $cmapData = array($/;"	v
Zend_Pdf_Resource_Font_Simple_Standard_ZapfDingbats	library\Zend\Pdf\Resource\Font\Simple\Standard\ZapfDingbats.php	/^class Zend_Pdf_Resource_Font_Simple_Standard_ZapfDingbats extends Zend_Pdf_Resource_Font_Simple_Standard$/;"	c
characterCode	library\Zend\Pdf\Resource\Font\Simple\Standard\ZapfDingbats.php	/^            $characterCode = (ord($string[$i++]) << 8) | ord($string[$i]);$/;"	v
characterCode	library\Zend\Pdf\Resource\Font\Simple\Standard\ZapfDingbats.php	/^            $characterCode = ord($string[$i]);$/;"	v
cmapData	library\Zend\Pdf\Resource\Font\Simple\Standard\ZapfDingbats.php	/^        $cmapData = array($/;"	v
decodedString	library\Zend\Pdf\Resource\Font\Simple\Standard\ZapfDingbats.php	/^            $decodedString = iconv('UTF-16BE', $charEncoding, $decodedString);$/;"	v
decodedString	library\Zend\Pdf\Resource\Font\Simple\Standard\ZapfDingbats.php	/^        $decodedString = '';$/;"	v
encodedString	library\Zend\Pdf\Resource\Font\Simple\Standard\ZapfDingbats.php	/^        $encodedString = '';$/;"	v
string	library\Zend\Pdf\Resource\Font\Simple\Standard\ZapfDingbats.php	/^            $string = iconv($charEncoding, 'ISO-8859-1', $string);$/;"	v
string	library\Zend\Pdf\Resource\Font\Simple\Standard\ZapfDingbats.php	/^            $string = iconv($charEncoding, 'UTF-16BE', $string);$/;"	v
Zend_Pdf_Resource_Font_Type0	library\Zend\Pdf\Resource\Font\Type0.php	/^class Zend_Pdf_Resource_Font_Type0 extends Zend_Pdf_Resource_Font$/;"	c
toUnicode	library\Zend\Pdf\Resource\Font\Type0.php	/^        $toUnicode = $this->_objectFactory->newStreamObject(self::getToUnicodeCMapData());$/;"	v
Zend_Pdf_Resource_GraphicsState	library\Zend\Pdf\Resource\GraphicsState.php	/^class Zend_Pdf_Resource_GraphicsState extends Zend_Pdf_Resource$/;"	c
extGStateObject	library\Zend\Pdf\Resource\GraphicsState.php	/^            $extGStateObject = $factory->newObject($gsDictionary);$/;"	v
factory	library\Zend\Pdf\Resource\GraphicsState.php	/^            $factory = Zend_Pdf_ElementFactory::createFactory(1);$/;"	v
gsDictionary	library\Zend\Pdf\Resource\GraphicsState.php	/^            $gsDictionary = new Zend_Pdf_Element_Dictionary();$/;"	v
Zend_Pdf_Resource_ImageFactory	library\Zend\Pdf\Resource\ImageFactory.php	/^class Zend_Pdf_Resource_ImageFactory$/;"	c
extension	library\Zend\Pdf\Resource\ImageFactory.php	/^        $extension = pathinfo($filename, PATHINFO_EXTENSION);$/;"	v
Zend_Pdf_Resource_Image_Jpeg	library\Zend\Pdf\Resource\Image\Jpeg.php	/^class Zend_Pdf_Resource_Image_Jpeg extends Zend_Pdf_Resource_Image$/;"	c
byteCount	library\Zend\Pdf\Resource\Image\Jpeg.php	/^        $byteCount = filesize($imageFileName);$/;"	v
colorSpace	library\Zend\Pdf\Resource\Image\Jpeg.php	/^                $colorSpace = 'DeviceCMYK';$/;"	v
colorSpace	library\Zend\Pdf\Resource\Image\Jpeg.php	/^                $colorSpace = 'DeviceGray';$/;"	v
colorSpace	library\Zend\Pdf\Resource\Image\Jpeg.php	/^                $colorSpace = 'DeviceRGB';$/;"	v
gd_options	library\Zend\Pdf\Resource\Image\Jpeg.php	/^        $gd_options = gd_info();$/;"	v
imageDictionary	library\Zend\Pdf\Resource\Image\Jpeg.php	/^        $imageDictionary = $this->_resource->dictionary;$/;"	v
nextBlock	library\Zend\Pdf\Resource\Image\Jpeg.php	/^            $nextBlock = fread($imageFile, $byteCount);$/;"	v
Zend_Pdf_Resource_Image_Png	library\Zend\Pdf\Resource\Image\Png.php	/^class Zend_Pdf_Resource_Image_Png extends Zend_Pdf_Resource_Image$/;"	c
baseColor	library\Zend\Pdf\Resource\Image\Png.php	/^                            $baseColor = ord(substr($trnsData, 1, 1));$/;"	v
bits	library\Zend\Pdf\Resource\Image\Png.php	/^        $bits = ord(fread($imageFile, 1)); \/\/Higher than 8 bit depths are only supported in later versions of PDF.$/;"	v
blue	library\Zend\Pdf\Resource\Image\Png.php	/^                            $blue = ord(substr($trnsData,5,1));$/;"	v
chunkLength	library\Zend\Pdf\Resource\Image\Png.php	/^            $chunkLength    = $chunkLengthtmp['i'];$/;"	v
chunkLengthBytes	library\Zend\Pdf\Resource\Image\Png.php	/^            $chunkLengthBytes = fread($imageFile, 4);$/;"	v
chunkLengthtmp	library\Zend\Pdf\Resource\Image\Png.php	/^            $chunkLengthtmp = unpack('Ni', $chunkLengthBytes);$/;"	v
chunkType	library\Zend\Pdf\Resource\Image\Png.php	/^            $chunkType      = fread($imageFile, 4);$/;"	v
color	library\Zend\Pdf\Resource\Image\Png.php	/^        $color = ord(fread($imageFile, 1));$/;"	v
colorSpace	library\Zend\Pdf\Resource\Image\Png.php	/^                $colorSpace = new Zend_Pdf_Element_Array();$/;"	v
colorSpace	library\Zend\Pdf\Resource\Image\Png.php	/^                $colorSpace = new Zend_Pdf_Element_Name('DeviceGray');$/;"	v
colorSpace	library\Zend\Pdf\Resource\Image\Png.php	/^                $colorSpace = new Zend_Pdf_Element_Name('DeviceRGB');$/;"	v
compressed	library\Zend\Pdf\Resource\Image\Png.php	/^                $compressed = false;$/;"	v
compressed	library\Zend\Pdf\Resource\Image\Png.php	/^        $compressed = true;$/;"	v
compression	library\Zend\Pdf\Resource\Image\Png.php	/^        $compression = ord(fread($imageFile, 1));$/;"	v
decodeParms	library\Zend\Pdf\Resource\Image\Png.php	/^        $decodeParms = array();$/;"	v
decodingObjFactory	library\Zend\Pdf\Resource\Image\Png.php	/^                $decodingObjFactory = Zend_Pdf_ElementFactory::createFactory(1);$/;"	v
decodingStream	library\Zend\Pdf\Resource\Image\Png.php	/^                $decodingStream = $decodingObjFactory->newStreamObject($imageData);$/;"	v
green	library\Zend\Pdf\Resource\Image\Png.php	/^                            $green = ord(substr($trnsData,3,1));$/;"	v
height	library\Zend\Pdf\Resource\Image\Png.php	/^        $height = $htmp['i'];$/;"	v
htmp	library\Zend\Pdf\Resource\Image\Png.php	/^        $htmp = unpack('Ni',fread($imageFile, 4));$/;"	v
imageData	library\Zend\Pdf\Resource\Image\Png.php	/^                $imageData  = $imageDataTmp; \/\/Overwrite image data with the RGB channel without alpha$/;"	v
imageData	library\Zend\Pdf\Resource\Image\Png.php	/^                $imageData  = $imageDataTmp; \/\/Overwrite image data with the gray channel without alpha$/;"	v
imageData	library\Zend\Pdf\Resource\Image\Png.php	/^        $imageData = '';$/;"	v
imageDataTmp	library\Zend\Pdf\Resource\Image\Png.php	/^        $imageDataTmp = '';$/;"	v
imageDictionary	library\Zend\Pdf\Resource\Image\Png.php	/^        $imageDictionary = $this->_resource->dictionary;$/;"	v
paletteData	library\Zend\Pdf\Resource\Image\Png.php	/^                    $paletteData = fread($imageFile, $chunkLength);$/;"	v
paletteObject	library\Zend\Pdf\Resource\Image\Png.php	/^                $paletteObject = $this->_objectFactory->newObject(new Zend_Pdf_Element_String_Binary($paletteData));$/;"	v
pngDataRawDecoded	library\Zend\Pdf\Resource\Image\Png.php	/^                $pngDataRawDecoded = $decodingStream->value;$/;"	v
prefilter	library\Zend\Pdf\Resource\Image\Png.php	/^        $prefilter = ord(fread($imageFile,1));$/;"	v
red	library\Zend\Pdf\Resource\Image\Png.php	/^                            $red = ord(substr($trnsData,1,1));$/;"	v
smaskData	library\Zend\Pdf\Resource\Image\Png.php	/^        $smaskData = '';$/;"	v
smaskStream	library\Zend\Pdf\Resource\Image\Png.php	/^            $smaskStream = $this->_objectFactory->newStreamObject($smaskData);$/;"	v
smaskStreamDecodeParms	library\Zend\Pdf\Resource\Image\Png.php	/^            $smaskStreamDecodeParms = array();$/;"	v
transparencyData	library\Zend\Pdf\Resource\Image\Png.php	/^                                $transparencyData = array(new Zend_Pdf_Element_Numeric($trnsIdx),$/;"	v
transparencyData	library\Zend\Pdf\Resource\Image\Png.php	/^                            $transparencyData = array(new Zend_Pdf_Element_Numeric($baseColor),$/;"	v
transparencyData	library\Zend\Pdf\Resource\Image\Png.php	/^                            $transparencyData = array(new Zend_Pdf_Element_Numeric($red),$/;"	v
trnsData	library\Zend\Pdf\Resource\Image\Png.php	/^                    $trnsData = fread($imageFile, $chunkLength);$/;"	v
width	library\Zend\Pdf\Resource\Image\Png.php	/^        $width = $wtmp['i'];$/;"	v
wtmp	library\Zend\Pdf\Resource\Image\Png.php	/^        $wtmp = unpack('Ni',fread($imageFile, 4)); \/\/Unpack a 4-Byte Long$/;"	v
Zend_Pdf_Resource_Image_Tiff	library\Zend\Pdf\Resource\Image\Tiff.php	/^class Zend_Pdf_Resource_Image_Tiff extends Zend_Pdf_Resource_Image$/;"	c
byteOrderIndicator	library\Zend\Pdf\Resource\Image\Tiff.php	/^        $byteOrderIndicator = fread($imageFile, 2);$/;"	v
fieldLength	library\Zend\Pdf\Resource\Image\Tiff.php	/^                        $fieldLength = $valueCount * 2;$/;"	v
fieldLength	library\Zend\Pdf\Resource\Image\Tiff.php	/^                        $fieldLength = $valueCount * 4;$/;"	v
fieldLength	library\Zend\Pdf\Resource\Image\Tiff.php	/^                        $fieldLength = $valueCount * 8;$/;"	v
fieldLength	library\Zend\Pdf\Resource\Image\Tiff.php	/^                        $fieldLength = $valueCount;$/;"	v
fieldType	library\Zend\Pdf\Resource\Image\Tiff.php	/^                $fieldType   = $this->unpackBytes(Zend_Pdf_Resource_Image_Tiff::UNPACK_TYPE_SHORT, fread($imageFile, 2));$/;"	v
fileStats	library\Zend\Pdf\Resource\Image\Tiff.php	/^        $fileStats = fstat($imageFile);$/;"	v
format	library\Zend\Pdf\Resource\Image\Tiff.php	/^                            $format = ($this->_endianType == Zend_Pdf_Resource_Image_Tiff::TIFF_ENDIAN_LITTLE)?'V*':'N*';$/;"	v
format	library\Zend\Pdf\Resource\Image\Tiff.php	/^                $format = 'C';$/;"	v
format	library\Zend\Pdf\Resource\Image\Tiff.php	/^                $format = ($this->_endianType == Zend_Pdf_Resource_Image_Tiff::TIFF_ENDIAN_LITTLE)?'V':'N';$/;"	v
format	library\Zend\Pdf\Resource\Image\Tiff.php	/^                $format = ($this->_endianType == Zend_Pdf_Resource_Image_Tiff::TIFF_ENDIAN_LITTLE)?'V2':'N2';$/;"	v
format	library\Zend\Pdf\Resource\Image\Tiff.php	/^                $format = ($this->_endianType == Zend_Pdf_Resource_Image_Tiff::TIFF_ENDIAN_LITTLE)?'v':'n';$/;"	v
fp	library\Zend\Pdf\Resource\Image\Tiff.php	/^                            $fp = ftell($imageFile);$/;"	v
ifdOffset	library\Zend\Pdf\Resource\Image\Tiff.php	/^            $ifdOffset = $this->unpackBytes(Zend_Pdf_Resource_Image_Tiff::UNPACK_TYPE_LONG, fread($imageFile, 4));$/;"	v
ifdOffset	library\Zend\Pdf\Resource\Image\Tiff.php	/^        $ifdOffset = $this->unpackBytes(Zend_Pdf_Resource_Image_Tiff::UNPACK_TYPE_LONG, fread($imageFile, 4));$/;"	v
imageDataBytes	library\Zend\Pdf\Resource\Image\Tiff.php	/^            $imageDataBytes = fread($imageFile, $this->_imageDataLength);$/;"	v
imageDataBytes	library\Zend\Pdf\Resource\Image\Tiff.php	/^        $imageDataBytes = '';$/;"	v
imageDictionary	library\Zend\Pdf\Resource\Image\Tiff.php	/^        $imageDictionary = $this->_resource->dictionary;$/;"	v
numDirEntries	library\Zend\Pdf\Resource\Image\Tiff.php	/^            $numDirEntries = $this->unpackBytes(Zend_Pdf_Resource_Image_Tiff::UNPACK_TYPE_SHORT, fread($imageFile, 2));$/;"	v
offsetBytes	library\Zend\Pdf\Resource\Image\Tiff.php	/^                $offsetBytes = fread($imageFile, 4);$/;"	v
refOffset	library\Zend\Pdf\Resource\Image\Tiff.php	/^                    $refOffset = $this->unpackBytes(Zend_Pdf_Resource_Image_Tiff::UNPACK_TYPE_LONG, $offsetBytes);$/;"	v
stripByteCountsBytes	library\Zend\Pdf\Resource\Image\Tiff.php	/^                            $stripByteCountsBytes = fread($imageFile, $fieldLength);$/;"	v
stripOffsetsBytes	library\Zend\Pdf\Resource\Image\Tiff.php	/^                            $stripOffsetsBytes = fread($imageFile, $fieldLength);$/;"	v
tag	library\Zend\Pdf\Resource\Image\Tiff.php	/^                $tag         = $this->unpackBytes(Zend_Pdf_Resource_Image_Tiff::UNPACK_TYPE_SHORT, fread($imageFile, 2));$/;"	v
unpacked	library\Zend\Pdf\Resource\Image\Tiff.php	/^                $unpacked = unpack($format, $bytes);$/;"	v
value	library\Zend\Pdf\Resource\Image\Tiff.php	/^                            $value = $this->unpackBytes(Zend_Pdf_Resource_Image_Tiff::UNPACK_TYPE_BYTE, $offsetBytes);$/;"	v
value	library\Zend\Pdf\Resource\Image\Tiff.php	/^                            $value = $this->unpackBytes(Zend_Pdf_Resource_Image_Tiff::UNPACK_TYPE_LONG, $offsetBytes);$/;"	v
value	library\Zend\Pdf\Resource\Image\Tiff.php	/^                            $value = $this->unpackBytes(Zend_Pdf_Resource_Image_Tiff::UNPACK_TYPE_SHORT, $offsetBytes);$/;"	v
valueCount	library\Zend\Pdf\Resource\Image\Tiff.php	/^                $valueCount  = $this->unpackBytes(Zend_Pdf_Resource_Image_Tiff::UNPACK_TYPE_LONG, fread($imageFile, 4));$/;"	v
version	library\Zend\Pdf\Resource\Image\Tiff.php	/^        $version = $this->unpackBytes(Zend_Pdf_Resource_Image_Tiff::UNPACK_TYPE_SHORT, fread($imageFile, 2));$/;"	v
Zend_Pdf_Resource_Unified	library\Zend\Pdf\Resource\Unified.php	/^class Zend_Pdf_Resource_Unified extends Zend_Pdf_Resource$/;"	c
Zend_Pdf_StringParser	library\Zend\Pdf\StringParser.php	/^class Zend_Pdf_StringParser$/;"	c
chCode	library\Zend\Pdf\StringParser.php	/^            $chCode == 0x09 || \/\/ Tab$/;"	v
chCode	library\Zend\Pdf\StringParser.php	/^            $chCode == 0x0A || \/\/ Line feed$/;"	v
chCode	library\Zend\Pdf\StringParser.php	/^            $chCode == 0x0C || \/\/ Form Feed$/;"	v
chCode	library\Zend\Pdf\StringParser.php	/^            $chCode == 0x0D || \/\/ Carriage return$/;"	v
chCode	library\Zend\Pdf\StringParser.php	/^            $chCode == 0x20    \/\/ Space$/;"	v
chCode	library\Zend\Pdf\StringParser.php	/^            $chCode == 0x25    \/\/ '%'$/;"	v
chCode	library\Zend\Pdf\StringParser.php	/^            $chCode == 0x29 || \/\/ ')'$/;"	v
chCode	library\Zend\Pdf\StringParser.php	/^            $chCode == 0x2F || \/\/ '\/'$/;"	v
chCode	library\Zend\Pdf\StringParser.php	/^            $chCode == 0x3C || \/\/ '<'$/;"	v
chCode	library\Zend\Pdf\StringParser.php	/^            $chCode == 0x3E || \/\/ '>'$/;"	v
chCode	library\Zend\Pdf\StringParser.php	/^            $chCode == 0x5B || \/\/ '['$/;"	v
chCode	library\Zend\Pdf\StringParser.php	/^            $chCode == 0x5D || \/\/ ']'$/;"	v
chCode	library\Zend\Pdf\StringParser.php	/^            $chCode == 0x7B || \/\/ '{'$/;"	v
chCode	library\Zend\Pdf\StringParser.php	/^            $chCode == 0x7D || \/\/ '}'$/;"	v
compare	library\Zend\Pdf\StringParser.php	/^                $compare = "()<>[]{}\/%\\x00\\t\\n\\f\\r ";$/;"	v
compare	library\Zend\Pdf\StringParser.php	/^                $compare = "()<>[]{}\/%\\x00\\t\\n\\r ";$/;"	v
compare	library\Zend\Pdf\StringParser.php	/^            $compare = '';$/;"	v
dataOffset	library\Zend\Pdf\StringParser.php	/^        $dataOffset = $this->offset;$/;"	v
dictionary	library\Zend\Pdf\StringParser.php	/^        $dictionary = new Zend_Pdf_Element_Dictionary();$/;"	v
elements	library\Zend\Pdf\StringParser.php	/^        $elements = array();$/;"	v
genNum	library\Zend\Pdf\StringParser.php	/^        $genNum = $this->readLexeme();$/;"	v
name	library\Zend\Pdf\StringParser.php	/^                $name  = $this->readElement($nextLexeme);$/;"	v
nameStart	library\Zend\Pdf\StringParser.php	/^                $nameStart = $this->offset - strlen($nextLexeme);$/;"	v
nextLexeme	library\Zend\Pdf\StringParser.php	/^            $nextLexeme = $this->readLexeme();$/;"	v
nextLexeme	library\Zend\Pdf\StringParser.php	/^        $nextLexeme = $this->readLexeme();$/;"	v
obj	library\Zend\Pdf\StringParser.php	/^            $obj = new Zend_Pdf_Element_Object($objValue, (int)$objNum, (int)$genNum, $this->_objFactory->resolve());$/;"	v
obj	library\Zend\Pdf\StringParser.php	/^        $obj = new Zend_Pdf_Element_Object_Stream(substr($this->data,$/;"	v
objKeyword	library\Zend\Pdf\StringParser.php	/^        $objKeyword = $this->readLexeme();$/;"	v
objNum	library\Zend\Pdf\StringParser.php	/^            $objNum = $nextLexeme;$/;"	v
objNum	library\Zend\Pdf\StringParser.php	/^            $objNum = $this->readLexeme();$/;"	v
objNum	library\Zend\Pdf\StringParser.php	/^        $objNum = $this->readLexeme();$/;"	v
objValue	library\Zend\Pdf\StringParser.php	/^        $objValue = $this->readElement();$/;"	v
offsetSave	library\Zend\Pdf\StringParser.php	/^        $offsetSave = $this->offset;$/;"	v
openedBrackets	library\Zend\Pdf\StringParser.php	/^        $openedBrackets = 1;$/;"	v
rMark	library\Zend\Pdf\StringParser.php	/^        $rMark  = $this->readLexeme();$/;"	v
ref	library\Zend\Pdf\StringParser.php	/^                $ref = $this->_readReference($nextLexeme);$/;"	v
ref	library\Zend\Pdf\StringParser.php	/^        $ref = new Zend_Pdf_Element_Reference((int)$objNum, (int)$genNum, $this->_context, $this->_objFactory->resolve());$/;"	v
start	library\Zend\Pdf\StringParser.php	/^            $start = $this->offset;$/;"	v
start	library\Zend\Pdf\StringParser.php	/^        $start = $this->offset;$/;"	v
streamLength	library\Zend\Pdf\StringParser.php	/^        $streamLength = $objValue->Length->value;$/;"	v
value	library\Zend\Pdf\StringParser.php	/^                $value = $this->readElement();$/;"	v
value	library\Zend\Pdf\StringParser.php	/^        $value = 0;$/;"	v
Zend_Pdf_Style	library\Zend\Pdf\Style.php	/^class Zend_Pdf_Style$/;"	c
dashElement	library\Zend\Pdf\Style.php	/^                $dashElement = new Zend_Pdf_Element_Numeric($dashItem);$/;"	v
dashPattern	library\Zend\Pdf\Style.php	/^            $dashPattern = new Zend_Pdf_Element_Array();$/;"	v
instructions	library\Zend\Pdf\Style.php	/^        $instructions = '';$/;"	v
pattern	library\Zend\Pdf\Style.php	/^            $pattern = array();$/;"	v
phase	library\Zend\Pdf\Style.php	/^            $phase   = 0;$/;"	v
resource	library\Zend\Pdf\Target.php	/^                $resource = $resource->D;$/;"	v
Zend_Pdf_Trailer_Generator	library\Zend\Pdf\Trailer\Generator.php	/^class Zend_Pdf_Trailer_Generator extends Zend_Pdf_Trailer$/;"	c
Zend_Pdf_Trailer_Keeper	library\Zend\Pdf\Trailer\Keeper.php	/^class Zend_Pdf_Trailer_Keeper extends Zend_Pdf_Trailer$/;"	c
Zend_Pdf_UpdateInfoContainer	library\Zend\Pdf\UpdateInfoContainer.php	/^class Zend_Pdf_UpdateInfoContainer$/;"	c
Zend_ProgressBar	library\Zend\ProgressBar.php	/^class Zend_ProgressBar$/;"	c
percent	library\Zend\ProgressBar.php	/^            $percent = (float) ($this->_current - $this->_min) \/ ($this->_max - $this->_min);$/;"	v
percent	library\Zend\ProgressBar.php	/^            $percent = false;$/;"	v
timeRemaining	library\Zend\ProgressBar.php	/^            $timeRemaining = null;$/;"	v
timeRemaining	library\Zend\ProgressBar.php	/^            $timeRemaining = round(((1 \/ $percent) * $timeTaken) - $timeTaken);$/;"	v
timeTaken	library\Zend\ProgressBar.php	/^        $timeTaken = time() - $this->_startTime;$/;"	v
method	library\Zend\ProgressBar\Adapter.php	/^            $method = 'set' . ucfirst($key);$/;"	v
Zend_ProgressBar_Adapter_Console	library\Zend\ProgressBar\Adapter\Console.php	/^class Zend_ProgressBar_Adapter_Console extends Zend_ProgressBar_Adapter$/;"	c
allowedActions	library\Zend\ProgressBar\Adapter\Console.php	/^        $allowedActions = array(self::FINISH_ACTION_CLEAR_LINE,$/;"	v
allowedElements	library\Zend\ProgressBar\Adapter\Console.php	/^        $allowedElements = array(self::ELEMENT_PERCENT,$/;"	v
bar	library\Zend\ProgressBar\Adapter\Console.php	/^                    $bar         = '[';$/;"	v
barWidth	library\Zend\ProgressBar\Adapter\Console.php	/^            $barWidth = $this->_width;$/;"	v
data	library\Zend\ProgressBar\Adapter\Console.php	/^                    $data = str_repeat("\\x08", $this->_width)$/;"	v
data	library\Zend\ProgressBar\Adapter\Console.php	/^            $data = '';$/;"	v
data	library\Zend\ProgressBar\Adapter\Console.php	/^            $data = str_repeat("\\x08", $this->_width);$/;"	v
doneWidth	library\Zend\ProgressBar\Adapter\Console.php	/^                    $doneWidth = min($visualWidth - $indicatorWidth, round($visualWidth * $percent));$/;"	v
etaFormatted	library\Zend\ProgressBar\Adapter\Console.php	/^                        $etaFormatted = '??:??:??';$/;"	v
etaFormatted	library\Zend\ProgressBar\Adapter\Console.php	/^                        $etaFormatted = sprintf('%02d:%02d:%02d', $hours, $minutes, $seconds);$/;"	v
hours	library\Zend\ProgressBar\Adapter\Console.php	/^                        $hours   = floor($timeRemaining \/ 3600);$/;"	v
indicatorWidth	library\Zend\ProgressBar\Adapter\Console.php	/^                    $indicatorWidth = strlen($this->_barIndicatorChar);$/;"	v
leftWidth	library\Zend\ProgressBar\Adapter\Console.php	/^                    $leftWidth = $visualWidth - $doneWidth - $indicatorWidth;$/;"	v
minutes	library\Zend\ProgressBar\Adapter\Console.php	/^                        $minutes = floor(($timeRemaining % 3600) \/ 60);$/;"	v
renderedElements	library\Zend\ProgressBar\Adapter\Console.php	/^        $renderedElements = array();$/;"	v
seconds	library\Zend\ProgressBar\Adapter\Console.php	/^                        $seconds = ($timeRemaining % 3600 % 60);$/;"	v
stream	library\Zend\ProgressBar\Adapter\Console.php	/^       $stream = @fopen($resource, 'w');$/;"	v
visualWidth	library\Zend\ProgressBar\Adapter\Console.php	/^                    $visualWidth = $this->_barWidth - 2;$/;"	v
Zend_ProgressBar_Adapter_Exception	library\Zend\ProgressBar\Adapter\Exception.php	/^class Zend_ProgressBar_Adapter_Exception extends Zend_ProgressBar_Exception$/;"	c
Zend_ProgressBar_Adapter_JsPull	library\Zend\ProgressBar\Adapter\JsPull.php	/^class Zend_ProgressBar_Adapter_JsPull extends Zend_ProgressBar_Adapter$/;"	c
arguments	library\Zend\ProgressBar\Adapter\JsPull.php	/^        $arguments = array($/;"	v
data	library\Zend\ProgressBar\Adapter\JsPull.php	/^        $data = Zend_Json::encode($arguments);$/;"	v
data	library\Zend\ProgressBar\Adapter\JsPull.php	/^        $data = Zend_Json::encode(array('finished' => true));$/;"	v
Zend_ProgressBar_Adapter_JsPush	library\Zend\ProgressBar\Adapter\JsPush.php	/^class Zend_ProgressBar_Adapter_JsPush extends Zend_ProgressBar_Adapter$/;"	c
arguments	library\Zend\ProgressBar\Adapter\JsPush.php	/^        $arguments = array($/;"	v
data	library\Zend\ProgressBar\Adapter\JsPush.php	/^        $data = '<script type="text\/javascript">'$/;"	v
Zend_ProgressBar_Exception	library\Zend\ProgressBar\Exception.php	/^class Zend_ProgressBar_Exception extends Zend_Exception$/;"	c
Zend_Queue	library\Zend\Queue.php	/^class Zend_Queue implements Countable$/;"	c
adapter	library\Zend\Queue.php	/^            $adapter = $spec;$/;"	v
adapter	library\Zend\Queue.php	/^            $adapter = new $adapterName($this->getOptions(), $this);$/;"	v
adapter	library\Zend\Queue.php	/^        $adapter = null;$/;"	v
adapterName	library\Zend\Queue.php	/^            $adapterName = str_replace($/;"	v
adapterNamespace	library\Zend\Queue.php	/^                $adapterNamespace = 'Zend_Queue_Adapter';$/;"	v
deleted	library\Zend\Queue.php	/^            $deleted = $this->getAdapter()->delete($this->getName());$/;"	v
deleted	library\Zend\Queue.php	/^            $deleted = true;$/;"	v
info	library\Zend\Queue.php	/^        $info = array();$/;"	v
maxMessages	library\Zend\Queue.php	/^            $maxMessages = 1;$/;"	v
name	library\Zend\Queue.php	/^            $name = $translation[$name];$/;"	v
options	library\Zend\Queue.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Queue.php	/^            $options = $spec->toArray();$/;"	v
options	library\Zend\Queue.php	/^            $options = $spec;$/;"	v
options	library\Zend\Queue.php	/^            $options = array();$/;"	v
options	library\Zend\Queue.php	/^        $options = array($/;"	v
timeout	library\Zend\Queue.php	/^                $timeout = $this->getOption(self::TIMEOUT);$/;"	v
timeout	library\Zend\Queue.php	/^            $timeout = $this->getOption(self::TIMEOUT);$/;"	v
translation	library\Zend\Queue.php	/^        $translation = array($/;"	v
Zend_Queue_Adapter_Activemq	library\Zend\Queue\Adapter\Activemq.php	/^class Zend_Queue_Adapter_Activemq extends Zend_Queue_Adapter_AdapterAbstract$/;"	c
block	library\Zend\Queue\Adapter\Activemq.php	/^                            $block = print_r($response, true);$/;"	v
classname	library\Zend\Queue\Adapter\Activemq.php	/^        $classname = $queue->getMessageClass();$/;"	v
classname	library\Zend\Queue\Adapter\Activemq.php	/^        $classname = $queue->getMessageSetClass();$/;"	v
connect	library\Zend\Queue\Adapter\Activemq.php	/^        $connect = $this->_client->createFrame();$/;"	v
data	library\Zend\Queue\Adapter\Activemq.php	/^        $data = array($/;"	v
data	library\Zend\Queue\Adapter\Activemq.php	/^        $data = array();$/;"	v
datum	library\Zend\Queue\Adapter\Activemq.php	/^                            $datum = array($/;"	v
frame	library\Zend\Queue\Adapter\Activemq.php	/^        $frame = $this->_client->createFrame();$/;"	v
maxMessages	library\Zend\Queue\Adapter\Activemq.php	/^            $maxMessages = 1;$/;"	v
options	library\Zend\Queue\Adapter\Activemq.php	/^        $options = &$this->_options['driverOptions'];$/;"	v
options	library\Zend\Queue\Adapter\Activemq.php	/^        $options = array($/;"	v
queue	library\Zend\Queue\Adapter\Activemq.php	/^            $queue = $this->_queue;$/;"	v
response	library\Zend\Queue\Adapter\Activemq.php	/^                    $response = $this->_client->receive();$/;"	v
response	library\Zend\Queue\Adapter\Activemq.php	/^        $response = $this->_client->send($connect)->receive();$/;"	v
timeout	library\Zend\Queue\Adapter\Activemq.php	/^            $timeout = self::RECEIVE_TIMEOUT_DEFAULT;$/;"	v
adapterOptions	library\Zend\Queue\Adapter\AdapterAbstract.php	/^        $adapterOptions = array();$/;"	v
driverOptions	library\Zend\Queue\Adapter\AdapterAbstract.php	/^        $driverOptions  = array();$/;"	v
list	library\Zend\Queue\Adapter\AdapterAbstract.php	/^        $list = $this->getCapabilities();$/;"	v
options	library\Zend\Queue\Adapter\AdapterAbstract.php	/^            $options = $options->toArray();$/;"	v
Zend_Queue_Adapter_Array	library\Zend\Queue\Adapter\Array.php	/^class Zend_Queue_Adapter_Array extends Zend_Queue_Adapter_AdapterAbstract$/;"	c
classname	library\Zend\Queue\Adapter\Array.php	/^        $classname = $queue->getMessageClass();$/;"	v
classname	library\Zend\Queue\Adapter\Array.php	/^        $classname = $queue->getMessageSetClass();$/;"	v
count	library\Zend\Queue\Adapter\Array.php	/^            $count = 0;$/;"	v
data	library\Zend\Queue\Adapter\Array.php	/^        $data       = array();$/;"	v
data	library\Zend\Queue\Adapter\Array.php	/^        $data = array($/;"	v
found	library\Zend\Queue\Adapter\Array.php	/^        $found = isset($this->_data[$name]);$/;"	v
maxMessages	library\Zend\Queue\Adapter\Array.php	/^            $maxMessages = 1;$/;"	v
options	library\Zend\Queue\Adapter\Array.php	/^        $options = array($/;"	v
queue	library\Zend\Queue\Adapter\Array.php	/^            $queue = $this->_queue;$/;"	v
queue	library\Zend\Queue\Adapter\Array.php	/^        $queue = &$this->_data[$message->queue_name];$/;"	v
start_time	library\Zend\Queue\Adapter\Array.php	/^            $start_time = microtime(true);$/;"	v
temp	library\Zend\Queue\Adapter\Array.php	/^            $temp = &$this->_data[$queue->getName()];$/;"	v
timeout	library\Zend\Queue\Adapter\Array.php	/^            $timeout = self::CREATE_TIMEOUT_DEFAULT;$/;"	v
timeout	library\Zend\Queue\Adapter\Array.php	/^            $timeout = self::RECEIVE_TIMEOUT_DEFAULT;$/;"	v
Zend_Queue_Adapter_Db	library\Zend\Queue\Adapter\Db.php	/^class Zend_Queue_Adapter_Db extends Zend_Queue_Adapter_AdapterAbstract$/;"	c
classname	library\Zend\Queue\Adapter\Db.php	/^        $classname = $queue->getMessageClass();$/;"	v
classname	library\Zend\Queue\Adapter\Db.php	/^        $classname = $queue->getMessageSetClass();$/;"	v
count	library\Zend\Queue\Adapter\Db.php	/^                    $count = $db->update($info['name'], $update, $where);$/;"	v
db	library\Zend\Queue\Adapter\Db.php	/^            $db = $this->_initDbAdapter();$/;"	v
db	library\Zend\Queue\Adapter\Db.php	/^            $db = $this->_options['dbAdapter'];$/;"	v
db	library\Zend\Queue\Adapter\Db.php	/^            $db = Zend_Db::factory($type, $options);$/;"	v
db	library\Zend\Queue\Adapter\Db.php	/^        $db        = $this->_messageTable->getAdapter();$/;"	v
db	library\Zend\Queue\Adapter\Db.php	/^        $db    = $this->_messageTable->getAdapter();$/;"	v
id	library\Zend\Queue\Adapter\Db.php	/^            $id = $this->getQueueId($name);$/;"	v
id	library\Zend\Queue\Adapter\Db.php	/^        $id = $this->getQueueId($name); \/\/ get primary key$/;"	v
id	library\Zend\Queue\Adapter\Db.php	/^        $id = 0;$/;"	v
info	library\Zend\Queue\Adapter\Db.php	/^        $info      = $this->_messageTable->info();$/;"	v
info	library\Zend\Queue\Adapter\Db.php	/^        $info  = $this->_messageTable->info();$/;"	v
list	library\Zend\Queue\Adapter\Db.php	/^        $list = $this->_queueTable->find($id);$/;"	v
list	library\Zend\Queue\Adapter\Db.php	/^        $list = array_keys($this->_queues);$/;"	v
maxMessages	library\Zend\Queue\Adapter\Db.php	/^            $maxMessages = 1;$/;"	v
message	library\Zend\Queue\Adapter\Db.php	/^            $message = (string) $message;$/;"	v
message	library\Zend\Queue\Adapter\Db.php	/^            $message = trim($message);$/;"	v
microtime	library\Zend\Queue\Adapter\Db.php	/^        $microtime = microtime(true); \/\/ cache microtime$/;"	v
msg	library\Zend\Queue\Adapter\Db.php	/^        $msg           = clone $this->_messageRow;$/;"	v
msgs	library\Zend\Queue\Adapter\Db.php	/^        $msgs      = array();$/;"	v
options	library\Zend\Queue\Adapter\Db.php	/^        $options = &$this->_options['driverOptions'];$/;"	v
options	library\Zend\Queue\Adapter\Db.php	/^        $options = array($/;"	v
query	library\Zend\Queue\Adapter\Db.php	/^                $query = $db->select();$/;"	v
query	library\Zend\Queue\Adapter\Db.php	/^        $query = $db->select();$/;"	v
query	library\Zend\Queue\Adapter\Db.php	/^        $query = $this->_queueTable->select();$/;"	v
queue	library\Zend\Queue\Adapter\Db.php	/^            $queue = $this->_queue;$/;"	v
queue	library\Zend\Queue\Adapter\Db.php	/^        $queue = $list->current();$/;"	v
queue	library\Zend\Queue\Adapter\Db.php	/^        $queue = $this->_queueTable->createRow();$/;"	v
queue	library\Zend\Queue\Adapter\Db.php	/^        $queue = $this->_queueTable->fetchRow($query);$/;"	v
timeout	library\Zend\Queue\Adapter\Db.php	/^            $timeout = self::RECEIVE_TIMEOUT_DEFAULT;$/;"	v
type	library\Zend\Queue\Adapter\Db.php	/^        $type = $options['type'];$/;"	v
update	library\Zend\Queue\Adapter\Db.php	/^                    $update = array($/;"	v
where	library\Zend\Queue\Adapter\Db.php	/^                    $where   = array();$/;"	v
where	library\Zend\Queue\Adapter\Db.php	/^        $where = $db->quoteInto('handle=?', $message->handle);$/;"	v
Zend_Queue_Adapter_Db_Message	library\Zend\Queue\Adapter\Db\Message.php	/^class Zend_Queue_Adapter_Db_Message extends Zend_Db_Table_Abstract$/;"	c
Zend_Queue_Adapter_Db_Queue	library\Zend\Queue\Adapter\Db\Queue.php	/^class Zend_Queue_Adapter_Db_Queue extends Zend_Db_Table_Abstract$/;"	c
handle	library\Zend\Queue\Adapter\Db\postgresql.sql	/^  handle character(32),$/;"	F
message	library\Zend\Queue\Adapter\Db\postgresql.sql	/^CREATE TABLE message$/;"	t
message_id	library\Zend\Queue\Adapter\Db\postgresql.sql	/^  message_id bigserial NOT NULL,$/;"	F
queue	library\Zend\Queue\Adapter\Db\postgresql.sql	/^CREATE TABLE queue$/;"	t
queue_id	library\Zend\Queue\Adapter\Db\postgresql.sql	/^  queue_id integer,$/;"	F
queue_id	library\Zend\Queue\Adapter\Db\postgresql.sql	/^  queue_id serial NOT NULL,$/;"	F
queue_name	library\Zend\Queue\Adapter\Db\postgresql.sql	/^  queue_name character varying(100) NOT NULL,$/;"	F
handle	library\Zend\Queue\Adapter\Db\queue_sqlite.sql	/^  handle CHAR(32),$/;"	F
message	library\Zend\Queue\Adapter\Db\queue_sqlite.sql	/^CREATE TABLE message$/;"	t
message_id	library\Zend\Queue\Adapter\Db\queue_sqlite.sql	/^  message_id INTEGER PRIMARY KEY AUTOINCREMENT,$/;"	F
queue	library\Zend\Queue\Adapter\Db\queue_sqlite.sql	/^CREATE TABLE queue$/;"	t
queue_id	library\Zend\Queue\Adapter\Db\queue_sqlite.sql	/^  queue_id INTEGER PRIMARY KEY AUTOINCREMENT,$/;"	F
queue_id	library\Zend\Queue\Adapter\Db\queue_sqlite.sql	/^  queue_id INTEGER PRIMARY KEY,$/;"	F
queue_name	library\Zend\Queue\Adapter\Db\queue_sqlite.sql	/^  queue_name VARCHAR(100) NOT NULL,$/;"	F
Zend_Queue_Adapter_Memcacheq	library\Zend\Queue\Adapter\Memcacheq.php	/^class Zend_Queue_Adapter_Memcacheq extends Zend_Queue_Adapter_AdapterAbstract$/;"	c
classname	library\Zend\Queue\Adapter\Memcacheq.php	/^        $classname = $queue->getMessageClass();$/;"	v
classname	library\Zend\Queue\Adapter\Memcacheq.php	/^        $classname = $queue->getMessageSetClass();$/;"	v
cmd	library\Zend\Queue\Adapter\Memcacheq.php	/^            $cmd = 'quit' . self::EOL;$/;"	v
cmd	library\Zend\Queue\Adapter\Memcacheq.php	/^        $cmd = $command . self::EOL;$/;"	v
continue_reading	library\Zend\Queue\Adapter\Memcacheq.php	/^                $continue_reading = false;$/;"	v
continue_reading	library\Zend\Queue\Adapter\Memcacheq.php	/^        $continue_reading = true;$/;"	v
data	library\Zend\Queue\Adapter\Memcacheq.php	/^                $data = array($/;"	v
data	library\Zend\Queue\Adapter\Memcacheq.php	/^        $data    = array($/;"	v
key	library\Zend\Queue\Adapter\Memcacheq.php	/^            $key = array_search($name, $this->_queues);$/;"	v
maxMessages	library\Zend\Queue\Adapter\Memcacheq.php	/^            $maxMessages = 1;$/;"	v
message	library\Zend\Queue\Adapter\Memcacheq.php	/^        $message = (string) $message;$/;"	v
msgs	library\Zend\Queue\Adapter\Memcacheq.php	/^        $msgs = array();$/;"	v
options	library\Zend\Queue\Adapter\Memcacheq.php	/^        $options = &$this->_options['driverOptions'];$/;"	v
options	library\Zend\Queue\Adapter\Memcacheq.php	/^        $options = array($/;"	v
queue	library\Zend\Queue\Adapter\Memcacheq.php	/^            $queue = $this->_queue;$/;"	v
resp	library\Zend\Queue\Adapter\Memcacheq.php	/^            $resp = trim(fgets($this->_socket, 1024));$/;"	v
response	library\Zend\Queue\Adapter\Memcacheq.php	/^        $response = $this->_sendCommand('delete ' . $name, array('DELETED', 'NOT_FOUND'), true);$/;"	v
response	library\Zend\Queue\Adapter\Memcacheq.php	/^        $response = $this->_sendCommand('stats queue', array('END'));$/;"	v
response	library\Zend\Queue\Adapter\Memcacheq.php	/^        $response = array();$/;"	v
result	library\Zend\Queue\Adapter\Memcacheq.php	/^        $result = $this->_cache->connect($options['host'], $options['port']);$/;"	v
result	library\Zend\Queue\Adapter\Memcacheq.php	/^        $result = $this->_cache->get($name);$/;"	v
result	library\Zend\Queue\Adapter\Memcacheq.php	/^        $result = $this->_cache->set($name, 'creating queue', 0, 15);$/;"	v
result	library\Zend\Queue\Adapter\Memcacheq.php	/^        $result = $this->_cache->set($queue->getName(), $message, 0, 0);$/;"	v
timeout	library\Zend\Queue\Adapter\Memcacheq.php	/^            $timeout = self::CREATE_TIMEOUT_DEFAULT;$/;"	v
timeout	library\Zend\Queue\Adapter\Memcacheq.php	/^            $timeout = self::RECEIVE_TIMEOUT_DEFAULT;$/;"	v
Zend_Queue_Adapter_Null	library\Zend\Queue\Adapter\Null.php	/^class Zend_Queue_Adapter_Null extends Zend_Queue_Adapter_AdapterAbstract$/;"	c
Zend_Queue_Adapter_PlatformJobQueue	library\Zend\Queue\Adapter\PlatformJobQueue.php	/^class Zend_Queue_Adapter_PlatformJobQueue extends Zend_Queue_Adapter_AdapterAbstract$/;"	c
classname	library\Zend\Queue\Adapter\PlatformJobQueue.php	/^        $classname = $this->_queue->getMessageClass();$/;"	v
classname	library\Zend\Queue\Adapter\PlatformJobQueue.php	/^        $classname = $this->_queue->getMessageSetClass();$/;"	v
jobId	library\Zend\Queue\Adapter\PlatformJobQueue.php	/^        $jobId = $this->_zendQueue->addJob($platformJob);$/;"	v
jobs	library\Zend\Queue\Adapter\PlatformJobQueue.php	/^        $jobs = $this->_zendQueue->getJobsInQueue(null, $maxMessages, true);$/;"	v
maxMessages	library\Zend\Queue\Adapter\PlatformJobQueue.php	/^            $maxMessages = 1;$/;"	v
message	library\Zend\Queue\Adapter\PlatformJobQueue.php	/^            $message = array('data' => $message);$/;"	v
options	library\Zend\Queue\Adapter\PlatformJobQueue.php	/^        $options = $this->_options['daemonOptions'];$/;"	v
options	library\Zend\Queue\Adapter\PlatformJobQueue.php	/^        $options = array($/;"	v
platformJob	library\Zend\Queue\Adapter\PlatformJobQueue.php	/^        $platformJob = $zendApiJob->getJob();$/;"	v
zendApiJob	library\Zend\Queue\Adapter\PlatformJobQueue.php	/^        $zendApiJob = new $classname($message);$/;"	v
Zend_Queue_Exception	library\Zend\Queue\Exception.php	/^class Zend_Queue_Exception extends Zend_Exception$/;"	c
Zend_Queue_Message	library\Zend\Queue\Message.php	/^class Zend_Queue_Message$/;"	c
queueClass	library\Zend\Queue\Message.php	/^        $queueClass        = get_class($queue);$/;"	v
result	library\Zend\Queue\Message.php	/^                    $result = get_class($options['queue']);$/;"	v
result	library\Zend\Queue\Message.php	/^                $result = gettype($options['queue']);$/;"	v
Zend_Queue_Message_Iterator	library\Zend\Queue\Message\Iterator.php	/^class Zend_Queue_Message_Iterator implements Iterator, Countable$/;"	c
classname	library\Zend\Queue\Message\Iterator.php	/^        $classname = $this->_messageClass;$/;"	v
message	library\Zend\Queue\Message\Iterator.php	/^            $message = array('data' => $data);$/;"	v
Zend_Queue_Message_PlatformJob	library\Zend\Queue\Message\PlatformJob.php	/^class Zend_Queue_Message_PlatformJob extends Zend_Queue_Message$/;"	c
endTime	library\Zend\Queue\Message\PlatformJob.php	/^            $endTime = isset($this->_data['end_time']) ? $this->_data['end_time'] : null;$/;"	v
Zend_Queue_Stomp_Client	library\Zend\Queue\Stomp\Client.php	/^class Zend_Queue_Stomp_Client$/;"	c
connection	library\Zend\Queue\Stomp\Client.php	/^        $connection = new $class();$/;"	v
connectionClass	library\Zend\Queue\Stomp\Client.php	/^        $connectionClass = 'Zend_Queue_Stomp_Client_Connection',$/;"	v
frameClass	library\Zend\Queue\Stomp\Client.php	/^        $frameClass = 'Zend_Queue_Stomp_Frame'$/;"	v
scheme	library\Zend\Queue\Stomp\Client.php	/^        $scheme = null, $host = null, $port = null,$/;"	v
Zend_Queue_Stomp_Client_Connection	library\Zend\Queue\Stomp\Client\Connection.php	/^class Zend_Queue_Stomp_Client_Connection$/;"	c
bytes	library\Zend\Queue\Stomp\Client\Connection.php	/^        $bytes = fwrite($this->_socket, $output, strlen($output));$/;"	v
class	library\Zend\Queue\Stomp\Client\Connection.php	/^        $class = $this->getFrameClass();$/;"	v
data	library\Zend\Queue\Stomp\Client\Connection.php	/^            $data = fread($this->_socket, 1);$/;"	v
except	library\Zend\Queue\Stomp\Client\Connection.php	/^        $except = null;$/;"	v
frame	library\Zend\Queue\Stomp\Client\Connection.php	/^            $frame = $this->createFrame();$/;"	v
frame	library\Zend\Queue\Stomp\Client\Connection.php	/^        $frame = $this->createFrame();$/;"	v
frame	library\Zend\Queue\Stomp\Client\Connection.php	/^        $frame = new $class();$/;"	v
output	library\Zend\Queue\Stomp\Client\Connection.php	/^        $output = $frame->toFrame();$/;"	v
prev	library\Zend\Queue\Stomp\Client\Connection.php	/^            $prev = $data;$/;"	v
prev	library\Zend\Queue\Stomp\Client\Connection.php	/^        $prev     = '';$/;"	v
read	library\Zend\Queue\Stomp\Client\Connection.php	/^        $read   = array($this->_socket);$/;"	v
response	library\Zend\Queue\Stomp\Client\Connection.php	/^        $response = '';$/;"	v
str	library\Zend\Queue\Stomp\Client\Connection.php	/^        $str = $scheme . ':\/\/' . $host;$/;"	v
write	library\Zend\Queue\Stomp\Client\Connection.php	/^        $write  = null;$/;"	v
Zend_Queue_Stomp_Frame	library\Zend\Queue\Stomp\Frame.php	/^class Zend_Queue_Stomp_Frame$/;"	c
body	library\Zend\Queue\Stomp\Frame.php	/^            $body   = substr($body, 0, $length);$/;"	v
body	library\Zend\Queue\Stomp\Frame.php	/^        $body    = $this->getBody();$/;"	v
body	library\Zend\Queue\Stomp\Frame.php	/^        $body    = null;$/;"	v
command	library\Zend\Queue\Stomp\Frame.php	/^        $command = $this->getCommand();$/;"	v
command	library\Zend\Queue\Stomp\Frame.php	/^        $command = false;$/;"	v
frame	library\Zend\Queue\Stomp\Frame.php	/^        $frame   = '';$/;"	v
frame	library\Zend\Queue\Stomp\Frame.php	/^        $frame = $command . self::EOL;$/;"	v
header	library\Zend\Queue\Stomp\Frame.php	/^            $header = $frame;$/;"	v
header	library\Zend\Queue\Stomp\Frame.php	/^        $header  = '';$/;"	v
headers	library\Zend\Queue\Stomp\Frame.php	/^        $headers = $this->getHeaders();$/;"	v
headers	library\Zend\Queue\Stomp\Frame.php	/^        $headers = array();$/;"	v
headers	library\Zend\Queue\Stomp\Frame.php	/^        $headers = explode(self::EOL, $header);$/;"	v
length	library\Zend\Queue\Stomp\Frame.php	/^            $length = (int) $this->getHeader(self::CONTENT_LENGTH);$/;"	v
match	library\Zend\Queue\Stomp\Frame.php	/^        $match = self::EOL . self::EOL;$/;"	v
return	library\Zend\Queue\Stomp\Frame.php	/^            $return = $this->toFrame();$/;"	v
return	library\Zend\Queue\Stomp\Frame.php	/^            $return = '';$/;"	v
Zend_Reflection_Class	library\Zend\Reflection\Class.php	/^class Zend_Reflection_Class extends ReflectionClass$/;"	c
endnum	library\Zend\Reflection\Class.php	/^        $endnum    = $this->getEndLine() - $this->getStartLine();$/;"	v
filelines	library\Zend\Reflection\Class.php	/^        $filelines = file($filename);$/;"	v
filename	library\Zend\Reflection\Class.php	/^        $filename  = $this->getFileName();$/;"	v
instance	library\Zend\Reflection\Class.php	/^            $instance = new $reflectionClass($phpReflection->getName());$/;"	v
instance	library\Zend\Reflection\Class.php	/^            $instance = new $reflectionClass($this->getName(), $phpReflection->getName());$/;"	v
instance	library\Zend\Reflection\Class.php	/^        $instance = new $reflectionClass($this);$/;"	v
instance	library\Zend\Reflection\Class.php	/^        $instance = new $reflectionClass($this->getFileName());$/;"	v
phpReflection	library\Zend\Reflection\Class.php	/^        $phpReflection  = parent::getMethod($name);$/;"	v
phpReflection	library\Zend\Reflection\Class.php	/^        $phpReflection  = parent::getProperty($name);$/;"	v
phpReflection	library\Zend\Reflection\Class.php	/^        $phpReflection = parent::getParentClass();$/;"	v
phpReflections	library\Zend\Reflection\Class.php	/^        $phpReflections  = parent::getInterfaces();$/;"	v
phpReflections	library\Zend\Reflection\Class.php	/^        $phpReflections  = parent::getMethods($filter);$/;"	v
phpReflections	library\Zend\Reflection\Class.php	/^        $phpReflections = parent::getProperties($filter);$/;"	v
startnum	library\Zend\Reflection\Class.php	/^        $startnum  = $this->getStartLine($includeDocblock);$/;"	v
zendReflection	library\Zend\Reflection\Class.php	/^            $zendReflection = new $reflectionClass($phpReflection->getName());$/;"	v
zendReflection	library\Zend\Reflection\Class.php	/^        $zendReflection = new $reflectionClass($this->getName(), $phpReflection->getName());$/;"	v
zendReflections	library\Zend\Reflection\Class.php	/^        $zendReflections = array();$/;"	v
Zend_Reflection_Docblock	library\Zend\Reflection\Docblock.php	/^class Zend_Reflection_Docblock implements Reflector$/;"	c
docComment	library\Zend\Reflection\Docblock.php	/^            $docComment = $commentOrReflector->getDocComment();$/;"	v
docComment	library\Zend\Reflection\Docblock.php	/^            $docComment = $commentOrReflector;$/;"	v
docComment	library\Zend\Reflection\Docblock.php	/^        $docComment = $this->_docComment;$/;"	v
docComment	library\Zend\Reflection\Docblock.php	/^        $docComment = ltrim($docComment, "\\r\\n"); \/\/ @todo should be changed to remove first and last empty line$/;"	v
docComment	library\Zend\Reflection\Docblock.php	/^        $docComment = preg_replace('#[ \\t]*(?:\\\/\\*\\*|\\*\\\/|\\*)?[ ]{0,1}(.*)?#', '$1', $docComment);$/;"	v
firstBlandLineEncountered	library\Zend\Reflection\Docblock.php	/^                    $firstBlandLineEncountered = true;$/;"	v
line	library\Zend\Reflection\Docblock.php	/^            $line = substr($parsedDocComment, 0, $newlinePos);$/;"	v
lineCount	library\Zend\Reflection\Docblock.php	/^            $lineCount = substr_count($docComment, "\\n");$/;"	v
lineNumber	library\Zend\Reflection\Docblock.php	/^        $lineNumber = $firstBlandLineEncountered = 0;$/;"	v
matches	library\Zend\Reflection\Docblock.php	/^            $matches = array();$/;"	v
parsedDocComment	library\Zend\Reflection\Docblock.php	/^                $parsedDocComment = str_replace($matches[1] . $matches[2], '', $parsedDocComment);$/;"	v
parsedDocComment	library\Zend\Reflection\Docblock.php	/^                $parsedDocComment = substr($parsedDocComment, $newlinePos + 1);$/;"	v
parsedDocComment	library\Zend\Reflection\Docblock.php	/^        $parsedDocComment = $docComment;$/;"	v
returnTags	library\Zend\Reflection\Docblock.php	/^        $returnTags = array();$/;"	v
str	library\Zend\Reflection\Docblock.php	/^        $str = "Docblock [ \/* Docblock *\/ ] {".PHP_EOL.PHP_EOL;$/;"	v
Zend_Reflection_Docblock_Tag	library\Zend\Reflection\Docblock\Tag.php	/^class Zend_Reflection_Docblock_Tag implements Reflector$/;"	c
matches	library\Zend\Reflection\Docblock\Tag.php	/^        $matches = array();$/;"	v
str	library\Zend\Reflection\Docblock\Tag.php	/^        $str = "Docblock Tag [ * @".$this->_name." ]".PHP_EOL;$/;"	v
tagClass	library\Zend\Reflection\Docblock\Tag.php	/^            $tagClass = self::$_tagClasses[$tagName];$/;"	v
tagName	library\Zend\Reflection\Docblock\Tag.php	/^        $tagName = $matches[1];$/;"	v
Zend_Reflection_Docblock_Tag_Param	library\Zend\Reflection\Docblock\Tag\Param.php	/^class Zend_Reflection_Docblock_Tag_Param extends Zend_Reflection_Docblock_Tag$/;"	c
matches	library\Zend\Reflection\Docblock\Tag\Param.php	/^        $matches = array();$/;"	v
Zend_Reflection_Docblock_Tag_Return	library\Zend\Reflection\Docblock\Tag\Return.php	/^class Zend_Reflection_Docblock_Tag_Return extends Zend_Reflection_Docblock_Tag$/;"	c
Zend_Reflection_Exception	library\Zend\Reflection\Exception.php	/^class Zend_Reflection_Exception extends Zend_Exception$/;"	c
Zend_Reflection_Extension	library\Zend\Reflection\Extension.php	/^class Zend_Reflection_Extension extends ReflectionExtension$/;"	c
instance	library\Zend\Reflection\Extension.php	/^            $instance = new $reflectionClass($phpReflection->getName());$/;"	v
phpReflections	library\Zend\Reflection\Extension.php	/^        $phpReflections  = parent::getClasses();$/;"	v
phpReflections	library\Zend\Reflection\Extension.php	/^        $phpReflections  = parent::getFunctions();$/;"	v
zendReflections	library\Zend\Reflection\Extension.php	/^        $zendReflections = array();$/;"	v
Zend_Reflection_File	library\Zend\Reflection\File.php	/^class Zend_Reflection_File implements Reflector$/;"	c
classTrapped	library\Zend\Reflection\File.php	/^                        $classTrapped = false;$/;"	v
classTrapped	library\Zend\Reflection\File.php	/^                    $classTrapped = true;$/;"	v
classTrapped	library\Zend\Reflection\File.php	/^        $classTrapped    = false;$/;"	v
classes	library\Zend\Reflection\File.php	/^        $classes = array();$/;"	v
contents	library\Zend\Reflection\File.php	/^        $contents = $this->_contents;$/;"	v
fileName	library\Zend\Reflection\File.php	/^        $fileName = $file;$/;"	v
filePath	library\Zend\Reflection\File.php	/^            $filePath = array_shift($includePaths) . DIRECTORY_SEPARATOR . $fileName;$/;"	v
fileRealpath	library\Zend\Reflection\File.php	/^            $fileRealpath = self::findRealpathInIncludePath($file);$/;"	v
functionTrapped	library\Zend\Reflection\File.php	/^                        $functionTrapped = false;$/;"	v
functionTrapped	library\Zend\Reflection\File.php	/^                        $functionTrapped = true;$/;"	v
functionTrapped	library\Zend\Reflection\File.php	/^        $functionTrapped = false;$/;"	v
functions	library\Zend\Reflection\File.php	/^        $functions = array();$/;"	v
includePaths	library\Zend\Reflection\File.php	/^        $includePaths = Zend_Loader::explodeIncludePath();$/;"	v
instance	library\Zend\Reflection\File.php	/^            $instance = new $reflectionClass($class);$/;"	v
instance	library\Zend\Reflection\File.php	/^            $instance = new $reflectionClass($function);$/;"	v
instance	library\Zend\Reflection\File.php	/^            $instance = new $reflectionClass($name);$/;"	v
instance	library\Zend\Reflection\File.php	/^            $instance = new $reflectionClass($selected);$/;"	v
instance	library\Zend\Reflection\File.php	/^        $instance = new $reflectionClass($this);$/;"	v
lineNum	library\Zend\Reflection\File.php	/^                $lineNum = $token[2];$/;"	v
lineNum	library\Zend\Reflection\File.php	/^            $lineNum = $token[2];$/;"	v
openBraces	library\Zend\Reflection\File.php	/^        $openBraces      = 0;$/;"	v
requireTrapped	library\Zend\Reflection\File.php	/^                        $requireTrapped = false;$/;"	v
requireTrapped	library\Zend\Reflection\File.php	/^                    $requireTrapped = true;$/;"	v
requireTrapped	library\Zend\Reflection\File.php	/^        $requireTrapped  = false;$/;"	v
selected	library\Zend\Reflection\File.php	/^            $selected = current($this->_classes);$/;"	v
tokens	library\Zend\Reflection\File.php	/^        $tokens   = token_get_all($contents);$/;"	v
type	library\Zend\Reflection\File.php	/^                $type    = $token[0];$/;"	v
type	library\Zend\Reflection\File.php	/^            $type    = $token[0];$/;"	v
value	library\Zend\Reflection\File.php	/^                $value   = $token[1];$/;"	v
value	library\Zend\Reflection\File.php	/^            $value   = $token[1];$/;"	v
Zend_Reflection_Function	library\Zend\Reflection\Function.php	/^class Zend_Reflection_Function extends ReflectionFunction$/;"	c
docblock	library\Zend\Reflection\Function.php	/^        $docblock = $this->getDocblock();$/;"	v
instance	library\Zend\Reflection\Function.php	/^            $instance = new $reflectionClass($this->getName(), $phpReflection->getName());$/;"	v
instance	library\Zend\Reflection\Function.php	/^        $instance = new $reflectionClass($comment);$/;"	v
phpReflections	library\Zend\Reflection\Function.php	/^        $phpReflections  = parent::getParameters();$/;"	v
return	library\Zend\Reflection\Function.php	/^        $return = Zend_Reflection_Docblock_Tag::factory('@return ' . $tag->getDescription());$/;"	v
tag	library\Zend\Reflection\Function.php	/^        $tag    = $docblock->getTag('return');$/;"	v
zendReflections	library\Zend\Reflection\Function.php	/^        $zendReflections = array();$/;"	v
Zend_Reflection_Method	library\Zend\Reflection\Method.php	/^class Zend_Reflection_Method extends ReflectionMethod$/;"	c
endNum	library\Zend\Reflection\Method.php	/^        $endNum = ($this->getEndLine() - $this->getStartLine());$/;"	v
fileContents	library\Zend\Reflection\Method.php	/^        $fileContents = file($this->getFileName());$/;"	v
firstLine	library\Zend\Reflection\Method.php	/^        $firstLine = array_shift($lines);$/;"	v
instance	library\Zend\Reflection\Method.php	/^            $instance = new $reflectionClass(array($this->getDeclaringClass()->getName(), $this->getName()), $phpReflection->getName());$/;"	v
instance	library\Zend\Reflection\Method.php	/^        $instance = new $reflectionClass($this);$/;"	v
lastLine	library\Zend\Reflection\Method.php	/^        $lastLine = array_pop($lines);$/;"	v
lines	library\Zend\Reflection\Method.php	/^        $lines = array_slice($/;"	v
phpReflection	library\Zend\Reflection\Method.php	/^        $phpReflection  = parent::getDeclaringClass();$/;"	v
phpReflections	library\Zend\Reflection\Method.php	/^        $phpReflections  = parent::getParameters();$/;"	v
startNum	library\Zend\Reflection\Method.php	/^        $startNum = $this->getStartLine($includeDocblock);$/;"	v
zendReflection	library\Zend\Reflection\Method.php	/^        $zendReflection = new $reflectionClass($phpReflection->getName());$/;"	v
zendReflections	library\Zend\Reflection\Method.php	/^        $zendReflections = array();$/;"	v
Zend_Reflection_Parameter	library\Zend\Reflection\Parameter.php	/^class Zend_Reflection_Parameter extends ReflectionParameter$/;"	c
baseClass	library\Zend\Reflection\Parameter.php	/^            $baseClass = 'Zend_Reflection_Function';$/;"	v
baseClass	library\Zend\Reflection\Parameter.php	/^            $baseClass = 'Zend_Reflection_Method';$/;"	v
params	library\Zend\Reflection\Parameter.php	/^            $params = $docblock->getTags('param');$/;"	v
phpReflection	library\Zend\Reflection\Parameter.php	/^        $phpReflection  = parent::getClass();$/;"	v
phpReflection	library\Zend\Reflection\Parameter.php	/^        $phpReflection  = parent::getDeclaringClass();$/;"	v
phpReflection	library\Zend\Reflection\Parameter.php	/^        $phpReflection = parent::getDeclaringFunction();$/;"	v
reflectionClass	library\Zend\Reflection\Parameter.php	/^                $reflectionClass = $baseClass;$/;"	v
zendReflection	library\Zend\Reflection\Parameter.php	/^            $zendReflection = new $reflectionClass($phpReflection->getName());$/;"	v
zendReflection	library\Zend\Reflection\Parameter.php	/^            $zendReflection = new $reflectionClass($this->getDeclaringClass()->getName(), $phpReflection->getName());$/;"	v
zendReflection	library\Zend\Reflection\Parameter.php	/^        $zendReflection = new $reflectionClass($phpReflection->getName());$/;"	v
Zend_Reflection_Property	library\Zend\Reflection\Property.php	/^class Zend_Reflection_Property extends ReflectionProperty$/;"	c
docblock	library\Zend\Reflection\Property.php	/^        $docblock = parent::getDocComment();$/;"	v
phpReflection	library\Zend\Reflection\Property.php	/^        $phpReflection  = parent::getDeclaringClass();$/;"	v
r	library\Zend\Reflection\Property.php	/^        $r = new $reflectionClass($docblock);$/;"	v
zendReflection	library\Zend\Reflection\Property.php	/^        $zendReflection = new $reflectionClass($phpReflection->getName());$/;"	v
Zend_Registry	library\Zend\Registry.php	/^class Zend_Registry extends ArrayObject$/;"	c
instance	library\Zend\Registry.php	/^        $instance = self::getInstance();$/;"	v
Zend_Rest_Client	library\Zend\Rest\Client.php	/^class Zend_Rest_Client extends Zend_Service_Abstract$/;"	c
client	library\Zend\Rest\Client.php	/^        $client = self::getHttpClient();$/;"	v
data	library\Zend\Rest\Client.php	/^            $data = array_slice($args, 1) + $this->_data;$/;"	v
key	library\Zend\Rest\Client.php	/^                        $key = 'arg' . $key;$/;"	v
methods	library\Zend\Rest\Client.php	/^        $methods = array('post', 'get', 'delete', 'put');$/;"	v
path	library\Zend\Rest\Client.php	/^            $path = '\/' . $path;$/;"	v
response	library\Zend\Rest\Client.php	/^            $response = $this->{'rest' . $method}($args[0], $data);$/;"	v
uri	library\Zend\Rest\Client.php	/^        $uri = $this->_uri->getUri();$/;"	v
Zend_Rest_Client_Exception	library\Zend\Rest\Client\Exception.php	/^class Zend_Rest_Client_Exception extends Zend_Rest_Exception$/;"	c
Zend_Rest_Client_Result	library\Zend\Rest\Client\Result.php	/^class Zend_Rest_Client_Result implements IteratorAggregate {$/;"	c
count	library\Zend\Rest\Client\Result.php	/^        $count  = count($result);$/;"	v
message	library\Zend\Rest\Client\Result.php	/^                $message = "An error occured while parsing the REST response with simplexml.";$/;"	v
message	library\Zend\Rest\Client\Result.php	/^                $message = "REST Response Error: " . $this->_errstr;$/;"	v
message	library\Zend\Rest\Client\Result.php	/^            $message = $this->_sxml->xpath('\/\/message');$/;"	v
node	library\Zend\Rest\Client\Result.php	/^        $node = dom_import_simplexml($value);$/;"	v
result	library\Zend\Rest\Client\Result.php	/^            $result = $this->_sxml->xpath('\/\/response');$/;"	v
result	library\Zend\Rest\Client\Result.php	/^        $result = $this->_sxml->xpath("\/\/$name");$/;"	v
return	library\Zend\Rest\Client\Result.php	/^                $return = array();$/;"	v
status	library\Zend\Rest\Client\Result.php	/^        $status = $this->_sxml->xpath('\/\/status\/text()');$/;"	v
status	library\Zend\Rest\Client\Result.php	/^        $status = $this->getStatus();$/;"	v
status	library\Zend\Rest\Client\Result.php	/^        $status = strtolower($status[0]);$/;"	v
Zend_Rest_Client_Result_Exception	library\Zend\Rest\Client\Result\Exception.php	/^class Zend_Rest_Client_Result_Exception extends Zend_Rest_Client_Exception{}$/;"	c
Zend_Rest_Exception	library\Zend\Rest\Exception.php	/^class Zend_Rest_Exception extends Zend_Exception$/;"	c
Zend_Rest_Route	library\Zend\Rest\Route.php	/^class Zend_Rest_Route extends Zend_Controller_Router_Route_Module$/;"	c
action	library\Zend\Rest\Route.php	/^            $action = $params[$this->_actionKey];$/;"	v
controller	library\Zend\Rest\Route.php	/^        $controller = $params[$this->_controllerKey];$/;"	v
controllerName	library\Zend\Rest\Route.php	/^                    $controllerName = $path[0];$/;"	v
controllerName	library\Zend\Rest\Route.php	/^            $controllerName = $this->_defaults[$this->_controllerKey];$/;"	v
defaultsArray	library\Zend\Rest\Route.php	/^                $defaultsArray = $values->toArray();$/;"	v
defaultsArray	library\Zend\Rest\Route.php	/^        $defaultsArray = array();$/;"	v
dispatcher	library\Zend\Rest\Route.php	/^            $dispatcher = $this->_front->getDispatcher();$/;"	v
frontController	library\Zend\Rest\Route.php	/^        $frontController = Zend_Controller_Front::getInstance();$/;"	v
instance	library\Zend\Rest\Route.php	/^        $instance = new self($frontController, $defaultsArray, $restfulConfigArray);$/;"	v
key	library\Zend\Rest\Route.php	/^                    $key = urldecode($path[$i]);$/;"	v
module	library\Zend\Rest\Route.php	/^                $module = $params[$this->_moduleKey];$/;"	v
moduleName	library\Zend\Rest\Route.php	/^                $moduleName = $path[0];$/;"	v
moduleName	library\Zend\Rest\Route.php	/^            $moduleName = $this->_defaults[$this->_moduleKey];$/;"	v
modulesOnly	library\Zend\Rest\Route.php	/^                $modulesOnly = false;$/;"	v
modulesOnly	library\Zend\Rest\Route.php	/^        $modulesOnly = true;$/;"	v
params	library\Zend\Rest\Route.php	/^        $params = $request->getParams();$/;"	v
params	library\Zend\Rest\Route.php	/^        $params = (!$reset) ? $this->_values : array();$/;"	v
path	library\Zend\Rest\Route.php	/^            $path = explode(self::URI_DELIMITER, $path);$/;"	v
path	library\Zend\Rest\Route.php	/^        $path   = $request->getPathInfo();$/;"	v
path	library\Zend\Rest\Route.php	/^        $path   = trim($path, self::URI_DELIMITER);$/;"	v
pathElementCount	library\Zend\Rest\Route.php	/^            $pathElementCount = count($path);$/;"	v
request	library\Zend\Rest\Route.php	/^            $request = $this->_front->getRequest();$/;"	v
requestMethod	library\Zend\Rest\Route.php	/^            $requestMethod = strtolower($request->getMethod());$/;"	v
restfulConfigArray	library\Zend\Rest\Route.php	/^        $restfulConfigArray = array();$/;"	v
result	library\Zend\Rest\Route.php	/^        $result = $this->_values + $this->_defaults;$/;"	v
specialGetTarget	library\Zend\Rest\Route.php	/^                $specialGetTarget = 'edit';$/;"	v
specialGetTarget	library\Zend\Rest\Route.php	/^                $specialGetTarget = 'index';$/;"	v
specialGetTarget	library\Zend\Rest\Route.php	/^                $specialGetTarget = array_shift($path);$/;"	v
specialGetTarget	library\Zend\Rest\Route.php	/^            $specialGetTarget = false;$/;"	v
url	library\Zend\Rest\Route.php	/^            $url = '\/' . $controller . $url;$/;"	v
url	library\Zend\Rest\Route.php	/^            $url = '\/' . $module . $url;$/;"	v
url	library\Zend\Rest\Route.php	/^        $url = '';$/;"	v
val	library\Zend\Rest\Route.php	/^                    $val = isset($path[$i + 1]) ? $path[$i + 1] : null;$/;"	v
values	library\Zend\Rest\Route.php	/^        $values = array();$/;"	v
Zend_Rest_Server	library\Zend\Rest\Server.php	/^class Zend_Rest_Server implements Zend_Server_Interface$/;"	c
calling_args	library\Zend\Rest\Server.php	/^                    $calling_args = array();$/;"	v
class	library\Zend\Rest\Server.php	/^                        $class = $this->_functions[$this->_method]->getDeclaringClass()->getName();$/;"	v
class	library\Zend\Rest\Server.php	/^            $class = $function->getDeclaringClass()->getName();$/;"	v
class	library\Zend\Rest\Server.php	/^            $class = false;$/;"	v
code	library\Zend\Rest\Server.php	/^            $code = $exception->getCode();$/;"	v
dom	library\Zend\Rest\Server.php	/^        $dom    = new DOMDocument('1.0', $this->getEncoding());$/;"	v
dom	library\Zend\Rest\Server.php	/^        $dom = new DOMDocument('1.0', $this->getEncoding());$/;"	v
element	library\Zend\Rest\Server.php	/^                $element = $dom->createElement($key);$/;"	v
element	library\Zend\Rest\Server.php	/^            $element = $dom->createElement('message');$/;"	v
element	library\Zend\Rest\Server.php	/^            $element = $dom->createElement('response');$/;"	v
func_args	library\Zend\Rest\Server.php	/^                    $func_args = $this->_functions[$this->_method]->getParameters();$/;"	v
function	library\Zend\Rest\Server.php	/^            $function = $this->_functions[$this->_method];$/;"	v
function	library\Zend\Rest\Server.php	/^            $function = $this->_method;$/;"	v
function	library\Zend\Rest\Server.php	/^            $function = 'rest';$/;"	v
function	library\Zend\Rest\Server.php	/^            $function = (array) $function;$/;"	v
function	library\Zend\Rest\Server.php	/^        $function = $this->_functions[$this->_method];$/;"	v
key	library\Zend\Rest\Server.php	/^                            $key = str_replace('arg', '', $key);$/;"	v
key	library\Zend\Rest\Server.php	/^                $key = 'key_' . $key;$/;"	v
method	library\Zend\Rest\Server.php	/^            $method = $dom->createElement($method);$/;"	v
method	library\Zend\Rest\Server.php	/^            $method = $function->getName();$/;"	v
method	library\Zend\Rest\Server.php	/^            $method = $function;$/;"	v
method	library\Zend\Rest\Server.php	/^            $method = $root;$/;"	v
method	library\Zend\Rest\Server.php	/^        $method = $function->getName();$/;"	v
methodNode	library\Zend\Rest\Server.php	/^            $methodNode = $dom->createElement($method);$/;"	v
methodNode	library\Zend\Rest\Server.php	/^            $methodNode = $xml;$/;"	v
missing_args	library\Zend\Rest\Server.php	/^                    $missing_args = array();$/;"	v
object	library\Zend\Rest\Server.php	/^                $object = $this->_functions[$this->_method]->getDeclaringClass()->newInstance();$/;"	v
object	library\Zend\Rest\Server.php	/^                $object = $this->_functions[$this->_method]->getDeclaringClass()->newInstanceArgs($this->_args);$/;"	v
request	library\Zend\Rest\Server.php	/^                    $request = array_combine($request_keys, $request);$/;"	v
request	library\Zend\Rest\Server.php	/^            $request = $_REQUEST;$/;"	v
request_keys	library\Zend\Rest\Server.php	/^                    $request_keys = array_keys($request);$/;"	v
response	library\Zend\Rest\Server.php	/^            $response = $result->asXML();$/;"	v
response	library\Zend\Rest\Server.php	/^            $response = $result->ownerDocument->saveXML($result);$/;"	v
response	library\Zend\Rest\Server.php	/^            $response = $result->saveXML();$/;"	v
response	library\Zend\Rest\Server.php	/^            $response = $this->_handleScalar($result);$/;"	v
response	library\Zend\Rest\Server.php	/^            $response = $this->_handleStruct($result);$/;"	v
result	library\Zend\Rest\Server.php	/^                            $result = $this->_callObjectMethod($class, $calling_args);$/;"	v
result	library\Zend\Rest\Server.php	/^                            $result = $this->_callStaticMethod($class, $calling_args);$/;"	v
result	library\Zend\Rest\Server.php	/^                            $result = $this->fault($e);$/;"	v
result	library\Zend\Rest\Server.php	/^                            $result = call_user_func_array($this->_functions[$this->_method]->getName(), $calling_args); \/\/$this->_functions[$this->_method]->invokeArgs($calling_args);$/;"	v
result	library\Zend\Rest\Server.php	/^                        $result = $this->fault(new Zend_Rest_Server_Exception('Invalid Method Call to ' . $this->_method . '. Missing argument(s): ' . implode(', ', $missing_args) . '.'), 400);$/;"	v
result	library\Zend\Rest\Server.php	/^                    $result = $this->fault($/;"	v
result	library\Zend\Rest\Server.php	/^                    $result = false;$/;"	v
result	library\Zend\Rest\Server.php	/^                $result = $this->fault($/;"	v
result	library\Zend\Rest\Server.php	/^            $result = $this->_functions[$this->_method]->invokeArgs($object, $args);$/;"	v
result	library\Zend\Rest\Server.php	/^            $result = $this->fault($/;"	v
result	library\Zend\Rest\Server.php	/^            $result = $this->fault($e);$/;"	v
result	library\Zend\Rest\Server.php	/^            $result = call_user_func_array(array($class, $this->_functions[$this->_method]->getName()), $args);$/;"	v
root	library\Zend\Rest\Server.php	/^            $root   = $dom->createElement($class);$/;"	v
root	library\Zend\Rest\Server.php	/^            $root   = $dom->createElement($method);$/;"	v
status	library\Zend\Rest\Server.php	/^            $status = $dom->createElement('status', 'success');$/;"	v
struct	library\Zend\Rest\Server.php	/^        $struct = (array) $struct;$/;"	v
value	library\Zend\Rest\Server.php	/^                $value = 0;$/;"	v
value	library\Zend\Rest\Server.php	/^                $value = 1;$/;"	v
value	library\Zend\Rest\Server.php	/^            $value = 0;$/;"	v
value	library\Zend\Rest\Server.php	/^            $value = 1;$/;"	v
xml	library\Zend\Rest\Server.php	/^            $xml       = $dom->createElement($class);$/;"	v
xml	library\Zend\Rest\Server.php	/^            $xml       = $dom->createElement($method);$/;"	v
xml	library\Zend\Rest\Server.php	/^            $xml = $dom->createElement($class);$/;"	v
xml	library\Zend\Rest\Server.php	/^            $xml = $dom->createElement($method);$/;"	v
xmlMethod	library\Zend\Rest\Server.php	/^            $xmlMethod = $dom->createElement($method);$/;"	v
xmlMethod	library\Zend\Rest\Server.php	/^            $xmlMethod = $xml;$/;"	v
xmlResponse	library\Zend\Rest\Server.php	/^        $xmlResponse = $dom->createElement('response');$/;"	v
Zend_Rest_Server_Exception	library\Zend\Rest\Server\Exception.php	/^class Zend_Rest_Server_Exception extends Zend_Rest_Exception$/;"	c
Zend_Search_Exception	library\Zend\Search\Exception.php	/^class Zend_Search_Exception extends Zend_Exception$/;"	c
Zend_Search_Lucene	library\Zend\Search\Lucene.php	/^class Zend_Search_Lucene implements Zend_Search_Lucene_Interface$/;"	c
argList	library\Zend\Search\Lucene.php	/^            $argList    = func_get_args();$/;"	v
bits	library\Zend\Search\Lucene.php	/^            $bits = $fdtFile->readByte();$/;"	v
delGen	library\Zend\Search\Lucene.php	/^            $delGen = $segmentsFile->readLong();$/;"	v
doc	library\Zend\Search\Lucene.php	/^        $doc = new Zend_Search_Lucene_Document();$/;"	v
docScore	library\Zend\Search\Lucene.php	/^            $docScore = $query->score($id, $this);$/;"	v
docStoreIsCompoundFile	library\Zend\Search\Lucene.php	/^                    $docStoreIsCompoundFile = $segmentsFile->readByte();$/;"	v
docStoreOffset	library\Zend\Search\Lucene.php	/^                $docStoreOffset = $segmentsFile->readInt();$/;"	v
docStoreOptions	library\Zend\Search\Lucene.php	/^                    $docStoreOptions = array('offset'     => $docStoreOffset,$/;"	v
docStoreOptions	library\Zend\Search\Lucene.php	/^                    $docStoreOptions = null;$/;"	v
docStoreOptions	library\Zend\Search\Lucene.php	/^                $docStoreOptions = null;$/;"	v
docStoreSegment	library\Zend\Search\Lucene.php	/^                    $docStoreSegment        = $segmentsFile->readString();$/;"	v
fdtFile	library\Zend\Search\Lucene.php	/^        $fdtFile = $segmentInfo->openCompoundFile('.fdt');$/;"	v
fdxFile	library\Zend\Search\Lucene.php	/^        $fdxFile = $segmentInfo->openCompoundFile('.fdx');$/;"	v
field	library\Zend\Search\Lucene.php	/^                $field = new Zend_Search_Lucene_Field($fieldInfo->name,$/;"	v
fieldCount	library\Zend\Search\Lucene.php	/^        $fieldCount = $fdtFile->readVInt();$/;"	v
fieldInfo	library\Zend\Search\Lucene.php	/^            $fieldInfo = $segmentInfo->getField($fieldNum);$/;"	v
fieldName	library\Zend\Search\Lucene.php	/^                $fieldName = $argList[$count];$/;"	v
fieldNames	library\Zend\Search\Lucene.php	/^            $fieldNames = $this->getFieldNames();$/;"	v
fieldNum	library\Zend\Search\Lucene.php	/^            $fieldNum = $fdtFile->readVInt();$/;"	v
fieldValuesPosition	library\Zend\Search\Lucene.php	/^        $fieldValuesPosition = $fdxFile->readLong();$/;"	v
format	library\Zend\Search\Lucene.php	/^                $format = $genFile->readInt();$/;"	v
format	library\Zend\Search\Lucene.php	/^        $format = $segmentsFile->readInt();$/;"	v
gen1	library\Zend\Search\Lucene.php	/^                $gen1 = $genFile->readLong();$/;"	v
gen2	library\Zend\Search\Lucene.php	/^                $gen2 = $genFile->readLong();$/;"	v
genFile	library\Zend\Search\Lucene.php	/^                $genFile = $directory->getFileObject('segments.gen', false);$/;"	v
hasSingleNormFile	library\Zend\Search\Lucene.php	/^            $hasSingleNormFile = $segmentsFile->readByte();$/;"	v
hit	library\Zend\Search\Lucene.php	/^                $hit = new Zend_Search_Lucene_Search_QueryHit($this);$/;"	v
hits	library\Zend\Search\Lucene.php	/^        $hits   = array();$/;"	v
id	library\Zend\Search\Lucene.php	/^            $id = $id->id;$/;"	v
ids	library\Zend\Search\Lucene.php	/^        $ids    = array();$/;"	v
isCompound	library\Zend\Search\Lucene.php	/^                $isCompound = false;$/;"	v
isCompound	library\Zend\Search\Lucene.php	/^                $isCompound = null;$/;"	v
isCompound	library\Zend\Search\Lucene.php	/^                $isCompound = true;$/;"	v
isCompoundByte	library\Zend\Search\Lucene.php	/^            $isCompoundByte     = $segmentsFile->readByte();$/;"	v
nameCounter	library\Zend\Search\Lucene.php	/^                $nameCounter = $segmentsFile->readInt();$/;"	v
nameCounter	library\Zend\Search\Lucene.php	/^                $nameCounter = 0;$/;"	v
normGens	library\Zend\Search\Lucene.php	/^            $normGens = array();$/;"	v
numDocs	library\Zend\Search\Lucene.php	/^        $numDocs = 0;$/;"	v
numField	library\Zend\Search\Lucene.php	/^            $numField          = $segmentsFile->readInt();$/;"	v
query	library\Zend\Search\Lucene.php	/^            $query = Zend_Search_Lucene_Search_QueryParser::parse($query);$/;"	v
query	library\Zend\Search\Lucene.php	/^        $query = $query->rewrite($this)->optimize($this);$/;"	v
result	library\Zend\Search\Lucene.php	/^            $result = array_merge($result, $segmentInfo->getFields($indexed));$/;"	v
result	library\Zend\Search\Lucene.php	/^            $result = call_user_func_array('array_merge', $subResults);$/;"	v
result	library\Zend\Search\Lucene.php	/^        $result = 0;$/;"	v
result	library\Zend\Search\Lucene.php	/^        $result = array();$/;"	v
result	library\Zend\Search\Lucene.php	/^        $result = new Zend_Search_Lucene_Index_DocsFilter();$/;"	v
scores	library\Zend\Search\Lucene.php	/^        $scores = array();$/;"	v
segName	library\Zend\Search\Lucene.php	/^            $segName = $segmentsFile->readString();$/;"	v
segSize	library\Zend\Search\Lucene.php	/^            $segSize = $segmentsFile->readInt();$/;"	v
segmentInfoQueue	library\Zend\Search\Lucene.php	/^        $segmentInfoQueue = new Zend_Search_Lucene_Index_TermsPriorityQueue();$/;"	v
segmentStartDocId	library\Zend\Search\Lucene.php	/^        $segmentStartDocId = 0;$/;"	v
segmentStartId	library\Zend\Search\Lucene.php	/^        $segmentStartId = 0;$/;"	v
segments	library\Zend\Search\Lucene.php	/^        $segments = $segmentsFile->readInt();$/;"	v
segmentsFile	library\Zend\Search\Lucene.php	/^                    $segmentsFile = $directory->getFileObject('segments', false);$/;"	v
segmentsFile	library\Zend\Search\Lucene.php	/^                $segmentsFile = $this->_directory->getFileObject(self::getSegmentFileName($this->_generation));$/;"	v
segmentsFile	library\Zend\Search\Lucene.php	/^        $segmentsFile = $this->_directory->getFileObject('segments');$/;"	v
segmentsFile	library\Zend\Search\Lucene.php	/^        $segmentsFile = $this->_directory->getFileObject(self::getSegmentFileName($this->_generation));$/;"	v
sortArgs	library\Zend\Search\Lucene.php	/^            $sortArgs   = array();$/;"	v
sortAsc	library\Zend\Search\Lucene.php	/^            $sortAsc    = SORT_ASC;$/;"	v
sortFieldValues	library\Zend\Search\Lucene.php	/^            $sortFieldValues = array();$/;"	v
sortNum	library\Zend\Search\Lucene.php	/^            $sortNum    = SORT_NUMERIC;$/;"	v
sortReg	library\Zend\Search\Lucene.php	/^            $sortReg    = SORT_REGULAR;$/;"	v
subResults	library\Zend\Search\Lucene.php	/^        $subResults = array();$/;"	v
termInfo	library\Zend\Search\Lucene.php	/^            $termInfo = $segInfo->getTermInfo($term);$/;"	v
topScore	library\Zend\Search\Lucene.php	/^                    $topScore = $docScore;$/;"	v
topScore	library\Zend\Search\Lucene.php	/^        $topScore = 0;$/;"	v
value	library\Zend\Search\Lucene.php	/^                                    $value = null;$/;"	v
value	library\Zend\Search\Lucene.php	/^                                $value = $hit->getDocument()->getFieldValue($fieldName);$/;"	v
valuesArray	library\Zend\Search\Lucene.php	/^                        $valuesArray = array();$/;"	v
tokenList	library\Zend\Search\Lucene\Analysis\Analyzer.php	/^        $tokenList = array();$/;"	v
ZEND_SEARCH_LUCENE_COMMON_ANALYZER_PROCESSED	library\Zend\Search\Lucene\Analysis\Analyzer\Common.php	/^define('ZEND_SEARCH_LUCENE_COMMON_ANALYZER_PROCESSED', true);$/;"	d
token	library\Zend\Search\Lucene\Analysis\Analyzer\Common.php	/^            $token = $filter->normalize($token);$/;"	v
Zend_Search_Lucene_Analysis_Analyzer_Common_Text	library\Zend\Search\Lucene\Analysis\Analyzer\Common\Text.php	/^class Zend_Search_Lucene_Analysis_Analyzer_Common_Text extends Zend_Search_Lucene_Analysis_Analyzer_Common$/;"	c
endpos	library\Zend\Search\Lucene\Analysis\Analyzer\Common\Text.php	/^            $endpos = $pos + strlen($str);$/;"	v
pos	library\Zend\Search\Lucene\Analysis\Analyzer\Common\Text.php	/^            $pos = $match[0][1];$/;"	v
str	library\Zend\Search\Lucene\Analysis\Analyzer\Common\Text.php	/^            $str = $match[0][0];$/;"	v
token	library\Zend\Search\Lucene\Analysis\Analyzer\Common\Text.php	/^            $token = $this->normalize(new Zend_Search_Lucene_Analysis_Token($str, $pos, $endpos));$/;"	v
Zend_Search_Lucene_Analysis_Analyzer_Common_TextNum	library\Zend\Search\Lucene\Analysis\Analyzer\Common\TextNum.php	/^class Zend_Search_Lucene_Analysis_Analyzer_Common_TextNum extends Zend_Search_Lucene_Analysis_Analyzer_Common$/;"	c
endpos	library\Zend\Search\Lucene\Analysis\Analyzer\Common\TextNum.php	/^            $endpos = $pos + strlen($str);$/;"	v
pos	library\Zend\Search\Lucene\Analysis\Analyzer\Common\TextNum.php	/^            $pos = $match[0][1];$/;"	v
str	library\Zend\Search\Lucene\Analysis\Analyzer\Common\TextNum.php	/^            $str = $match[0][0];$/;"	v
token	library\Zend\Search\Lucene\Analysis\Analyzer\Common\TextNum.php	/^            $token = $this->normalize(new Zend_Search_Lucene_Analysis_Token($str, $pos, $endpos));$/;"	v
Zend_Search_Lucene_Analysis_Analyzer_Common_TextNum_CaseInsensitive	library\Zend\Search\Lucene\Analysis\Analyzer\Common\TextNum\CaseInsensitive.php	/^class Zend_Search_Lucene_Analysis_Analyzer_Common_TextNum_CaseInsensitive extends Zend_Search_Lucene_Analysis_Analyzer_Common_TextNum$/;"	c
Zend_Search_Lucene_Analysis_Analyzer_Common_Text_CaseInsensitive	library\Zend\Search\Lucene\Analysis\Analyzer\Common\Text\CaseInsensitive.php	/^class Zend_Search_Lucene_Analysis_Analyzer_Common_Text_CaseInsensitive extends Zend_Search_Lucene_Analysis_Analyzer_Common_Text$/;"	c
Zend_Search_Lucene_Analysis_Analyzer_Common_Utf8	library\Zend\Search\Lucene\Analysis\Analyzer\Common\Utf8.php	/^class Zend_Search_Lucene_Analysis_Analyzer_Common_Utf8 extends Zend_Search_Lucene_Analysis_Analyzer_Common$/;"	c
binStartPos	library\Zend\Search\Lucene\Analysis\Analyzer\Common\Utf8.php	/^            $binStartPos = $match[0][1];$/;"	v
endPos	library\Zend\Search\Lucene\Analysis\Analyzer\Common\Utf8.php	/^            $endPos = $startPos + iconv_strlen($matchedWord, 'UTF-8');$/;"	v
matchedWord	library\Zend\Search\Lucene\Analysis\Analyzer\Common\Utf8.php	/^            $matchedWord = $match[0][0];$/;"	v
startPos	library\Zend\Search\Lucene\Analysis\Analyzer\Common\Utf8.php	/^            $startPos = $this->_position +$/;"	v
token	library\Zend\Search\Lucene\Analysis\Analyzer\Common\Utf8.php	/^            $token = $this->normalize(new Zend_Search_Lucene_Analysis_Token($matchedWord, $startPos, $endPos));$/;"	v
Zend_Search_Lucene_Analysis_Analyzer_Common_Utf8Num	library\Zend\Search\Lucene\Analysis\Analyzer\Common\Utf8Num.php	/^class Zend_Search_Lucene_Analysis_Analyzer_Common_Utf8Num extends Zend_Search_Lucene_Analysis_Analyzer_Common$/;"	c
binStartPos	library\Zend\Search\Lucene\Analysis\Analyzer\Common\Utf8Num.php	/^            $binStartPos = $match[0][1];$/;"	v
endPos	library\Zend\Search\Lucene\Analysis\Analyzer\Common\Utf8Num.php	/^            $endPos = $startPos + iconv_strlen($matchedWord, 'UTF-8');$/;"	v
matchedWord	library\Zend\Search\Lucene\Analysis\Analyzer\Common\Utf8Num.php	/^            $matchedWord = $match[0][0];$/;"	v
startPos	library\Zend\Search\Lucene\Analysis\Analyzer\Common\Utf8Num.php	/^            $startPos = $this->_position +$/;"	v
token	library\Zend\Search\Lucene\Analysis\Analyzer\Common\Utf8Num.php	/^            $token = $this->normalize(new Zend_Search_Lucene_Analysis_Token($matchedWord, $startPos, $endPos));$/;"	v
Zend_Search_Lucene_Analysis_Analyzer_Common_Utf8Num_CaseInsensitive	library\Zend\Search\Lucene\Analysis\Analyzer\Common\Utf8Num\CaseInsensitive.php	/^class Zend_Search_Lucene_Analysis_Analyzer_Common_Utf8Num_CaseInsensitive extends Zend_Search_Lucene_Analysis_Analyzer_Common_Utf8Num$/;"	c
Zend_Search_Lucene_Analysis_Analyzer_Common_Utf8_CaseInsensitive	library\Zend\Search\Lucene\Analysis\Analyzer\Common\Utf8\CaseInsensitive.php	/^class Zend_Search_Lucene_Analysis_Analyzer_Common_Utf8_CaseInsensitive extends Zend_Search_Lucene_Analysis_Analyzer_Common_Utf8$/;"	c
Zend_Search_Lucene_Analysis_Token	library\Zend\Search\Lucene\Analysis\Token.php	/^class Zend_Search_Lucene_Analysis_Token$/;"	c
Zend_Search_Lucene_Analysis_TokenFilter_LowerCase	library\Zend\Search\Lucene\Analysis\TokenFilter\LowerCase.php	/^class Zend_Search_Lucene_Analysis_TokenFilter_LowerCase extends Zend_Search_Lucene_Analysis_TokenFilter$/;"	c
newToken	library\Zend\Search\Lucene\Analysis\TokenFilter\LowerCase.php	/^        $newToken = new Zend_Search_Lucene_Analysis_Token($/;"	v
Zend_Search_Lucene_Analysis_TokenFilter_LowerCaseUtf8	library\Zend\Search\Lucene\Analysis\TokenFilter\LowerCaseUtf8.php	/^class Zend_Search_Lucene_Analysis_TokenFilter_LowerCaseUtf8 extends Zend_Search_Lucene_Analysis_TokenFilter$/;"	c
newToken	library\Zend\Search\Lucene\Analysis\TokenFilter\LowerCaseUtf8.php	/^        $newToken = new Zend_Search_Lucene_Analysis_Token($/;"	v
Zend_Search_Lucene_Analysis_TokenFilter_ShortWords	library\Zend\Search\Lucene\Analysis\TokenFilter\ShortWords.php	/^class Zend_Search_Lucene_Analysis_TokenFilter_ShortWords extends Zend_Search_Lucene_Analysis_TokenFilter$/;"	c
Zend_Search_Lucene_Analysis_TokenFilter_StopWords	library\Zend\Search\Lucene\Analysis\TokenFilter\StopWords.php	/^class Zend_Search_Lucene_Analysis_TokenFilter_StopWords extends Zend_Search_Lucene_Analysis_TokenFilter$/;"	c
buffer	library\Zend\Search\Lucene\Analysis\TokenFilter\StopWords.php	/^            $buffer = trim(fgets($fd));$/;"	v
fd	library\Zend\Search\Lucene\Analysis\TokenFilter\StopWords.php	/^        $fd = fopen($filepath, "r");$/;"	v
Zend_Search_Lucene_Document	library\Zend\Search\Lucene\Document.php	/^class Zend_Search_Lucene_Document$/;"	c
Zend_Search_Lucene_Document_Docx	library\Zend\Search\Lucene\Document\Docx.php	/^class Zend_Search_Lucene_Document_Docx extends Zend_Search_Lucene_Document_OpenXml {$/;"	c
contents	library\Zend\Search\Lucene\Document\Docx.php	/^                $contents = simplexml_load_string($package->getFromName($/;"	v
coreProperties	library\Zend\Search\Lucene\Document\Docx.php	/^        $coreProperties = $this->extractMetaData($package);$/;"	v
coreProperties	library\Zend\Search\Lucene\Document\Docx.php	/^        $coreProperties = array();$/;"	v
documentBody	library\Zend\Search\Lucene\Document\Docx.php	/^        $documentBody = array();$/;"	v
package	library\Zend\Search\Lucene\Document\Docx.php	/^        $package = new ZipArchive();$/;"	v
paragraphs	library\Zend\Search\Lucene\Document\Docx.php	/^                $paragraphs = $contents->xpath('\/\/w:body\/w:p');$/;"	v
relations	library\Zend\Search\Lucene\Document\Docx.php	/^        $relations = simplexml_load_string($relationsXml);$/;"	v
relationsXml	library\Zend\Search\Lucene\Document\Docx.php	/^        $relationsXml = $package->getFromName('_rels\/.rels');$/;"	v
runs	library\Zend\Search\Lucene\Document\Docx.php	/^                    $runs = $paragraph->xpath('.\/\/w:r\/*[name() = "w:t" or name() = "w:br"]');$/;"	v
Zend_Search_Lucene_Document_Exception	library\Zend\Search\Lucene\Document\Exception.php	/^class Zend_Search_Lucene_Document_Exception extends Zend_Search_Lucene_Exception$/;"	c
Zend_Search_Lucene_Document_Html	library\Zend\Search\Lucene\Document\Html.php	/^class Zend_Search_Lucene_Document_Html extends Zend_Search_Lucene_Document$/;"	c
analyzer	library\Zend\Search\Lucene\Document\Html.php	/^        $analyzer = Zend_Search_Lucene_Analysis_Analyzer::getDefault();$/;"	v
bodyNodes	library\Zend\Search\Lucene\Document\Html.php	/^        $bodyNodes = $xpath->query('\/html\/body')->item(0)->childNodes;$/;"	v
bodyNodes	library\Zend\Search\Lucene\Document\Html.php	/^        $bodyNodes = $xpath->query('\/html\/body');$/;"	v
docBody	library\Zend\Search\Lucene\Document\Html.php	/^        $docBody = '';$/;"	v
docTitle	library\Zend\Search\Lucene\Document\Html.php	/^        $docTitle = '';$/;"	v
fullCallbackparamsList	library\Zend\Search\Lucene\Document\Html.php	/^            $fullCallbackparamsList = $params;$/;"	v
head	library\Zend\Search\Lucene\Document\Html.php	/^                $head  = $xpath->query('\/html\/head')->item(0);$/;"	v
highlightedWordNodeSet	library\Zend\Search\Lucene\Document\Html.php	/^            $highlightedWordNodeSet      = $highlightedWordNodeSetXpath->query('\/html\/body')->item(0)->childNodes;$/;"	v
highlightedWordNodeSetDomDocument	library\Zend\Search\Lucene\Document\Html.php	/^            $highlightedWordNodeSetDomDocument = new DOMDocument('1.0', 'UTF-8');$/;"	v
highlightedWordNodeSetHtml	library\Zend\Search\Lucene\Document\Html.php	/^            $highlightedWordNodeSetHtml = call_user_func_array($callback, $fullCallbackparamsList);$/;"	v
highlightedWordNodeSetXpath	library\Zend\Search\Lucene\Document\Html.php	/^            $highlightedWordNodeSetXpath = new DOMXPath($highlightedWordNodeSetDomDocument);$/;"	v
htmlData	library\Zend\Search\Lucene\Document\Html.php	/^            $htmlData = $data;$/;"	v
htmlData	library\Zend\Search\Lucene\Document\Html.php	/^            $htmlData = file_get_contents($data);$/;"	v
htmlTagOffset	library\Zend\Search\Lucene\Document\Html.php	/^                $htmlTagOffset = $matches[0][1] + strlen($matches[0][0]);$/;"	v
linkNodes	library\Zend\Search\Lucene\Document\Html.php	/^        $linkNodes = $this->_doc->getElementsByTagName('a');$/;"	v
linkNodes	library\Zend\Search\Lucene\Document\Html.php	/^        $linkNodes = $this->_doc->getElementsByTagName('area');$/;"	v
linkNodes	library\Zend\Search\Lucene\Document\Html.php	/^        $linkNodes = $xpath->query('\/html\/head\/link');$/;"	v
matchedNodes	library\Zend\Search\Lucene\Document\Html.php	/^        $matchedNodes = $xpath->query("\/html\/body");$/;"	v
matchedTokens	library\Zend\Search\Lucene\Document\Html.php	/^        $matchedTokens = array();$/;"	v
matchedTokens	library\Zend\Search\Lucene\Document\Html.php	/^        $matchedTokens = array_reverse($matchedTokens);$/;"	v
matchedWordNode	library\Zend\Search\Lucene\Document\Html.php	/^            $matchedWordNode = $node->splitText($token->getStartOffset());$/;"	v
metaNodes	library\Zend\Search\Lucene\Document\Html.php	/^        $metaNodes = $xpath->query('\/html\/head\/meta[@name]');$/;"	v
nodeToImport	library\Zend\Search\Lucene\Document\Html.php	/^                $nodeToImport = $highlightedWordNodeSet->item($count);$/;"	v
outputFragments	library\Zend\Search\Lucene\Document\Html.php	/^        $outputFragments = array();$/;"	v
success	library\Zend\Search\Lucene\Document\Html.php	/^            $success = @$highlightedWordNodeSetDomDocument->$/;"	v
textNodes	library\Zend\Search\Lucene\Document\Html.php	/^        $textNodes = array();$/;"	v
titleNodes	library\Zend\Search\Lucene\Document\Html.php	/^        $titleNodes = $xpath->query('\/html\/head\/title');$/;"	v
words	library\Zend\Search\Lucene\Document\Html.php	/^            $words = array($words);$/;"	v
wordsToHighlight	library\Zend\Search\Lucene\Document\Html.php	/^        $wordsToHighlight = call_user_func_array('array_merge', $wordsToHighlightList);$/;"	v
wordsToHighlightFlipped	library\Zend\Search\Lucene\Document\Html.php	/^        $wordsToHighlightFlipped = array();$/;"	v
wordsToHighlightList	library\Zend\Search\Lucene\Document\Html.php	/^        $wordsToHighlightList = array();$/;"	v
xpath	library\Zend\Search\Lucene\Document\Html.php	/^                $xpath = new DOMXPath($this->_doc);$/;"	v
xpath	library\Zend\Search\Lucene\Document\Html.php	/^        $xpath = new DOMXPath($this->_doc);$/;"	v
absolutes	library\Zend\Search\Lucene\Document\OpenXml.php	/^        $absolutes = array();$/;"	v
contents	library\Zend\Search\Lucene\Document\OpenXml.php	/^                $contents = simplexml_load_string($/;"	v
coreProperties	library\Zend\Search\Lucene\Document\OpenXml.php	/^        $coreProperties = array();$/;"	v
parts	library\Zend\Search\Lucene\Document\OpenXml.php	/^        $parts = array_filter(explode(DIRECTORY_SEPARATOR, $path), 'strlen');$/;"	v
path	library\Zend\Search\Lucene\Document\OpenXml.php	/^        $path = str_replace(array('\/', '\\\\'), DIRECTORY_SEPARATOR, $path);$/;"	v
relations	library\Zend\Search\Lucene\Document\OpenXml.php	/^        $relations = simplexml_load_string($package->getFromName("_rels\/.rels"));$/;"	v
Zend_Search_Lucene_Document_Pptx	library\Zend\Search\Lucene\Document\Pptx.php	/^class Zend_Search_Lucene_Document_Pptx extends Zend_Search_Lucene_Document_OpenXml$/;"	c
coreProperties	library\Zend\Search\Lucene\Document\Pptx.php	/^        $coreProperties = $this->extractMetaData($package);$/;"	v
coreProperties	library\Zend\Search\Lucene\Document\Pptx.php	/^        $coreProperties = array();$/;"	v
documentBody	library\Zend\Search\Lucene\Document\Pptx.php	/^        $documentBody = array();$/;"	v
package	library\Zend\Search\Lucene\Document\Pptx.php	/^        $package = new ZipArchive();$/;"	v
relations	library\Zend\Search\Lucene\Document\Pptx.php	/^        $relations = simplexml_load_string($relationsXml);$/;"	v
relationsXml	library\Zend\Search\Lucene\Document\Pptx.php	/^        $relationsXml = $package->getFromName('_rels\/.rels');$/;"	v
slideNote	library\Zend\Search\Lucene\Document\Pptx.php	/^                $slideNote = $slideNotes[$slideKey];$/;"	v
slideNotes	library\Zend\Search\Lucene\Document\Pptx.php	/^        $slideNotes = array();$/;"	v
slideNotesRelations	library\Zend\Search\Lucene\Document\Pptx.php	/^                        $slideNotesRelations = simplexml_load_string($package->getFromName( $this->absoluteZipPath(dirname($rel["Target"]) . "\/" . dirname($slideRel["Target"]) . "\/_rels\/" . basename($slideRel["Target"]) . ".rels")) );$/;"	v
slideRelations	library\Zend\Search\Lucene\Document\Pptx.php	/^                $slideRelations = simplexml_load_string($package->getFromName( $this->absoluteZipPath(dirname($rel["Target"]) . "\/_rels\/" . basename($rel["Target"]) . ".rels")) );$/;"	v
slides	library\Zend\Search\Lucene\Document\Pptx.php	/^        $slides = array();$/;"	v
textElements	library\Zend\Search\Lucene\Document\Pptx.php	/^                $textElements = $slideNote->xpath('\/\/a:t');$/;"	v
textElements	library\Zend\Search\Lucene\Document\Pptx.php	/^            $textElements = $slide->xpath('\/\/a:t');$/;"	v
Zend_Search_Lucene_Document_Xlsx	library\Zend\Search\Lucene\Document\Xlsx.php	/^class Zend_Search_Lucene_Document_Xlsx extends Zend_Search_Lucene_Document_OpenXml$/;"	c
coreProperties	library\Zend\Search\Lucene\Document\Xlsx.php	/^        $coreProperties = $this->extractMetaData($package);$/;"	v
coreProperties	library\Zend\Search\Lucene\Document\Xlsx.php	/^        $coreProperties = array();$/;"	v
dataType	library\Zend\Search\Lucene\Document\Xlsx.php	/^                    $dataType = (string)$c["t"];$/;"	v
documentBody	library\Zend\Search\Lucene\Document\Xlsx.php	/^        $documentBody = array();$/;"	v
package	library\Zend\Search\Lucene\Document\Xlsx.php	/^        $package = new ZipArchive();$/;"	v
relations	library\Zend\Search\Lucene\Document\Xlsx.php	/^        $relations = simplexml_load_string($relationsXml);$/;"	v
relationsXml	library\Zend\Search\Lucene\Document\Xlsx.php	/^        $relationsXml = $package->getFromName('_rels\/.rels');$/;"	v
sharedStrings	library\Zend\Search\Lucene\Document\Xlsx.php	/^        $sharedStrings = array();$/;"	v
sharedStringsPath	library\Zend\Search\Lucene\Document\Xlsx.php	/^                $sharedStringsPath = $workbookRelations->xpath("rel:Relationship[@Type='" . Zend_Search_Lucene_Document_Xlsx::SCHEMA_SHAREDSTRINGS . "']");$/;"	v
sharedStringsPath	library\Zend\Search\Lucene\Document\Xlsx.php	/^                $sharedStringsPath = (string)$sharedStringsPath[0]['Target'];$/;"	v
value	library\Zend\Search\Lucene\Document\Xlsx.php	/^                                $value = $sharedStrings[intval($c->v)];$/;"	v
value	library\Zend\Search\Lucene\Document\Xlsx.php	/^                                $value = '';$/;"	v
value	library\Zend\Search\Lucene\Document\Xlsx.php	/^                                $value = (bool)$c->v;$/;"	v
value	library\Zend\Search\Lucene\Document\Xlsx.php	/^                                $value = (string)$c->v;$/;"	v
value	library\Zend\Search\Lucene\Document\Xlsx.php	/^                                $value = false;$/;"	v
value	library\Zend\Search\Lucene\Document\Xlsx.php	/^                                $value = true;$/;"	v
value	library\Zend\Search\Lucene\Document\Xlsx.php	/^                            $value = $this->_parseRichText($c->is);$/;"	v
value	library\Zend\Search\Lucene\Document\Xlsx.php	/^                            $value = (string)$c->v;$/;"	v
value	library\Zend\Search\Lucene\Document\Xlsx.php	/^        $value = array();$/;"	v
workbookRelations	library\Zend\Search\Lucene\Document\Xlsx.php	/^                $workbookRelations = simplexml_load_string($package->getFromName( $this->absoluteZipPath(dirname($rel["Target"]) . "\/_rels\/" . basename($rel["Target"]) . ".rels")) );$/;"	v
worksheets	library\Zend\Search\Lucene\Document\Xlsx.php	/^        $worksheets = array();$/;"	v
xmlStrings	library\Zend\Search\Lucene\Document\Xlsx.php	/^                $xmlStrings = simplexml_load_string($package->getFromName( $this->absoluteZipPath(dirname($rel["Target"]) . "\/" . $sharedStringsPath)) );$/;"	v
Zend_Search_Lucene_Exception	library\Zend\Search\Lucene\Exception.php	/^class Zend_Search_Lucene_Exception extends Zend_Search_Exception$/;"	c
sourceState	library\Zend\Search\Lucene\FSM.php	/^        $sourceState = $this->_currentState;$/;"	v
targetState	library\Zend\Search\Lucene\FSM.php	/^        $targetState = $this->_rules[$this->_currentState][$input];$/;"	v
Zend_Search_Lucene_FSMAction	library\Zend\Search\Lucene\FSMAction.php	/^class Zend_Search_Lucene_FSMAction$/;"	c
methodName	library\Zend\Search\Lucene\FSMAction.php	/^        $methodName = $this->_method;$/;"	v
Zend_Search_Lucene_Field	library\Zend\Search\Lucene\Field.php	/^class Zend_Search_Lucene_Field$/;"	c
Zend_Search_Lucene_Index_DictionaryLoader	library\Zend\Search\Lucene\Index\DictionaryLoader.php	/^class Zend_Search_Lucene_Index_DictionaryLoader$/;"	c
addBytes	library\Zend\Search\Lucene\Index\DictionaryLoader.php	/^                        $addBytes = 1;$/;"	v
charBytes	library\Zend\Search\Lucene\Index\DictionaryLoader.php	/^                $charBytes = 1;$/;"	v
docFreq	library\Zend\Search\Lucene\Index\DictionaryLoader.php	/^            $docFreq = $nbyte & 0x7F;$/;"	v
freqPointer	library\Zend\Search\Lucene\Index\DictionaryLoader.php	/^        $freqPointer  =  0;$/;"	v
indexPointer	library\Zend\Search\Lucene\Index\DictionaryLoader.php	/^        $indexPointer =  0;$/;"	v
indexTermCount	library\Zend\Search\Lucene\Index\DictionaryLoader.php	/^            $indexTermCount = ord($data[$pos+4]) << 24  |$/;"	v
indexTermCount	library\Zend\Search\Lucene\Index\DictionaryLoader.php	/^            $indexTermCount = ord($data[$pos]) << 56  |$/;"	v
len	library\Zend\Search\Lucene\Index\DictionaryLoader.php	/^            $len = $nbyte & 0x7F;$/;"	v
nbyte	library\Zend\Search\Lucene\Index\DictionaryLoader.php	/^                    $nbyte = ord($data[$pos++]);$/;"	v
nbyte	library\Zend\Search\Lucene\Index\DictionaryLoader.php	/^                $nbyte = ord($data[$pos++]);$/;"	v
nbyte	library\Zend\Search\Lucene\Index\DictionaryLoader.php	/^            $nbyte = ord($data[$pos++]);$/;"	v
pb	library\Zend\Search\Lucene\Index\DictionaryLoader.php	/^            $pb = 0; $pc = 0;$/;"	v
pos	library\Zend\Search\Lucene\Index\DictionaryLoader.php	/^        $pos = 0;$/;"	v
prevTerm	library\Zend\Search\Lucene\Index\DictionaryLoader.php	/^            $prevTerm = $termValue;$/;"	v
prevTerm	library\Zend\Search\Lucene\Index\DictionaryLoader.php	/^        $prevTerm     = '';$/;"	v
proxPointer	library\Zend\Search\Lucene\Index\DictionaryLoader.php	/^        $proxPointer  =  0;$/;"	v
skipDelta	library\Zend\Search\Lucene\Index\DictionaryLoader.php	/^                $skipDelta = $vint;$/;"	v
skipDelta	library\Zend\Search\Lucene\Index\DictionaryLoader.php	/^                $skipDelta = 0;$/;"	v
skipInterval	library\Zend\Search\Lucene\Index\DictionaryLoader.php	/^        $skipInterval = ord($data[$pos]) << 24 | ord($data[$pos+1]) << 16 | ord($data[$pos+2]) << 8  | ord($data[$pos+3]);$/;"	v
termDictionary	library\Zend\Search\Lucene\Index\DictionaryLoader.php	/^        $termDictionary = array();$/;"	v
termFieldNum	library\Zend\Search\Lucene\Index\DictionaryLoader.php	/^            $termFieldNum = $nbyte & 0x7F;$/;"	v
termInfos	library\Zend\Search\Lucene\Index\DictionaryLoader.php	/^        $termInfos      = array();$/;"	v
termPrefixLength	library\Zend\Search\Lucene\Index\DictionaryLoader.php	/^            $termPrefixLength = $nbyte & 0x7F;$/;"	v
termSuffix	library\Zend\Search\Lucene\Index\DictionaryLoader.php	/^                            $termSuffix = substr($termSuffix,0,$count1+1)$/;"	v
termSuffix	library\Zend\Search\Lucene\Index\DictionaryLoader.php	/^                $termSuffix = '';$/;"	v
termSuffix	library\Zend\Search\Lucene\Index\DictionaryLoader.php	/^                $termSuffix = substr($data, $pos, $len);$/;"	v
termValue	library\Zend\Search\Lucene\Index\DictionaryLoader.php	/^            $termValue = substr($prevTerm, 0, $pb) . $termSuffix;$/;"	v
tiVersion	library\Zend\Search\Lucene\Index\DictionaryLoader.php	/^        $tiVersion = ord($data[0]) << 24 | ord($data[1]) << 16 | ord($data[2]) << 8  | ord($data[3]);$/;"	v
vint	library\Zend\Search\Lucene\Index\DictionaryLoader.php	/^                $vint = $nbyte & 0x7F;$/;"	v
vint	library\Zend\Search\Lucene\Index\DictionaryLoader.php	/^            $vint = $nbyte & 0x7F;$/;"	v
Zend_Search_Lucene_Index_DocsFilter	library\Zend\Search\Lucene\Index\DocsFilter.php	/^class Zend_Search_Lucene_Index_DocsFilter$/;"	c
Zend_Search_Lucene_Index_FieldInfo	library\Zend\Search\Lucene\Index\FieldInfo.php	/^class Zend_Search_Lucene_Index_FieldInfo$/;"	c
Zend_Search_Lucene_Index_SegmentInfo	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^class Zend_Search_Lucene_Index_SegmentInfo implements Zend_Search_Lucene_Index_TermsStream_Interface$/;"	c
a	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                $a = $this->_termDictionaryInfos[$mid];$/;"	v
argList	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $argList = func_get_args();$/;"	v
bitCount	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $bitCount  = $delFile->readInt();$/;"	v
bitCount	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $bitCount = count($this->_deleted);$/;"	v
bitCount	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $bitCount = count(bitset_to_array($delBytes));$/;"	v
byte	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                    $byte = ord($delBytes[$count]);$/;"	v
byte	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                $byte = 0;$/;"	v
byteCount	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $byteCount = $delFile->readInt();$/;"	v
byteCount	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $byteCount = ceil($byteCount\/8);$/;"	v
byteCount	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $byteCount = ceil($format\/8);$/;"	v
byteCount	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $byteCount = floor($this->_docCount\/8)+1;$/;"	v
byteNum	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $byteNum = 0;$/;"	v
cfsFile	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $cfsFile = $this->_directory->getFileObject($name . '.cfs');$/;"	v
cfxFile	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                $cfxFile       = $this->_directory->getFileObject($docStoreOptions['segment'] . '.cfx');$/;"	v
cfxFile	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $cfxFile = $this->_directory->getFileObject($this->_sharedDocStoreOptions['segment'] . '.cfx', $shareHandler);$/;"	v
cfxFileSizes	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                $cfxFileSizes = array();$/;"	v
cfxFiles	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                $cfxFiles     = array();$/;"	v
cfxFilesCount	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                $cfxFilesCount = $cfxFile->readVInt();$/;"	v
dataOffset	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                    $dataOffset = $cfxFile->readLong();$/;"	v
dataOffset	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                $dataOffset = $cfsFile->readLong();$/;"	v
delBytes	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                $delBytes = $delFile->readBytes($byteCount);$/;"	v
delBytes	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                $delBytes = '';$/;"	v
delBytes	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $delBytes = $this->_deleted;$/;"	v
delBytes	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $delBytes = str_repeat(chr(0), $byteCount);$/;"	v
delFile	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $delFile = $this->_directory->getFileObject($this->_name . '.del');$/;"	v
delFile	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $delFile = $this->_directory->createFile($this->_name . '_' . base_convert($this->_delGen, 10, 36) . '.del');$/;"	v
delFile	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $delFile = $this->_directory->getFileObject($this->_name . '_' . base_convert($this->_delGen, 10, 36) . '.del');$/;"	v
delFileList	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $delFileList = array();$/;"	v
delFileSize	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $delFileSize = $this->_directory->fileLength($this->_name . '_' . base_convert($this->_delGen, 10, 36) . '.del');$/;"	v
deletions	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                $deletions = array();$/;"	v
deletions	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                $deletions = bitset_empty();$/;"	v
delta	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                $delta = strcmp($prefix->text, $midTerm[1] \/* text *\/);$/;"	v
delta	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                $delta = strcmp($term->text, $midTerm[1] \/* text *\/);$/;"	v
delta	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $delta = $searchDicField - $fieldNum;$/;"	v
dgap	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                $dgap = $delFile->readVInt();$/;"	v
docDelta	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                        $docDelta = $frqFile->readVInt();$/;"	v
docDelta	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                    $docDelta = $frqFile->readVInt();$/;"	v
docDelta	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                    $docDelta = $this->_frqFile->readVInt();$/;"	v
docDelta	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                $docDelta = $frqFile->readVInt();$/;"	v
docDelta	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                $docDelta = $this->_frqFile->readVInt();$/;"	v
docFreq	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $docFreq      = $tisFile->readVInt();$/;"	v
docFreq	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $docFreq     = $this->_tisFile->readVInt();$/;"	v
docId	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $docId  = 0;$/;"	v
docId	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $docId = 0;$/;"	v
fFile	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $fFile = $this->openCompoundFile('.f' . $fieldNum);$/;"	v
fdtFName	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $fdtFName = $this->_sharedDocStoreOptions['segment'] . '.fdt';$/;"	v
fdtFile	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                    $fdtFile = $this->_directory->getFileObject($fdtFName, $shareHandler);$/;"	v
fdtStartOffset	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                    $fdtStartOffset = $fdxFile->readLong();$/;"	v
fdtStartOffset	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                $fdtStartOffset = $cfxFile->readLong();$/;"	v
fdxFName	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $fdxFName = $this->_sharedDocStoreOptions['segment'] . '.fdx';$/;"	v
fdxFile	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                $fdxFile = $this->_directory->getFileObject($fdxFName, $shareHandler);$/;"	v
fieldBits	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $fieldBits = $fnmFile->readByte();$/;"	v
fieldName	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $fieldName = $fnmFile->readString();$/;"	v
fieldNames	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $fieldNames = array();$/;"	v
fieldNum	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $fieldNum = $this->_getFieldPosition($midTerm[0] \/* field *\/);$/;"	v
fieldNum	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $fieldNum = $this->getFieldNum($fieldName);$/;"	v
fieldNums	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $fieldNums  = array();$/;"	v
fieldsCount	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $fieldsCount = $fnmFile->readVInt();$/;"	v
file	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $file = $this->_directory->getFileObject($this->_name . '.cfs', $shareHandler);$/;"	v
fileName	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                    $fileName            = $cfxFile->readString();$/;"	v
fileName	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                $fileName = $cfsFile->readString();$/;"	v
filename	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $filename = $this->_sharedDocStoreOptions['segment'] . $extension;$/;"	v
filename	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $filename = $this->_name . $extension;$/;"	v
filter	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                $filter = &$docsFilter->segmentFilters[$this->_name];$/;"	v
filterData	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                $filterData = array();$/;"	v
fnmFile	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $fnmFile = $this->openCompoundFile('.fnm');$/;"	v
format	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $format = $delFile->readInt();$/;"	v
freq	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                            $freq = $frqFile->readVInt();$/;"	v
freqPointer	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $freqPointer = $prevTermInfo[1] \/* freqPointer *\/;$/;"	v
freqPointer	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $freqPointer = $this->_lastTermInfo->freqPointer + $this->_tisFile->readVInt();$/;"	v
freqs	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                $freqs = array();   $docId = 0;$/;"	v
freqs	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $freqs = array();   $docId = 0;$/;"	v
freqs	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $freqs = array();$/;"	v
frqFile	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $frqFile = $this->openCompoundFile('.frq');$/;"	v
header	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $header              = $normfFile->readBytes(3);$/;"	v
headerFormatVersion	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $headerFormatVersion = $normfFile->readByte();$/;"	v
highIndex	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                $highIndex = $mid-1;$/;"	v
highIndex	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $highIndex = count($this->_termDictionary)-1;$/;"	v
indexInterval	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $indexInterval = $tisFile->readInt();$/;"	v
latestDelGen	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $latestDelGen = $this->_detectLatestDelGen();$/;"	v
latestDelete	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $latestDelete = $this->_loadDelFile();$/;"	v
lowIndex	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                $lowIndex  = $mid+1;$/;"	v
lowIndex	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $lowIndex = 0;$/;"	v
maxSkipLevels	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $maxSkipLevels = $this->_tisFile->readInt();$/;"	v
maxSkipLevels	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $maxSkipLevels = $tisFile->readInt();$/;"	v
mid	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $mid = ($highIndex + $lowIndex) >> 1;$/;"	v
midTerm	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $midTerm = $this->_termDictionary[$mid];$/;"	v
mode	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $mode    = $argList[1];$/;"	v
mode	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $mode    = self::SM_TERMS_ONLY;$/;"	v
nextSegmentStartId	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $nextSegmentStartId = $startId + (($mode == self::SM_MERGE_INFO) ? count($this->_docMap) : $this->_docCount);$/;"	v
nonZeroByte	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                $nonZeroByte = $delFile->readByte();$/;"	v
normfFile	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $normfFile = $this->openCompoundFile('.nrm');$/;"	v
positions	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                        $positions = array();$/;"	v
positions	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                    $positions = array();$/;"	v
positions	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                $positions = array();$/;"	v
prevPosition	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $prevPosition = $highIndex;$/;"	v
prevTerm	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $prevTerm = $this->_termDictionary[$prevPosition];$/;"	v
prevTermInfo	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $prevTermInfo = $this->_termDictionaryInfos[$prevPosition];$/;"	v
proxPointer	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $proxPointer = $prevTermInfo[2] \/* proxPointer *\/;$/;"	v
proxPointer	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $proxPointer = $this->_lastTermInfo->proxPointer + $this->_tisFile->readVInt();$/;"	v
prxFile	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                    $prxFile = $this->openCompoundFile('.prx');$/;"	v
prxFile	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                $prxFile = $this->openCompoundFile('.prx');$/;"	v
prxFile	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $prxFile = $this->openCompoundFile('.prx');$/;"	v
result	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                    $result = array();$/;"	v
result	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                $result = array();$/;"	v
result	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $result = array();$/;"	v
result	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $result = array();$/;"	v
searchDicField	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $searchDicField = $this->_getFieldPosition($searchField);$/;"	v
searchField	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $searchField = $this->getFieldNum($prefix->field);$/;"	v
searchField	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $searchField = $this->getFieldNum($term->field);$/;"	v
segFilesCount	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $segFilesCount = $cfsFile->readVInt();$/;"	v
similarity	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $similarity = Zend_Search_Lucene_Search_Similarity::getDefault();$/;"	v
skipInterval	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $skipInterval  = $tisFile->readInt();$/;"	v
skipOffset	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                $skipOffset = $tisFile->readVInt();$/;"	v
skipOffset	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                $skipOffset = 0;$/;"	v
skipOffset	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $skipOffset = $this->_tisFile->readVInt();$/;"	v
skipOffset	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $skipOffset = 0;$/;"	v
startId	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $startId = $argList[0];$/;"	v
startId	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $startId = 0;$/;"	v
stiFile	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $stiFile = $this->_directory->getFileObject($this->_name . '.sti');$/;"	v
stiFile	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $stiFile = $this->_directory->createFile($this->_name . '.sti');$/;"	v
stiFileData	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $stiFileData = $stiFile->readBytes($this->_directory->fileLength($this->_name . '.sti'));$/;"	v
stiFileData	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $stiFileData = serialize(array($this->_termDictionary, $this->_termDictionaryInfos));$/;"	v
termCount	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $termCount     = $tisFile->readLong();$/;"	v
termFieldNum	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $termFieldNum     = $tisFile->readVInt();$/;"	v
termFieldNum	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $termFieldNum     = $this->_tisFile->readVInt();$/;"	v
termFieldNum	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $termFieldNum = $prevTerm[0] \/* field *\/;$/;"	v
termInfo	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                $termInfo = new Zend_Search_Lucene_Index_TermInfo($a[0], $a[1], $a[2], $a[3], $a[4]);$/;"	v
termInfo	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $termInfo = $this->_termInfoCache[$termKey];$/;"	v
termInfo	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $termInfo = new Zend_Search_Lucene_Index_TermInfo($docFreq, $freqPointer, $proxPointer, $skipOffset);$/;"	v
termInfo	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $termInfo = null;$/;"	v
termInfo	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $termInfo = $this->getTermInfo($term);$/;"	v
termKey	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $termKey = $term->key();$/;"	v
termPosition	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                        $termPosition = 0;$/;"	v
termPosition	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                    $termPosition = 0;  $positions = array();$/;"	v
termPosition	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                    $termPosition = 0;$/;"	v
termPosition	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                $termPosition = 0;  $positions = array();$/;"	v
termPosition	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                $termPosition = 0;$/;"	v
termPrefixLength	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $termPrefixLength = $tisFile->readVInt();$/;"	v
termPrefixLength	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $termPrefixLength = $this->_tisFile->readVInt();$/;"	v
termSuffix	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $termSuffix       = $tisFile->readString();$/;"	v
termSuffix	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $termSuffix       = $this->_tisFile->readString();$/;"	v
termValue	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^            $termValue        = Zend_Search_Lucene_Index_Term::getPrefix($termValue, $termPrefixLength) . $termSuffix;$/;"	v
termValue	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $termValue        = Zend_Search_Lucene_Index_Term::getPrefix($this->_lastTerm->text, $termPrefixLength) . $termSuffix;$/;"	v
termValue	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $termValue    = $prevTerm[1] \/* text *\/;$/;"	v
tiVersion	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $tiVersion = $this->_tisFile->readInt();$/;"	v
tiVersion	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $tiVersion = $tisFile->readInt();$/;"	v
tiiFile	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $tiiFile = $this->openCompoundFile('.tii');$/;"	v
tiiFileData	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $tiiFileData = $tiiFile->readBytes($this->compoundFileLength('.tii'));$/;"	v
tisFile	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^        $tisFile = $this->openCompoundFile('.tis');$/;"	v
updatedFilterData	library\Zend\Search\Lucene\Index\SegmentInfo.php	/^                    $updatedFilterData = array();$/;"	v
Zend_Search_Lucene_Index_SegmentMerger	library\Zend\Search\Lucene\Index\SegmentMerger.php	/^class Zend_Search_Lucene_Index_SegmentMerger$/;"	c
bits	library\Zend\Search\Lucene\Index\SegmentMerger.php	/^                    $bits = $fdtFile->readByte();$/;"	v
docs	library\Zend\Search\Lucene\Index\SegmentMerger.php	/^                        $docs    = $segmentInfo->count();$/;"	v
fdtFile	library\Zend\Search\Lucene\Index\SegmentMerger.php	/^            $fdtFile = $segmentInfo->openCompoundFile('.fdt');$/;"	v
fieldCount	library\Zend\Search\Lucene\Index\SegmentMerger.php	/^                $fieldCount = $fdtFile->readVInt();$/;"	v
fieldInfo	library\Zend\Search\Lucene\Index\SegmentMerger.php	/^                    $fieldInfo = $segmentInfo->getField($fieldNum);$/;"	v
fieldNum	library\Zend\Search\Lucene\Index\SegmentMerger.php	/^                    $fieldNum = $fdtFile->readVInt();$/;"	v
norm	library\Zend\Search\Lucene\Index\SegmentMerger.php	/^                        $norm    = '';$/;"	v
segmentInfoQueue	library\Zend\Search\Lucene\Index\SegmentMerger.php	/^        $segmentInfoQueue = new Zend_Search_Lucene_Index_TermsPriorityQueue();$/;"	v
segmentStartId	library\Zend\Search\Lucene\Index\SegmentMerger.php	/^            $segmentStartId = $segmentInfo->resetTermsStream($segmentStartId, Zend_Search_Lucene_Index_SegmentInfo::SM_MERGE_INFO);$/;"	v
segmentStartId	library\Zend\Search\Lucene\Index\SegmentMerger.php	/^        $segmentStartId = 0;$/;"	v
srcNorm	library\Zend\Search\Lucene\Index\SegmentMerger.php	/^                        $srcNorm = $segmentInfo->normVector($fieldInfo->name);$/;"	v
storedFields	library\Zend\Search\Lucene\Index\SegmentMerger.php	/^                $storedFields = array();$/;"	v
termDocs	library\Zend\Search\Lucene\Index\SegmentMerger.php	/^                $termDocs = array();$/;"	v
termDocs	library\Zend\Search\Lucene\Index\SegmentMerger.php	/^        $termDocs = array();$/;"	v
byteCount	library\Zend\Search\Lucene\Index\SegmentWriter.php	/^            $byteCount = $this->_directory->fileLength($fileName);$/;"	v
cfsFile	library\Zend\Search\Lucene\Index\SegmentWriter.php	/^        $cfsFile = $this->_directory->createFile($this->_name . '.cfs');$/;"	v
charBytes	library\Zend\Search\Lucene\Index\SegmentWriter.php	/^                $charBytes = 1;$/;"	v
data	library\Zend\Search\Lucene\Index\SegmentWriter.php	/^                $data = $dataFile->readBytes(min($byteCount, 131072 \/*128Kb*\/));$/;"	v
dataFile	library\Zend\Search\Lucene\Index\SegmentWriter.php	/^            $dataFile = $this->_directory->getFileObject($fileName);$/;"	v
dataOffset	library\Zend\Search\Lucene\Index\SegmentWriter.php	/^            $dataOffset = $cfsFile->tell();$/;"	v
dataOffsetPointers	library\Zend\Search\Lucene\Index\SegmentWriter.php	/^        $dataOffsetPointers = array();$/;"	v
docDelta	library\Zend\Search\Lucene\Index\SegmentWriter.php	/^            $docDelta = ($docId - $prevDoc)*2;$/;"	v
fieldBits	library\Zend\Search\Lucene\Index\SegmentWriter.php	/^            $fieldBits = ($field->isTokenized ? 0x01 : 0x00) |$/;"	v
fieldNumber	library\Zend\Search\Lucene\Index\SegmentWriter.php	/^            $fieldNumber = count($this->_fields);$/;"	v
fnmFile	library\Zend\Search\Lucene\Index\SegmentWriter.php	/^        $fnmFile = $this->_directory->createFile($this->_name . '.fnm');$/;"	v
freqPointer	library\Zend\Search\Lucene\Index\SegmentWriter.php	/^        $freqPointer = $this->_frqFile->tell();$/;"	v
indexPosition	library\Zend\Search\Lucene\Index\SegmentWriter.php	/^            $indexPosition = $this->_tisFile->tell();$/;"	v
matchedBytes	library\Zend\Search\Lucene\Index\SegmentWriter.php	/^            $matchedBytes = 0;$/;"	v
maxBytes	library\Zend\Search\Lucene\Index\SegmentWriter.php	/^            $maxBytes = min(strlen($prevTerm->text), strlen($term->text));$/;"	v
nrmFile	library\Zend\Search\Lucene\Index\SegmentWriter.php	/^        $nrmFile = $this->_directory->createFile($this->_name . '.nrm');$/;"	v
prefixBytes	library\Zend\Search\Lucene\Index\SegmentWriter.php	/^            $prefixBytes = 0;$/;"	v
prefixChars	library\Zend\Search\Lucene\Index\SegmentWriter.php	/^            $prefixChars = 0;$/;"	v
prevDoc	library\Zend\Search\Lucene\Index\SegmentWriter.php	/^            $prevDoc = $docId;$/;"	v
prevDoc	library\Zend\Search\Lucene\Index\SegmentWriter.php	/^        $prevDoc = 0;$/;"	v
prevPosition	library\Zend\Search\Lucene\Index\SegmentWriter.php	/^                $prevPosition = $position;$/;"	v
prevPosition	library\Zend\Search\Lucene\Index\SegmentWriter.php	/^            $prevPosition = 0;$/;"	v
prevTerm	library\Zend\Search\Lucene\Index\SegmentWriter.php	/^        $prevTerm = $term;$/;"	v
prevTermInfo	library\Zend\Search\Lucene\Index\SegmentWriter.php	/^        $prevTermInfo = $termInfo;$/;"	v
proxPointer	library\Zend\Search\Lucene\Index\SegmentWriter.php	/^        $proxPointer = $this->_prxFile->tell();$/;"	v
skipOffset	library\Zend\Search\Lucene\Index\SegmentWriter.php	/^            $skipOffset = $this->_frqFile->tell() - $freqPointer;$/;"	v
skipOffset	library\Zend\Search\Lucene\Index\SegmentWriter.php	/^            $skipOffset = 0;$/;"	v
term	library\Zend\Search\Lucene\Index\SegmentWriter.php	/^        $term = new Zend_Search_Lucene_Index_Term($termEntry->text,$/;"	v
termInfo	library\Zend\Search\Lucene\Index\SegmentWriter.php	/^        $termInfo = new Zend_Search_Lucene_Index_TermInfo(count($termDocs),$/;"	v
Zend_Search_Lucene_Index_SegmentWriter_DocumentWriter	library\Zend\Search\Lucene\Index\SegmentWriter\DocumentWriter.php	/^class Zend_Search_Lucene_Index_SegmentWriter_DocumentWriter extends Zend_Search_Lucene_Index_SegmentWriter$/;"	c
analyzer	library\Zend\Search\Lucene\Index\SegmentWriter\DocumentWriter.php	/^                    $analyzer = Zend_Search_Lucene_Analysis_Analyzer::getDefault();$/;"	v
docNorms	library\Zend\Search\Lucene\Index\SegmentWriter\DocumentWriter.php	/^        $docNorms     = array();$/;"	v
field	library\Zend\Search\Lucene\Index\SegmentWriter\DocumentWriter.php	/^                        $field = clone($field);$/;"	v
field	library\Zend\Search\Lucene\Index\SegmentWriter\DocumentWriter.php	/^                    $field = clone($field);$/;"	v
field	library\Zend\Search\Lucene\Index\SegmentWriter\DocumentWriter.php	/^            $field = $document->getField($fieldName);$/;"	v
position	library\Zend\Search\Lucene\Index\SegmentWriter\DocumentWriter.php	/^                    $position     = 0;$/;"	v
similarity	library\Zend\Search\Lucene\Index\SegmentWriter\DocumentWriter.php	/^        $similarity   = Zend_Search_Lucene_Search_Similarity::getDefault();$/;"	v
storedFields	library\Zend\Search\Lucene\Index\SegmentWriter\DocumentWriter.php	/^        $storedFields = array();$/;"	v
term	library\Zend\Search\Lucene\Index\SegmentWriter\DocumentWriter.php	/^                        $term = new Zend_Search_Lucene_Index_Term($token->getTermText(), $field->name);$/;"	v
term	library\Zend\Search\Lucene\Index\SegmentWriter\DocumentWriter.php	/^                    $term = new Zend_Search_Lucene_Index_Term($fieldUtf8Value, $field->name);$/;"	v
termKey	library\Zend\Search\Lucene\Index\SegmentWriter\DocumentWriter.php	/^                        $termKey = $term->key();$/;"	v
termKey	library\Zend\Search\Lucene\Index\SegmentWriter\DocumentWriter.php	/^                    $termKey = $term->key();$/;"	v
tokenCounter	library\Zend\Search\Lucene\Index\SegmentWriter\DocumentWriter.php	/^                    $tokenCounter = 0;$/;"	v
Zend_Search_Lucene_Index_SegmentWriter_StreamWriter	library\Zend\Search\Lucene\Index\SegmentWriter\StreamWriter.php	/^class Zend_Search_Lucene_Index_SegmentWriter_StreamWriter extends Zend_Search_Lucene_Index_SegmentWriter$/;"	c
Zend_Search_Lucene_Index_Term	library\Zend\Search\Lucene\Index\Term.php	/^class Zend_Search_Lucene_Index_Term$/;"	c
bytes	library\Zend\Search\Lucene\Index\Term.php	/^        $bytes = 0;$/;"	v
charBytes	library\Zend\Search\Lucene\Index\Term.php	/^            $charBytes = 1;$/;"	v
chars	library\Zend\Search\Lucene\Index\Term.php	/^        $chars = 0;$/;"	v
prefixBytes	library\Zend\Search\Lucene\Index\Term.php	/^        $prefixBytes = 0;$/;"	v
prefixChars	library\Zend\Search\Lucene\Index\Term.php	/^        $prefixChars = 0;$/;"	v
Zend_Search_Lucene_Index_TermInfo	library\Zend\Search\Lucene\Index\TermInfo.php	/^class Zend_Search_Lucene_Index_TermInfo$/;"	c
Zend_Search_Lucene_Index_TermsPriorityQueue	library\Zend\Search\Lucene\Index\TermsPriorityQueue.php	/^class Zend_Search_Lucene_Index_TermsPriorityQueue extends Zend_Search_Lucene_PriorityQueue$/;"	c
Zend_Search_Lucene_Index_Writer	library\Zend\Search\Lucene\Index\Writer.php	/^class Zend_Search_Lucene_Index_Writer$/;"	c
delFiles	library\Zend\Search\Lucene\Index\Writer.php	/^            $delFiles = array();$/;"	v
delGen	library\Zend\Search\Lucene\Index\Writer.php	/^                        $delGen = $this->_segmentInfos[$segName]->getDelGen();$/;"	v
delGen	library\Zend\Search\Lucene\Index\Writer.php	/^                    $delGen            = 0;$/;"	v
delGen	library\Zend\Search\Lucene\Index\Writer.php	/^                    $delGen = $segmentsFile->readLong();$/;"	v
delGeneration	library\Zend\Search\Lucene\Index\Writer.php	/^                        $delGeneration = (int)base_convert($matches[4], 36, 10);$/;"	v
deletableFile	library\Zend\Search\Lucene\Index\Writer.php	/^            $deletableFile = $directory->createFile('deletable');$/;"	v
docStoreIsCompoundFile	library\Zend\Search\Lucene\Index\Writer.php	/^                            $docStoreIsCompoundFile = $segmentsFile->readByte();$/;"	v
docStoreOffset	library\Zend\Search\Lucene\Index\Writer.php	/^                        $docStoreOffset = $segmentsFile->readInt();$/;"	v
docStoreOptions	library\Zend\Search\Lucene\Index\Writer.php	/^                            $docStoreOptions = array('offset'     => $docStoreOffset,$/;"	v
docStoreOptions	library\Zend\Search\Lucene\Index\Writer.php	/^                            $docStoreOptions = null;$/;"	v
docStoreOptions	library\Zend\Search\Lucene\Index\Writer.php	/^                        $docStoreOptions = null;$/;"	v
docStoreOptions	library\Zend\Search\Lucene\Index\Writer.php	/^                    $docStoreOptions   = null;$/;"	v
docStoreSegment	library\Zend\Search\Lucene\Index\Writer.php	/^                            $docStoreSegment        = $segmentsFile->readString();$/;"	v
file	library\Zend\Search\Lucene\Index\Writer.php	/^                    $file == 'segments'  ||$/;"	v
filesNumbers	library\Zend\Search\Lucene\Index\Writer.php	/^            $filesNumbers  = array();$/;"	v
filesToDelete	library\Zend\Search\Lucene\Index\Writer.php	/^            $filesToDelete = array();$/;"	v
filesTypes	library\Zend\Search\Lucene\Index\Writer.php	/^            $filesTypes    = array();$/;"	v
format	library\Zend\Search\Lucene\Index\Writer.php	/^            $format = $segmentsFile->readInt();$/;"	v
genFile	library\Zend\Search\Lucene\Index\Writer.php	/^                $genFile = $this->_directory->createFile('segments.gen');$/;"	v
genFile	library\Zend\Search\Lucene\Index\Writer.php	/^            $genFile = $directory->createFile('segments.gen');$/;"	v
genFile	library\Zend\Search\Lucene\Index\Writer.php	/^            $genFile = $this->_directory->getFileObject('segments.gen', false);$/;"	v
generation	library\Zend\Search\Lucene\Index\Writer.php	/^        $generation = Zend_Search_Lucene::getActualGeneration($this->_directory);$/;"	v
hasSingleNormFile	library\Zend\Search\Lucene\Index\Writer.php	/^                    $hasSingleNormFile = $segmentsFile->readByte();$/;"	v
hasSingleNormFile	library\Zend\Search\Lucene\Index\Writer.php	/^                    $hasSingleNormFile = false;$/;"	v
isCompound	library\Zend\Search\Lucene\Index\Writer.php	/^                            $isCompound = false;$/;"	v
isCompound	library\Zend\Search\Lucene\Index\Writer.php	/^                            $isCompound = null;$/;"	v
isCompound	library\Zend\Search\Lucene\Index\Writer.php	/^                            $isCompound = true;$/;"	v
isCompoundByte	library\Zend\Search\Lucene\Index\Writer.php	/^                    $isCompoundByte    = $segmentsFile->readByte();$/;"	v
isCompoundByte	library\Zend\Search\Lucene\Index\Writer.php	/^                    $isCompoundByte    = 0;$/;"	v
lastGenNumber	library\Zend\Search\Lucene\Index\Writer.php	/^                $lastGenNumber = key($delFiles[$segmentNumber]);$/;"	v
maxGenNumber	library\Zend\Search\Lucene\Index\Writer.php	/^                    $maxGenNumber = $lastGenNumber;$/;"	v
maxGenNumber	library\Zend\Search\Lucene\Index\Writer.php	/^            $maxGenNumber = 0;$/;"	v
mergePool	library\Zend\Search\Lucene\Index\Writer.php	/^                $mergePool   = array();$/;"	v
mergePool	library\Zend\Search\Lucene\Index\Writer.php	/^        $mergePool   = array();$/;"	v
merger	library\Zend\Search\Lucene\Index\Writer.php	/^        $merger = new Zend_Search_Lucene_Index_SegmentMerger($this->_directory,$/;"	v
newName	library\Zend\Search\Lucene\Index\Writer.php	/^        $newName = $this->_newSegmentName();$/;"	v
newSegment	library\Zend\Search\Lucene\Index\Writer.php	/^            $newSegment = $this->_currentSegment->close();$/;"	v
newSegment	library\Zend\Search\Lucene\Index\Writer.php	/^        $newSegment = $merger->merge();$/;"	v
newSegmentFile	library\Zend\Search\Lucene\Index\Writer.php	/^        $newSegmentFile = $this->_directory->createFile(Zend_Search_Lucene::getSegmentFileName(++$generation), false);$/;"	v
normGens	library\Zend\Search\Lucene\Index\Writer.php	/^                    $normGens = array();$/;"	v
numField	library\Zend\Search\Lucene\Index\Writer.php	/^                    $numField          = $segmentsFile->readInt();$/;"	v
numField	library\Zend\Search\Lucene\Index\Writer.php	/^                    $numField          = (int)0xFFFFFFFF;$/;"	v
numOfSegmentsOffset	library\Zend\Search\Lucene\Index\Writer.php	/^            $numOfSegmentsOffset = $newSegmentFile->tell();$/;"	v
poolSize	library\Zend\Search\Lucene\Index\Writer.php	/^                $poolSize    = 0;$/;"	v
poolSize	library\Zend\Search\Lucene\Index\Writer.php	/^        $poolSize    = 0;$/;"	v
segName	library\Zend\Search\Lucene\Index\Writer.php	/^                $segName = $segmentsFile->readString();$/;"	v
segSize	library\Zend\Search\Lucene\Index\Writer.php	/^                $segSize = $segmentsFile->readInt();$/;"	v
segmentName	library\Zend\Search\Lucene\Index\Writer.php	/^                    $segmentName = substr($file, 0, strlen($file) - 4);$/;"	v
segmentNameCounter	library\Zend\Search\Lucene\Index\Writer.php	/^        $segmentNameCounter = $segmentsFile->readInt();$/;"	v
segmentNumber	library\Zend\Search\Lucene\Index\Writer.php	/^                        $segmentNumber = (int)base_convert($matches[2], 36, 10);$/;"	v
segmentSizes	library\Zend\Search\Lucene\Index\Writer.php	/^        $segmentSizes = array();$/;"	v
segments	library\Zend\Search\Lucene\Index\Writer.php	/^            $segments = array();$/;"	v
segmentsCount	library\Zend\Search\Lucene\Index\Writer.php	/^            $segmentsCount = $segmentsFile->readInt();$/;"	v
segmentsCount	library\Zend\Search\Lucene\Index\Writer.php	/^            $segmentsCount = count($segments) + count($this->_newSegments);$/;"	v
segmentsFile	library\Zend\Search\Lucene\Index\Writer.php	/^            $segmentsFile = $directory->createFile('segments');$/;"	v
segmentsFile	library\Zend\Search\Lucene\Index\Writer.php	/^            $segmentsFile = $directory->createFile(Zend_Search_Lucene::getSegmentFileName($generation));$/;"	v
segmentsFile	library\Zend\Search\Lucene\Index\Writer.php	/^        $segmentsFile   = $this->_directory->getFileObject(Zend_Search_Lucene::getSegmentFileName($generation), false);$/;"	v
segmentsFile	library\Zend\Search\Lucene\Index\Writer.php	/^        $segmentsFile = $this->_directory->getFileObject(Zend_Search_Lucene::getSegmentFileName($generation), false);$/;"	v
sizeToMerge	library\Zend\Search\Lucene\Index\Writer.php	/^        $sizeToMerge = $this->maxBufferedDocs;$/;"	v
srcFormat	library\Zend\Search\Lucene\Index\Writer.php	/^                $srcFormat = Zend_Search_Lucene::FORMAT_2_1;$/;"	v
srcFormat	library\Zend\Search\Lucene\Index\Writer.php	/^                $srcFormat = Zend_Search_Lucene::FORMAT_2_3;$/;"	v
srcFormat	library\Zend\Search\Lucene\Index\Writer.php	/^                $srcFormat = Zend_Search_Lucene::FORMAT_PRE_2_1;$/;"	v
version	library\Zend\Search\Lucene\Index\Writer.php	/^            $version = $segmentsFile->readLong() + $this->_versionUpdate;$/;"	v
Zend_Search_Lucene_LockManager	library\Zend\Search\Lucene\LockManager.php	/^class Zend_Search_Lucene_LockManager$/;"	c
lock	library\Zend\Search\Lucene\LockManager.php	/^        $lock = $lockDirectory->createFile(self::OPTIMIZATION_LOCK_FILE);$/;"	v
lock	library\Zend\Search\Lucene\LockManager.php	/^        $lock = $lockDirectory->createFile(self::READ_LOCK_FILE);$/;"	v
lock	library\Zend\Search\Lucene\LockManager.php	/^        $lock = $lockDirectory->createFile(self::READ_LOCK_PROCESSING_LOCK_FILE);$/;"	v
lock	library\Zend\Search\Lucene\LockManager.php	/^        $lock = $lockDirectory->createFile(self::WRITE_LOCK_FILE);$/;"	v
lock	library\Zend\Search\Lucene\LockManager.php	/^        $lock = $lockDirectory->getFileObject(self::OPTIMIZATION_LOCK_FILE);$/;"	v
lock	library\Zend\Search\Lucene\LockManager.php	/^        $lock = $lockDirectory->getFileObject(self::READ_LOCK_FILE);$/;"	v
lock	library\Zend\Search\Lucene\LockManager.php	/^        $lock = $lockDirectory->getFileObject(self::READ_LOCK_PROCESSING_LOCK_FILE);$/;"	v
lock	library\Zend\Search\Lucene\LockManager.php	/^        $lock = $lockDirectory->getFileObject(self::WRITE_LOCK_FILE);$/;"	v
Zend_Search_Lucene_Interface_MultiSearcher	library\Zend\Search\Lucene\MultiSearcher.php	/^class Zend_Search_Lucene_Interface_MultiSearcher implements Zend_Search_Lucene_Interface$/;"	c
count	library\Zend\Search\Lucene\MultiSearcher.php	/^        $count = 0;$/;"	v
defaultResultSetLimit	library\Zend\Search\Lucene\MultiSearcher.php	/^        $defaultResultSetLimit = reset($this->_indices)->getResultSetLimit();$/;"	v
defaultSearchField	library\Zend\Search\Lucene\MultiSearcher.php	/^        $defaultSearchField = reset($this->_indices)->getDefaultSearchField();$/;"	v
docFreq	library\Zend\Search\Lucene\MultiSearcher.php	/^        $docFreq = 0;$/;"	v
docs	library\Zend\Search\Lucene\MultiSearcher.php	/^            $docs = $index->termDocs($term);$/;"	v
docs	library\Zend\Search\Lucene\MultiSearcher.php	/^        $docs = 0;$/;"	v
docsList	library\Zend\Search\Lucene\MultiSearcher.php	/^        $docsList = array();$/;"	v
fieldNamesList	library\Zend\Search\Lucene\MultiSearcher.php	/^        $fieldNamesList = array();$/;"	v
freqs	library\Zend\Search\Lucene\MultiSearcher.php	/^                $freqs = $freqsShifted;$/;"	v
freqs	library\Zend\Search\Lucene\MultiSearcher.php	/^            $freqs = $index->termFreqs($term);$/;"	v
freqsList	library\Zend\Search\Lucene\MultiSearcher.php	/^        $freqsList = array();$/;"	v
freqsShifted	library\Zend\Search\Lucene\MultiSearcher.php	/^                $freqsShifted = array();$/;"	v
hits	library\Zend\Search\Lucene\MultiSearcher.php	/^            $hits = $index->find($query);$/;"	v
hitsList	library\Zend\Search\Lucene\MultiSearcher.php	/^        $hitsList = array();$/;"	v
id	library\Zend\Search\Lucene\MultiSearcher.php	/^            $id = $id->id;$/;"	v
index	library\Zend\Search\Lucene\MultiSearcher.php	/^            $index = $this->_indices[array_rand($this->_indices)];$/;"	v
index	library\Zend\Search\Lucene\MultiSearcher.php	/^            $index = call_user_func($this->_documentDistributorCallBack, $document, $this->_indices);$/;"	v
indexCount	library\Zend\Search\Lucene\MultiSearcher.php	/^            $indexCount = $index->count();$/;"	v
indexShift	library\Zend\Search\Lucene\MultiSearcher.php	/^        $indexShift = 0;$/;"	v
maxBufferedDocs	library\Zend\Search\Lucene\MultiSearcher.php	/^        $maxBufferedDocs = reset($this->_indices)->getMaxBufferedDocs();$/;"	v
maxMergeDocs	library\Zend\Search\Lucene\MultiSearcher.php	/^        $maxMergeDocs = reset($this->_indices)->getMaxMergeDocs();$/;"	v
mergeFactor	library\Zend\Search\Lucene\MultiSearcher.php	/^        $mergeFactor = reset($this->_indices)->getMergeFactor();$/;"	v
similarity	library\Zend\Search\Lucene\MultiSearcher.php	/^        $similarity = reset($this->_indices)->getSimilarity();$/;"	v
termPositions	library\Zend\Search\Lucene\MultiSearcher.php	/^                $termPositions = $termPositionsShifted;$/;"	v
termPositions	library\Zend\Search\Lucene\MultiSearcher.php	/^            $termPositions = $index->termPositions($term);$/;"	v
termPositionsList	library\Zend\Search\Lucene\MultiSearcher.php	/^        $termPositionsList = array();$/;"	v
termPositionsShifted	library\Zend\Search\Lucene\MultiSearcher.php	/^                $termPositionsShifted = array();$/;"	v
termsList	library\Zend\Search\Lucene\MultiSearcher.php	/^        $termsList = array();$/;"	v
childId	library\Zend\Search\Lucene\PriorityQueue.php	/^            $childId = ($nodeId << 1) + 1;     \/\/ First child$/;"	v
childId	library\Zend\Search\Lucene\PriorityQueue.php	/^            $childId = 2;$/;"	v
childId	library\Zend\Search\Lucene\PriorityQueue.php	/^        $childId = 1;     \/\/ First child$/;"	v
lastId	library\Zend\Search\Lucene\PriorityQueue.php	/^        $lastId = count($this->_heap) - 1;$/;"	v
nodeId	library\Zend\Search\Lucene\PriorityQueue.php	/^            $nodeId   = $parentId;$/;"	v
nodeId	library\Zend\Search\Lucene\PriorityQueue.php	/^            $nodeId  = $childId;               \/\/ Go down$/;"	v
nodeId	library\Zend\Search\Lucene\PriorityQueue.php	/^        $nodeId   = count($this->_heap);$/;"	v
nodeId	library\Zend\Search\Lucene\PriorityQueue.php	/^        $nodeId  = 0;     \/\/ Start from a top$/;"	v
parentId	library\Zend\Search\Lucene\PriorityQueue.php	/^            $parentId = ($nodeId-1) >> 1;   \/\/ floor( ($nodeId-1)\/2 )$/;"	v
parentId	library\Zend\Search\Lucene\PriorityQueue.php	/^        $parentId = ($nodeId-1) >> 1;   \/\/ floor( ($nodeId-1)\/2 )$/;"	v
top	library\Zend\Search\Lucene\PriorityQueue.php	/^        $top = $this->_heap[0];$/;"	v
Zend_Search_Lucene_Proxy	library\Zend\Search\Lucene\Proxy.php	/^class Zend_Search_Lucene_Proxy implements Zend_Search_Lucene_Interface$/;"	c
parameters	library\Zend\Search\Lucene\Proxy.php	/^        $parameters = func_get_args();$/;"	v
Zend_Search_Lucene_Search_BooleanExpressionRecognizer	library\Zend\Search\Lucene\Search\BooleanExpressionRecognizer.php	/^class Zend_Search_Lucene_Search_BooleanExpressionRecognizer extends Zend_Search_Lucene_FSM$/;"	c
emptyNotOperatorAction	library\Zend\Search\Lucene\Search\BooleanExpressionRecognizer.php	/^        $emptyNotOperatorAction = new Zend_Search_Lucene_FSMAction($this, 'emptyNotOperatorAction');$/;"	v
emptyOperatorAction	library\Zend\Search\Lucene\Search\BooleanExpressionRecognizer.php	/^        $emptyOperatorAction    = new Zend_Search_Lucene_FSMAction($this, 'emptyOperatorAction');$/;"	v
literalAction	library\Zend\Search\Lucene\Search\BooleanExpressionRecognizer.php	/^        $literalAction         = new Zend_Search_Lucene_FSMAction($this, 'literalAction');$/;"	v
notOperatorAction	library\Zend\Search\Lucene\Search\BooleanExpressionRecognizer.php	/^        $notOperatorAction     = new Zend_Search_Lucene_FSMAction($this, 'notOperatorAction');$/;"	v
orOperatorAction	library\Zend\Search\Lucene\Search\BooleanExpressionRecognizer.php	/^        $orOperatorAction      = new Zend_Search_Lucene_FSMAction($this, 'orOperatorAction');$/;"	v
Zend_Search_Lucene_Search_Highlighter_Default	library\Zend\Search\Lucene\Search\Highlighter\Default.php	/^class Zend_Search_Lucene_Search_Highlighter_Default implements Zend_Search_Lucene_Search_Highlighter_Interface$/;"	c
color	library\Zend\Search\Lucene\Search\Highlighter\Default.php	/^        $color = $this->_highlightColors[$this->_currentColorIndex];$/;"	v
doc	library\Zend\Search\Lucene\Search\Query.php	/^        $doc = Zend_Search_Lucene_Document_Html::loadHTML($inputHTML);$/;"	v
doc	library\Zend\Search\Lucene\Search\Query.php	/^        $doc = Zend_Search_Lucene_Document_Html::loadHTML($inputHTML, false, $defaultEncoding);$/;"	v
highlighter	library\Zend\Search\Lucene\Search\Query.php	/^            $highlighter = new Zend_Search_Lucene_Search_Highlighter_Default();$/;"	v
inputHTML	library\Zend\Search\Lucene\Search\Query.php	/^        $inputHTML = '<html><head><META HTTP-EQUIV="Content-type" CONTENT="text\/html; charset=UTF-8"\/><\/head><body>'$/;"	v
queryNorm	library\Zend\Search\Lucene\Search\Query.php	/^        $queryNorm = $reader->getSimilarity()->queryNorm($sum);$/;"	v
sum	library\Zend\Search\Lucene\Search\Query.php	/^        $sum = $this->_weight->sumOfSquaredWeights();$/;"	v
Zend_Search_Lucene_Search_QueryEntry_Phrase	library\Zend\Search\Lucene\Search\QueryEntry\Phrase.php	/^class Zend_Search_Lucene_Search_QueryEntry_Phrase extends Zend_Search_Lucene_Search_QueryEntry$/;"	c
query	library\Zend\Search\Lucene\Search\QueryEntry\Phrase.php	/^        $query = new Zend_Search_Lucene_Search_Query_Preprocessing_Phrase($this->_phrase,$/;"	v
Zend_Search_Lucene_Search_QueryEntry_Subquery	library\Zend\Search\Lucene\Search\QueryEntry\Subquery.php	/^class Zend_Search_Lucene_Search_QueryEntry_Subquery extends Zend_Search_Lucene_Search_QueryEntry$/;"	c
Zend_Search_Lucene_Search_QueryEntry_Term	library\Zend\Search\Lucene\Search\QueryEntry\Term.php	/^class Zend_Search_Lucene_Search_QueryEntry_Term extends Zend_Search_Lucene_Search_QueryEntry$/;"	c
query	library\Zend\Search\Lucene\Search\QueryEntry\Term.php	/^            $query = new Zend_Search_Lucene_Search_Query_Preprocessing_Fuzzy($this->_term,$/;"	v
query	library\Zend\Search\Lucene\Search\QueryEntry\Term.php	/^        $query = new Zend_Search_Lucene_Search_Query_Preprocessing_Term($this->_term,$/;"	v
Zend_Search_Lucene_Search_QueryHit	library\Zend\Search\Lucene\Search\QueryHit.php	/^class Zend_Search_Lucene_Search_QueryHit$/;"	c
Zend_Search_Lucene_Search_QueryLexer	library\Zend\Search\Lucene\Search\QueryLexer.php	/^class Zend_Search_Lucene_Search_QueryLexer extends Zend_Search_Lucene_FSM$/;"	c
addLexemeAction	library\Zend\Search\Lucene\Search\QueryLexer.php	/^        $addLexemeAction       = new Zend_Search_Lucene_FSMAction($this, 'addLexeme');$/;"	v
addLexemeCharAction	library\Zend\Search\Lucene\Search\QueryLexer.php	/^        $addLexemeCharAction   = new Zend_Search_Lucene_FSMAction($this, 'addLexemeChar');$/;"	v
addNumberLexemeAction	library\Zend\Search\Lucene\Search\QueryLexer.php	/^        $addNumberLexemeAction = new Zend_Search_Lucene_FSMAction($this, 'addNumberLexeme');$/;"	v
addQuotedLexemeAction	library\Zend\Search\Lucene\Search\QueryLexer.php	/^        $addQuotedLexemeAction = new Zend_Search_Lucene_FSMAction($this, 'addQuotedLexeme');$/;"	v
encoding	library\Zend\Search\Lucene\Search\QueryLexer.php	/^            $encoding = 'ISO8859-1';$/;"	v
lexeme	library\Zend\Search\Lucene\Search\QueryLexer.php	/^        $lexeme = $this->_queryString[$this->_queryStringPosition];$/;"	v
lexemeModifierAction	library\Zend\Search\Lucene\Search\QueryLexer.php	/^        $lexemeModifierAction  = new Zend_Search_Lucene_FSMAction($this, 'addLexemeModifier');$/;"	v
lexemeModifierErrorAction	library\Zend\Search\Lucene\Search\QueryLexer.php	/^        $lexemeModifierErrorAction    = new Zend_Search_Lucene_FSMAction($this, 'lexModifierErrException');$/;"	v
quoteWithinLexemeErrorAction	library\Zend\Search\Lucene\Search\QueryLexer.php	/^        $quoteWithinLexemeErrorAction = new Zend_Search_Lucene_FSMAction($this, 'quoteWithinLexemeErrException');$/;"	v
strLength	library\Zend\Search\Lucene\Search\QueryLexer.php	/^        $strLength = iconv_strlen($inputString, $encoding);$/;"	v
syntaxLexemeAction	library\Zend\Search\Lucene\Search\QueryLexer.php	/^        $syntaxLexemeAction    = new Zend_Search_Lucene_FSMAction($this, 'addQuerySyntaxLexeme');$/;"	v
token	library\Zend\Search\Lucene\Search\QueryLexer.php	/^            $token = array_pop($this->_lexemes);$/;"	v
token	library\Zend\Search\Lucene\Search\QueryLexer.php	/^        $token = new Zend_Search_Lucene_Search_QueryToken($/;"	v
wrongNumberErrorAction	library\Zend\Search\Lucene\Search\QueryLexer.php	/^        $wrongNumberErrorAction       = new Zend_Search_Lucene_FSMAction($this, 'wrongNumberErrException');$/;"	v
Zend_Search_Lucene_Search_QueryParser	library\Zend\Search\Lucene\Search\QueryParser.php	/^class Zend_Search_Lucene_Search_QueryParser extends Zend_Search_Lucene_FSM$/;"	c
addPhraseEntryAction	library\Zend\Search\Lucene\Search\QueryParser.php	/^        $addPhraseEntryAction           = new Zend_Search_Lucene_FSMAction($this, 'addPhraseEntry');$/;"	v
addTermEntryAction	library\Zend\Search\Lucene\Search\QueryParser.php	/^        $addTermEntryAction             = new Zend_Search_Lucene_FSMAction($this, 'addTermEntry');$/;"	v
closedRQFirstTermAction	library\Zend\Search\Lucene\Search\QueryParser.php	/^        $closedRQFirstTermAction        = new Zend_Search_Lucene_FSMAction($this, 'closedRQFirstTerm');$/;"	v
closedRQLastTermAction	library\Zend\Search\Lucene\Search\QueryParser.php	/^        $closedRQLastTermAction         = new Zend_Search_Lucene_FSMAction($this, 'closedRQLastTerm');$/;"	v
entry	library\Zend\Search\Lucene\Search\QueryParser.php	/^        $entry      = new Zend_Search_Lucene_Search_QueryEntry_Subquery($rangeQuery);$/;"	v
entry	library\Zend\Search\Lucene\Search\QueryParser.php	/^        $entry = new Zend_Search_Lucene_Search_QueryEntry_Phrase($this->_currentToken->text, $this->_context->getField());$/;"	v
entry	library\Zend\Search\Lucene\Search\QueryParser.php	/^        $entry = new Zend_Search_Lucene_Search_QueryEntry_Term($this->_currentToken->text, $this->_context->getField());$/;"	v
from	library\Zend\Search\Lucene\Search\QueryParser.php	/^            $from = new Zend_Search_Lucene_Index_Term(reset($tokens)->getTermText(), $this->_context->getField());$/;"	v
from	library\Zend\Search\Lucene\Search\QueryParser.php	/^            $from = null;$/;"	v
logicalOperatorAction	library\Zend\Search\Lucene\Search\QueryParser.php	/^        $logicalOperatorAction          = new Zend_Search_Lucene_FSMAction($this, 'logicalOperator');$/;"	v
openedRQFirstTermAction	library\Zend\Search\Lucene\Search\QueryParser.php	/^        $openedRQFirstTermAction        = new Zend_Search_Lucene_FSMAction($this, 'openedRQFirstTerm');$/;"	v
openedRQLastTermAction	library\Zend\Search\Lucene\Search\QueryParser.php	/^        $openedRQLastTermAction         = new Zend_Search_Lucene_FSMAction($this, 'openedRQLastTerm');$/;"	v
processModifierParameterAction	library\Zend\Search\Lucene\Search\QueryParser.php	/^        $processModifierParameterAction = new Zend_Search_Lucene_FSMAction($this, 'processModifierParameter');$/;"	v
query	library\Zend\Search\Lucene\Search\QueryParser.php	/^                $query = new Zend_Search_Lucene_Search_Query_MultiTerm();$/;"	v
query	library\Zend\Search\Lucene\Search\QueryParser.php	/^        $query          = $this->_context->getQuery();$/;"	v
queryTokens	library\Zend\Search\Lucene\Search\QueryParser.php	/^                $queryTokens = Zend_Search_Lucene_Analysis_Analyzer::getDefault()->tokenize($strQuery, self::$_instance->_encoding);$/;"	v
rangeQuery	library\Zend\Search\Lucene\Search\QueryParser.php	/^        $rangeQuery = new Zend_Search_Lucene_Search_Query_Range($from, $to, false);$/;"	v
rangeQuery	library\Zend\Search\Lucene\Search\QueryParser.php	/^        $rangeQuery = new Zend_Search_Lucene_Search_Query_Range($from, $to, true);$/;"	v
setFieldAction	library\Zend\Search\Lucene\Search\QueryParser.php	/^        $setFieldAction                 = new Zend_Search_Lucene_FSMAction($this, 'setField');$/;"	v
setFuzzyProxAction	library\Zend\Search\Lucene\Search\QueryParser.php	/^        $setFuzzyProxAction             = new Zend_Search_Lucene_FSMAction($this, 'processFuzzyProximityModifier');$/;"	v
setSignAction	library\Zend\Search\Lucene\Search\QueryParser.php	/^        $setSignAction                  = new Zend_Search_Lucene_FSMAction($this, 'setSign');$/;"	v
subqueryEndAction	library\Zend\Search\Lucene\Search\QueryParser.php	/^        $subqueryEndAction              = new Zend_Search_Lucene_FSMAction($this, 'subqueryEnd');$/;"	v
subqueryStartAction	library\Zend\Search\Lucene\Search\QueryParser.php	/^        $subqueryStartAction            = new Zend_Search_Lucene_FSMAction($this, 'subqueryStart');$/;"	v
termsSign	library\Zend\Search\Lucene\Search\QueryParser.php	/^                $termsSign = (self::$_instance->_defaultOperator == self::B_AND) ? true \/* required term *\/ :$/;"	v
to	library\Zend\Search\Lucene\Search\QueryParser.php	/^            $to = new Zend_Search_Lucene_Index_Term(reset($tokens)->getTermText(), $this->_context->getField());$/;"	v
to	library\Zend\Search\Lucene\Search\QueryParser.php	/^            $to = null;$/;"	v
tokens	library\Zend\Search\Lucene\Search\QueryParser.php	/^        $tokens = Zend_Search_Lucene_Analysis_Analyzer::getDefault()->tokenize($this->_currentToken->text, $this->_encoding);$/;"	v
tokens	library\Zend\Search\Lucene\Search\QueryParser.php	/^        $tokens = Zend_Search_Lucene_Analysis_Analyzer::getDefault()->tokenize($this->_rqFirstTerm, $this->_encoding);$/;"	v
Zend_Search_Lucene_Search_QueryParserContext	library\Zend\Search\Lucene\Search\QueryParserContext.php	/^class Zend_Search_Lucene_Search_QueryParserContext$/;"	c
conjuctions	library\Zend\Search\Lucene\Search\QueryParserContext.php	/^            $conjuctions = $expressionRecognizer->finishExpression();$/;"	v
defaultSign	library\Zend\Search\Lucene\Search\QueryParserContext.php	/^            $defaultSign = null; \/\/ optional$/;"	v
defaultSign	library\Zend\Search\Lucene\Search\QueryParserContext.php	/^            $defaultSign = true; \/\/ required$/;"	v
expressionRecognizer	library\Zend\Search\Lucene\Search\QueryParserContext.php	/^        $expressionRecognizer = new Zend_Search_Lucene_Search_BooleanExpressionRecognizer();$/;"	v
lastEntry	library\Zend\Search\Lucene\Search\QueryParserContext.php	/^        $lastEntry = array_pop($this->_entries);$/;"	v
nonNegativeEntryFound	library\Zend\Search\Lucene\Search\QueryParserContext.php	/^                    $nonNegativeEntryFound = true;$/;"	v
nonNegativeEntryFound	library\Zend\Search\Lucene\Search\QueryParserContext.php	/^            $nonNegativeEntryFound = false;$/;"	v
query	library\Zend\Search\Lucene\Search\QueryParserContext.php	/^        $query = new Zend_Search_Lucene_Search_Query_Boolean();$/;"	v
sign	library\Zend\Search\Lucene\Search\QueryParserContext.php	/^            $sign = ($this->_signs[$entryId] !== null) ?  $this->_signs[$entryId] : $defaultSign;$/;"	v
subqueries	library\Zend\Search\Lucene\Search\QueryParserContext.php	/^        $subqueries = array();$/;"	v
subquery	library\Zend\Search\Lucene\Search\QueryParserContext.php	/^                $subquery = new Zend_Search_Lucene_Search_Query_Boolean();$/;"	v
Zend_Search_Lucene_Search_QueryParserException	library\Zend\Search\Lucene\Search\QueryParserException.php	/^class Zend_Search_Lucene_Search_QueryParserException extends Zend_Search_Lucene_Exception$/;"	c
Zend_Search_Lucene_Search_QueryToken	library\Zend\Search\Lucene\Search\QueryToken.php	/^class Zend_Search_Lucene_Search_QueryToken$/;"	c
Zend_Search_Lucene_Search_Query_Boolean	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^class Zend_Search_Lucene_Search_Query_Boolean extends Zend_Search_Lucene_Search_Query$/;"	c
allProhibited	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^                $allProhibited = false;$/;"	v
allProhibited	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^        $allProhibited = true;$/;"	v
boostFactors	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^        $boostFactors = array();$/;"	v
clause	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^            $clause = new Zend_Search_Lucene_Search_Query_MultiTerm($terms, $tsigns);$/;"	v
clause	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^            $clause = new Zend_Search_Lucene_Search_Query_Term(reset($terms));$/;"	v
docsFilter	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^            $docsFilter = new Zend_Search_Lucene_Index_DocsFilter();$/;"	v
hasProhibited	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^                                $hasProhibited = true;$/;"	v
hasProhibited	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^                    $hasProhibited = false;$/;"	v
hasRequired	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^                                $hasRequired   = true;$/;"	v
hasRequired	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^                        $hasRequired = true;$/;"	v
hasRequired	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^                    $hasRequired   = false;$/;"	v
matchedSubqueries	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^        $matchedSubqueries = 0;$/;"	v
maxCoord	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^            $maxCoord = 0;$/;"	v
onlyOptional	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^                                $onlyOptional = false;$/;"	v
onlyOptional	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^                        $onlyOptional = false;$/;"	v
onlyOptional	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^                    $onlyOptional = true;$/;"	v
optimizedQuery	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^            $optimizedQuery = clone reset($subqueries);$/;"	v
optimizedQuery	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^            $optimizedQuery = new Zend_Search_Lucene_Search_Query_Boolean($subqueries, $signs);$/;"	v
optimizedQuery	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^            $optimizedQuery = new Zend_Search_Lucene_Search_Query_MultiTerm($terms, $tsigns);$/;"	v
optimizedQuery	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^        $optimizedQuery = new Zend_Search_Lucene_Search_Query_Boolean($subqueries, $signs);$/;"	v
optional	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^        $optional = array();$/;"	v
prohibitedSigns	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^            $prohibitedSigns = array();$/;"	v
prohibitedTerms	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^            $prohibitedTerms = array();$/;"	v
prohibitedTerms	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^        $prohibitedTerms        = array();$/;"	v
query	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^            $query = '(' . $query . ')^' . round($this->getBoost(), 4);$/;"	v
query	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^        $query = '';$/;"	v
query	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^        $query = new Zend_Search_Lucene_Search_Query_Boolean();$/;"	v
required	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^                $required = $nextResVector;$/;"	v
required	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^                $required = $updatedVector;$/;"	v
required	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^        $required = null;$/;"	v
requiredVectors	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^        $requiredVectors      = array();$/;"	v
requiredVectorsIds	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^        $requiredVectorsIds   = array(); \/\/ is used to prevent arrays comparison$/;"	v
requiredVectorsSizes	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^        $requiredVectorsSizes = array();$/;"	v
resVectors	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^        $resVectors      = array();$/;"	v
resVectorsIds	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^        $resVectorsIds   = array(); \/\/ is used to prevent arrays comparison$/;"	v
resVectorsSizes	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^        $resVectorsSizes = array();$/;"	v
score	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^        $score = 0;$/;"	v
signs	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^        $signs      = array();$/;"	v
subSigns	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^                $subSigns = $subquery->getSigns();$/;"	v
subTerms	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^                $subTerms = $subquery->getTerms();$/;"	v
subqueries	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^        $subqueries = array();$/;"	v
subscore	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^            $subscore = $subquery->score($docId, $reader);$/;"	v
terms	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^                $terms = array_merge($terms, $subquery->getQueryTerms());$/;"	v
terms	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^            $terms = array();$/;"	v
terms	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^        $terms        = array();$/;"	v
terms	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^        $terms = array();$/;"	v
tsigns	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^        $tsigns       = array();$/;"	v
updatedVector	library\Zend\Search\Lucene\Search\Query\Boolean.php	/^                $updatedVector = array();$/;"	v
Zend_Search_Lucene_Search_Query_Empty	library\Zend\Search\Lucene\Search\Query\Empty.php	/^class Zend_Search_Lucene_Search_Query_Empty extends Zend_Search_Lucene_Search_Query$/;"	c
Zend_Search_Lucene_Search_Query_Fuzzy	library\Zend\Search\Lucene\Search\Query\Fuzzy.php	/^class Zend_Search_Lucene_Search_Query_Fuzzy extends Zend_Search_Lucene_Search_Query$/;"	c
docBody	library\Zend\Search\Lucene\Search\Query\Fuzzy.php	/^        $docBody = $highlighter->getDocument()->getFieldUtf8Value('body');$/;"	v
fields	library\Zend\Search\Lucene\Search\Query\Fuzzy.php	/^            $fields = $index->getFieldNames(true \/* indexed fields list *\/);$/;"	v
fields	library\Zend\Search\Lucene\Search\Query\Fuzzy.php	/^            $fields = array($this->_term->field);$/;"	v
maxDistance	library\Zend\Search\Lucene\Search\Query\Fuzzy.php	/^                    $maxDistance = isset($this->_maxDistances[strlen($target)])?$/;"	v
maxDistance	library\Zend\Search\Lucene\Search\Query\Fuzzy.php	/^                $maxDistance = isset($this->_maxDistances[strlen($target)])?$/;"	v
maxTerms	library\Zend\Search\Lucene\Search\Query\Fuzzy.php	/^        $maxTerms = Zend_Search_Lucene::getTermsPerQueryLimit();$/;"	v
prefix	library\Zend\Search\Lucene\Search\Query\Fuzzy.php	/^        $prefix           = Zend_Search_Lucene_Index_Term::getPrefix($this->_term->text, $this->_prefixLength);$/;"	v
prefixByteLength	library\Zend\Search\Lucene\Search\Query\Fuzzy.php	/^        $prefixByteLength = strlen($prefix);$/;"	v
prefixUtf8Length	library\Zend\Search\Lucene\Search\Query\Fuzzy.php	/^        $prefixUtf8Length = Zend_Search_Lucene_Index_Term::getLength($prefix);$/;"	v
rewrittenQuery	library\Zend\Search\Lucene\Search\Query\Fuzzy.php	/^            $rewrittenQuery = new Zend_Search_Lucene_Search_Query_Boolean();$/;"	v
scaleFactor	library\Zend\Search\Lucene\Search\Query\Fuzzy.php	/^        $scaleFactor = 1\/(1 - $this->_minimumSimilarity);$/;"	v
similarity	library\Zend\Search\Lucene\Search\Query\Fuzzy.php	/^                        $similarity = (($prefixUtf8Length == 0)? 0 : 1 - $termRestLength\/$prefixUtf8Length);$/;"	v
similarity	library\Zend\Search\Lucene\Search\Query\Fuzzy.php	/^                        $similarity = (($prefixUtf8Length == 0)? 0 : 1 - strlen($target)\/$prefixUtf8Length);$/;"	v
similarity	library\Zend\Search\Lucene\Search\Query\Fuzzy.php	/^                        $similarity = 0;$/;"	v
similarity	library\Zend\Search\Lucene\Search\Query\Fuzzy.php	/^                        $similarity = 1 - levenshtein($termRest, $target)\/($prefixUtf8Length + min($termRestLength, strlen($target)));$/;"	v
similarity	library\Zend\Search\Lucene\Search\Query\Fuzzy.php	/^                        $similarity = 1 - levenshtein($termRest, $target)\/min($termRestLength, strlen($target));$/;"	v
similarity	library\Zend\Search\Lucene\Search\Query\Fuzzy.php	/^                    $similarity = (($prefixUtf8Length == 0)? 0 : 1 - $termRestLength\/$prefixUtf8Length);$/;"	v
similarity	library\Zend\Search\Lucene\Search\Query\Fuzzy.php	/^                    $similarity = (($prefixUtf8Length == 0)? 0 : 1 - strlen($target)\/$prefixUtf8Length);$/;"	v
similarity	library\Zend\Search\Lucene\Search\Query\Fuzzy.php	/^                    $similarity = 0;$/;"	v
similarity	library\Zend\Search\Lucene\Search\Query\Fuzzy.php	/^                    $similarity = 1 - levenshtein($termRest, $target)\/($prefixUtf8Length + min($termRestLength, strlen($target)));$/;"	v
subquery	library\Zend\Search\Lucene\Search\Query\Fuzzy.php	/^                $subquery = new Zend_Search_Lucene_Search_Query_Term($matchedTerm);$/;"	v
target	library\Zend\Search\Lucene\Search\Query\Fuzzy.php	/^                    $target = $index->currentTerm()->text;$/;"	v
target	library\Zend\Search\Lucene\Search\Query\Fuzzy.php	/^                    $target = substr($index->currentTerm()->text, $prefixByteLength);$/;"	v
target	library\Zend\Search\Lucene\Search\Query\Fuzzy.php	/^                $target = substr($termText, $prefixByteLength);$/;"	v
termCount	library\Zend\Search\Lucene\Search\Query\Fuzzy.php	/^            $termCount = 0;$/;"	v
termLength	library\Zend\Search\Lucene\Search\Query\Fuzzy.php	/^        $termLength       = Zend_Search_Lucene_Index_Term::getLength($this->_term->text);$/;"	v
termRest	library\Zend\Search\Lucene\Search\Query\Fuzzy.php	/^        $termRest         = substr($this->_term->text, $prefixByteLength);$/;"	v
termRestLength	library\Zend\Search\Lucene\Search\Query\Fuzzy.php	/^        $termRestLength   = strlen($termRest);$/;"	v
termText	library\Zend\Search\Lucene\Search\Query\Fuzzy.php	/^            $termText = $token->getTermText();$/;"	v
tokens	library\Zend\Search\Lucene\Search\Query\Fuzzy.php	/^        $tokens = Zend_Search_Lucene_Analysis_Analyzer::getDefault()->tokenize($docBody, 'UTF-8');$/;"	v
words	library\Zend\Search\Lucene\Search\Query\Fuzzy.php	/^        $words = array();$/;"	v
Zend_Search_Lucene_Search_Query_Insignificant	library\Zend\Search\Lucene\Search\Query\Insignificant.php	/^class Zend_Search_Lucene_Search_Query_Insignificant extends Zend_Search_Lucene_Search_Query$/;"	c
Zend_Search_Lucene_Search_Query_MultiTerm	library\Zend\Search\Lucene\Search\Query\MultiTerm.php	/^class Zend_Search_Lucene_Search_Query_MultiTerm extends Zend_Search_Lucene_Search_Query$/;"	c
allProhibited	library\Zend\Search\Lucene\Search\Query\MultiTerm.php	/^                    $allProhibited = false;$/;"	v
allProhibited	library\Zend\Search\Lucene\Search\Query\MultiTerm.php	/^            $allProhibited = false;$/;"	v
allProhibited	library\Zend\Search\Lucene\Search\Query\MultiTerm.php	/^        $allProhibited = true;$/;"	v
allQualified	library\Zend\Search\Lucene\Search\Query\MultiTerm.php	/^                $allQualified = false;$/;"	v
allQualified	library\Zend\Search\Lucene\Search\Query\MultiTerm.php	/^        $allQualified = true;$/;"	v
docFreqs	library\Zend\Search\Lucene\Search\Query\MultiTerm.php	/^        $docFreqs = array();$/;"	v
docsFilter	library\Zend\Search\Lucene\Search\Query\MultiTerm.php	/^        $docsFilter = new Zend_Search_Lucene_Index_DocsFilter();$/;"	v
ids	library\Zend\Search\Lucene\Search\Query\MultiTerm.php	/^        $ids      = array();$/;"	v
matchedTerms	library\Zend\Search\Lucene\Search\Query\MultiTerm.php	/^        $matchedTerms = 0;$/;"	v
maxCoord	library\Zend\Search\Lucene\Search\Query\MultiTerm.php	/^            $maxCoord = 0;$/;"	v
optimizedQuery	library\Zend\Search\Lucene\Search\Query\MultiTerm.php	/^            $optimizedQuery = new Zend_Search_Lucene_Search_Query_Term(reset($terms));$/;"	v
optimizedQuery	library\Zend\Search\Lucene\Search\Query\MultiTerm.php	/^        $optimizedQuery = new Zend_Search_Lucene_Search_Query_MultiTerm($terms, $signs);$/;"	v
optional	library\Zend\Search\Lucene\Search\Query\MultiTerm.php	/^        $optional   = array();$/;"	v
prohibited	library\Zend\Search\Lucene\Search\Query\MultiTerm.php	/^        $prohibited = array();$/;"	v
query	library\Zend\Search\Lucene\Search\Query\MultiTerm.php	/^            $query = '(' . $query . ')^' . round($this->getBoost(), 4);$/;"	v
query	library\Zend\Search\Lucene\Search\Query\MultiTerm.php	/^            $query = new Zend_Search_Lucene_Search_Query_Boolean();$/;"	v
query	library\Zend\Search\Lucene\Search\Query\MultiTerm.php	/^        $query = '';$/;"	v
required	library\Zend\Search\Lucene\Search\Query\MultiTerm.php	/^                $required = $nextResVector;$/;"	v
required	library\Zend\Search\Lucene\Search\Query\MultiTerm.php	/^                $required = $updatedVector;$/;"	v
required	library\Zend\Search\Lucene\Search\Query\MultiTerm.php	/^        $required = null;$/;"	v
requiredVectors	library\Zend\Search\Lucene\Search\Query\MultiTerm.php	/^        $requiredVectors      = array();$/;"	v
requiredVectorsIds	library\Zend\Search\Lucene\Search\Query\MultiTerm.php	/^        $requiredVectorsIds   = array(); \/\/ is used to prevent arrays comparison$/;"	v
requiredVectorsSizes	library\Zend\Search\Lucene\Search\Query\MultiTerm.php	/^        $requiredVectorsSizes = array();$/;"	v
score	library\Zend\Search\Lucene\Search\Query\MultiTerm.php	/^        $score = 0.0;$/;"	v
signs	library\Zend\Search\Lucene\Search\Query\MultiTerm.php	/^        $signs = $this->_signs;$/;"	v
subquery	library\Zend\Search\Lucene\Search\Query\MultiTerm.php	/^                $subquery = new Zend_Search_Lucene_Search_Query_Term($term);$/;"	v
termDocs	library\Zend\Search\Lucene\Search\Query\MultiTerm.php	/^            $termDocs = $reader->termDocs($term, $docsFilter);$/;"	v
termDocs	library\Zend\Search\Lucene\Search\Query\MultiTerm.php	/^            $termDocs = array_flip($reader->termDocs($term));$/;"	v
terms	library\Zend\Search\Lucene\Search\Query\MultiTerm.php	/^        $terms = $this->_terms;$/;"	v
terms	library\Zend\Search\Lucene\Search\Query\MultiTerm.php	/^        $terms = array();$/;"	v
updatedVector	library\Zend\Search\Lucene\Search\Query\MultiTerm.php	/^                $updatedVector = $this->_resVector;$/;"	v
updatedVector	library\Zend\Search\Lucene\Search\Query\MultiTerm.php	/^                $updatedVector = array();$/;"	v
words	library\Zend\Search\Lucene\Search\Query\MultiTerm.php	/^        $words = array();$/;"	v
Zend_Search_Lucene_Search_Query_Phrase	library\Zend\Search\Lucene\Search\Query\Phrase.php	/^class Zend_Search_Lucene_Search_Query_Phrase extends Zend_Search_Lucene_Search_Query$/;"	c
distance	library\Zend\Search\Lucene\Search\Query\Phrase.php	/^                $distance = 0;$/;"	v
expectedPosition	library\Zend\Search\Lucene\Search\Query\Phrase.php	/^                    $expectedPosition = $lowCardPos +$/;"	v
firstPass	library\Zend\Search\Lucene\Search\Query\Phrase.php	/^                $firstPass = false;$/;"	v
firstPass	library\Zend\Search\Lucene\Search\Query\Phrase.php	/^            $firstPass = true;$/;"	v
freq	library\Zend\Search\Lucene\Search\Query\Phrase.php	/^                $freq = $this->_exactPhraseFreq($docId);$/;"	v
freq	library\Zend\Search\Lucene\Search\Query\Phrase.php	/^                $freq = $this->_sloppyPhraseFreq($docId, $reader);$/;"	v
freq	library\Zend\Search\Lucene\Search\Query\Phrase.php	/^        $freq = 0;$/;"	v
lastTerm	library\Zend\Search\Lucene\Search\Query\Phrase.php	/^            $lastTerm = $termId;$/;"	v
lastTerm	library\Zend\Search\Lucene\Search\Query\Phrase.php	/^        $lastTerm = null;$/;"	v
lowCardTermId	library\Zend\Search\Lucene\Search\Query\Phrase.php	/^                    $lowCardTermId = $termId;$/;"	v
lowCardTermId	library\Zend\Search\Lucene\Search\Query\Phrase.php	/^        $lowCardTermId = null;$/;"	v
minDistance	library\Zend\Search\Lucene\Search\Query\Phrase.php	/^                    $minDistance = $distance;$/;"	v
minDistance	library\Zend\Search\Lucene\Search\Query\Phrase.php	/^            $minDistance = null;$/;"	v
newPhraseId	library\Zend\Search\Lucene\Search\Query\Phrase.php	/^                        $newPhraseId = count($phraseQueue);$/;"	v
norm	library\Zend\Search\Lucene\Search\Query\Phrase.php	/^                $norm = $reader->norm($docId, reset($this->_terms)->field);$/;"	v
optimizedQuery	library\Zend\Search\Lucene\Search\Query\Phrase.php	/^            $optimizedQuery = new Zend_Search_Lucene_Search_Query_Term(reset($this->_terms));$/;"	v
phraseQueue	library\Zend\Search\Lucene\Search\Query\Phrase.php	/^        $phraseQueue = array();$/;"	v
position	library\Zend\Search\Lucene\Search\Query\Phrase.php	/^                $position = count($this->_offsets);$/;"	v
qualifiedTerm	library\Zend\Search\Lucene\Search\Query\Phrase.php	/^                    $qualifiedTerm = new Zend_Search_Lucene_Index_Term($term->text, $fieldName);$/;"	v
query	library\Zend\Search\Lucene\Search\Query\Phrase.php	/^            $query = $this->_terms[0]->field . ':';$/;"	v
query	library\Zend\Search\Lucene\Search\Query\Phrase.php	/^            $query = '';$/;"	v
query	library\Zend\Search\Lucene\Search\Query\Phrase.php	/^            $query = new Zend_Search_Lucene_Search_Query_Boolean();$/;"	v
queueSize	library\Zend\Search\Lucene\Search\Query\Phrase.php	/^            $queueSize = count($phraseQueue);$/;"	v
resVectors	library\Zend\Search\Lucene\Search\Query\Phrase.php	/^        $resVectors      = array();$/;"	v
resVectorsIds	library\Zend\Search\Lucene\Search\Query\Phrase.php	/^        $resVectorsIds   = array(); \/\/ is used to prevent arrays comparison$/;"	v
resVectorsSizes	library\Zend\Search\Lucene\Search\Query\Phrase.php	/^        $resVectorsSizes = array();$/;"	v
start	library\Zend\Search\Lucene\Search\Query\Phrase.php	/^                $start = reset($phrasePos) - reset($this->_offsets) + $shift;$/;"	v
subquery	library\Zend\Search\Lucene\Search\Query\Phrase.php	/^                $subquery = new Zend_Search_Lucene_Search_Query_Phrase();$/;"	v
tf	library\Zend\Search\Lucene\Search\Query\Phrase.php	/^                $tf = $reader->getSimilarity()->tf($freq);$/;"	v
updatedVector	library\Zend\Search\Lucene\Search\Query\Phrase.php	/^                $updatedVector = array();$/;"	v
weight	library\Zend\Search\Lucene\Search\Query\Phrase.php	/^                $weight = $this->_weight->getValue();$/;"	v
words	library\Zend\Search\Lucene\Search\Query\Phrase.php	/^        $words = array();$/;"	v
Zend_Search_Lucene_Search_Query_Preprocessing_Fuzzy	library\Zend\Search\Lucene\Search\Query\Preprocessing\Fuzzy.php	/^class Zend_Search_Lucene_Search_Query_Preprocessing_Fuzzy extends Zend_Search_Lucene_Search_Query_Preprocessing$/;"	c
hasInsignificantSubqueries	library\Zend\Search\Lucene\Search\Query\Preprocessing\Fuzzy.php	/^                    $hasInsignificantSubqueries = true;$/;"	v
hasInsignificantSubqueries	library\Zend\Search\Lucene\Search\Query\Preprocessing\Fuzzy.php	/^            $hasInsignificantSubqueries = false;$/;"	v
query	library\Zend\Search\Lucene\Search\Query\Preprocessing\Fuzzy.php	/^                $query = reset($subqueries);$/;"	v
query	library\Zend\Search\Lucene\Search\Query\Preprocessing\Fuzzy.php	/^            $query = $this->_field . ':';$/;"	v
query	library\Zend\Search\Lucene\Search\Query\Preprocessing\Fuzzy.php	/^            $query = '';$/;"	v
query	library\Zend\Search\Lucene\Search\Query\Preprocessing\Fuzzy.php	/^            $query = new Zend_Search_Lucene_Search_Query_Boolean();$/;"	v
query	library\Zend\Search\Lucene\Search\Query\Preprocessing\Fuzzy.php	/^            $query = new Zend_Search_Lucene_Search_Query_Fuzzy($term, $this->_minimumSimilarity);$/;"	v
rewrittenQuery	library\Zend\Search\Lucene\Search\Query\Preprocessing\Fuzzy.php	/^            $rewrittenQuery = $query->rewrite($index);$/;"	v
rewrittenSubquery	library\Zend\Search\Lucene\Search\Query\Preprocessing\Fuzzy.php	/^                $rewrittenSubquery = $subquery->rewrite($index);$/;"	v
searchFields	library\Zend\Search\Lucene\Search\Query\Preprocessing\Fuzzy.php	/^                $searchFields = $index->getFieldNames(true);$/;"	v
searchFields	library\Zend\Search\Lucene\Search\Query\Preprocessing\Fuzzy.php	/^                $searchFields = array(Zend_Search_Lucene::getDefaultSearchField());$/;"	v
subPatterns	library\Zend\Search\Lucene\Search\Query\Preprocessing\Fuzzy.php	/^            $subPatterns = preg_split('\/[*?]\/', $this->_word);$/;"	v
subPatterns	library\Zend\Search\Lucene\Search\Query\Preprocessing\Fuzzy.php	/^            $subPatterns = preg_split('\/[*?]\/u', iconv($this->_encoding, 'UTF-8', $this->_word));$/;"	v
subqueries	library\Zend\Search\Lucene\Search\Query\Preprocessing\Fuzzy.php	/^            $subqueries = $query->getSubqueries();$/;"	v
subquery	library\Zend\Search\Lucene\Search\Query\Preprocessing\Fuzzy.php	/^                $subquery = new Zend_Search_Lucene_Search_Query_Preprocessing_Fuzzy($this->_word,$/;"	v
term	library\Zend\Search\Lucene\Search\Query\Preprocessing\Fuzzy.php	/^            $term  = new Zend_Search_Lucene_Index_Term($tokens[0]->getTermText(), $this->_field);$/;"	v
term	library\Zend\Search\Lucene\Search\Query\Preprocessing\Fuzzy.php	/^        $term = new Zend_Search_Lucene_Index_Term($this->_word, $this->_field);$/;"	v
tokens	library\Zend\Search\Lucene\Search\Query\Preprocessing\Fuzzy.php	/^        $tokens = Zend_Search_Lucene_Analysis_Analyzer::getDefault()->tokenize($this->_word, $this->_encoding);$/;"	v
Zend_Search_Lucene_Search_Query_Preprocessing_Phrase	library\Zend\Search\Lucene\Search\Query\Preprocessing\Phrase.php	/^class Zend_Search_Lucene_Search_Query_Preprocessing_Phrase extends Zend_Search_Lucene_Search_Query_Preprocessing$/;"	c
position	library\Zend\Search\Lucene\Search\Query\Preprocessing\Phrase.php	/^        $position = -1;$/;"	v
query	library\Zend\Search\Lucene\Search\Query\Preprocessing\Phrase.php	/^            $query = $this->_field . ':';$/;"	v
query	library\Zend\Search\Lucene\Search\Query\Preprocessing\Phrase.php	/^            $query = '';$/;"	v
query	library\Zend\Search\Lucene\Search\Query\Preprocessing\Phrase.php	/^            $query = new Zend_Search_Lucene_Search_Query_Boolean();$/;"	v
query	library\Zend\Search\Lucene\Search\Query\Preprocessing\Phrase.php	/^            $query = new Zend_Search_Lucene_Search_Query_Term($term);$/;"	v
query	library\Zend\Search\Lucene\Search\Query\Preprocessing\Phrase.php	/^        $query = new Zend_Search_Lucene_Search_Query_Phrase();$/;"	v
searchFields	library\Zend\Search\Lucene\Search\Query\Preprocessing\Phrase.php	/^                $searchFields = $index->getFieldNames(true);$/;"	v
searchFields	library\Zend\Search\Lucene\Search\Query\Preprocessing\Phrase.php	/^                $searchFields = array(Zend_Search_Lucene::getDefaultSearchField());$/;"	v
subquery	library\Zend\Search\Lucene\Search\Query\Preprocessing\Phrase.php	/^                $subquery = new Zend_Search_Lucene_Search_Query_Preprocessing_Phrase($this->_phrase,$/;"	v
term	library\Zend\Search\Lucene\Search\Query\Preprocessing\Phrase.php	/^            $term  = new Zend_Search_Lucene_Index_Term($tokens[0]->getTermText(), $this->_field);$/;"	v
term	library\Zend\Search\Lucene\Search\Query\Preprocessing\Phrase.php	/^            $term = new Zend_Search_Lucene_Index_Term($token->getTermText(), $this->_field);$/;"	v
term	library\Zend\Search\Lucene\Search\Query\Preprocessing\Phrase.php	/^        $term = new Zend_Search_Lucene_Index_Term($this->_phrase, $this->_field);$/;"	v
tokens	library\Zend\Search\Lucene\Search\Query\Preprocessing\Phrase.php	/^        $tokens = Zend_Search_Lucene_Analysis_Analyzer::getDefault()->tokenize($this->_phrase, $this->_phraseEncoding);$/;"	v
words	library\Zend\Search\Lucene\Search\Query\Preprocessing\Phrase.php	/^        $words = array();$/;"	v
Zend_Search_Lucene_Search_Query_Preprocessing_Term	library\Zend\Search\Lucene\Search\Query\Preprocessing\Term.php	/^class Zend_Search_Lucene_Search_Query_Preprocessing_Term extends Zend_Search_Lucene_Search_Query_Preprocessing$/;"	c
hasInsignificantSubqueries	library\Zend\Search\Lucene\Search\Query\Preprocessing\Term.php	/^                    $hasInsignificantSubqueries = true;$/;"	v
hasInsignificantSubqueries	library\Zend\Search\Lucene\Search\Query\Preprocessing\Term.php	/^            $hasInsignificantSubqueries = false;$/;"	v
pattern	library\Zend\Search\Lucene\Search\Query\Preprocessing\Term.php	/^            $pattern = '';$/;"	v
query	library\Zend\Search\Lucene\Search\Query\Preprocessing\Term.php	/^            $query = $this->_field . ':';$/;"	v
query	library\Zend\Search\Lucene\Search\Query\Preprocessing\Term.php	/^            $query = '';$/;"	v
query	library\Zend\Search\Lucene\Search\Query\Preprocessing\Term.php	/^            $query = new Zend_Search_Lucene_Search_Query_MultiTerm();$/;"	v
query	library\Zend\Search\Lucene\Search\Query\Preprocessing\Term.php	/^            $query = new Zend_Search_Lucene_Search_Query_Term($term);$/;"	v
query	library\Zend\Search\Lucene\Search\Query\Preprocessing\Term.php	/^            $query = new Zend_Search_Lucene_Search_Query_Wildcard($term);$/;"	v
query	library\Zend\Search\Lucene\Search\Query\Preprocessing\Term.php	/^        $query = new Zend_Search_Lucene_Search_Query_MultiTerm();$/;"	v
rewrittenQuery	library\Zend\Search\Lucene\Search\Query\Preprocessing\Term.php	/^            $rewrittenQuery = $query->rewrite($index);$/;"	v
rewrittenSubquery	library\Zend\Search\Lucene\Search\Query\Preprocessing\Term.php	/^                $rewrittenSubquery = $subquery->rewrite($index);$/;"	v
searchFields	library\Zend\Search\Lucene\Search\Query\Preprocessing\Term.php	/^                $searchFields = $index->getFieldNames(true);$/;"	v
searchFields	library\Zend\Search\Lucene\Search\Query\Preprocessing\Term.php	/^                $searchFields = array(Zend_Search_Lucene::getDefaultSearchField());$/;"	v
subPatterns	library\Zend\Search\Lucene\Search\Query\Preprocessing\Term.php	/^        $subPatterns = preg_split($wildcardsPattern, $word, -1, PREG_SPLIT_OFFSET_CAPTURE);$/;"	v
subPatternsEncoding	library\Zend\Search\Lucene\Search\Query\Preprocessing\Term.php	/^            $subPatternsEncoding = $this->_encoding;$/;"	v
subPatternsEncoding	library\Zend\Search\Lucene\Search\Query\Preprocessing\Term.php	/^            $subPatternsEncoding = 'UTF-8';$/;"	v
subquery	library\Zend\Search\Lucene\Search\Query\Preprocessing\Term.php	/^                $subquery = new Zend_Search_Lucene_Search_Query_Preprocessing_Term($this->_word,$/;"	v
term	library\Zend\Search\Lucene\Search\Query\Preprocessing\Term.php	/^            $term  = new Zend_Search_Lucene_Index_Term($pattern, $this->_field);$/;"	v
term	library\Zend\Search\Lucene\Search\Query\Preprocessing\Term.php	/^            $term  = new Zend_Search_Lucene_Index_Term($tokens[0]->getTermText(), $this->_field);$/;"	v
term	library\Zend\Search\Lucene\Search\Query\Preprocessing\Term.php	/^            $term = new Zend_Search_Lucene_Index_Term($token->getTermText(), $this->_field);$/;"	v
term	library\Zend\Search\Lucene\Search\Query\Preprocessing\Term.php	/^        $term = new Zend_Search_Lucene_Index_Term($this->_word, $this->_field);$/;"	v
tokens	library\Zend\Search\Lucene\Search\Query\Preprocessing\Term.php	/^                $tokens = Zend_Search_Lucene_Analysis_Analyzer::getDefault()->tokenize($subPattern[0], $subPatternsEncoding);$/;"	v
tokens	library\Zend\Search\Lucene\Search\Query\Preprocessing\Term.php	/^        $tokens = Zend_Search_Lucene_Analysis_Analyzer::getDefault()->tokenize($this->_word, $this->_encoding);$/;"	v
wildcardsPattern	library\Zend\Search\Lucene\Search\Query\Preprocessing\Term.php	/^            $wildcardsPattern = '\/[*?]\/';$/;"	v
wildcardsPattern	library\Zend\Search\Lucene\Search\Query\Preprocessing\Term.php	/^            $wildcardsPattern = '\/[*?]\/u';$/;"	v
word	library\Zend\Search\Lucene\Search\Query\Preprocessing\Term.php	/^            $word = $this->_word;$/;"	v
word	library\Zend\Search\Lucene\Search\Query\Preprocessing\Term.php	/^            $word = iconv($this->_encoding, 'UTF-8', $this->_word);$/;"	v
words	library\Zend\Search\Lucene\Search\Query\Preprocessing\Term.php	/^        $words = array();$/;"	v
Zend_Search_Lucene_Search_Query_Range	library\Zend\Search\Lucene\Search\Query\Range.php	/^class Zend_Search_Lucene_Search_Query_Range extends Zend_Search_Lucene_Search_Query$/;"	c
docBody	library\Zend\Search\Lucene\Search\Query\Range.php	/^        $docBody = $highlighter->getDocument()->getFieldUtf8Value('body');$/;"	v
fields	library\Zend\Search\Lucene\Search\Query\Range.php	/^            $fields = $index->getFieldNames(true \/* indexed fields list *\/);$/;"	v
fields	library\Zend\Search\Lucene\Search\Query\Range.php	/^            $fields = array($this->_field);$/;"	v
lowerTerm	library\Zend\Search\Lucene\Search\Query\Range.php	/^                $lowerTerm = new Zend_Search_Lucene_Index_Term($this->_lowerTerm->text, $field);$/;"	v
lowerTermText	library\Zend\Search\Lucene\Search\Query\Range.php	/^        $lowerTermText = ($this->_lowerTerm !== null)? $this->_lowerTerm->text : null;$/;"	v
maxTerms	library\Zend\Search\Lucene\Search\Query\Range.php	/^        $maxTerms = Zend_Search_Lucene::getTermsPerQueryLimit();$/;"	v
rewrittenQuery	library\Zend\Search\Lucene\Search\Query\Range.php	/^            $rewrittenQuery = new Zend_Search_Lucene_Search_Query_MultiTerm();$/;"	v
termText	library\Zend\Search\Lucene\Search\Query\Range.php	/^                $termText = $token->getTermText();$/;"	v
tokens	library\Zend\Search\Lucene\Search\Query\Range.php	/^        $tokens = Zend_Search_Lucene_Analysis_Analyzer::getDefault()->tokenize($docBody, 'UTF-8');$/;"	v
upperTerm	library\Zend\Search\Lucene\Search\Query\Range.php	/^                $upperTerm = new Zend_Search_Lucene_Index_Term($this->_upperTerm->text, $field);$/;"	v
upperTermText	library\Zend\Search\Lucene\Search\Query\Range.php	/^        $upperTermText = ($this->_upperTerm !== null)? $this->_upperTerm->text : null;$/;"	v
words	library\Zend\Search\Lucene\Search\Query\Range.php	/^        $words = array();$/;"	v
Zend_Search_Lucene_Search_Query_Term	library\Zend\Search\Lucene\Search\Query\Term.php	/^class Zend_Search_Lucene_Search_Query_Term extends Zend_Search_Lucene_Search_Query$/;"	c
query	library\Zend\Search\Lucene\Search\Query\Term.php	/^            $query = $query . '^' . round($this->getBoost(), 4);$/;"	v
query	library\Zend\Search\Lucene\Search\Query\Term.php	/^            $query = $this->_term->field . ':';$/;"	v
query	library\Zend\Search\Lucene\Search\Query\Term.php	/^            $query = '';$/;"	v
query	library\Zend\Search\Lucene\Search\Query\Term.php	/^            $query = new Zend_Search_Lucene_Search_Query_MultiTerm();$/;"	v
term	library\Zend\Search\Lucene\Search\Query\Term.php	/^                $term = new Zend_Search_Lucene_Index_Term($this->_term->text, $fieldName);$/;"	v
Zend_Search_Lucene_Search_Query_Wildcard	library\Zend\Search\Lucene\Search\Query\Wildcard.php	/^class Zend_Search_Lucene_Search_Query_Wildcard extends Zend_Search_Lucene_Search_Query$/;"	c
astrericPosition	library\Zend\Search\Lucene\Search\Query\Wildcard.php	/^        $astrericPosition     = strpos($word, '*');$/;"	v
docBody	library\Zend\Search\Lucene\Search\Query\Wildcard.php	/^        $docBody = $highlighter->getDocument()->getFieldUtf8Value('body');$/;"	v
fields	library\Zend\Search\Lucene\Search\Query\Wildcard.php	/^            $fields = $index->getFieldNames(true \/* indexed fields list *\/);$/;"	v
fields	library\Zend\Search\Lucene\Search\Query\Wildcard.php	/^            $fields = array($this->_pattern->field);$/;"	v
matchExpression	library\Zend\Search\Lucene\Search\Query\Wildcard.php	/^        $matchExpression = '\/^' . str_replace(array('\\\\?', '\\\\*'), array('.', '.*') , preg_quote($this->_pattern->text, '\/')) . '$\/';$/;"	v
maxTerms	library\Zend\Search\Lucene\Search\Query\Wildcard.php	/^        $maxTerms = Zend_Search_Lucene::getTermsPerQueryLimit();$/;"	v
prefix	library\Zend\Search\Lucene\Search\Query\Wildcard.php	/^        $prefix          = self::_getPrefix($this->_pattern->text);$/;"	v
prefixLength	library\Zend\Search\Lucene\Search\Query\Wildcard.php	/^        $prefixLength    = strlen($prefix);$/;"	v
query	library\Zend\Search\Lucene\Search\Query\Wildcard.php	/^            $query = $query . '^' . round($this->getBoost(), 4);$/;"	v
query	library\Zend\Search\Lucene\Search\Query\Wildcard.php	/^            $query = $this->_pattern->field . ':';$/;"	v
query	library\Zend\Search\Lucene\Search\Query\Wildcard.php	/^            $query = '';$/;"	v
questionMarkPosition	library\Zend\Search\Lucene\Search\Query\Wildcard.php	/^        $questionMarkPosition = strpos($word, '?');$/;"	v
rewrittenQuery	library\Zend\Search\Lucene\Search\Query\Wildcard.php	/^            $rewrittenQuery = new Zend_Search_Lucene_Search_Query_MultiTerm();$/;"	v
tokens	library\Zend\Search\Lucene\Search\Query\Wildcard.php	/^        $tokens = Zend_Search_Lucene_Analysis_Analyzer::getDefault()->tokenize($docBody, 'UTF-8');$/;"	v
words	library\Zend\Search\Lucene\Search\Query\Wildcard.php	/^        $words = array();$/;"	v
delta	library\Zend\Search\Lucene\Search\Similarity.php	/^            $delta = $f - self::$_normTable[$mid];$/;"	v
highIndex	library\Zend\Search\Lucene\Search\Similarity.php	/^                $highIndex = $mid-1;$/;"	v
highIndex	library\Zend\Search\Lucene\Search\Similarity.php	/^        $highIndex = 255;$/;"	v
idf	library\Zend\Search\Lucene\Search\Similarity.php	/^            $idf = 0.0;$/;"	v
lowIndex	library\Zend\Search\Lucene\Search\Similarity.php	/^                $lowIndex  = $mid+1;$/;"	v
lowIndex	library\Zend\Search\Lucene\Search\Similarity.php	/^        $lowIndex = 0;$/;"	v
mid	library\Zend\Search\Lucene\Search\Similarity.php	/^            $mid = ($highIndex + $lowIndex) >> 1;$/;"	v
Zend_Search_Lucene_Search_Similarity_Default	library\Zend\Search\Lucene\Search\Similarity\Default.php	/^class Zend_Search_Lucene_Search_Similarity_Default extends Zend_Search_Lucene_Search_Similarity$/;"	c
Zend_Search_Lucene_Search_Weight_Boolean	library\Zend\Search\Lucene\Search\Weight\Boolean.php	/^class Zend_Search_Lucene_Search_Weight_Boolean extends Zend_Search_Lucene_Search_Weight$/;"	c
signs	library\Zend\Search\Lucene\Search\Weight\Boolean.php	/^        $signs = $query->getSigns();$/;"	v
sum	library\Zend\Search\Lucene\Search\Weight\Boolean.php	/^            $sum = 1.0;$/;"	v
sum	library\Zend\Search\Lucene\Search\Weight\Boolean.php	/^        $sum = 0;$/;"	v
Zend_Search_Lucene_Search_Weight_Empty	library\Zend\Search\Lucene\Search\Weight\Empty.php	/^class Zend_Search_Lucene_Search_Weight_Empty extends Zend_Search_Lucene_Search_Weight$/;"	c
Zend_Search_Lucene_Search_Weight_MultiTerm	library\Zend\Search\Lucene\Search\Weight\MultiTerm.php	/^class Zend_Search_Lucene_Search_Weight_MultiTerm extends Zend_Search_Lucene_Search_Weight$/;"	c
signs	library\Zend\Search\Lucene\Search\Weight\MultiTerm.php	/^        $signs = $query->getSigns();$/;"	v
sum	library\Zend\Search\Lucene\Search\Weight\MultiTerm.php	/^            $sum = 1.0;$/;"	v
sum	library\Zend\Search\Lucene\Search\Weight\MultiTerm.php	/^        $sum = 0;$/;"	v
Zend_Search_Lucene_Search_Weight_Phrase	library\Zend\Search\Lucene\Search\Weight\Phrase.php	/^class Zend_Search_Lucene_Search_Weight_Phrase extends Zend_Search_Lucene_Search_Weight$/;"	c
Zend_Search_Lucene_Search_Weight_Term	library\Zend\Search\Lucene\Search\Weight\Term.php	/^class Zend_Search_Lucene_Search_Weight_Term extends Zend_Search_Lucene_Search_Weight$/;"	c
Zend_Search_Lucene_Storage_Directory_Filesystem	library\Zend\Search\Lucene\Storage\Directory\Filesystem.php	/^class Zend_Search_Lucene_Storage_Directory_Filesystem extends Zend_Search_Lucene_Storage_Directory$/;"	c
dirContent	library\Zend\Search\Lucene\Storage\Directory\Filesystem.php	/^        $dirContent = opendir( $this->_dirPath );$/;"	v
fullFilename	library\Zend\Search\Lucene\Storage\Directory\Filesystem.php	/^        $fullFilename = $this->_dirPath . '\/' . $filename;$/;"	v
result	library\Zend\Search\Lucene\Storage\Directory\Filesystem.php	/^        $result = array();$/;"	v
success	library\Zend\Search\Lucene\Storage\Directory\Filesystem.php	/^        $success = @rename($this->_dirPath . '\/' . $from, $this->_dirPath . '\/' . $to);$/;"	v
trackErrors	library\Zend\Search\Lucene\Storage\Directory\Filesystem.php	/^        $trackErrors = ini_get('track_errors');$/;"	v
addBytes	library\Zend\Search\Lucene\Storage\File.php	/^                    $addBytes = 1;$/;"	v
addBytes	library\Zend\Search\Lucene\Storage\File.php	/^                $addBytes = 1;$/;"	v
chars	library\Zend\Search\Lucene\Storage\File.php	/^        $chars = $strlen = strlen($str);$/;"	v
containNullChars	library\Zend\Search\Lucene\Storage\File.php	/^                    $containNullChars = true;$/;"	v
containNullChars	library\Zend\Search\Lucene\Storage\File.php	/^        $containNullChars = false;$/;"	v
nextByte	library\Zend\Search\Lucene\Storage\File.php	/^            $nextByte = ord($this->_fread(1));$/;"	v
nextByte	library\Zend\Search\Lucene\Storage\File.php	/^        $nextByte = ord($this->_fread(1));$/;"	v
str	library\Zend\Search\Lucene\Storage\File.php	/^            $str = $this->_fread(8);$/;"	v
str	library\Zend\Search\Lucene\Storage\File.php	/^        $str = $this->_fread(4);$/;"	v
str_val	library\Zend\Search\Lucene\Storage\File.php	/^                        $str_val = substr($str_val,0,$count+1)$/;"	v
str_val	library\Zend\Search\Lucene\Storage\File.php	/^            $str_val = $this->_fread($strlen);$/;"	v
strlen	library\Zend\Search\Lucene\Storage\File.php	/^        $strlen = $this->readVInt();$/;"	v
val	library\Zend\Search\Lucene\Storage\File.php	/^        $val = $nextByte & 0x7F;$/;"	v
wordHigh	library\Zend\Search\Lucene\Storage\File.php	/^            $wordHigh = (int)($value\/(float)0x100000000\/* 0x00000001 00000000 *\/);$/;"	v
wordHigh	library\Zend\Search\Lucene\Storage\File.php	/^            $wordHigh = (int)0xFFFFFFFF;$/;"	v
wordHigh	library\Zend\Search\Lucene\Storage\File.php	/^        $wordHigh = $this->readInt();$/;"	v
wordLow	library\Zend\Search\Lucene\Storage\File.php	/^            $wordLow  = $value - $wordHigh*(float)0x100000000\/* 0x00000001 00000000 *\/;$/;"	v
wordLow	library\Zend\Search\Lucene\Storage\File.php	/^            $wordLow  = (int)$value;$/;"	v
wordLow	library\Zend\Search\Lucene\Storage\File.php	/^        $wordLow  = $this->readInt();$/;"	v
Zend_Search_Lucene_Storage_File_Filesystem	library\Zend\Search\Lucene\Storage\File\Filesystem.php	/^class Zend_Search_Lucene_Storage_File_Filesystem extends Zend_Search_Lucene_Storage_File$/;"	c
data	library\Zend\Search\Lucene\Storage\File\Filesystem.php	/^        $data = '';$/;"	v
nextBlock	library\Zend\Search\Lucene\Storage\File\Filesystem.php	/^            $nextBlock = fread($this->_fileHandle, $length);$/;"	v
position	library\Zend\Search\Lucene\Storage\File\Filesystem.php	/^        $position = ftell($this->_fileHandle);$/;"	v
size	library\Zend\Search\Lucene\Storage\File\Filesystem.php	/^        $size = ftell($this->_fileHandle);$/;"	v
trackErrors	library\Zend\Search\Lucene\Storage\File\Filesystem.php	/^        $trackErrors = ini_get('track_errors');$/;"	v
Zend_Search_Lucene_Storage_File_Memory	library\Zend\Search\Lucene\Storage\File\Memory.php	/^class Zend_Search_Lucene_Storage_File_Memory extends Zend_Search_Lucene_Storage_File$/;"	c
addBytes	library\Zend\Search\Lucene\Storage\File\Memory.php	/^                    $addBytes = 1;$/;"	v
addBytes	library\Zend\Search\Lucene\Storage\File\Memory.php	/^                $addBytes = 1;$/;"	v
chars	library\Zend\Search\Lucene\Storage\File\Memory.php	/^        $chars = $strlen = strlen($str);$/;"	v
containNullChars	library\Zend\Search\Lucene\Storage\File\Memory.php	/^                    $containNullChars = true;$/;"	v
containNullChars	library\Zend\Search\Lucene\Storage\File\Memory.php	/^        $containNullChars = false;$/;"	v
length	library\Zend\Search\Lucene\Storage\File\Memory.php	/^        $length = $this->readVInt();$/;"	v
nextByte	library\Zend\Search\Lucene\Storage\File\Memory.php	/^            $nextByte = ord($this->_data[$this->_position++]);$/;"	v
nextByte	library\Zend\Search\Lucene\Storage\File\Memory.php	/^        $nextByte = ord($this->_data[$this->_position++]);$/;"	v
returnValue	library\Zend\Search\Lucene\Storage\File\Memory.php	/^        $returnValue = substr($this->_data, $this->_position, $length);$/;"	v
returnValue	library\Zend\Search\Lucene\Storage\File\Memory.php	/^        $returnValue = substr($this->_data, $this->_position, $num);$/;"	v
str	library\Zend\Search\Lucene\Storage\File\Memory.php	/^            $str = substr($this->_data, $this->_position, 8);$/;"	v
str	library\Zend\Search\Lucene\Storage\File\Memory.php	/^        $str = substr($this->_data, $this->_position, 4);$/;"	v
str_val	library\Zend\Search\Lucene\Storage\File\Memory.php	/^                        $str_val = substr($str_val,0,$count+1)$/;"	v
str_val	library\Zend\Search\Lucene\Storage\File\Memory.php	/^            $str_val = substr($this->_data, $this->_position, $strlen);$/;"	v
strlen	library\Zend\Search\Lucene\Storage\File\Memory.php	/^        $strlen = $this->readVInt();$/;"	v
val	library\Zend\Search\Lucene\Storage\File\Memory.php	/^        $val = $nextByte & 0x7F;$/;"	v
wordHigh	library\Zend\Search\Lucene\Storage\File\Memory.php	/^            $wordHigh = (int)($value\/(float)0x100000000\/* 0x00000001 00000000 *\/);$/;"	v
wordHigh	library\Zend\Search\Lucene\Storage\File\Memory.php	/^            $wordHigh = (int)0xFFFFFFFF;$/;"	v
wordHigh	library\Zend\Search\Lucene\Storage\File\Memory.php	/^        $wordHigh = $this->readInt();$/;"	v
wordLow	library\Zend\Search\Lucene\Storage\File\Memory.php	/^            $wordLow  = $value - $wordHigh*(float)0x100000000\/* 0x00000001 00000000 *\/;$/;"	v
wordLow	library\Zend\Search\Lucene\Storage\File\Memory.php	/^            $wordLow  = (int)$value;$/;"	v
wordLow	library\Zend\Search\Lucene\Storage\File\Memory.php	/^        $wordLow  = $this->readInt();$/;"	v
Zend_Search_Lucene_TermStreamsPriorityQueue	library\Zend\Search\Lucene\TermStreamsPriorityQueue.php	/^class Zend_Search_Lucene_TermStreamsPriorityQueue implements Zend_Search_Lucene_Index_TermsStream_Interface$/;"	c
Zend_Serializer	library\Zend\Serializer.php	/^class Zend_Serializer$/;"	c
adapter	library\Zend\Serializer.php	/^            $adapter = self::factory($options['adapter']);$/;"	v
adapter	library\Zend\Serializer.php	/^            $adapter = self::getDefaultAdapter();$/;"	v
adapterClass	library\Zend\Serializer.php	/^            $adapterClass = $adapterLoader->load($adapterName);$/;"	v
adapterLoader	library\Zend\Serializer.php	/^        $adapterLoader = self::getAdapterLoader();$/;"	v
loader	library\Zend\Serializer.php	/^        $loader = new Zend_Loader_PluginLoader();$/;"	v
name	library\Zend\Serializer\Adapter\AdapterAbstract.php	/^        $name = (string) $name;$/;"	v
opts	library\Zend\Serializer\Adapter\AdapterAbstract.php	/^            $opts = $opts->toArray();$/;"	v
opts	library\Zend\Serializer\Adapter\AdapterAbstract.php	/^            $opts = (array) $opts;$/;"	v
Zend_Serializer_Adapter_Amf0	library\Zend\Serializer\Adapter\Amf0.php	/^class Zend_Serializer_Adapter_Amf0 extends Zend_Serializer_Adapter_AdapterAbstract$/;"	c
deserializer	library\Zend\Serializer\Adapter\Amf0.php	/^            $deserializer = new Zend_Amf_Parse_Amf0_Deserializer($stream);$/;"	v
serializer	library\Zend\Serializer\Adapter\Amf0.php	/^            $serializer = new Zend_Amf_Parse_Amf0_Serializer($stream);$/;"	v
stream	library\Zend\Serializer\Adapter\Amf0.php	/^            $stream       = new Zend_Amf_Parse_InputStream($value);$/;"	v
stream	library\Zend\Serializer\Adapter\Amf0.php	/^            $stream     = new Zend_Amf_Parse_OutputStream();$/;"	v
Zend_Serializer_Adapter_Amf3	library\Zend\Serializer\Adapter\Amf3.php	/^class Zend_Serializer_Adapter_Amf3 extends Zend_Serializer_Adapter_AdapterAbstract$/;"	c
deserializer	library\Zend\Serializer\Adapter\Amf3.php	/^            $deserializer = new Zend_Amf_Parse_Amf3_Deserializer($stream);$/;"	v
serializer	library\Zend\Serializer\Adapter\Amf3.php	/^            $serializer = new Zend_Amf_Parse_Amf3_Serializer($stream);$/;"	v
stream	library\Zend\Serializer\Adapter\Amf3.php	/^            $stream       = new Zend_Amf_Parse_InputStream($value);$/;"	v
stream	library\Zend\Serializer\Adapter\Amf3.php	/^            $stream     = new Zend_Amf_Parse_OutputStream();$/;"	v
Zend_Serializer_Adapter_Igbinary	library\Zend\Serializer\Adapter\Igbinary.php	/^class Zend_Serializer_Adapter_Igbinary extends Zend_Serializer_Adapter_AdapterAbstract$/;"	c
lastErr	library\Zend\Serializer\Adapter\Igbinary.php	/^            $lastErr = error_get_last();$/;"	v
ret	library\Zend\Serializer\Adapter\Igbinary.php	/^        $ret = igbinary_serialize($value);$/;"	v
ret	library\Zend\Serializer\Adapter\Igbinary.php	/^        $ret = igbinary_unserialize($serialized);$/;"	v
Zend_Serializer_Adapter_Json	library\Zend\Serializer\Adapter\Json.php	/^class Zend_Serializer_Adapter_Json extends Zend_Serializer_Adapter_AdapterAbstract$/;"	c
opts	library\Zend\Serializer\Adapter\Json.php	/^        $opts = $opts + $this->_options;$/;"	v
ret	library\Zend\Serializer\Adapter\Json.php	/^            $ret = Zend_Json::decode($json, $opts['objectDecodeType']);$/;"	v
Zend_Serializer_Adapter_PhpCode	library\Zend\Serializer\Adapter\PhpCode.php	/^class Zend_Serializer_Adapter_PhpCode extends Zend_Serializer_Adapter_AdapterAbstract$/;"	c
eval	library\Zend\Serializer\Adapter\PhpCode.php	/^        $eval = @eval('$ret=' . $code . ';');$/;"	v
lastErr	library\Zend\Serializer\Adapter\PhpCode.php	/^                $lastErr = error_get_last();$/;"	v
Zend_Serializer_Adapter_PhpSerialize	library\Zend\Serializer\Adapter\PhpSerialize.php	/^class Zend_Serializer_Adapter_PhpSerialize extends Zend_Serializer_Adapter_AdapterAbstract$/;"	c
lastErr	library\Zend\Serializer\Adapter\PhpSerialize.php	/^            $lastErr = error_get_last();$/;"	v
ret	library\Zend\Serializer\Adapter\PhpSerialize.php	/^        $ret = @unserialize($serialized);$/;"	v
ret	library\Zend\Serializer\Adapter\PhpSerialize.php	/^        $ret = serialize($value);$/;"	v
Zend_Serializer_Adapter_PythonPickle	library\Zend\Serializer\Adapter\PythonPickle.php	/^class Zend_Serializer_Adapter_PythonPickle extends Zend_Serializer_Adapter_AdapterAbstract$/;"	c
bin	library\Zend\Serializer\Adapter\PythonPickle.php	/^                    $bin = strrev($bin);$/;"	v
bin	library\Zend\Serializer\Adapter\PythonPickle.php	/^                $bin = pack('l', $value);$/;"	v
bin	library\Zend\Serializer\Adapter\PythonPickle.php	/^                $bin = strrev($bin);$/;"	v
bin	library\Zend\Serializer\Adapter\PythonPickle.php	/^            $bin = pack('d', $value);$/;"	v
bin	library\Zend\Serializer\Adapter\PythonPickle.php	/^            $bin = strrev($bin);$/;"	v
bin	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $bin = $this->_read(2);$/;"	v
bin	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $bin = $this->_read(4);$/;"	v
bin	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $bin = $this->_read(8);$/;"	v
binLen	library\Zend\Serializer\Adapter\PythonPickle.php	/^                    $binLen = strrev($binLen);$/;"	v
binLen	library\Zend\Serializer\Adapter\PythonPickle.php	/^                $binLen = pack('l', $n);$/;"	v
data	library\Zend\Serializer\Adapter\PythonPickle.php	/^            $data = unicode_decode($data, 'UTF-8');$/;"	v
data	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $data      = $this->_read($n);$/;"	v
data	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $data    = $this->_readline();$/;"	v
data	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $data    = preg_replace_callback($pattern, array($this, '_convertMatchingUnicodeSequence2Utf8'), $data);$/;"	v
data	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $data = $this->_read($n);$/;"	v
data	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $data = rtrim($this->_readline(), 'L');$/;"	v
dict	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $dict  =& $this->_stack[count($this->_stack) - 1];$/;"	v
dict	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $dict =& $this->_stack[$k - 1];$/;"	v
enclosure	library\Zend\Serializer\Adapter\PythonPickle.php	/^            $enclosure     = "'";$/;"	v
enclosure	library\Zend\Serializer\Adapter\PythonPickle.php	/^            $enclosure     = '"';$/;"	v
eolLen	library\Zend\Serializer\Adapter\PythonPickle.php	/^            $eolLen = 1;$/;"	v
eolLen	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $eolLen = 2;$/;"	v
eolPos	library\Zend\Serializer\Adapter\PythonPickle.php	/^            $eolPos = strpos($this->_pickle, "\\n", $this->_pos);$/;"	v
eolPos	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $eolPos = strpos($this->_pickle, "\\r\\n", $this->_pos);$/;"	v
float	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $float = (float)$this->_readline();$/;"	v
highBits	library\Zend\Serializer\Adapter\PythonPickle.php	/^            $highBits = $value >> 31;  \/\/ note that Python shift sign-extends$/;"	v
id	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $id = (int)$this->_readline();$/;"	v
id	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $id = count($this->_memo);$/;"	v
id	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $id = ord($this->_read(1));$/;"	v
idBin	library\Zend\Serializer\Adapter\PythonPickle.php	/^                    $idBin = strrev($bin);$/;"	v
idBin	library\Zend\Serializer\Adapter\PythonPickle.php	/^                $idBin = pack('l', $id);$/;"	v
int	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $int = (int) $number;$/;"	v
k	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $k                =  $this->_lastMarker();$/;"	v
k	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $k    =  $this->_lastMarker();$/;"	v
k	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $k = $this->_lastMarker();$/;"	v
key	library\Zend\Serializer\Adapter\PythonPickle.php	/^            $key        = $this->_stack[$i];$/;"	v
key	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $key   =  array_pop($this->_stack);$/;"	v
lastStack	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $lastStack = count($this->_stack)-1;$/;"	v
len	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $len            = ord($this->_read(1));$/;"	v
line	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $line = $this->_readline();$/;"	v
list	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $list   =& $this->_stack[count($this->_stack)-1];$/;"	v
list	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $list =& $this->_stack[$k - 1];$/;"	v
long	library\Zend\Serializer\Adapter\PythonPickle.php	/^                $long = bcadd($long, bcmul(ord($data[$i]), bcpow(256, $i, 0)));$/;"	v
long	library\Zend\Serializer\Adapter\PythonPickle.php	/^                $long = bcsub($long, bcpow(2, $nbytes * 8));$/;"	v
long	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $long = 0;$/;"	v
max	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $max              =  count($this->_stack);$/;"	v
max	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $max  =  count($this->_stack);$/;"	v
max	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $max = count($this->_stack);$/;"	v
n	library\Zend\Serializer\Adapter\PythonPickle.php	/^            $n = strlen($value);$/;"	v
n	library\Zend\Serializer\Adapter\PythonPickle.php	/^            $n = strrev($n);$/;"	v
n	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $n              = ord($this->_read(1));$/;"	v
n	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $n    = ord($this->_read(1));$/;"	v
n	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $n = $this->_read(4);$/;"	v
nBin	library\Zend\Serializer\Adapter\PythonPickle.php	/^            $nBin = strrev($$nBin);$/;"	v
nBin	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $nBin = $this->_read(4);$/;"	v
nbytes	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $nbytes = strlen($data);$/;"	v
opts	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $opts = $opts + $this->_options;$/;"	v
pattern	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $pattern = '\/\\\\\\\\u([a-fA-F0-9]{4})\/u'; \/\/ \\uXXXX$/;"	v
pickle	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $pickle = $this->_pickle;$/;"	v
proto	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $proto = ord($this->_read(1));$/;"	v
quoteArr	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $quoteArr = array_flip(self::$_quoteString);$/;"	v
quoteArr	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $quoteArr = self::$_quoteString;$/;"	v
ret	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $ret        = substr($this->_pickle, $this->_pos, $eolPos-$this->_pos);$/;"	v
ret	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $ret = array_pop($this->_stack);$/;"	v
tuple	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $tuple            =& $this->_stack[$k];$/;"	v
uniCode	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $uniCode = hexdec($hex);$/;"	v
utf8Char	library\Zend\Serializer\Adapter\PythonPickle.php	/^            $utf8Char  = chr(0xF0 | $uniCode >> 18)$/;"	v
utf8Char	library\Zend\Serializer\Adapter\PythonPickle.php	/^            $utf8Char = chr($uniCode);$/;"	v
utf8Char	library\Zend\Serializer\Adapter\PythonPickle.php	/^            $utf8Char = chr(0xC0 | $uniCode >> 6)$/;"	v
utf8Char	library\Zend\Serializer\Adapter\PythonPickle.php	/^            $utf8Char = chr(0xE0 | $uniCode >> 12)$/;"	v
value	library\Zend\Serializer\Adapter\PythonPickle.php	/^                $value = $this->_checkProtocolNumber($value);$/;"	v
value	library\Zend\Serializer\Adapter\PythonPickle.php	/^            $value      = $this->_stack[$i + 1];$/;"	v
value	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $value  =  array_pop($this->_stack);$/;"	v
value	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $value =  array_pop($this->_stack);$/;"	v
value1	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $value1 = array_pop($this->_stack);$/;"	v
value2	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $value2 = array_pop($this->_stack);$/;"	v
value3	library\Zend\Serializer\Adapter\PythonPickle.php	/^        $value3 = array_pop($this->_stack);$/;"	v
Zend_Serializer_Adapter_Wddx	library\Zend\Serializer\Adapter\Wddx.php	/^class Zend_Serializer_Adapter_Wddx extends Zend_Serializer_Adapter_AdapterAbstract$/;"	c
errMsg	library\Zend\Serializer\Adapter\Wddx.php	/^                $errMsg = $e->getMessage();$/;"	v
errMsg	library\Zend\Serializer\Adapter\Wddx.php	/^                $errMsg = 'Can\\'t unserialize wddx string';$/;"	v
lastErr	library\Zend\Serializer\Adapter\Wddx.php	/^            $lastErr = error_get_last();$/;"	v
opts	library\Zend\Serializer\Adapter\Wddx.php	/^        $opts = $opts + $this->_options;$/;"	v
ret	library\Zend\Serializer\Adapter\Wddx.php	/^        $ret = wddx_deserialize($wddx);$/;"	v
simpleXml	library\Zend\Serializer\Adapter\Wddx.php	/^                $simpleXml = new SimpleXMLElement($wddx);$/;"	v
wddx	library\Zend\Serializer\Adapter\Wddx.php	/^            $wddx = wddx_serialize_value($value);$/;"	v
wddx	library\Zend\Serializer\Adapter\Wddx.php	/^            $wddx = wddx_serialize_value($value, (string)$opts['comment']);$/;"	v
Zend_Serializer_Exception	library\Zend\Serializer\Exception.php	/^class Zend_Serializer_Exception extends Zend_Exception$/;"	c
callback	library\Zend\Server\Abstract.php	/^        $callback = $invocable->getCallback();$/;"	v
callback	library\Zend\Server\Abstract.php	/^        $callback = new Zend_Server_Method_Callback();$/;"	v
class	library\Zend\Server\Abstract.php	/^        $class  = $callback->getClass();$/;"	v
definition	library\Zend\Server\Abstract.php	/^        $definition = new Zend_Server_Method_Definition();$/;"	v
function	library\Zend\Server\Abstract.php	/^            $function = $callback->getFunction();$/;"	v
invokeArgs	library\Zend\Server\Abstract.php	/^            $invokeArgs = $invocable->getInvokeArguments();$/;"	v
method	library\Zend\Server\Abstract.php	/^        $method     = empty($ns) ? $name : $ns . '.' . $name;$/;"	v
method	library\Zend\Server\Abstract.php	/^        $method = $callback->getMethod();$/;"	v
name	library\Zend\Server\Abstract.php	/^        $name       = $reflection->getName();$/;"	v
ns	library\Zend\Server\Abstract.php	/^        $ns         = $reflection->getNamespace();$/;"	v
object	library\Zend\Server\Abstract.php	/^                $object     = $reflection->newInstanceArgs($invokeArgs);$/;"	v
object	library\Zend\Server\Abstract.php	/^                $object = new $class;$/;"	v
object	library\Zend\Server\Abstract.php	/^        $object = $invocable->getObject();$/;"	v
param	library\Zend\Server\Abstract.php	/^                $param = new Zend_Server_Method_Parameter(array($/;"	v
prototype	library\Zend\Server\Abstract.php	/^            $prototype = new Zend_Server_Method_Prototype();$/;"	v
reflection	library\Zend\Server\Abstract.php	/^                $reflection = new ReflectionClass($class);$/;"	v
type	library\Zend\Server\Abstract.php	/^        $type     = $callback->getType();$/;"	v
Zend_Server_Cache	library\Zend\Server\Cache.php	/^class Zend_Server_Cache$/;"	c
definition	library\Zend\Server\Cache.php	/^            $definition = new Zend_Server_Definition();$/;"	v
methods	library\Zend\Server\Cache.php	/^            $methods = $definition;$/;"	v
methods	library\Zend\Server\Cache.php	/^        $methods = $server->getFunctions();$/;"	v
Zend_Server_Definition	library\Zend\Server\Definition.php	/^class Zend_Server_Definition implements Countable, Iterator$/;"	c
method	library\Zend\Server\Definition.php	/^            $method = new Zend_Server_Method_Definition($method);$/;"	v
methods	library\Zend\Server\Definition.php	/^        $methods = array();$/;"	v
name	library\Zend\Server\Definition.php	/^            $name = $method->getName();$/;"	v
name	library\Zend\Server\Definition.php	/^            $name = null;$/;"	v
Zend_Server_Exception	library\Zend\Server\Exception.php	/^class Zend_Server_Exception extends Zend_Exception$/;"	c
Zend_Server_Method_Callback	library\Zend\Server\Method\Callback.php	/^class Zend_Server_Method_Callback$/;"	c
array	library\Zend\Server\Method\Callback.php	/^        $array = array($/;"	v
class	library\Zend\Server\Method\Callback.php	/^            $class = get_class($class);$/;"	v
method	library\Zend\Server\Method\Callback.php	/^            $method = 'set' . ucfirst($key);$/;"	v
type	library\Zend\Server\Method\Callback.php	/^        $type = $this->getType();$/;"	v
Zend_Server_Method_Definition	library\Zend\Server\Method\Definition.php	/^class Zend_Server_Method_Definition$/;"	c
callback	library\Zend\Server\Method\Definition.php	/^            $callback = new Zend_Server_Method_Callback($callback);$/;"	v
method	library\Zend\Server\Method\Definition.php	/^            $method = 'set' . ucfirst($key);$/;"	v
prototype	library\Zend\Server\Method\Definition.php	/^            $prototype = new Zend_Server_Method_Prototype($prototype);$/;"	v
prototypes	library\Zend\Server\Method\Definition.php	/^        $prototypes = $this->getPrototypes();$/;"	v
signatures	library\Zend\Server\Method\Definition.php	/^        $signatures = array();$/;"	v
Zend_Server_Method_Parameter	library\Zend\Server\Method\Parameter.php	/^class Zend_Server_Method_Parameter$/;"	c
method	library\Zend\Server\Method\Parameter.php	/^            $method = 'set' . ucfirst($key);$/;"	v
Zend_Server_Method_Prototype	library\Zend\Server\Method\Prototype.php	/^class Zend_Server_Method_Prototype$/;"	c
index	library\Zend\Server\Method\Prototype.php	/^            $index = $this->_parameterNameMap[$index];$/;"	v
method	library\Zend\Server\Method\Prototype.php	/^            $method = 'set' . ucfirst($key);$/;"	v
parameter	library\Zend\Server\Method\Prototype.php	/^            $parameter = new Zend_Server_Method_Parameter(array($/;"	v
types	library\Zend\Server\Method\Prototype.php	/^        $types = array();$/;"	v
Zend_Server_Reflection	library\Zend\Server\Reflection.php	/^class Zend_Server_Reflection$/;"	c
reflection	library\Zend\Server\Reflection.php	/^            $reflection = new ReflectionClass($class);$/;"	v
reflection	library\Zend\Server\Reflection.php	/^            $reflection = new ReflectionObject($class);$/;"	v
Zend_Server_Reflection_Class	library\Zend\Server\Reflection\Class.php	/^class Zend_Server_Reflection_Class$/;"	c
Zend_Server_Reflection_Exception	library\Zend\Server\Reflection\Exception.php	/^class Zend_Server_Reflection_Exception extends Zend_Server_Exception$/;"	c
Zend_Server_Reflection_Function	library\Zend\Server\Reflection\Function.php	/^class Zend_Server_Reflection_Function extends Zend_Server_Reflection_Function_Abstract$/;"	c
class	library\Zend\Server\Reflection\Function\Abstract.php	/^            $class = new ReflectionClass($this->_class);$/;"	v
docBlock	library\Zend\Server\Reflection\Function\Abstract.php	/^        $docBlock           = $function->getDocComment();$/;"	v
endPoints	library\Zend\Server\Reflection\Function\Abstract.php	/^                $endPoints = array_merge($endPoints, $tmp);$/;"	v
endPoints	library\Zend\Server\Reflection\Function\Abstract.php	/^                $endPoints = array_merge($endPoints, array($root));$/;"	v
endPoints	library\Zend\Server\Reflection\Function\Abstract.php	/^        $endPoints = array();$/;"	v
function	library\Zend\Server\Reflection\Function\Abstract.php	/^        $function           = $this->_reflection;$/;"	v
helpText	library\Zend\Server\Reflection\Function\Abstract.php	/^                $helpText = $matches[1];$/;"	v
helpText	library\Zend\Server\Reflection\Function\Abstract.php	/^                $helpText = preg_replace('\/(^\\s*\\*\\s)\/m', '', $helpText);$/;"	v
helpText	library\Zend\Server\Reflection\Function\Abstract.php	/^                $helpText = preg_replace('\/\\r?\\n\\s*\\*\\s*(\\r?\\n)*\/s', "\\n", $helpText);$/;"	v
helpText	library\Zend\Server\Reflection\Function\Abstract.php	/^                $helpText = trim($helpText);$/;"	v
helpText	library\Zend\Server\Reflection\Function\Abstract.php	/^            $helpText = $function->getName();$/;"	v
helpText	library\Zend\Server\Reflection\Function\Abstract.php	/^        $helpText           = '';$/;"	v
node	library\Zend\Server\Reflection\Function\Abstract.php	/^                $node = $node->getParent();$/;"	v
node	library\Zend\Server\Reflection\Function\Abstract.php	/^            $node = new Zend_Server_Reflection_Node($value);$/;"	v
node	library\Zend\Server\Reflection\Function\Abstract.php	/^            $node = new Zend_Server_Reflection_Node($value, $parent);$/;"	v
param	library\Zend\Server\Reflection\Function\Abstract.php	/^                $param = new Zend_Server_Reflection_Parameter($params[$key], $type, (isset($this->_paramDesc[$key]) ? $this->_paramDesc[$key] : null));$/;"	v
paramCount	library\Zend\Server\Reflection\Function\Abstract.php	/^        $paramCount         = $function->getNumberOfParameters();$/;"	v
paramCountRequired	library\Zend\Server\Reflection\Function\Abstract.php	/^        $paramCountRequired = $function->getNumberOfRequiredParameters();$/;"	v
paramDesc	library\Zend\Server\Reflection\Function\Abstract.php	/^                    $paramDesc = $matches[2];$/;"	v
paramDesc	library\Zend\Server\Reflection\Function\Abstract.php	/^            $paramDesc = array();$/;"	v
paramDesc	library\Zend\Server\Reflection\Function\Abstract.php	/^            $paramDesc = array_fill(0, $paramCount, '');$/;"	v
paramType	library\Zend\Server\Reflection\Function\Abstract.php	/^                    $paramType = 'array';$/;"	v
paramType	library\Zend\Server\Reflection\Function\Abstract.php	/^                $paramType = 'mixed';$/;"	v
paramTypes	library\Zend\Server\Reflection\Function\Abstract.php	/^        $paramTypes = array();$/;"	v
paramTypesTmp	library\Zend\Server\Reflection\Function\Abstract.php	/^                $paramTypesTmp = $matches[1];$/;"	v
paramTypesTmp	library\Zend\Server\Reflection\Function\Abstract.php	/^            $paramTypesTmp = array();$/;"	v
paramTypesTmp	library\Zend\Server\Reflection\Function\Abstract.php	/^            $paramTypesTmp = array_fill(0, $paramCount, 'mixed');$/;"	v
parameters	library\Zend\Server\Reflection\Function\Abstract.php	/^        $parameters         = $function->getParameters();$/;"	v
params	library\Zend\Server\Reflection\Function\Abstract.php	/^        $params = $this->_reflection->getParameters();$/;"	v
return	library\Zend\Server\Reflection\Function\Abstract.php	/^                $return = explode('|', $matches[1]);$/;"	v
return	library\Zend\Server\Reflection\Function\Abstract.php	/^            $return     = 'void';$/;"	v
return	library\Zend\Server\Reflection\Function\Abstract.php	/^            $return   = 'void';$/;"	v
return	library\Zend\Server\Reflection\Function\Abstract.php	/^            $return = new Zend_Server_Reflection_ReturnValue(array_shift($signature), $this->_returnDesc);$/;"	v
returnDesc	library\Zend\Server\Reflection\Function\Abstract.php	/^                    $returnDesc = trim($value);$/;"	v
returnDesc	library\Zend\Server\Reflection\Function\Abstract.php	/^        $returnDesc         = '';$/;"	v
returnTree	library\Zend\Server\Reflection\Function\Abstract.php	/^        $returnTree = array();$/;"	v
signature	library\Zend\Server\Reflection\Function\Abstract.php	/^            $signature = array();$/;"	v
signatureTrees	library\Zend\Server\Reflection\Function\Abstract.php	/^        $signatureTrees        = $this->_buildTree();$/;"	v
signatures	library\Zend\Server\Reflection\Function\Abstract.php	/^        $signatures            = array();$/;"	v
signatures	library\Zend\Server\Reflection\Function\Abstract.php	/^        $signatures         = array();$/;"	v
start	library\Zend\Server\Reflection\Function\Abstract.php	/^            $start = $paramCount - count($paramDesc);$/;"	v
start	library\Zend\Server\Reflection\Function\Abstract.php	/^            $start = $paramCount - count($paramTypesTmp);$/;"	v
tmp	library\Zend\Server\Reflection\Function\Abstract.php	/^            $tmp    = array();$/;"	v
tmp	library\Zend\Server\Reflection\Function\Abstract.php	/^            $tmp = $root->getEndPoints();$/;"	v
tmp	library\Zend\Server\Reflection\Function\Abstract.php	/^            $tmp = explode('|', $param);$/;"	v
value	library\Zend\Server\Reflection\Function\Abstract.php	/^                        $value = preg_replace('\/\\s?\\*\\s\/m', '', $value);$/;"	v
value	library\Zend\Server\Reflection\Function\Abstract.php	/^                        $value = preg_replace('\/\\s{2,}\/', ' ', $value);$/;"	v
value	library\Zend\Server\Reflection\Function\Abstract.php	/^                    $value = $matches[1];$/;"	v
value	library\Zend\Server\Reflection\Function\Abstract.php	/^                    $value = preg_replace('\/\\s?\\*\\s\/m', '', $value);$/;"	v
value	library\Zend\Server\Reflection\Function\Abstract.php	/^                    $value = preg_replace('\/\\s{2,}\/', ' ', $value);$/;"	v
Zend_Server_Reflection_Method	library\Zend\Server\Reflection\Method.php	/^class Zend_Server_Reflection_Method extends Zend_Server_Reflection_Function_Abstract$/;"	c
classNamespace	library\Zend\Server\Reflection\Method.php	/^        $classNamespace = $class->getNamespace();$/;"	v
Zend_Server_Reflection_Node	library\Zend\Server\Reflection\Node.php	/^class Zend_Server_Reflection_Node$/;"	c
child	library\Zend\Server\Reflection\Node.php	/^        $child = new self($value, $this);$/;"	v
childEndPoints	library\Zend\Server\Reflection\Node.php	/^                $childEndPoints = $child->getEndPoints();$/;"	v
endPoints	library\Zend\Server\Reflection\Node.php	/^                    $endPoints = array_merge($endPoints, $childEndPoints);$/;"	v
endPoints	library\Zend\Server\Reflection\Node.php	/^        $endPoints = array();$/;"	v
value	library\Zend\Server\Reflection\Node.php	/^            $value = $child->getValue();$/;"	v
Zend_Server_Reflection_Parameter	library\Zend\Server\Reflection\Parameter.php	/^class Zend_Server_Reflection_Parameter$/;"	c
Zend_Server_Reflection_Prototype	library\Zend\Server\Reflection\Prototype.php	/^class Zend_Server_Reflection_Prototype$/;"	c
Zend_Server_Reflection_ReturnValue	library\Zend\Server\Reflection\ReturnValue.php	/^class Zend_Server_Reflection_ReturnValue$/;"	c
Zend_Service_Akismet	library\Zend\Service\Akismet.php	/^class Zend_Service_Akismet extends Zend_Service_Abstract$/;"	c
blog	library\Zend\Service\Akismet.php	/^            $blog = $this->getBlogUrl();$/;"	v
client	library\Zend\Service\Akismet.php	/^        $client = self::getHttpClient();$/;"	v
key	library\Zend\Service\Akismet.php	/^            $key = $this->getApiKey();$/;"	v
response	library\Zend\Service\Akismet.php	/^        $response = $this->_makeApiCall('\/1.1\/comment-check', $params);$/;"	v
response	library\Zend\Service\Akismet.php	/^        $response = $this->_makeApiCall('\/1.1\/submit-ham', $params);$/;"	v
response	library\Zend\Service\Akismet.php	/^        $response = $this->_makeApiCall('\/1.1\/submit-spam', $params);$/;"	v
response	library\Zend\Service\Akismet.php	/^        $response = $this->_post('rest.akismet.com', '\/1.1\/verify-key', array($/;"	v
return	library\Zend\Service\Akismet.php	/^        $return = trim($response->getBody());$/;"	v
uri	library\Zend\Service\Akismet.php	/^        $uri    = 'http:\/\/' . $host . ':' . $this->getPort() . $path;$/;"	v
value	library\Zend\Service\Akismet.php	/^        $value    = trim($response->getBody());$/;"	v
Zend_Service_Amazon	library\Zend\Service\Amazon.php	/^class Zend_Service_Amazon$/;"	c
client	library\Zend\Service\Amazon.php	/^        $client = $this->getRestClient();$/;"	v
code	library\Zend\Service\Amazon.php	/^            $code = $xpath->query('\/\/az:Error\/az:Code\/text()')->item(0)->data;$/;"	v
countryCode	library\Zend\Service\Amazon.php	/^        $countryCode = (string) $countryCode;$/;"	v
defaultOptions	library\Zend\Service\Amazon.php	/^        $defaultOptions = array('ResponseGroup' => 'Small');$/;"	v
dom	library\Zend\Service\Amazon.php	/^        $dom = new DOMDocument();$/;"	v
items	library\Zend\Service\Amazon.php	/^        $items = $xpath->query('\/\/az:Items\/az:Item');$/;"	v
message	library\Zend\Service\Amazon.php	/^            $message = $xpath->query('\/\/az:Error\/az:Message\/text()')->item(0)->data;$/;"	v
options	library\Zend\Service\Amazon.php	/^        $options = $this->_prepareOptions('ItemLookup', $options, $defaultOptions);$/;"	v
options	library\Zend\Service\Amazon.php	/^        $options = $this->_prepareOptions('ItemSearch', $options, $defaultOptions);$/;"	v
options	library\Zend\Service\Amazon.php	/^        $options = array_merge($defaultOptions, $options);$/;"	v
params	library\Zend\Service\Amazon.php	/^        $params = array();$/;"	v
response	library\Zend\Service\Amazon.php	/^        $response = $client->restGet('\/onca\/xml', $options);$/;"	v
responseGroup	library\Zend\Service\Amazon.php	/^            $responseGroup = explode(',', $options['ResponseGroup']);$/;"	v
signature	library\Zend\Service\Amazon.php	/^        $signature = self::buildRawSignature($baseUri, $options);$/;"	v
xpath	library\Zend\Service\Amazon.php	/^        $xpath = new DOMXPath($dom);$/;"	v
accessKey	library\Zend\Service\Amazon\Abstract.php	/^            $accessKey = self::$_defaultAccessKey;$/;"	v
secretKey	library\Zend\Service\Amazon\Abstract.php	/^            $secretKey = self::$_defaultSecretKey;$/;"	v
Zend_Service_Amazon_Accessories	library\Zend\Service\Amazon\Accessories.php	/^class Zend_Service_Amazon_Accessories$/;"	c
xpath	library\Zend\Service\Amazon\Accessories.php	/^        $xpath = new DOMXPath($dom->ownerDocument);$/;"	v
Zend_Service_Amazon_Authentication_Exception	library\Zend\Service\Amazon\Authentication\Exception.php	/^class Zend_Service_Amazon_Authentication_Exception extends Zend_Service_Amazon_Exception$/;"	c
Zend_Service_Amazon_Authentication_S3	library\Zend\Service\Amazon\Authentication\S3.php	/^class Zend_Service_Amazon_Authentication_S3 extends Zend_Service_Amazon_Authentication$/;"	c
amz_headers	library\Zend\Service\Amazon\Authentication\S3.php	/^        $amz_headers = array();$/;"	v
date	library\Zend\Service\Amazon\Authentication\S3.php	/^                $date = $val;$/;"	v
date	library\Zend\Service\Amazon\Authentication\S3.php	/^            $date = '';$/;"	v
headers	library\Zend\Service\Amazon\Authentication\S3.php	/^            $headers = array($headers);$/;"	v
key	library\Zend\Service\Amazon\Authentication\S3.php	/^            $key = strtolower($key);$/;"	v
md5	library\Zend\Service\Amazon\Authentication\S3.php	/^                $md5 = $val;$/;"	v
sig_str	library\Zend\Service\Amazon\Authentication\S3.php	/^        $sig_str = "$method\\n$md5\\n$type\\n$date\\n";$/;"	v
signature	library\Zend\Service\Amazon\Authentication\S3.php	/^        $signature = base64_encode(Zend_Crypt_Hmac::compute($this->_secretKey, 'sha1', utf8_encode($sig_str), Zend_Crypt_Hmac::BINARY));$/;"	v
type	library\Zend\Service\Amazon\Authentication\S3.php	/^                $type = $val;$/;"	v
type	library\Zend\Service\Amazon\Authentication\S3.php	/^        $type = $md5 = $date = '';$/;"	v
Zend_Service_Amazon_Authentication_V1	library\Zend\Service\Amazon\Authentication\V1.php	/^class Zend_Service_Amazon_Authentication_V1 extends Zend_Service_Amazon_Authentication$/;"	c
data	library\Zend\Service\Amazon\Authentication\V1.php	/^        $data = $this->_signParameters($url, $parameters);$/;"	v
data	library\Zend\Service\Amazon\Authentication\V1.php	/^        $data = '';$/;"	v
hmac	library\Zend\Service\Amazon\Authentication\V1.php	/^        $hmac = Zend_Crypt_Hmac::compute($this->_secretKey, 'SHA1', $data, Zend_Crypt_Hmac::BINARY);$/;"	v
Zend_Service_Amazon_Authentication_V2	library\Zend\Service\Amazon\Authentication\V2.php	/^class Zend_Service_Amazon_Authentication_V2 extends Zend_Service_Amazon_Authentication$/;"	c
arrData	library\Zend\Service\Amazon\Authentication\V2.php	/^        $arrData = array();$/;"	v
data	library\Zend\Service\Amazon\Authentication\V2.php	/^        $data = $this->_httpMethod . "\\n";$/;"	v
data	library\Zend\Service\Amazon\Authentication\V2.php	/^        $data = $this->_signParameters($url, $parameters);$/;"	v
hmac	library\Zend\Service\Amazon\Authentication\V2.php	/^        $hmac = Zend_Crypt_Hmac::compute($this->_secretKey, 'SHA256', $data, Zend_Crypt_Hmac::BINARY);$/;"	v
Zend_Service_Amazon_CustomerReview	library\Zend\Service\Amazon\CustomerReview.php	/^class Zend_Service_Amazon_CustomerReview$/;"	c
result	library\Zend\Service\Amazon\CustomerReview.php	/^            $result = $xpath->query(".\/az:$el\/text()", $dom);$/;"	v
xpath	library\Zend\Service\Amazon\CustomerReview.php	/^        $xpath = new DOMXPath($dom->ownerDocument);$/;"	v
Zend_Service_Amazon_Ec2	library\Zend\Service\Amazon\Ec2.php	/^class Zend_Service_Amazon_Ec2$/;"	c
class	library\Zend\Service\Amazon\Ec2.php	/^                $class = 'Zend_Service_Amazon_Ec2_Availabilityzones';$/;"	v
class	library\Zend\Service\Amazon\Ec2.php	/^                $class = 'Zend_Service_Amazon_Ec2_Ebs';$/;"	v
class	library\Zend\Service\Amazon\Ec2.php	/^                $class = 'Zend_Service_Amazon_Ec2_Elasticip';$/;"	v
class	library\Zend\Service\Amazon\Ec2.php	/^                $class = 'Zend_Service_Amazon_Ec2_Image';$/;"	v
class	library\Zend\Service\Amazon\Ec2.php	/^                $class = 'Zend_Service_Amazon_Ec2_Instance';$/;"	v
class	library\Zend\Service\Amazon\Ec2.php	/^                $class = 'Zend_Service_Amazon_Ec2_Keypair';$/;"	v
class	library\Zend\Service\Amazon\Ec2.php	/^                $class = 'Zend_Service_Amazon_Ec2_Securitygroups';$/;"	v
arrData	library\Zend\Service\Amazon\Ec2\Abstract.php	/^        $arrData = array();$/;"	v
code	library\Zend\Service\Amazon\Ec2\Abstract.php	/^            $code    = $xpath->evaluate('string(Code\/text())', $node);$/;"	v
data	library\Zend\Service\Amazon\Ec2\Abstract.php	/^        $data = "POST\\n";$/;"	v
hmac	library\Zend\Service\Amazon\Ec2\Abstract.php	/^        $hmac = Zend_Crypt_Hmac::compute($this->_getSecretKey(), 'SHA256', $data, Zend_Crypt_Hmac::BINARY);$/;"	v
httpResponse	library\Zend\Service\Amazon\Ec2\Abstract.php	/^            $httpResponse = $request->request();$/;"	v
list	library\Zend\Service\Amazon\Ec2\Abstract.php	/^        $list  = $xpath->query('\/\/Error');$/;"	v
message	library\Zend\Service\Amazon\Ec2\Abstract.php	/^            $message = $xpath->evaluate('string(Message\/text())', $node);$/;"	v
message	library\Zend\Service\Amazon\Ec2\Abstract.php	/^            $message = 'Error in request to AWS service: ' . $zhce->getMessage();$/;"	v
node	library\Zend\Service\Amazon\Ec2\Abstract.php	/^            $node    = $list->item(0);$/;"	v
params	library\Zend\Service\Amazon\Ec2\Abstract.php	/^        $params = $this->addRequiredParameters($params);$/;"	v
region	library\Zend\Service\Amazon\Ec2\Abstract.php	/^            $region = self::$_defaultRegion;$/;"	v
request	library\Zend\Service\Amazon\Ec2\Abstract.php	/^            $request = self::getHttpClient();$/;"	v
response	library\Zend\Service\Amazon\Ec2\Abstract.php	/^        $response = new Zend_Service_Amazon_Ec2_Response($httpResponse);$/;"	v
url	library\Zend\Service\Amazon\Ec2\Abstract.php	/^        $url = 'https:\/\/' . $this->_getRegion() . $this->_ec2Endpoint . '\/';$/;"	v
xpath	library\Zend\Service\Amazon\Ec2\Abstract.php	/^        $xpath = new DOMXPath($response->getDocument());$/;"	v
Zend_Service_Amazon_Ec2_Availabilityzones	library\Zend\Service\Amazon\Ec2\Availabilityzones.php	/^class Zend_Service_Amazon_Ec2_Availabilityzones extends Zend_Service_Amazon_Ec2_Abstract$/;"	c
item	library\Zend\Service\Amazon\Ec2\Availabilityzones.php	/^            $item = array();$/;"	v
nodes	library\Zend\Service\Amazon\Ec2\Availabilityzones.php	/^        $nodes  = $xpath->query('\/\/ec2:item');$/;"	v
params	library\Zend\Service\Amazon\Ec2\Availabilityzones.php	/^        $params = array();$/;"	v
response	library\Zend\Service\Amazon\Ec2\Availabilityzones.php	/^        $response = $this->sendRequest($params);$/;"	v
return	library\Zend\Service\Amazon\Ec2\Availabilityzones.php	/^        $return = array();$/;"	v
xpath	library\Zend\Service\Amazon\Ec2\Availabilityzones.php	/^        $xpath  = $response->getXPath();$/;"	v
Zend_Service_Amazon_Ec2_CloudWatch	library\Zend\Service\Amazon\Ec2\CloudWatch.php	/^class Zend_Service_Amazon_Ec2_CloudWatch extends Zend_Service_Amazon_Ec2_Abstract$/;"	c
_usedStatistics	library\Zend\Service\Amazon\Ec2\CloudWatch.php	/^        $_usedStatistics = array();$/;"	v
item	library\Zend\Service\Amazon\Ec2\CloudWatch.php	/^            $item = array();$/;"	v
nodes	library\Zend\Service\Amazon\Ec2\CloudWatch.php	/^        $nodes = $xpath->query('\/\/ec2:GetMetricStatisticsResult\/ec2:Datapoints\/ec2:member');$/;"	v
nodes	library\Zend\Service\Amazon\Ec2\CloudWatch.php	/^        $nodes = $xpath->query('\/\/ec2:ListMetricsResult\/ec2:Metrics\/ec2:member');$/;"	v
params	library\Zend\Service\Amazon\Ec2\CloudWatch.php	/^        $params = array();$/;"	v
params	library\Zend\Service\Amazon\Ec2\CloudWatch.php	/^        $params = array_merge($params, $options);$/;"	v
response	library\Zend\Service\Amazon\Ec2\CloudWatch.php	/^        $response = $this->sendRequest($params);$/;"	v
return	library\Zend\Service\Amazon\Ec2\CloudWatch.php	/^        $return = array();$/;"	v
x	library\Zend\Service\Amazon\Ec2\CloudWatch.php	/^            $x = 1;$/;"	v
xpath	library\Zend\Service\Amazon\Ec2\CloudWatch.php	/^        $xpath = $response->getXPath();$/;"	v
Zend_Service_Amazon_Ec2_Ebs	library\Zend\Service\Amazon\Ec2\Ebs.php	/^class Zend_Service_Amazon_Ec2_Ebs extends Zend_Service_Amazon_Ec2_Abstract$/;"	c
_as	library\Zend\Service\Amazon\Ec2\Ebs.php	/^                $_as = $attachmentSet->item(0);$/;"	v
as	library\Zend\Service\Amazon\Ec2\Ebs.php	/^                $as = array();$/;"	v
attachmentSet	library\Zend\Service\Amazon\Ec2\Ebs.php	/^            $attachmentSet = $xpath->query('ec2:attachmentSet\/ec2:item', $node);$/;"	v
item	library\Zend\Service\Amazon\Ec2\Ebs.php	/^            $item = array();$/;"	v
nodes	library\Zend\Service\Amazon\Ec2\Ebs.php	/^        $nodes = $xpath->query('\/\/ec2:snapshotSet\/ec2:item', $response->getDocument());$/;"	v
nodes	library\Zend\Service\Amazon\Ec2\Ebs.php	/^        $nodes = $xpath->query('\/\/ec2:volumeSet\/ec2:item', $response->getDocument());$/;"	v
params	library\Zend\Service\Amazon\Ec2\Ebs.php	/^        $params = array();$/;"	v
response	library\Zend\Service\Amazon\Ec2\Ebs.php	/^        $response = $this->sendRequest($params);$/;"	v
return	library\Zend\Service\Amazon\Ec2\Ebs.php	/^        $return = $xpath->evaluate('string(\/\/ec2:return\/text())');$/;"	v
return	library\Zend\Service\Amazon\Ec2\Ebs.php	/^        $return = array();$/;"	v
volumes	library\Zend\Service\Amazon\Ec2\Ebs.php	/^        $volumes = $this->describeVolume();$/;"	v
xpath	library\Zend\Service\Amazon\Ec2\Ebs.php	/^        $xpath  = $response->getXPath();$/;"	v
xpath	library\Zend\Service\Amazon\Ec2\Ebs.php	/^        $xpath = $response->getXPath();$/;"	v
Zend_Service_Amazon_Ec2_Elasticip	library\Zend\Service\Amazon\Ec2\Elasticip.php	/^class Zend_Service_Amazon_Ec2_Elasticip extends Zend_Service_Amazon_Ec2_Abstract$/;"	c
ip	library\Zend\Service\Amazon\Ec2\Elasticip.php	/^        $ip = $xpath->evaluate('string(\/\/ec2:publicIp\/text())');$/;"	v
item	library\Zend\Service\Amazon\Ec2\Elasticip.php	/^            $item = array();$/;"	v
nodes	library\Zend\Service\Amazon\Ec2\Elasticip.php	/^        $nodes  = $xpath->query('\/\/ec2:item');$/;"	v
params	library\Zend\Service\Amazon\Ec2\Elasticip.php	/^        $params = array();$/;"	v
response	library\Zend\Service\Amazon\Ec2\Elasticip.php	/^        $response = $this->sendRequest($params);$/;"	v
return	library\Zend\Service\Amazon\Ec2\Elasticip.php	/^        $return = $xpath->evaluate('string(\/\/ec2:return\/text())');$/;"	v
return	library\Zend\Service\Amazon\Ec2\Elasticip.php	/^        $return = array();$/;"	v
xpath	library\Zend\Service\Amazon\Ec2\Elasticip.php	/^        $xpath  = $response->getXPath();$/;"	v
xpath	library\Zend\Service\Amazon\Ec2\Elasticip.php	/^        $xpath = $response->getXPath();$/;"	v
Zend_Service_Amazon_Ec2_Exception	library\Zend\Service\Amazon\Ec2\Exception.php	/^class Zend_Service_Amazon_Ec2_Exception extends Zend_Service_Amazon_Exception$/;"	c
Zend_Service_Amazon_Ec2_Image	library\Zend\Service\Amazon\Ec2\Image.php	/^class Zend_Service_Amazon_Ec2_Image extends Zend_Service_Amazon_Ec2_Abstract$/;"	c
amiId	library\Zend\Service\Amazon\Ec2\Image.php	/^        $amiId = $xpath->evaluate('string(\/\/ec2:imageId\/text())');$/;"	v
item	library\Zend\Service\Amazon\Ec2\Image.php	/^            $item = array();$/;"	v
lPnodes	library\Zend\Service\Amazon\Ec2\Image.php	/^            $lPnodes = $xpath->query('\/\/ec2:launchPermission\/ec2:item');$/;"	v
nodes	library\Zend\Service\Amazon\Ec2\Image.php	/^        $nodes = $xpath->query('\/\/ec2:imagesSet\/ec2:item');$/;"	v
pCnodes	library\Zend\Service\Amazon\Ec2\Image.php	/^            $pCnodes = $xpath->query('\/\/ec2:productCodes\/ec2:item');$/;"	v
params	library\Zend\Service\Amazon\Ec2\Image.php	/^        $params                 = array();$/;"	v
params	library\Zend\Service\Amazon\Ec2\Image.php	/^        $params = array();$/;"	v
response	library\Zend\Service\Amazon\Ec2\Image.php	/^        $response = $this->sendRequest($params);$/;"	v
return	library\Zend\Service\Amazon\Ec2\Image.php	/^        $return = $xpath->evaluate('string(\/\/ec2:return\/text())');$/;"	v
return	library\Zend\Service\Amazon\Ec2\Image.php	/^        $return = array();$/;"	v
xpath	library\Zend\Service\Amazon\Ec2\Image.php	/^        $xpath  = $response->getXPath();$/;"	v
xpath	library\Zend\Service\Amazon\Ec2\Image.php	/^        $xpath = $response->getXPath();$/;"	v
Zend_Service_Amazon_Ec2_Instance	library\Zend\Service\Amazon\Ec2\Instance.php	/^class Zend_Service_Amazon_Ec2_Instance extends Zend_Service_Amazon_Ec2_Abstract$/;"	c
_defaultOptions	library\Zend\Service\Amazon\Ec2\Instance.php	/^        $_defaultOptions = array($/;"	v
arrInstances	library\Zend\Service\Amazon\Ec2\Instance.php	/^        $arrInstances = $this->describe(null, $ignoreTerminated);$/;"	v
arrReturn	library\Zend\Service\Amazon\Ec2\Instance.php	/^        $arrReturn = array();$/;"	v
gs	library\Zend\Service\Amazon\Ec2\Instance.php	/^            $gs = $xpath->query('ec2:groupSet\/ec2:item', $node);$/;"	v
gs	library\Zend\Service\Amazon\Ec2\Instance.php	/^        $gs = $xpath->query('\/\/ec2:groupSet\/ec2:item');$/;"	v
i	library\Zend\Service\Amazon\Ec2\Instance.php	/^            $i = array();$/;"	v
is	library\Zend\Service\Amazon\Ec2\Instance.php	/^            $is = $xpath->query('ec2:instancesSet\/ec2:item', $node);$/;"	v
is	library\Zend\Service\Amazon\Ec2\Instance.php	/^        $is = $xpath->query('\/\/ec2:instancesSet\/ec2:item');$/;"	v
item	library\Zend\Service\Amazon\Ec2\Instance.php	/^            $item = array();$/;"	v
items	library\Zend\Service\Amazon\Ec2\Instance.php	/^        $items = $xpath->query('\/\/ec2:instancesSet\/ec2:item');$/;"	v
nodes	library\Zend\Service\Amazon\Ec2\Instance.php	/^        $nodes = $xpath->query('\/\/ec2:instancesSet\/ec2:item');$/;"	v
nodes	library\Zend\Service\Amazon\Ec2\Instance.php	/^        $nodes = $xpath->query('\/\/ec2:reservationSet\/ec2:item');$/;"	v
options	library\Zend\Service\Amazon\Ec2\Instance.php	/^        $options = array_merge($_defaultOptions, $options);$/;"	v
params	library\Zend\Service\Amazon\Ec2\Instance.php	/^        $params = array();$/;"	v
response	library\Zend\Service\Amazon\Ec2\Instance.php	/^        $response = $this->sendRequest($params);$/;"	v
result	library\Zend\Service\Amazon\Ec2\Instance.php	/^        $result = $xpath->evaluate('string(\/\/ec2:result\/text())');$/;"	v
return	library\Zend\Service\Amazon\Ec2\Instance.php	/^        $return = $xpath->evaluate('string(\/\/ec2:return\/text())');$/;"	v
return	library\Zend\Service\Amazon\Ec2\Instance.php	/^        $return = array();$/;"	v
xpath	library\Zend\Service\Amazon\Ec2\Instance.php	/^        $xpath = $response->getXPath();$/;"	v
Zend_Service_Amazon_Ec2_Instance_Reserved	library\Zend\Service\Amazon\Ec2\Instance\Reserved.php	/^class Zend_Service_Amazon_Ec2_Instance_Reserved extends Zend_Service_Amazon_Ec2_Abstract$/;"	c
i	library\Zend\Service\Amazon\Ec2\Instance\Reserved.php	/^            $i = array();$/;"	v
items	library\Zend\Service\Amazon\Ec2\Instance\Reserved.php	/^        $items = $xpath->query('\/\/ec2:reservedInstancesOfferingsSet\/ec2:item');$/;"	v
items	library\Zend\Service\Amazon\Ec2\Instance\Reserved.php	/^        $items = $xpath->query('\/\/ec2:reservedInstancesSet\/ec2:item');$/;"	v
params	library\Zend\Service\Amazon\Ec2\Instance\Reserved.php	/^        $params = array();$/;"	v
reservedInstancesId	library\Zend\Service\Amazon\Ec2\Instance\Reserved.php	/^        $reservedInstancesId = $xpath->evaluate('string(\/\/ec2:reservedInstancesId\/text())');$/;"	v
response	library\Zend\Service\Amazon\Ec2\Instance\Reserved.php	/^        $response = $this->sendRequest($params);$/;"	v
return	library\Zend\Service\Amazon\Ec2\Instance\Reserved.php	/^        $return = array();$/;"	v
xpath	library\Zend\Service\Amazon\Ec2\Instance\Reserved.php	/^        $xpath = $response->getXPath();$/;"	v
Zend_Service_Amazon_Ec2_Instance_Windows	library\Zend\Service\Amazon\Ec2\Instance\Windows.php	/^class Zend_Service_Amazon_Ec2_Instance_Windows extends Zend_Service_Amazon_Ec2_Abstract$/;"	c
arrParams	library\Zend\Service\Amazon\Ec2\Instance\Windows.php	/^        $arrParams = array();$/;"	v
hmac	library\Zend\Service\Amazon\Ec2\Instance\Windows.php	/^        $hmac = Zend_Crypt_Hmac::compute($this->_getSecretKey(), 'SHA1', $policy, Zend_Crypt_Hmac::BINARY);$/;"	v
i	library\Zend\Service\Amazon\Ec2\Instance\Windows.php	/^            $i = array();$/;"	v
items	library\Zend\Service\Amazon\Ec2\Instance\Windows.php	/^        $items = $xpath->evaluate('\/\/ec2:bundleInstanceTasksSet\/ec2:item');$/;"	v
params	library\Zend\Service\Amazon\Ec2\Instance\Windows.php	/^        $params = array();$/;"	v
response	library\Zend\Service\Amazon\Ec2\Instance\Windows.php	/^        $response = $this->sendRequest($params);$/;"	v
return	library\Zend\Service\Amazon\Ec2\Instance\Windows.php	/^        $return = array();$/;"	v
uploadPolicy	library\Zend\Service\Amazon\Ec2\Instance\Windows.php	/^        $uploadPolicy = $this->_getS3UploadPolicy($s3Bucket, $s3Prefix, $uploadExpiration);$/;"	v
xpath	library\Zend\Service\Amazon\Ec2\Instance\Windows.php	/^        $xpath = $response->getXPath();$/;"	v
Zend_Service_Amazon_Ec2_Keypair	library\Zend\Service\Amazon\Ec2\Keypair.php	/^class Zend_Service_Amazon_Ec2_Keypair extends Zend_Service_Amazon_Ec2_Abstract$/;"	c
item	library\Zend\Service\Amazon\Ec2\Keypair.php	/^            $item = array();$/;"	v
nodes	library\Zend\Service\Amazon\Ec2\Keypair.php	/^        $nodes  = $xpath->query('\/\/ec2:keySet\/ec2:item');$/;"	v
params	library\Zend\Service\Amazon\Ec2\Keypair.php	/^        $params = array();$/;"	v
response	library\Zend\Service\Amazon\Ec2\Keypair.php	/^        $response = $this->sendRequest($params);$/;"	v
return	library\Zend\Service\Amazon\Ec2\Keypair.php	/^        $return = array();$/;"	v
success	library\Zend\Service\Amazon\Ec2\Keypair.php	/^        $success  = $xpath->evaluate('string(\/\/ec2:return\/text())');$/;"	v
xpath	library\Zend\Service\Amazon\Ec2\Keypair.php	/^        $xpath = $response->getXPath();$/;"	v
Zend_Service_Amazon_Ec2_Region	library\Zend\Service\Amazon\Ec2\Region.php	/^class Zend_Service_Amazon_Ec2_Region extends Zend_Service_Amazon_Ec2_Abstract$/;"	c
item	library\Zend\Service\Amazon\Ec2\Region.php	/^            $item = array();$/;"	v
nodes	library\Zend\Service\Amazon\Ec2\Region.php	/^        $nodes  = $xpath->query('\/\/ec2:item');$/;"	v
params	library\Zend\Service\Amazon\Ec2\Region.php	/^        $params = array();$/;"	v
response	library\Zend\Service\Amazon\Ec2\Region.php	/^        $response = $this->sendRequest($params);$/;"	v
return	library\Zend\Service\Amazon\Ec2\Region.php	/^        $return = array();$/;"	v
xpath	library\Zend\Service\Amazon\Ec2\Region.php	/^        $xpath  = $response->getXPath();$/;"	v
Zend_Service_Amazon_Ec2_Response	library\Zend\Service\Amazon\Ec2\Response.php	/^class Zend_Service_Amazon_Ec2_Response {$/;"	c
body	library\Zend\Service\Amazon\Ec2\Response.php	/^            $body = $this->_httpResponse->getBody();$/;"	v
body	library\Zend\Service\Amazon\Ec2\Response.php	/^            $body = false;$/;"	v
document	library\Zend\Service\Amazon\Ec2\Response.php	/^            $document = $this->getDocument();$/;"	v
errors	library\Zend\Service\Amazon\Ec2\Response.php	/^                $errors = libxml_use_internal_errors();$/;"	v
Zend_Service_Amazon_Ec2_Securitygroups	library\Zend\Service\Amazon\Ec2\Securitygroups.php	/^class Zend_Service_Amazon_Ec2_Securitygroups extends Zend_Service_Amazon_Ec2_Abstract$/;"	c
ip_nodes	library\Zend\Service\Amazon\Ec2\Securitygroups.php	/^            $ip_nodes = $xpath->query('ec2:ipPermissions\/ec2:item', $node);$/;"	v
ips	library\Zend\Service\Amazon\Ec2\Securitygroups.php	/^                $ips = $xpath->query('ec2:ipRanges\/ec2:item', $ip_node);$/;"	v
item	library\Zend\Service\Amazon\Ec2\Securitygroups.php	/^            $item = array();$/;"	v
nodes	library\Zend\Service\Amazon\Ec2\Securitygroups.php	/^        $nodes = $xpath->query('\/\/ec2:securityGroupInfo\/ec2:item');$/;"	v
params	library\Zend\Service\Amazon\Ec2\Securitygroups.php	/^        $params = array();$/;"	v
response	library\Zend\Service\Amazon\Ec2\Securitygroups.php	/^        $response = $this->sendRequest($params);$/;"	v
return	library\Zend\Service\Amazon\Ec2\Securitygroups.php	/^        $return = array();$/;"	v
sItem	library\Zend\Service\Amazon\Ec2\Securitygroups.php	/^                $sItem = array();$/;"	v
success	library\Zend\Service\Amazon\Ec2\Securitygroups.php	/^        $success  = $xpath->evaluate('string(\/\/ec2:return\/text())');$/;"	v
xpath	library\Zend\Service\Amazon\Ec2\Securitygroups.php	/^        $xpath = $response->getXPath();$/;"	v
Zend_Service_Amazon_EditorialReview	library\Zend\Service\Amazon\EditorialReview.php	/^class Zend_Service_Amazon_EditorialReview$/;"	c
xpath	library\Zend\Service\Amazon\EditorialReview.php	/^        $xpath = new DOMXPath($dom->ownerDocument);$/;"	v
Zend_Service_Amazon_Exception	library\Zend\Service\Amazon\Exception.php	/^class Zend_Service_Amazon_Exception extends Zend_Service_Exception$/;"	c
Zend_Service_Amazon_Image	library\Zend\Service\Amazon\Image.php	/^class Zend_Service_Amazon_Image$/;"	c
xpath	library\Zend\Service\Amazon\Image.php	/^        $xpath = new DOMXPath($dom->ownerDocument);$/;"	v
Zend_Service_Amazon_Item	library\Zend\Service\Amazon\Item.php	/^class Zend_Service_Amazon_Item$/;"	c
result	library\Zend\Service\Amazon\Item.php	/^            $result = $xpath->query(".\/az:ImageSets\/az:ImageSet[position() = 1]\/az:$im", $dom);$/;"	v
result	library\Zend\Service\Amazon\Item.php	/^        $result = $xpath->query('.\/az:Accessories\/*', $dom);$/;"	v
result	library\Zend\Service\Amazon\Item.php	/^        $result = $xpath->query('.\/az:CustomerReviews\/az:Review', $dom);$/;"	v
result	library\Zend\Service\Amazon\Item.php	/^        $result = $xpath->query('.\/az:DetailPageURL\/text()', $dom);$/;"	v
result	library\Zend\Service\Amazon\Item.php	/^        $result = $xpath->query('.\/az:EditorialReviews\/az:*', $dom);$/;"	v
result	library\Zend\Service\Amazon\Item.php	/^        $result = $xpath->query('.\/az:ItemAttributes\/az:*\/text()', $dom);$/;"	v
result	library\Zend\Service\Amazon\Item.php	/^        $result = $xpath->query('.\/az:ListmaniaLists\/*', $dom);$/;"	v
result	library\Zend\Service\Amazon\Item.php	/^        $result = $xpath->query('.\/az:Offers', $dom);$/;"	v
result	library\Zend\Service\Amazon\Item.php	/^        $result = $xpath->query('.\/az:SalesRank\/text()', $dom);$/;"	v
result	library\Zend\Service\Amazon\Item.php	/^        $result = $xpath->query('.\/az:SimilarProducts\/az:*', $dom);$/;"	v
result	library\Zend\Service\Amazon\Item.php	/^        $result = $xpath->query('.\/az:Tracks\/az:Disc', $dom);$/;"	v
resultSummary	library\Zend\Service\Amazon\Item.php	/^        $resultSummary = $xpath->query('.\/az:OfferSummary', $dom);$/;"	v
xpath	library\Zend\Service\Amazon\Item.php	/^        $xpath = new DOMXPath($dom->ownerDocument);$/;"	v
Zend_Service_Amazon_ListmaniaList	library\Zend\Service\Amazon\ListmaniaList.php	/^class Zend_Service_Amazon_ListmaniaList$/;"	c
xpath	library\Zend\Service\Amazon\ListmaniaList.php	/^        $xpath = new DOMXPath($dom->ownerDocument);$/;"	v
Price	library\Zend\Service\Amazon\Offer.php	/^        $Price = $xpath->query('.\/az:OfferListing\/az:Price\/az:Amount', $dom);$/;"	v
Zend_Service_Amazon_Offer	library\Zend\Service\Amazon\Offer.php	/^class Zend_Service_Amazon_Offer$/;"	c
availability	library\Zend\Service\Amazon\Offer.php	/^        $availability = $xpath->query('.\/az:OfferListing\/az:Availability\/text()', $dom)->item(0);$/;"	v
name	library\Zend\Service\Amazon\Offer.php	/^        $name = $xpath->query('.\/az:Merchant\/az:Name\/text()', $dom);$/;"	v
result	library\Zend\Service\Amazon\Offer.php	/^        $result = $xpath->query('.\/az:OfferListing\/az:IsEligibleForSuperSaverShipping\/text()', $dom);$/;"	v
xpath	library\Zend\Service\Amazon\Offer.php	/^        $xpath = new DOMXPath($dom->ownerDocument);$/;"	v
Zend_Service_Amazon_OfferSet	library\Zend\Service\Amazon\OfferSet.php	/^class Zend_Service_Amazon_OfferSet$/;"	c
lowestNewPrice	library\Zend\Service\Amazon\OfferSet.php	/^            $lowestNewPrice = $xpath->query('.\/az:OfferSummary\/az:LowestNewPrice\/az:Amount', $dom);$/;"	v
lowestUsedPrice	library\Zend\Service\Amazon\OfferSet.php	/^            $lowestUsedPrice = $xpath->query('.\/az:OfferSummary\/az:LowestUsedPrice\/az:Amount', $dom);$/;"	v
offer	library\Zend\Service\Amazon\OfferSet.php	/^        $offer = $xpath->query('.\/az:OfferSummary', $dom);$/;"	v
offers	library\Zend\Service\Amazon\OfferSet.php	/^        $offers = $xpath->query('.\/az:Offers\/az:Offer', $dom);$/;"	v
xpath	library\Zend\Service\Amazon\OfferSet.php	/^        $xpath = new DOMXPath($dom->ownerDocument);$/;"	v
Zend_Service_Amazon_Query	library\Zend\Service\Amazon\Query.php	/^class Zend_Service_Amazon_Query extends Zend_Service_Amazon$/;"	c
Zend_Service_Amazon_ResultSet	library\Zend\Service\Amazon\ResultSet.php	/^class Zend_Service_Amazon_ResultSet implements SeekableIterator$/;"	c
indexInt	library\Zend\Service\Amazon\ResultSet.php	/^        $indexInt = (int) $index;$/;"	v
result	library\Zend\Service\Amazon\ResultSet.php	/^        $result = $this->_xpath->query('\/\/az:TotalPages\/text()');$/;"	v
result	library\Zend\Service\Amazon\ResultSet.php	/^        $result = $this->_xpath->query('\/\/az:TotalResults\/text()');$/;"	v
Zend_Service_Amazon_S3	library\Zend\Service\Amazon\S3.php	/^class Zend_Service_Amazon_S3 extends Zend_Service_Amazon_Abstract$/;"	c
amz_headers	library\Zend\Service\Amazon\S3.php	/^        $amz_headers = array();$/;"	v
buckets	library\Zend\Service\Amazon\S3.php	/^        $buckets = array();$/;"	v
client	library\Zend\Service\Amazon\S3.php	/^        $client = self::getHttpClient();$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'application\/excel';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'application\/macbinhex40';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'application\/msword';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'application\/pdf';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'application\/pgp';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'application\/postscript';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'application\/powerpoint';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'application\/rtf';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'application\/x-gtar';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'application\/x-gzip';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'application\/x-httpd-php';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'application\/x-javascript';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'application\/x-photoshop';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'application\/x-shockwave-flash';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'application\/x-tar';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'application\/zip';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'audio\/midi';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'audio\/mpeg';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'audio\/wav';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'audio\/x-realaudio';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'binary\/octet-stream';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'image\/bitmap';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'image\/gif';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'image\/iff';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'image\/jb2';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'image\/jpeg';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'image\/jpx';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'image\/png';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'image\/tiff';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'image\/vnd.wap.wbmp';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'image\/xbm';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'message\/rfc822';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'text\/css';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'text\/html';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'text\/plain';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'text\/xml';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'text\/xsl';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'video\/mpeg';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'video\/quicktime';$/;"	v
content_type	library\Zend\Service\Amazon\S3.php	/^                $content_type = 'video\/x-ms-video';$/;"	v
data	library\Zend\Service\Amazon\S3.php	/^            $data = '<CreateBucketConfiguration><LocationConstraint>'.$location.'<\/LocationConstraint><\/CreateBucketConfiguration>';$/;"	v
data	library\Zend\Service\Amazon\S3.php	/^            $data = null;$/;"	v
data	library\Zend\Service\Amazon\S3.php	/^        $data = @file_get_contents($path);$/;"	v
data	library\Zend\Service\Amazon\S3.php	/^        $data = @fopen($path, "rb");$/;"	v
date	library\Zend\Service\Amazon\S3.php	/^                $date = $val;$/;"	v
date	library\Zend\Service\Amazon\S3.php	/^            $date = '';$/;"	v
destInfo	library\Zend\Service\Amazon\S3.php	/^        $destInfo = $this->getInfo($destObject);$/;"	v
destObject	library\Zend\Service\Amazon\S3.php	/^        $destObject   = $this->_fixupObjectName($destObject);$/;"	v
endpath	library\Zend\Service\Amazon\S3.php	/^            $endpath = $pathparts[0];$/;"	v
endpoint	library\Zend\Service\Amazon\S3.php	/^            $endpoint = Zend_Uri::factory($endpoint);$/;"	v
endpoint	library\Zend\Service\Amazon\S3.php	/^        $endpoint = clone($this->_endpoint);$/;"	v
etag	library\Zend\Service\Amazon\S3.php	/^            $etag = str_replace('"', '', $response->getHeader('Etag'));$/;"	v
ext	library\Zend\Service\Amazon\S3.php	/^        $ext = substr(strrchr($path, '.'), 1);$/;"	v
firstpart	library\Zend\Service\Amazon\S3.php	/^        $firstpart = array_shift($nameparts);$/;"	v
headers	library\Zend\Service\Amazon\S3.php	/^            $headers = array($headers);$/;"	v
headers	library\Zend\Service\Amazon\S3.php	/^        $headers = (is_array($meta)) ? $meta : array();$/;"	v
headers	library\Zend\Service\Amazon\S3.php	/^        $headers=array();$/;"	v
info	library\Zend\Service\Amazon\S3.php	/^        $info = array();$/;"	v
key	library\Zend\Service\Amazon\S3.php	/^            $key = strtolower($key);$/;"	v
len	library\Zend\Service\Amazon\S3.php	/^        $len = strlen($bucket);$/;"	v
md5	library\Zend\Service\Amazon\S3.php	/^                $md5 = $val;$/;"	v
meta	library\Zend\Service\Amazon\S3.php	/^            $meta = array();$/;"	v
nameparts	library\Zend\Service\Amazon\S3.php	/^        $nameparts = explode('\/', $object);$/;"	v
object	library\Zend\Service\Amazon\S3.php	/^        $object = $this->_fixupObjectName($object);$/;"	v
objects	library\Zend\Service\Amazon\S3.php	/^            $objects = $this->getObjectsByBucket($bucket,$params);$/;"	v
objects	library\Zend\Service\Amazon\S3.php	/^        $objects = $this->getObjectsByBucket($bucket);$/;"	v
objects	library\Zend\Service\Amazon\S3.php	/^        $objects = array();$/;"	v
params	library\Zend\Service\Amazon\S3.php	/^            $params= array ($/;"	v
parts	library\Zend\Service\Amazon\S3.php	/^        $parts = explode('\/', $path, 2);$/;"	v
path	library\Zend\Service\Amazon\S3.php	/^                $path = $parts[0].'\/';$/;"	v
pathparts	library\Zend\Service\Amazon\S3.php	/^            $pathparts = explode('?',$parts[1]);$/;"	v
response	library\Zend\Service\Amazon\S3.php	/^            $response = $client->request($method);$/;"	v
response	library\Zend\Service\Amazon\S3.php	/^            $response = $this->_makeRequest('GET', $object);$/;"	v
response	library\Zend\Service\Amazon\S3.php	/^            $response = $this->_makeRequest('GET', $object, null, array(self::S3_REQUESTPAY_HEADER => 'requester'));$/;"	v
response	library\Zend\Service\Amazon\S3.php	/^        $response = $this->_makeRequest('DELETE', $bucket);$/;"	v
response	library\Zend\Service\Amazon\S3.php	/^        $response = $this->_makeRequest('DELETE', $object);$/;"	v
response	library\Zend\Service\Amazon\S3.php	/^        $response = $this->_makeRequest('GET');$/;"	v
response	library\Zend\Service\Amazon\S3.php	/^        $response = $this->_makeRequest('GET', $bucket, $params);$/;"	v
response	library\Zend\Service\Amazon\S3.php	/^        $response = $this->_makeRequest('HEAD', $bucket, array('max-keys'=>0));$/;"	v
response	library\Zend\Service\Amazon\S3.php	/^        $response = $this->_makeRequest('HEAD', $object);$/;"	v
response	library\Zend\Service\Amazon\S3.php	/^        $response = $this->_makeRequest('PUT', $bucket, null, $headers, $data);$/;"	v
response	library\Zend\Service\Amazon\S3.php	/^        $response = $this->_makeRequest('PUT', $destObject, null, $headers);$/;"	v
response	library\Zend\Service\Amazon\S3.php	/^        $response = $this->_makeRequest('PUT', $object, null, $headers, $data);$/;"	v
response_code	library\Zend\Service\Amazon\S3.php	/^            $response_code = $response->getStatus();$/;"	v
retry	library\Zend\Service\Amazon\S3.php	/^                $retry = true;$/;"	v
retry	library\Zend\Service\Amazon\S3.php	/^            $retry = false;$/;"	v
retry_count	library\Zend\Service\Amazon\S3.php	/^        $retry_count = 0;$/;"	v
sig_str	library\Zend\Service\Amazon\S3.php	/^        $sig_str = "$method\\n$md5\\n$type\\n$date\\n";$/;"	v
signature	library\Zend\Service\Amazon\S3.php	/^        $signature = base64_encode(Zend_Crypt_Hmac::compute($this->_getSecretKey(), 'sha1', utf8_encode($sig_str), Zend_Crypt_Hmac::BINARY));$/;"	v
sourceInfo	library\Zend\Service\Amazon\S3.php	/^        $sourceInfo = $this->getInfo($sourceObject);$/;"	v
sourceObject	library\Zend\Service\Amazon\S3.php	/^        $sourceObject = $this->_fixupObjectName($sourceObject);$/;"	v
type	library\Zend\Service\Amazon\S3.php	/^                $type = $val;$/;"	v
type	library\Zend\Service\Amazon\S3.php	/^        $type = $md5 = $date = '';$/;"	v
xml	library\Zend\Service\Amazon\S3.php	/^        $xml = new SimpleXMLElement($response->getBody());$/;"	v
Zend_Service_Amazon_S3_Exception	library\Zend\Service\Amazon\S3\Exception.php	/^class Zend_Service_Amazon_S3_Exception extends Zend_Service_Amazon_Exception$/;"	c
Zend_Service_Amazon_S3_Stream	library\Zend\Service\Amazon\S3\Stream.php	/^class Zend_Service_Amazon_S3_Stream$/;"	c
count	library\Zend\Service\Amazon\S3\Stream.php	/^            $count = $this->_objectSize - $this->_position;$/;"	v
data	library\Zend\Service\Amazon\S3\Stream.php	/^        $data = substr($this->_objectBuffer, $this->_position, $count);$/;"	v
headers	library\Zend\Service\Amazon\S3\Stream.php	/^            $headers = array($/;"	v
host	library\Zend\Service\Amazon\S3\Stream.php	/^            $host = parse_url($path, PHP_URL_HOST);$/;"	v
info	library\Zend\Service\Amazon\S3\Stream.php	/^            $info = $this->_getS3Client($path)->getInfo($name);$/;"	v
info	library\Zend\Service\Amazon\S3\Stream.php	/^           $info = $this->_getS3Client($path)->getInfo($name);$/;"	v
info	library\Zend\Service\Amazon\S3\Stream.php	/^           $info = $this->_s3->getInfo($this->_objectName);$/;"	v
len	library\Zend\Service\Amazon\S3\Stream.php	/^        $len = strlen($data);$/;"	v
name	library\Zend\Service\Amazon\S3\Stream.php	/^        $name = $this->_getNamePart($path);$/;"	v
name	library\Zend\Service\Amazon\S3\Stream.php	/^    $name = $this->_getNamePart($path);$/;"	v
new_pos	library\Zend\Service\Amazon\S3\Stream.php	/^                $new_pos = $offset;$/;"	v
new_pos	library\Zend\Service\Amazon\S3\Stream.php	/^                $new_pos = $this->_objectSize + $offset;$/;"	v
new_pos	library\Zend\Service\Amazon\S3\Stream.php	/^                $new_pos = $this->_position + $offset;$/;"	v
object	library\Zend\Service\Amazon\S3\Stream.php	/^        $object = current($this->_bucketList);$/;"	v
range_end	library\Zend\Service\Amazon\S3\Stream.php	/^        $range_end   = $this->_position + $count - 1;$/;"	v
range_start	library\Zend\Service\Amazon\S3\Stream.php	/^        $range_start = $this->_position;$/;"	v
response	library\Zend\Service\Amazon\S3\Stream.php	/^            $response = $this->_s3->_makeRequest('GET', $this->_objectName, null, $headers);$/;"	v
ret	library\Zend\Service\Amazon\S3\Stream.php	/^        $ret = $this->_s3->putObject($this->_objectName, $this->_objectBuffer);$/;"	v
ret	library\Zend\Service\Amazon\S3\Stream.php	/^        $ret = ($new_pos >= 0 && $new_pos <= $this->_objectSize);$/;"	v
stat	library\Zend\Service\Amazon\S3\Stream.php	/^        $stat = array();$/;"	v
url	library\Zend\Service\Amazon\S3\Stream.php	/^            $url = explode(':', $path);$/;"	v
url	library\Zend\Service\Amazon\S3\Stream.php	/^        $url = parse_url($path);$/;"	v
Zend_Service_Amazon_SimilarProduct	library\Zend\Service\Amazon\SimilarProduct.php	/^class Zend_Service_Amazon_SimilarProduct$/;"	c
text	library\Zend\Service\Amazon\SimilarProduct.php	/^            $text = $xpath->query(".\/az:$el\/text()", $dom)->item(0);$/;"	v
xpath	library\Zend\Service\Amazon\SimilarProduct.php	/^        $xpath = new DOMXPath($dom->ownerDocument);$/;"	v
Zend_Service_Amazon_SimpleDb	library\Zend\Service\Amazon\SimpleDb.php	/^class Zend_Service_Amazon_SimpleDb extends Zend_Service_Amazon_Abstract$/;"	c
arrData	library\Zend\Service\Amazon\SimpleDb.php	/^        $arrData = array();$/;"	v
attributeIndex	library\Zend\Service\Amazon\SimpleDb.php	/^            $attributeIndex = 0;$/;"	v
attributeIndex	library\Zend\Service\Amazon\SimpleDb.php	/^        $attributeIndex = 0;$/;"	v
attributeName	library\Zend\Service\Amazon\SimpleDb.php	/^                $attributeName = (string)$attribute->Name;$/;"	v
attributeName	library\Zend\Service\Amazon\SimpleDb.php	/^            $attributeName = $attribute->getName();$/;"	v
attributeNodes	library\Zend\Service\Amazon\SimpleDb.php	/^        $attributeNodes = $document->GetAttributesResult->Attribute;$/;"	v
attributes	library\Zend\Service\Amazon\SimpleDb.php	/^        $attributes = array();$/;"	v
code	library\Zend\Service\Amazon\SimpleDb.php	/^            $code    = $xpath->evaluate('string(Code\/text())', $node);$/;"	v
data	library\Zend\Service\Amazon\SimpleDb.php	/^                $data = (string)$valueNodes;$/;"	v
data	library\Zend\Service\Amazon\SimpleDb.php	/^                $data = array();$/;"	v
data	library\Zend\Service\Amazon\SimpleDb.php	/^            $data       = null;$/;"	v
data	library\Zend\Service\Amazon\SimpleDb.php	/^        $data  = "POST\\n";$/;"	v
data	library\Zend\Service\Amazon\SimpleDb.php	/^        $data = array();$/;"	v
document	library\Zend\Service\Amazon\SimpleDb.php	/^        $document = $response->getSimpleXMLDocument();$/;"	v
domainNodes	library\Zend\Service\Amazon\SimpleDb.php	/^        $domainNodes = $response->getSimpleXMLDocument()->ListDomainsResult->DomainName;$/;"	v
endpoint	library\Zend\Service\Amazon\SimpleDb.php	/^            $endpoint = Zend_Uri::factory($endpoint);$/;"	v
hmac	library\Zend\Service\Amazon\SimpleDb.php	/^        $hmac = Zend_Crypt_Hmac::compute($this->_getSecretKey(), 'SHA256', $data, Zend_Crypt_Hmac::BINARY);$/;"	v
httpResponse	library\Zend\Service\Amazon\SimpleDb.php	/^            $httpResponse = $request->request();$/;"	v
index	library\Zend\Service\Amazon\SimpleDb.php	/^        $index = 0;$/;"	v
itemIndex	library\Zend\Service\Amazon\SimpleDb.php	/^        $itemIndex = 0;$/;"	v
itemName	library\Zend\Service\Amazon\SimpleDb.php	/^            $itemName = (string)$item->Name;$/;"	v
list	library\Zend\Service\Amazon\SimpleDb.php	/^        $list  = $xpath->query('\/\/Error');$/;"	v
message	library\Zend\Service\Amazon\SimpleDb.php	/^            $message = $xpath->evaluate('string(Message\/text())', $node);$/;"	v
message	library\Zend\Service\Amazon\SimpleDb.php	/^            $message = 'Error in request to AWS service: ' . $zhce->getMessage();$/;"	v
metadata	library\Zend\Service\Amazon\SimpleDb.php	/^        $metadata      = array();$/;"	v
metadataNodes	library\Zend\Service\Amazon\SimpleDb.php	/^        $metadataNodes = $document->DomainMetadataResult->children();$/;"	v
name	library\Zend\Service\Amazon\SimpleDb.php	/^            $name            = $metadataNode->getName();$/;"	v
name	library\Zend\Service\Amazon\SimpleDb.php	/^            $name       = (string)$attributeNode->Name;$/;"	v
nextToken	library\Zend\Service\Amazon\SimpleDb.php	/^        $nextToken     = (string)$nextTokenNode;$/;"	v
nextToken	library\Zend\Service\Amazon\SimpleDb.php	/^        $nextToken     = (trim($nextToken) === '') ? null : $nextToken;$/;"	v
nextToken	library\Zend\Service\Amazon\SimpleDb.php	/^        $nextToken = (string)$xml->NextToken;$/;"	v
nextTokenNode	library\Zend\Service\Amazon\SimpleDb.php	/^        $nextTokenNode = $response->getSimpleXMLDocument()->ListDomainsResult->NextToken;$/;"	v
node	library\Zend\Service\Amazon\SimpleDb.php	/^            $node    = $list->item(0);$/;"	v
params	library\Zend\Service\Amazon\SimpleDb.php	/^	    $params               = array();$/;"	v
params	library\Zend\Service\Amazon\SimpleDb.php	/^        $params                       = array();$/;"	v
params	library\Zend\Service\Amazon\SimpleDb.php	/^        $params                     = array();$/;"	v
params	library\Zend\Service\Amazon\SimpleDb.php	/^        $params               = array();$/;"	v
params	library\Zend\Service\Amazon\SimpleDb.php	/^        $params = $this->_addRequiredParameters($params);$/;"	v
request	library\Zend\Service\Amazon\SimpleDb.php	/^            $request = self::getHttpClient();$/;"	v
response	library\Zend\Service\Amazon\SimpleDb.php	/^        $response             = $this->_sendRequest($params);$/;"	v
response	library\Zend\Service\Amazon\SimpleDb.php	/^        $response = $this->_sendRequest($params);$/;"	v
response	library\Zend\Service\Amazon\SimpleDb.php	/^        $response = new Zend_Service_Amazon_SimpleDb_Response($httpResponse);$/;"	v
value	library\Zend\Service\Amazon\SimpleDb.php	/^            $value = str_replace("%7E", "~", $value);$/;"	v
value	library\Zend\Service\Amazon\SimpleDb.php	/^            $value = str_replace("+", "%20", $value);$/;"	v
value	library\Zend\Service\Amazon\SimpleDb.php	/^            $value = urlencode($value);$/;"	v
valueNodes	library\Zend\Service\Amazon\SimpleDb.php	/^            $valueNodes = $attributeNode->Value;$/;"	v
values	library\Zend\Service\Amazon\SimpleDb.php	/^                $values = array();$/;"	v
xml	library\Zend\Service\Amazon\SimpleDb.php	/^        $xml      = $response->getSimpleXMLDocument();$/;"	v
xpath	library\Zend\Service\Amazon\SimpleDb.php	/^        $xpath = new DOMXPath($response->getDocument());$/;"	v
Zend_Service_Amazon_SimpleDb_Attribute	library\Zend\Service\Amazon\SimpleDb\Attribute.php	/^class Zend_Service_Amazon_SimpleDb_Attribute$/;"	c
__construct	library\Zend\Service\Amazon\SimpleDb\Attribute.php	/^    function __construct($itemName, $name, $values)$/;"	f
values	library\Zend\Service\Amazon\SimpleDb\Attribute.php	/^            $values = array($values);$/;"	v
Zend_Service_Amazon_SimpleDb_Exception	library\Zend\Service\Amazon\SimpleDb\Exception.php	/^class Zend_Service_Amazon_SimpleDb_Exception extends Zend_Service_Amazon_Exception$/;"	c
Zend_Service_Amazon_SimpleDb_Page	library\Zend\Service\Amazon\SimpleDb\Page.php	/^class Zend_Service_Amazon_SimpleDb_Page$/;"	c
Zend_Service_Amazon_SimpleDb_Response	library\Zend\Service\Amazon\SimpleDb\Response.php	/^class Zend_Service_Amazon_SimpleDb_Response$/;"	c
body	library\Zend\Service\Amazon\SimpleDb\Response.php	/^            $body = $this->_httpResponse->getBody();$/;"	v
body	library\Zend\Service\Amazon\SimpleDb\Response.php	/^            $body = false;$/;"	v
document	library\Zend\Service\Amazon\SimpleDb\Response.php	/^            $document = $this->getDocument();$/;"	v
errors	library\Zend\Service\Amazon\SimpleDb\Response.php	/^                $errors = libxml_use_internal_errors();$/;"	v
Zend_Service_Amazon_Sqs	library\Zend\Service\Amazon\Sqs.php	/^class Zend_Service_Amazon_Sqs extends Zend_Service_Amazon_Abstract$/;"	c
arrData	library\Zend\Service\Amazon\Sqs.php	/^        $arrData = array();$/;"	v
attr_result	library\Zend\Service\Amazon\Sqs.php	/^            $attr_result = array();$/;"	v
checksum	library\Zend\Service\Amazon\Sqs.php	/^        $checksum = md5($params['MessageBody']);$/;"	v
client	library\Zend\Service\Amazon\Sqs.php	/^        $client = self::getHttpClient();$/;"	v
data	library\Zend\Service\Amazon\Sqs.php	/^        $data = "GET\\n";$/;"	v
data	library\Zend\Service\Amazon\Sqs.php	/^        $data = array();$/;"	v
hmac	library\Zend\Service\Amazon\Sqs.php	/^        $hmac = Zend_Crypt_Hmac::compute($this->_getSecretKey(), 'SHA256', $data, Zend_Crypt_Hmac::BINARY);$/;"	v
params	library\Zend\Service\Amazon\Sqs.php	/^        $params = $this->addRequiredParameters($queue_url, $params);$/;"	v
params	library\Zend\Service\Amazon\Sqs.php	/^        $params = array();$/;"	v
queue_url	library\Zend\Service\Amazon\Sqs.php	/^            $queue_url = '\/';$/;"	v
queues	library\Zend\Service\Amazon\Sqs.php	/^        $queues = array();$/;"	v
response	library\Zend\Service\Amazon\Sqs.php	/^            $response = $client->request('GET');$/;"	v
response_code	library\Zend\Service\Amazon\Sqs.php	/^            $response_code = $response->getStatus();$/;"	v
result	library\Zend\Service\Amazon\Sqs.php	/^            $result = $this->_makeRequest(null, 'CreateQueue', $params);$/;"	v
result	library\Zend\Service\Amazon\Sqs.php	/^        $result = $this->_makeRequest($queue_url, 'DeleteMessage', $params);$/;"	v
result	library\Zend\Service\Amazon\Sqs.php	/^        $result = $this->_makeRequest($queue_url, 'DeleteQueue');$/;"	v
result	library\Zend\Service\Amazon\Sqs.php	/^        $result = $this->_makeRequest($queue_url, 'GetQueueAttributes', $params);$/;"	v
result	library\Zend\Service\Amazon\Sqs.php	/^        $result = $this->_makeRequest($queue_url, 'ReceiveMessage', $params);$/;"	v
result	library\Zend\Service\Amazon\Sqs.php	/^        $result = $this->_makeRequest($queue_url, 'SendMessage', $params);$/;"	v
result	library\Zend\Service\Amazon\Sqs.php	/^        $result = $this->_makeRequest(null, 'ListQueues');$/;"	v
retry	library\Zend\Service\Amazon\Sqs.php	/^                    $retry = true;$/;"	v
retry	library\Zend\Service\Amazon\Sqs.php	/^                $retry = true;$/;"	v
retry	library\Zend\Service\Amazon\Sqs.php	/^            $retry  = false;$/;"	v
retry	library\Zend\Service\Amazon\Sqs.php	/^            $retry = false;$/;"	v
retry_count	library\Zend\Service\Amazon\Sqs.php	/^        $retry_count = 0;$/;"	v
timeout	library\Zend\Service\Amazon\Sqs.php	/^        $timeout = ($timeout === null) ? self::CREATE_TIMEOUT_DEFAULT : (int)$timeout;$/;"	v
Zend_Service_Amazon_Sqs_Exception	library\Zend\Service\Amazon\Sqs\Exception.php	/^class Zend_Service_Amazon_Sqs_Exception extends Zend_Service_Amazon_Exception$/;"	c
Zend_Service_Audioscrobbler	library\Zend\Service\Audioscrobbler.php	/^class Zend_Service_Audioscrobbler$/;"	c
exception	library\Zend\Service\Audioscrobbler.php	/^            $exception = new Zend_Service_Exception('Response failed to load with SimpleXML');$/;"	v
field	library\Zend\Service\Audioscrobbler.php	/^        $field = strtolower(substr($method, 3));$/;"	v
from	library\Zend\Service\Audioscrobbler.php	/^            $from = (int)$from;$/;"	v
params	library\Zend\Service\Audioscrobbler.php	/^            $params = "";$/;"	v
params	library\Zend\Service\Audioscrobbler.php	/^            $params = "from={$from}&$to={$to}";$/;"	v
params	library\Zend\Service\Audioscrobbler.php	/^            $params = "from={$from}&to={$to}";$/;"	v
params	library\Zend\Service\Audioscrobbler.php	/^        $params  = (string) $params;$/;"	v
params	library\Zend\Service\Audioscrobbler.php	/^        $params = "";$/;"	v
params	library\Zend\Service\Audioscrobbler.php	/^        $params = "artist={$this->get('artist')}";$/;"	v
params	library\Zend\Service\Audioscrobbler.php	/^        $params = "artist={$this->get('artist')}&album={$this->get('album')}";$/;"	v
params	library\Zend\Service\Audioscrobbler.php	/^        $params = "artist={$this->get('artist')}&track={$this->get('track')}";$/;"	v
response	library\Zend\Service\Audioscrobbler.php	/^        $response     = $this->getHttpClient()->request();$/;"	v
responseBody	library\Zend\Service\Audioscrobbler.php	/^        $responseBody = $response->getBody();$/;"	v
service	library\Zend\Service\Audioscrobbler.php	/^        $service = "\/{$this->get('version')}\/album\/{$this->get('artist')}\/{$this->get('album')}\/info.xml";$/;"	v
service	library\Zend\Service\Audioscrobbler.php	/^        $service = "\/{$this->get('version')}\/artist\/{$this->get('artist')}\/fans.xml";$/;"	v
service	library\Zend\Service\Audioscrobbler.php	/^        $service = "\/{$this->get('version')}\/artist\/{$this->get('artist')}\/similar.xml";$/;"	v
service	library\Zend\Service\Audioscrobbler.php	/^        $service = "\/{$this->get('version')}\/artist\/{$this->get('artist')}\/topalbums.xml";$/;"	v
service	library\Zend\Service\Audioscrobbler.php	/^        $service = "\/{$this->get('version')}\/artist\/{$this->get('artist')}\/toptags.xml";$/;"	v
service	library\Zend\Service\Audioscrobbler.php	/^        $service = "\/{$this->get('version')}\/artist\/{$this->get('artist')}\/toptracks.xml";$/;"	v
service	library\Zend\Service\Audioscrobbler.php	/^        $service = "\/{$this->get('version')}\/group\/{$this->get('group')}\/weeklyalbumchart.xml";$/;"	v
service	library\Zend\Service\Audioscrobbler.php	/^        $service = "\/{$this->get('version')}\/group\/{$this->get('group')}\/weeklyartistchart.xml";$/;"	v
service	library\Zend\Service\Audioscrobbler.php	/^        $service = "\/{$this->get('version')}\/group\/{$this->get('group')}\/weeklychartlist.xml";$/;"	v
service	library\Zend\Service\Audioscrobbler.php	/^        $service = "\/{$this->get('version')}\/group\/{$this->get('group')}\/weeklytrackchart.xml";$/;"	v
service	library\Zend\Service\Audioscrobbler.php	/^        $service = "\/{$this->get('version')}\/tag\/toptags.xml";$/;"	v
service	library\Zend\Service\Audioscrobbler.php	/^        $service = "\/{$this->get('version')}\/tag\/{$this->get('tag')}\/topalbums.xml";$/;"	v
service	library\Zend\Service\Audioscrobbler.php	/^        $service = "\/{$this->get('version')}\/tag\/{$this->get('tag')}\/topartists.xml";$/;"	v
service	library\Zend\Service\Audioscrobbler.php	/^        $service = "\/{$this->get('version')}\/tag\/{$this->get('tag')}\/toptracks.xml";$/;"	v
service	library\Zend\Service\Audioscrobbler.php	/^        $service = "\/{$this->get('version')}\/track\/{$this->get('artist')}\/{$this->get('track')}\/fans.xml";$/;"	v
service	library\Zend\Service\Audioscrobbler.php	/^        $service = "\/{$this->get('version')}\/track\/{$this->get('artist')}\/{$this->get('track')}\/toptags.xml";$/;"	v
service	library\Zend\Service\Audioscrobbler.php	/^        $service = "\/{$this->get('version')}\/user\/{$this->get('user')}\/albumtags.xml";$/;"	v
service	library\Zend\Service\Audioscrobbler.php	/^        $service = "\/{$this->get('version')}\/user\/{$this->get('user')}\/artisttags.xml";$/;"	v
service	library\Zend\Service\Audioscrobbler.php	/^        $service = "\/{$this->get('version')}\/user\/{$this->get('user')}\/friends.xml";$/;"	v
service	library\Zend\Service\Audioscrobbler.php	/^        $service = "\/{$this->get('version')}\/user\/{$this->get('user')}\/neighbours.xml";$/;"	v
service	library\Zend\Service\Audioscrobbler.php	/^        $service = "\/{$this->get('version')}\/user\/{$this->get('user')}\/profile.xml";$/;"	v
service	library\Zend\Service\Audioscrobbler.php	/^        $service = "\/{$this->get('version')}\/user\/{$this->get('user')}\/recentbannedtracks.xml";$/;"	v
service	library\Zend\Service\Audioscrobbler.php	/^        $service = "\/{$this->get('version')}\/user\/{$this->get('user')}\/recentlovedtracks.xml";$/;"	v
service	library\Zend\Service\Audioscrobbler.php	/^        $service = "\/{$this->get('version')}\/user\/{$this->get('user')}\/recenttracks.xml";$/;"	v
service	library\Zend\Service\Audioscrobbler.php	/^        $service = "\/{$this->get('version')}\/user\/{$this->get('user')}\/tags.xml";$/;"	v
service	library\Zend\Service\Audioscrobbler.php	/^        $service = "\/{$this->get('version')}\/user\/{$this->get('user')}\/topalbums.xml";$/;"	v
service	library\Zend\Service\Audioscrobbler.php	/^        $service = "\/{$this->get('version')}\/user\/{$this->get('user')}\/topartists.xml";$/;"	v
service	library\Zend\Service\Audioscrobbler.php	/^        $service = "\/{$this->get('version')}\/user\/{$this->get('user')}\/toptracks.xml";$/;"	v
service	library\Zend\Service\Audioscrobbler.php	/^        $service = "\/{$this->get('version')}\/user\/{$this->get('user')}\/tracktags.xml";$/;"	v
service	library\Zend\Service\Audioscrobbler.php	/^        $service = "\/{$this->get('version')}\/user\/{$this->get('user')}\/weeklyalbumchart.xml";$/;"	v
service	library\Zend\Service\Audioscrobbler.php	/^        $service = "\/{$this->get('version')}\/user\/{$this->get('user')}\/weeklyartistchart.xml";$/;"	v
service	library\Zend\Service\Audioscrobbler.php	/^        $service = "\/{$this->get('version')}\/user\/{$this->get('user')}\/weeklychartlist.xml";$/;"	v
service	library\Zend\Service\Audioscrobbler.php	/^        $service = "\/{$this->get('version')}\/user\/{$this->get('user')}\/weeklytrackchart.xml";$/;"	v
service	library\Zend\Service\Audioscrobbler.php	/^        $service = (string) $service;$/;"	v
to	library\Zend\Service\Audioscrobbler.php	/^            $to = (int)$to;$/;"	v
Zend_Service_Delicious	library\Zend\Service\Delicious.php	/^class Zend_Service_Delicious$/;"	c
arrOut	library\Zend\Service\Delicious.php	/^        $arrOut = array();$/;"	v
bundles	library\Zend\Service\Delicious.php	/^        $bundles = self::_xmlResponseToArray($response, 'bundles', 'bundle', 'name', 'tags');$/;"	v
childNodes	library\Zend\Service\Delicious.php	/^            $childNodes = $rootNode->childNodes;$/;"	v
currentNode	library\Zend\Service\Delicious.php	/^                $currentNode = $childNodes->item($i);$/;"	v
dom	library\Zend\Service\Delicious.php	/^                $dom = new DOMDocument() ;$/;"	v
parms	library\Zend\Service\Delicious.php	/^        $parms = array('hash' => md5($url));$/;"	v
parms	library\Zend\Service\Delicious.php	/^        $parms = array();$/;"	v
path	library\Zend\Service\Delicious.php	/^        $path = sprintf(self::JSON_FANS, $user);$/;"	v
path	library\Zend\Service\Delicious.php	/^        $path = sprintf(self::JSON_NETWORK, $user);$/;"	v
path	library\Zend\Service\Delicious.php	/^        $path = sprintf(self::JSON_POSTS, $user, $tag);$/;"	v
path	library\Zend\Service\Delicious.php	/^        $path = sprintf(self::JSON_TAGS, $user);$/;"	v
res	library\Zend\Service\Delicious.php	/^        $res = $this->makeRequest($path, $parms, 'json');$/;"	v
res	library\Zend\Service\Delicious.php	/^        $res = $this->makeRequest(self::JSON_URL, $parms, 'json');$/;"	v
response	library\Zend\Service\Delicious.php	/^        $response = $this->_rest->restGet($path, $parms);$/;"	v
response	library\Zend\Service\Delicious.php	/^        $response = $this->makeRequest(self::PATH_BUNDLES);$/;"	v
response	library\Zend\Service\Delicious.php	/^        $response = $this->makeRequest(self::PATH_BUNDLE_ADD, array('bundle' => $bundle, 'tags' => $tags));$/;"	v
response	library\Zend\Service\Delicious.php	/^        $response = $this->makeRequest(self::PATH_BUNDLE_DELETE, array('bundle' => $bundle));$/;"	v
response	library\Zend\Service\Delicious.php	/^        $response = $this->makeRequest(self::PATH_DATES, $parms);$/;"	v
response	library\Zend\Service\Delicious.php	/^        $response = $this->makeRequest(self::PATH_POSTS_ALL, $parms);$/;"	v
response	library\Zend\Service\Delicious.php	/^        $response = $this->makeRequest(self::PATH_POSTS_GET, $parms);$/;"	v
response	library\Zend\Service\Delicious.php	/^        $response = $this->makeRequest(self::PATH_POSTS_RECENT, $parms);$/;"	v
response	library\Zend\Service\Delicious.php	/^        $response = $this->makeRequest(self::PATH_POST_DELETE, array('url' => $url));$/;"	v
response	library\Zend\Service\Delicious.php	/^        $response = $this->makeRequest(self::PATH_TAGS);$/;"	v
response	library\Zend\Service\Delicious.php	/^        $response = $this->makeRequest(self::PATH_TAG_RENAME, array('old' => $old, 'new' => $new));$/;"	v
response	library\Zend\Service\Delicious.php	/^        $response = $this->makeRequest(self::PATH_UPDATE);$/;"	v
responseBody	library\Zend\Service\Delicious.php	/^        $responseBody = $response->getBody();$/;"	v
rootNode	library\Zend\Service\Delicious.php	/^        $rootNode = $response->documentElement;$/;"	v
strResponse	library\Zend\Service\Delicious.php	/^                $strResponse = $rootNode->getAttribute('code');$/;"	v
strResponse	library\Zend\Service\Delicious.php	/^                $strResponse = $rootNode->nodeValue;$/;"	v
tags	library\Zend\Service\Delicious.php	/^            $tags = explode(' ', $tags);$/;"	v
tags	library\Zend\Service\Delicious.php	/^        $tags = implode(' ', (array) $tags);$/;"	v
timeDiff	library\Zend\Service\Delicious.php	/^        $timeDiff = microtime(true) - self::$_lastRequestTime;$/;"	v
Zend_Service_Delicious_Exception	library\Zend\Service\Delicious\Exception.php	/^class Zend_Service_Delicious_Exception extends Zend_Service_Exception$/;"	c
Zend_Service_Delicious_Post	library\Zend\Service\Delicious\Post.php	/^class Zend_Service_Delicious_Post extends Zend_Service_Delicious_SimplePost$/;"	c
parms	library\Zend\Service\Delicious\Post.php	/^        $parms = array($/;"	v
values	library\Zend\Service\Delicious\Post.php	/^            $values = self::_parsePostNode($values);$/;"	v
Zend_Service_Delicious_PostList	library\Zend\Service\Delicious\PostList.php	/^class Zend_Service_Delicious_PostList implements Countable, Iterator, ArrayAccess$/;"	c
curentNode	library\Zend\Service\Delicious\PostList.php	/^            $curentNode = $nodeList->item($i);$/;"	v
numItems	library\Zend\Service\Delicious\PostList.php	/^        $numItems = $this->count();$/;"	v
postList	library\Zend\Service\Delicious\PostList.php	/^        $postList = new self($this->_service);$/;"	v
Zend_Service_Delicious_SimplePost	library\Zend\Service\Delicious\SimplePost.php	/^class Zend_Service_Delicious_SimplePost$/;"	c
Zend_Service_DeveloperGarden_BaseUserService	library\Zend\Service\DeveloperGarden\BaseUserService.php	/^class Zend_Service_DeveloperGarden_BaseUserService extends Zend_Service_DeveloperGarden_Client_ClientAbstract$/;"	c
moduleId	library\Zend\Service\DeveloperGarden\BaseUserService.php	/^        $moduleId = $this->_buildModuleString('CCS', $environment);$/;"	v
moduleId	library\Zend\Service\DeveloperGarden\BaseUserService.php	/^        $moduleId = $this->_buildModuleString('IPLocation', $environment);$/;"	v
moduleId	library\Zend\Service\DeveloperGarden\BaseUserService.php	/^        $moduleId = $this->_buildModuleString('Sms', $environment);$/;"	v
moduleId	library\Zend\Service\DeveloperGarden\BaseUserService.php	/^        $moduleId = $this->_buildModuleString('VoiceButler', $environment);$/;"	v
moduleId	library\Zend\Service\DeveloperGarden\BaseUserService.php	/^        $moduleId = $this->_buildModuleString('localsearch', $environment);$/;"	v
moduleString	library\Zend\Service\DeveloperGarden\BaseUserService.php	/^        $moduleString = $module;$/;"	v
request	library\Zend\Service\DeveloperGarden\BaseUserService.php	/^        $request  = $this->_getChangeRequestModule($moduleId, $quotaMax);$/;"	v
request	library\Zend\Service\DeveloperGarden\BaseUserService.php	/^        $request  = $this->_getRequestModule($moduleId);$/;"	v
request	library\Zend\Service\DeveloperGarden\BaseUserService.php	/^        $request = new Zend_Service_DeveloperGarden_Request_BaseUserService_GetAccountBalance($/;"	v
Zend_Service_DeveloperGarden_BaseUserService_AccountBalance	library\Zend\Service\DeveloperGarden\BaseUserService\AccountBalance.php	/^class Zend_Service_DeveloperGarden_BaseUserService_AccountBalance$/;"	c
name	library\Zend\Service\DeveloperGarden\Client\ClientAbstract.php	/^        $name = strtolower($name);$/;"	v
options	library\Zend\Service\DeveloperGarden\Client\ClientAbstract.php	/^        $options = array($/;"	v
r	library\Zend\Service\DeveloperGarden\Client\ClientAbstract.php	/^        $r = new ReflectionClass(__CLASS__);$/;"	v
retVal	library\Zend\Service\DeveloperGarden\Client\ClientAbstract.php	/^            $retVal = $this->_wsdlFile;$/;"	v
retVal	library\Zend\Service\DeveloperGarden\Client\ClientAbstract.php	/^            $retVal = $this->_wsdlFileLocal;$/;"	v
s	library\Zend\Service\DeveloperGarden\Client\ClientAbstract.php	/^            $s = explode('_', $k, 2);$/;"	v
tokenService	library\Zend\Service\DeveloperGarden\Client\ClientAbstract.php	/^            $tokenService = new Zend_Service_DeveloperGarden_SecurityTokenServer($/;"	v
wsdlCache	library\Zend\Service\DeveloperGarden\Client\ClientAbstract.php	/^        $wsdlCache = Zend_Service_DeveloperGarden_SecurityTokenServer_Cache::getWsdlCache();$/;"	v
Zend_Service_DeveloperGarden_Client_Exception	library\Zend\Service\DeveloperGarden\Client\Exception.php	/^class Zend_Service_DeveloperGarden_Client_Exception extends Zend_Service_DeveloperGarden_Exception$/;"	c
Zend_Service_DeveloperGarden_Client_Soap	library\Zend\Service\DeveloperGarden\Client\Soap.php	/^class Zend_Service_DeveloperGarden_Client_Soap extends Zend_Soap_Client$/;"	c
authSoapHeader	library\Zend\Service\DeveloperGarden\Client\Soap.php	/^        $authSoapHeader = new SoapHeader($/;"	v
authSoapVar	library\Zend\Service\DeveloperGarden\Client\Soap.php	/^        $authSoapVar = new SoapVar($/;"	v
dom	library\Zend\Service\DeveloperGarden\Client\Soap.php	/^        $dom = new DOMDocument();$/;"	v
format	library\Zend\Service\DeveloperGarden\Client\Soap.php	/^        $format = '<wsse:%s xmlns:wsse="%s" SOAP-ENV:mustUnderstand="1">%s<\/wsse:%s>';$/;"	v
passwordElement	library\Zend\Service\DeveloperGarden\Client\Soap.php	/^        $passwordElement = $dom->createElementNS($/;"	v
securityElement	library\Zend\Service\DeveloperGarden\Client\Soap.php	/^        $securityElement = $dom->createElementNS($/;"	v
securityHeader	library\Zend\Service\DeveloperGarden\Client\Soap.php	/^        $securityHeader = sprintf($/;"	v
usernameElement	library\Zend\Service\DeveloperGarden\Client\Soap.php	/^        $usernameElement = $dom->createElementNS($/;"	v
usernameTokenElement	library\Zend\Service\DeveloperGarden\Client\Soap.php	/^        $usernameTokenElement = $dom->createElementNS($/;"	v
Zend_Service_DeveloperGarden_ConferenceCall	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^class Zend_Service_DeveloperGarden_ConferenceCall$/;"	c
account	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $account = null$/;"	v
action	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $action = null,$/;"	v
initiatorId	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $initiatorId = null,$/;"	v
ownerId	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $ownerId = null,$/;"	v
request	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $request = new Zend_Service_DeveloperGarden_Request_ConferenceCall_AddConferenceTemplateParticipantRequest($/;"	v
request	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $request = new Zend_Service_DeveloperGarden_Request_ConferenceCall_CommitConferenceRequest($/;"	v
request	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $request = new Zend_Service_DeveloperGarden_Request_ConferenceCall_CreateConferenceRequest($/;"	v
request	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $request = new Zend_Service_DeveloperGarden_Request_ConferenceCall_CreateConferenceTemplateRequest($/;"	v
request	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $request = new Zend_Service_DeveloperGarden_Request_ConferenceCall_GetConferenceListRequest($/;"	v
request	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $request = new Zend_Service_DeveloperGarden_Request_ConferenceCall_GetConferenceStatusRequest($/;"	v
request	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $request = new Zend_Service_DeveloperGarden_Request_ConferenceCall_GetConferenceTemplateListRequest($/;"	v
request	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $request = new Zend_Service_DeveloperGarden_Request_ConferenceCall_GetConferenceTemplateParticipantRequest($/;"	v
request	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $request = new Zend_Service_DeveloperGarden_Request_ConferenceCall_GetConferenceTemplateRequest($/;"	v
request	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $request = new Zend_Service_DeveloperGarden_Request_ConferenceCall_GetParticipantStatusRequest($/;"	v
request	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $request = new Zend_Service_DeveloperGarden_Request_ConferenceCall_GetRunningConferenceRequest($/;"	v
request	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $request = new Zend_Service_DeveloperGarden_Request_ConferenceCall_NewParticipantRequest($/;"	v
request	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $request = new Zend_Service_DeveloperGarden_Request_ConferenceCall_RemoveConferenceRequest($/;"	v
request	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $request = new Zend_Service_DeveloperGarden_Request_ConferenceCall_RemoveConferenceTemplateParticipantRequest($/;"	v
request	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $request = new Zend_Service_DeveloperGarden_Request_ConferenceCall_RemoveConferenceTemplateRequest($/;"	v
request	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $request = new Zend_Service_DeveloperGarden_Request_ConferenceCall_RemoveParticipantRequest($/;"	v
request	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $request = new Zend_Service_DeveloperGarden_Request_ConferenceCall_UpdateConferenceRequest($/;"	v
request	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $request = new Zend_Service_DeveloperGarden_Request_ConferenceCall_UpdateConferenceTemplateParticipantRequest($/;"	v
request	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $request = new Zend_Service_DeveloperGarden_Request_ConferenceCall_UpdateConferenceTemplateRequest($/;"	v
request	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $request = new Zend_Service_DeveloperGarden_Request_ConferenceCall_UpdateParticipantRequest($/;"	v
result	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $result = $this->getSoapClient()->addConferenceTemplateParticipant(array($/;"	v
result	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $result = $this->getSoapClient()->commitConference(array($/;"	v
result	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $result = $this->getSoapClient()->createConference(array($/;"	v
result	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $result = $this->getSoapClient()->createConferenceTemplate(array($/;"	v
result	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $result = $this->getSoapClient()->getConferenceList(array($/;"	v
result	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $result = $this->getSoapClient()->getConferenceStatus(array($/;"	v
result	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $result = $this->getSoapClient()->getConferenceTemplate(array($/;"	v
result	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $result = $this->getSoapClient()->getConferenceTemplateList(array($/;"	v
result	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $result = $this->getSoapClient()->getConferenceTemplateParticipant(array($/;"	v
result	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $result = $this->getSoapClient()->getParticipantStatus(array($/;"	v
result	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $result = $this->getSoapClient()->getRunningConference(array($/;"	v
result	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $result = $this->getSoapClient()->newParticipant(array($/;"	v
result	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $result = $this->getSoapClient()->removeConference(array($/;"	v
result	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $result = $this->getSoapClient()->removeConferenceTemplate(array($/;"	v
result	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $result = $this->getSoapClient()->removeConferenceTemplateParticipant(array($/;"	v
result	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $result = $this->getSoapClient()->removeParticipant(array($/;"	v
result	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $result = $this->getSoapClient()->updateConference(array($/;"	v
result	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $result = $this->getSoapClient()->updateConferenceTemplate(array($/;"	v
result	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $result = $this->getSoapClient()->updateConferenceTemplateParticipant(array($/;"	v
result	library\Zend\Service\DeveloperGarden\ConferenceCall.php	/^        $result = $this->getSoapClient()->updateParticipant(array($/;"	v
Zend_Service_DeveloperGarden_ConferenceCall_ConferenceAccount	library\Zend\Service\DeveloperGarden\ConferenceCall\ConferenceAccount.php	/^class Zend_Service_DeveloperGarden_ConferenceCall_ConferenceAccount$/;"	c
Zend_Service_DeveloperGarden_ConferenceCall_ConferenceDetail	library\Zend\Service\DeveloperGarden\ConferenceCall\ConferenceDetail.php	/^class Zend_Service_DeveloperGarden_ConferenceCall_ConferenceDetail$/;"	c
Zend_Service_DeveloperGarden_ConferenceCall_ConferenceSchedule	library\Zend\Service\DeveloperGarden\ConferenceCall\ConferenceSchedule.php	/^class Zend_Service_DeveloperGarden_ConferenceCall_ConferenceSchedule$/;"	c
Zend_Service_DeveloperGarden_ConferenceCall_Exception	library\Zend\Service\DeveloperGarden\ConferenceCall\Exception.php	/^class Zend_Service_DeveloperGarden_ConferenceCall_Exception extends Zend_Service_DeveloperGarden_Exception$/;"	c
Zend_Service_DeveloperGarden_ConferenceCall_Participant	library\Zend\Service\DeveloperGarden\ConferenceCall\Participant.php	/^class Zend_Service_DeveloperGarden_ConferenceCall_Participant$/;"	c
Zend_Service_DeveloperGarden_ConferenceCall_ParticipantDetail	library\Zend\Service\DeveloperGarden\ConferenceCall\ParticipantDetail.php	/^class Zend_Service_DeveloperGarden_ConferenceCall_ParticipantDetail$/;"	c
validator	library\Zend\Service\DeveloperGarden\ConferenceCall\ParticipantDetail.php	/^        $validator = new Zend_Validate_EmailAddress();$/;"	v
Zend_Service_DeveloperGarden_ConferenceCall_ParticipantStatus	library\Zend\Service\DeveloperGarden\ConferenceCall\ParticipantStatus.php	/^class Zend_Service_DeveloperGarden_ConferenceCall_ParticipantStatus$/;"	c
Zend_Service_DeveloperGarden_Credential	library\Zend\Service\DeveloperGarden\Credential.php	/^class Zend_Service_DeveloperGarden_Credential$/;"	c
retValue	library\Zend\Service\DeveloperGarden\Credential.php	/^            $retValue = sprintf($/;"	v
retValue	library\Zend\Service\DeveloperGarden\Credential.php	/^        $retValue = $this->_username;$/;"	v
Zend_Service_DeveloperGarden_Exception	library\Zend\Service\DeveloperGarden\Exception.php	/^class Zend_Service_DeveloperGarden_Exception extends Zend_Service_Exception$/;"	c
Zend_Service_DeveloperGarden_IpLocation	library\Zend\Service\DeveloperGarden\IpLocation.php	/^class Zend_Service_DeveloperGarden_IpLocation$/;"	c
request	library\Zend\Service\DeveloperGarden\IpLocation.php	/^        $request = new Zend_Service_DeveloperGarden_Request_IpLocation_LocateIPRequest($/;"	v
response	library\Zend\Service\DeveloperGarden\IpLocation.php	/^        $response = new Zend_Service_DeveloperGarden_Response_IpLocation_LocateIPResponse($result);$/;"	v
result	library\Zend\Service\DeveloperGarden\IpLocation.php	/^        $result = $this->getSoapClient()->locateIP($request);$/;"	v
Zend_Service_DeveloperGarden_IpLocation_IpAddress	library\Zend\Service\DeveloperGarden\IpLocation\IpAddress.php	/^class Zend_Service_DeveloperGarden_IpLocation_IpAddress$/;"	c
message	library\Zend\Service\DeveloperGarden\IpLocation\IpAddress.php	/^            $message = $validator->getMessages();$/;"	v
validator	library\Zend\Service\DeveloperGarden\IpLocation\IpAddress.php	/^        $validator = new Zend_Validate_Ip();$/;"	v
Zend_Service_DeveloperGarden_LocalSearch	library\Zend\Service\DeveloperGarden\LocalSearch.php	/^class Zend_Service_DeveloperGarden_LocalSearch$/;"	c
account	library\Zend\Service\DeveloperGarden\LocalSearch.php	/^        $account = null$/;"	v
request	library\Zend\Service\DeveloperGarden\LocalSearch.php	/^        $request = new Zend_Service_DeveloperGarden_Request_LocalSearch_LocalSearchRequest($/;"	v
response	library\Zend\Service\DeveloperGarden\LocalSearch.php	/^        $response = new Zend_Service_DeveloperGarden_Response_LocalSearch_LocalSearchResponse($result);$/;"	v
result	library\Zend\Service\DeveloperGarden\LocalSearch.php	/^        $result = $this->getSoapClient()->localSearch($request);$/;"	v
Zend_Service_DeveloperGarden_LocalSearch_Exception	library\Zend\Service\DeveloperGarden\LocalSearch\Exception.php	/^class Zend_Service_DeveloperGarden_LocalSearch_Exception extends Zend_Service_DeveloperGarden_Exception$/;"	c
Zend_Service_DeveloperGarden_LocalSearch_SearchParameters	library\Zend\Service\DeveloperGarden\LocalSearch\SearchParameters.php	/^class Zend_Service_DeveloperGarden_LocalSearch_SearchParameters$/;"	c
message	library\Zend\Service\DeveloperGarden\LocalSearch\SearchParameters.php	/^            $message = $validator->getMessages();$/;"	v
param	library\Zend\Service\DeveloperGarden\LocalSearch\SearchParameters.php	/^            $param = array($/;"	v
retVal	library\Zend\Service\DeveloperGarden\LocalSearch\SearchParameters.php	/^        $retVal = array();$/;"	v
validator	library\Zend\Service\DeveloperGarden\LocalSearch\SearchParameters.php	/^        $validator = new Zend_Validate_Between(0, 1000);$/;"	v
validator	library\Zend\Service\DeveloperGarden\LocalSearch\SearchParameters.php	/^        $validator = new Zend_Validate_Int();$/;"	v
validator	library\Zend\Service\DeveloperGarden\LocalSearch\SearchParameters.php	/^        $validator = new Zend_Validate_NotEmpty();$/;"	v
Zend_Service_DeveloperGarden_Request_BaseUserService_ChangeQuotaPool	library\Zend\Service\DeveloperGarden\Request\BaseUserService\ChangeQuotaPool.php	/^class Zend_Service_DeveloperGarden_Request_BaseUserService_ChangeQuotaPool$/;"	c
Zend_Service_DeveloperGarden_Request_BaseUserService_GetAccountBalance	library\Zend\Service\DeveloperGarden\Request\BaseUserService\GetAccountBalance.php	/^class Zend_Service_DeveloperGarden_Request_BaseUserService_GetAccountBalance$/;"	c
Zend_Service_DeveloperGarden_Request_BaseUserService_GetQuotaInformation	library\Zend\Service\DeveloperGarden\Request\BaseUserService\GetQuotaInformation.php	/^class Zend_Service_DeveloperGarden_Request_BaseUserService_GetQuotaInformation$/;"	c
Zend_Service_DeveloperGarden_Request_ConferenceCall_AddConferenceTemplateParticipantRequest	library\Zend\Service\DeveloperGarden\Request\ConferenceCall\AddConferenceTemplateParticipantRequest.php	/^class Zend_Service_DeveloperGarden_Request_ConferenceCall_AddConferenceTemplateParticipantRequest$/;"	c
Zend_Service_DeveloperGarden_Request_ConferenceCall_CommitConferenceRequest	library\Zend\Service\DeveloperGarden\Request\ConferenceCall\CommitConferenceRequest.php	/^class Zend_Service_DeveloperGarden_Request_ConferenceCall_CommitConferenceRequest$/;"	c
Zend_Service_DeveloperGarden_Request_ConferenceCall_CreateConferenceRequest	library\Zend\Service\DeveloperGarden\Request\ConferenceCall\CreateConferenceRequest.php	/^class Zend_Service_DeveloperGarden_Request_ConferenceCall_CreateConferenceRequest$/;"	c
account	library\Zend\Service\DeveloperGarden\Request\ConferenceCall\CreateConferenceRequest.php	/^        $account = null$/;"	v
Zend_Service_DeveloperGarden_Request_ConferenceCall_CreateConferenceTemplateRequest	library\Zend\Service\DeveloperGarden\Request\ConferenceCall\CreateConferenceTemplateRequest.php	/^class Zend_Service_DeveloperGarden_Request_ConferenceCall_CreateConferenceTemplateRequest$/;"	c
Zend_Service_DeveloperGarden_Request_ConferenceCall_GetConferenceListRequest	library\Zend\Service\DeveloperGarden\Request\ConferenceCall\GetConferenceListRequest.php	/^class Zend_Service_DeveloperGarden_Request_ConferenceCall_GetConferenceListRequest$/;"	c
Zend_Service_DeveloperGarden_Request_ConferenceCall_GetConferenceStatusRequest	library\Zend\Service\DeveloperGarden\Request\ConferenceCall\GetConferenceStatusRequest.php	/^class Zend_Service_DeveloperGarden_Request_ConferenceCall_GetConferenceStatusRequest$/;"	c
Zend_Service_DeveloperGarden_Request_ConferenceCall_GetConferenceTemplateListRequest	library\Zend\Service\DeveloperGarden\Request\ConferenceCall\GetConferenceTemplateListRequest.php	/^class Zend_Service_DeveloperGarden_Request_ConferenceCall_GetConferenceTemplateListRequest$/;"	c
Zend_Service_DeveloperGarden_Request_ConferenceCall_GetConferenceTemplateParticipantRequest	library\Zend\Service\DeveloperGarden\Request\ConferenceCall\GetConferenceTemplateParticipantRequest.php	/^class Zend_Service_DeveloperGarden_Request_ConferenceCall_GetConferenceTemplateParticipantRequest$/;"	c
Zend_Service_DeveloperGarden_Request_ConferenceCall_GetConferenceTemplateRequest	library\Zend\Service\DeveloperGarden\Request\ConferenceCall\GetConferenceTemplateRequest.php	/^class Zend_Service_DeveloperGarden_Request_ConferenceCall_GetConferenceTemplateRequest$/;"	c
Zend_Service_DeveloperGarden_Request_ConferenceCall_GetParticipantStatusRequest	library\Zend\Service\DeveloperGarden\Request\ConferenceCall\GetParticipantStatusRequest.php	/^class Zend_Service_DeveloperGarden_Request_ConferenceCall_GetParticipantStatusRequest$/;"	c
Zend_Service_DeveloperGarden_Request_ConferenceCall_GetRunningConferenceRequest	library\Zend\Service\DeveloperGarden\Request\ConferenceCall\GetRunningConferenceRequest.php	/^class Zend_Service_DeveloperGarden_Request_ConferenceCall_GetRunningConferenceRequest$/;"	c
Zend_Service_DeveloperGarden_Request_ConferenceCall_NewParticipantRequest	library\Zend\Service\DeveloperGarden\Request\ConferenceCall\NewParticipantRequest.php	/^class Zend_Service_DeveloperGarden_Request_ConferenceCall_NewParticipantRequest$/;"	c
Zend_Service_DeveloperGarden_Request_ConferenceCall_RemoveConferenceRequest	library\Zend\Service\DeveloperGarden\Request\ConferenceCall\RemoveConferenceRequest.php	/^class Zend_Service_DeveloperGarden_Request_ConferenceCall_RemoveConferenceRequest$/;"	c
Zend_Service_DeveloperGarden_Request_ConferenceCall_RemoveConferenceTemplateParticipantRequest	library\Zend\Service\DeveloperGarden\Request\ConferenceCall\RemoveConferenceTemplateParticipantRequest.php	/^class Zend_Service_DeveloperGarden_Request_ConferenceCall_RemoveConferenceTemplateParticipantRequest$/;"	c
Zend_Service_DeveloperGarden_Request_ConferenceCall_RemoveConferenceTemplateRequest	library\Zend\Service\DeveloperGarden\Request\ConferenceCall\RemoveConferenceTemplateRequest.php	/^class Zend_Service_DeveloperGarden_Request_ConferenceCall_RemoveConferenceTemplateRequest$/;"	c
Zend_Service_DeveloperGarden_Request_ConferenceCall_RemoveParticipantRequest	library\Zend\Service\DeveloperGarden\Request\ConferenceCall\RemoveParticipantRequest.php	/^class Zend_Service_DeveloperGarden_Request_ConferenceCall_RemoveParticipantRequest$/;"	c
Zend_Service_DeveloperGarden_Request_ConferenceCall_UpdateConferenceRequest	library\Zend\Service\DeveloperGarden\Request\ConferenceCall\UpdateConferenceRequest.php	/^class Zend_Service_DeveloperGarden_Request_ConferenceCall_UpdateConferenceRequest$/;"	c
account	library\Zend\Service\DeveloperGarden\Request\ConferenceCall\UpdateConferenceRequest.php	/^        $account = null$/;"	v
Zend_Service_DeveloperGarden_Request_ConferenceCall_UpdateConferenceTemplateParticipantRequest	library\Zend\Service\DeveloperGarden\Request\ConferenceCall\UpdateConferenceTemplateParticipantRequest.php	/^class Zend_Service_DeveloperGarden_Request_ConferenceCall_UpdateConferenceTemplateParticipantRequest$/;"	c
Zend_Service_DeveloperGarden_Request_ConferenceCall_UpdateConferenceTemplateRequest	library\Zend\Service\DeveloperGarden\Request\ConferenceCall\UpdateConferenceTemplateRequest.php	/^class Zend_Service_DeveloperGarden_Request_ConferenceCall_UpdateConferenceTemplateRequest$/;"	c
Zend_Service_DeveloperGarden_Request_ConferenceCall_UpdateParticipantRequest	library\Zend\Service\DeveloperGarden\Request\ConferenceCall\UpdateParticipantRequest.php	/^class Zend_Service_DeveloperGarden_Request_ConferenceCall_UpdateParticipantRequest$/;"	c
action	library\Zend\Service\DeveloperGarden\Request\ConferenceCall\UpdateParticipantRequest.php	/^        $action = null,$/;"	v
Zend_Service_DeveloperGarden_Request_Exception	library\Zend\Service\DeveloperGarden\Request\Exception.php	/^class Zend_Service_DeveloperGarden_Request_Exception$/;"	c
Zend_Service_DeveloperGarden_Request_IpLocation_LocateIPRequest	library\Zend\Service\DeveloperGarden\Request\IpLocation\LocateIPRequest.php	/^class Zend_Service_DeveloperGarden_Request_IpLocation_LocateIPRequest$/;"	c
Zend_Service_DeveloperGarden_Request_LocalSearch_LocalSearchRequest	library\Zend\Service\DeveloperGarden\Request\LocalSearch\LocalSearchRequest.php	/^class Zend_Service_DeveloperGarden_Request_LocalSearch_LocalSearchRequest$/;"	c
account	library\Zend\Service\DeveloperGarden\Request\LocalSearch\LocalSearchRequest.php	/^        $account = null$/;"	v
Zend_Service_DeveloperGarden_Request_SendSms_SendFlashSMS	library\Zend\Service\DeveloperGarden\Request\SendSms\SendFlashSMS.php	/^class Zend_Service_DeveloperGarden_Request_SendSms_SendFlashSMS$/;"	c
Zend_Service_DeveloperGarden_Request_SendSms_SendSMS	library\Zend\Service\DeveloperGarden\Request\SendSms\SendSMS.php	/^class Zend_Service_DeveloperGarden_Request_SendSms_SendSMS$/;"	c
c	library\Zend\Service\DeveloperGarden\Request\SendSms\SendSmsAbstract.php	/^            $c = (substr_count($message, $char) * 2) - 1;$/;"	v
length	library\Zend\Service\DeveloperGarden\Request\SendSms\SendSmsAbstract.php	/^        $length  = strlen($message);$/;"	v
message	library\Zend\Service\DeveloperGarden\Request\SendSms\SendSmsAbstract.php	/^        $message = $this->getMessage();$/;"	v
number	library\Zend\Service\DeveloperGarden\Request\SendSms\SendSmsAbstract.php	/^        $number   = $this->getNumber();$/;"	v
retValue	library\Zend\Service\DeveloperGarden\Request\SendSms\SendSmsAbstract.php	/^            $retValue = ceil($smsLength \/ $this->_smsLength);$/;"	v
retValue	library\Zend\Service\DeveloperGarden\Request\SendSms\SendSmsAbstract.php	/^            $retValue = count(explode(',', $number));$/;"	v
retValue	library\Zend\Service\DeveloperGarden\Request\SendSms\SendSmsAbstract.php	/^        $retValue = 0;$/;"	v
retValue	library\Zend\Service\DeveloperGarden\Request\SendSms\SendSmsAbstract.php	/^        $retValue = 1;$/;"	v
smsLength	library\Zend\Service\DeveloperGarden\Request\SendSms\SendSmsAbstract.php	/^        $smsLength = $this->getMessageLength();$/;"	v
Zend_Service_DeveloperGarden_Request_SmsValidation_GetValidatedNumbers	library\Zend\Service\DeveloperGarden\Request\SmsValidation\GetValidatedNumbers.php	/^class Zend_Service_DeveloperGarden_Request_SmsValidation_GetValidatedNumbers$/;"	c
Zend_Service_DeveloperGarden_Request_SmsValidation_Invalidate	library\Zend\Service\DeveloperGarden\Request\SmsValidation\Invalidate.php	/^class Zend_Service_DeveloperGarden_Request_SmsValidation_Invalidate$/;"	c
Zend_Service_DeveloperGarden_Request_SmsValidation_SendValidationKeyword	library\Zend\Service\DeveloperGarden\Request\SmsValidation\SendValidationKeyword.php	/^class Zend_Service_DeveloperGarden_Request_SmsValidation_SendValidationKeyword$/;"	c
Zend_Service_DeveloperGarden_Request_SmsValidation_Validate	library\Zend\Service\DeveloperGarden\Request\SmsValidation\Validate.php	/^class Zend_Service_DeveloperGarden_Request_SmsValidation_Validate$/;"	c
Zend_Service_DeveloperGarden_Request_VoiceButler_CallStatus	library\Zend\Service\DeveloperGarden\Request\VoiceButler\CallStatus.php	/^class Zend_Service_DeveloperGarden_Request_VoiceButler_CallStatus$/;"	c
Zend_Service_DeveloperGarden_Request_VoiceButler_NewCall	library\Zend\Service\DeveloperGarden\Request\VoiceButler\NewCall.php	/^class Zend_Service_DeveloperGarden_Request_VoiceButler_NewCall$/;"	c
Zend_Service_DeveloperGarden_Request_VoiceButler_NewCallSequenced	library\Zend\Service\DeveloperGarden\Request\VoiceButler\NewCallSequenced.php	/^class Zend_Service_DeveloperGarden_Request_VoiceButler_NewCallSequenced$/;"	c
Zend_Service_DeveloperGarden_Request_VoiceButler_TearDownCall	library\Zend\Service\DeveloperGarden\Request\VoiceButler\TearDownCall.php	/^class Zend_Service_DeveloperGarden_Request_VoiceButler_TearDownCall$/;"	c
Zend_Service_DeveloperGarden_Response_BaseType	library\Zend\Service\DeveloperGarden\Response\BaseType.php	/^class Zend_Service_DeveloperGarden_Response_BaseType$/;"	c
Zend_Service_DeveloperGarden_Response_BaseUserService_ChangeQuotaPoolResponse	library\Zend\Service\DeveloperGarden\Response\BaseUserService\ChangeQuotaPoolResponse.php	/^class Zend_Service_DeveloperGarden_Response_BaseUserService_ChangeQuotaPoolResponse$/;"	c
Zend_Service_DeveloperGarden_Response_BaseUserService_GetAccountBalanceResponse	library\Zend\Service\DeveloperGarden\Response\BaseUserService\GetAccountBalanceResponse.php	/^class Zend_Service_DeveloperGarden_Response_BaseUserService_GetAccountBalanceResponse$/;"	c
Zend_Service_DeveloperGarden_Response_BaseUserService_GetQuotaInformationResponse	library\Zend\Service\DeveloperGarden\Response\BaseUserService\GetQuotaInformationResponse.php	/^class Zend_Service_DeveloperGarden_Response_BaseUserService_GetQuotaInformationResponse$/;"	c
Zend_Service_DeveloperGarden_Response_ConferenceCall_AddConferenceTemplateParticipantResponse	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\AddConferenceTemplateParticipantResponse.php	/^class Zend_Service_DeveloperGarden_Response_ConferenceCall_AddConferenceTemplateParticipantResponse$/;"	c
Zend_Service_DeveloperGarden_Response_ConferenceCall_AddConferenceTemplateParticipantResponseType	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\AddConferenceTemplateParticipantResponseType.php	/^class Zend_Service_DeveloperGarden_Response_ConferenceCall_AddConferenceTemplateParticipantResponseType$/;"	c
Zend_Service_DeveloperGarden_Response_ConferenceCall_CCSResponseType	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\CCSResponseType.php	/^class Zend_Service_DeveloperGarden_Response_ConferenceCall_CCSResponseType$/;"	c
Zend_Service_DeveloperGarden_Response_ConferenceCall_CommitConferenceResponse	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\CommitConferenceResponse.php	/^class Zend_Service_DeveloperGarden_Response_ConferenceCall_CommitConferenceResponse$/;"	c
name	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\ConferenceCallAbstract.php	/^            $name = $p->getName();$/;"	v
r	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\ConferenceCallAbstract.php	/^        $r = new ReflectionClass($this);$/;"	v
retVal	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\ConferenceCallAbstract.php	/^        $retVal = $this->getResponse();$/;"	v
Zend_Service_DeveloperGarden_Response_ConferenceCall_CreateConferenceResponse	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\CreateConferenceResponse.php	/^class Zend_Service_DeveloperGarden_Response_ConferenceCall_CreateConferenceResponse$/;"	c
Zend_Service_DeveloperGarden_Response_ConferenceCall_CreateConferenceResponseType	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\CreateConferenceResponseType.php	/^class Zend_Service_DeveloperGarden_Response_ConferenceCall_CreateConferenceResponseType$/;"	c
Zend_Service_DeveloperGarden_Response_ConferenceCall_CreateConferenceTemplateResponse	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\CreateConferenceTemplateResponse.php	/^class Zend_Service_DeveloperGarden_Response_ConferenceCall_CreateConferenceTemplateResponse$/;"	c
Zend_Service_DeveloperGarden_Response_ConferenceCall_CreateConferenceTemplateResponseType	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\CreateConferenceTemplateResponseType.php	/^class Zend_Service_DeveloperGarden_Response_ConferenceCall_CreateConferenceTemplateResponseType$/;"	c
Zend_Service_DeveloperGarden_Response_ConferenceCall_GetConferenceListResponse	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\GetConferenceListResponse.php	/^class Zend_Service_DeveloperGarden_Response_ConferenceCall_GetConferenceListResponse$/;"	c
Zend_Service_DeveloperGarden_Response_ConferenceCall_GetConferenceListResponseType	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\GetConferenceListResponseType.php	/^class Zend_Service_DeveloperGarden_Response_ConferenceCall_GetConferenceListResponseType$/;"	c
Zend_Service_DeveloperGarden_Response_ConferenceCall_GetConferenceStatusResponse	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\GetConferenceStatusResponse.php	/^class Zend_Service_DeveloperGarden_Response_ConferenceCall_GetConferenceStatusResponse$/;"	c
Zend_Service_DeveloperGarden_Response_ConferenceCall_GetConferenceStatusResponseType	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\GetConferenceStatusResponseType.php	/^class Zend_Service_DeveloperGarden_Response_ConferenceCall_GetConferenceStatusResponseType$/;"	c
participants	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\GetConferenceStatusResponseType.php	/^        $participants = $this->getParticipants();$/;"	v
Zend_Service_DeveloperGarden_Response_ConferenceCall_GetConferenceTemplateListResponse	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\GetConferenceTemplateListResponse.php	/^class Zend_Service_DeveloperGarden_Response_ConferenceCall_GetConferenceTemplateListResponse$/;"	c
Zend_Service_DeveloperGarden_Response_ConferenceCall_GetConferenceTemplateListResponseType	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\GetConferenceTemplateListResponseType.php	/^class Zend_Service_DeveloperGarden_Response_ConferenceCall_GetConferenceTemplateListResponseType$/;"	c
Zend_Service_DeveloperGarden_Response_ConferenceCall_GetConferenceTemplateParticipantResponse	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\GetConferenceTemplateParticipantResponse.php	/^class Zend_Service_DeveloperGarden_Response_ConferenceCall_GetConferenceTemplateParticipantResponse$/;"	c
Zend_Service_DeveloperGarden_Response_ConferenceCall_GetConferenceTemplateParticipantResponseType	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\GetConferenceTemplateParticipantResponseType.php	/^class Zend_Service_DeveloperGarden_Response_ConferenceCall_GetConferenceTemplateParticipantResponseType$/;"	c
Zend_Service_DeveloperGarden_Response_ConferenceCall_GetConferenceTemplateResponse	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\GetConferenceTemplateResponse.php	/^class Zend_Service_DeveloperGarden_Response_ConferenceCall_GetConferenceTemplateResponse$/;"	c
Zend_Service_DeveloperGarden_Response_ConferenceCall_GetConferenceTemplateResponseType	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\GetConferenceTemplateResponseType.php	/^class Zend_Service_DeveloperGarden_Response_ConferenceCall_GetConferenceTemplateResponseType$/;"	c
participants	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\GetConferenceTemplateResponseType.php	/^        $participants = $this->getParticipants();$/;"	v
Zend_Service_DeveloperGarden_Response_ConferenceCall_GetParticipantStatusResponse	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\GetParticipantStatusResponse.php	/^class Zend_Service_DeveloperGarden_Response_ConferenceCall_GetParticipantStatusResponse$/;"	c
Zend_Service_DeveloperGarden_Response_ConferenceCall_GetParticipantStatusResponseType	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\GetParticipantStatusResponseType.php	/^class Zend_Service_DeveloperGarden_Response_ConferenceCall_GetParticipantStatusResponseType$/;"	c
Zend_Service_DeveloperGarden_Response_ConferenceCall_GetRunningConferenceResponse	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\GetRunningConferenceResponse.php	/^class Zend_Service_DeveloperGarden_Response_ConferenceCall_GetRunningConferenceResponse$/;"	c
Zend_Service_DeveloperGarden_Response_ConferenceCall_GetRunningConferenceResponseType	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\GetRunningConferenceResponseType.php	/^class Zend_Service_DeveloperGarden_Response_ConferenceCall_GetRunningConferenceResponseType$/;"	c
Zend_Service_DeveloperGarden_Response_ConferenceCall_NewParticipantResponse	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\NewParticipantResponse.php	/^class Zend_Service_DeveloperGarden_Response_ConferenceCall_NewParticipantResponse$/;"	c
Zend_Service_DeveloperGarden_Response_ConferenceCall_NewParticipantResponseType	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\NewParticipantResponseType.php	/^class Zend_Service_DeveloperGarden_Response_ConferenceCall_NewParticipantResponseType$/;"	c
Zend_Service_DeveloperGarden_Response_ConferenceCall_RemoveConferenceResponse	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\RemoveConferenceResponse.php	/^class Zend_Service_DeveloperGarden_Response_ConferenceCall_RemoveConferenceResponse$/;"	c
Zend_Service_DeveloperGarden_Response_ConferenceCall_RemoveConferenceTemplateParticipantResponse	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\RemoveConferenceTemplateParticipantResponse.php	/^class Zend_Service_DeveloperGarden_Response_ConferenceCall_RemoveConferenceTemplateParticipantResponse$/;"	c
Zend_Service_DeveloperGarden_Response_ConferenceCall_RemoveConferenceTemplateResponse	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\RemoveConferenceTemplateResponse.php	/^class Zend_Service_DeveloperGarden_Response_ConferenceCall_RemoveConferenceTemplateResponse$/;"	c
Zend_Service_DeveloperGarden_Response_ConferenceCall_RemoveParticipantResponse	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\RemoveParticipantResponse.php	/^class Zend_Service_DeveloperGarden_Response_ConferenceCall_RemoveParticipantResponse$/;"	c
Zend_Service_DeveloperGarden_Response_ConferenceCall_UpdateConferenceResponse	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\UpdateConferenceResponse.php	/^class Zend_Service_DeveloperGarden_Response_ConferenceCall_UpdateConferenceResponse$/;"	c
Zend_Service_DeveloperGarden_Response_ConferenceCall_UpdateConferenceTemplateParticipantResponse	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\UpdateConferenceTemplateParticipantResponse.php	/^class Zend_Service_DeveloperGarden_Response_ConferenceCall_UpdateConferenceTemplateParticipantResponse$/;"	c
Zend_Service_DeveloperGarden_Response_ConferenceCall_UpdateConferenceTemplateResponse	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\UpdateConferenceTemplateResponse.php	/^class Zend_Service_DeveloperGarden_Response_ConferenceCall_UpdateConferenceTemplateResponse$/;"	c
Zend_Service_DeveloperGarden_Response_ConferenceCall_UpdateParticipantResponse	library\Zend\Service\DeveloperGarden\Response\ConferenceCall\UpdateParticipantResponse.php	/^class Zend_Service_DeveloperGarden_Response_ConferenceCall_UpdateParticipantResponse$/;"	c
Zend_Service_DeveloperGarden_Response_Exception	library\Zend\Service\DeveloperGarden\Response\Exception.php	/^class Zend_Service_DeveloperGarden_Response_Exception$/;"	c
Zend_Service_DeveloperGarden_Response_IpLocation_CityType	library\Zend\Service\DeveloperGarden\Response\IpLocation\CityType.php	/^class Zend_Service_DeveloperGarden_Response_IpLocation_CityType$/;"	c
Zend_Service_DeveloperGarden_Response_IpLocation_GeoCoordinatesType	library\Zend\Service\DeveloperGarden\Response\IpLocation\GeoCoordinatesType.php	/^class Zend_Service_DeveloperGarden_Response_IpLocation_GeoCoordinatesType$/;"	c
Zend_Service_DeveloperGarden_Response_IpLocation_IPAddressLocationType	library\Zend\Service\DeveloperGarden\Response\IpLocation\IPAddressLocationType.php	/^class Zend_Service_DeveloperGarden_Response_IpLocation_IPAddressLocationType$/;"	c
Zend_Service_DeveloperGarden_Response_IpLocation_LocateIPResponse	library\Zend\Service\DeveloperGarden\Response\IpLocation\LocateIPResponse.php	/^class Zend_Service_DeveloperGarden_Response_IpLocation_LocateIPResponse$/;"	c
Zend_Service_DeveloperGarden_Response_IpLocation_LocateIPResponseType	library\Zend\Service\DeveloperGarden\Response\IpLocation\LocateIPResponseType.php	/^class Zend_Service_DeveloperGarden_Response_IpLocation_LocateIPResponseType$/;"	c
Zend_Service_DeveloperGarden_Response_IpLocation_RegionType	library\Zend\Service\DeveloperGarden\Response\IpLocation\RegionType.php	/^class Zend_Service_DeveloperGarden_Response_IpLocation_RegionType$/;"	c
Zend_Service_DeveloperGarden_Response_LocalSearch_LocalSearchResponse	library\Zend\Service\DeveloperGarden\Response\LocalSearch\LocalSearchResponse.php	/^class Zend_Service_DeveloperGarden_Response_LocalSearch_LocalSearchResponse$/;"	c
result	library\Zend\Service\DeveloperGarden\Response\LocalSearch\LocalSearchResponse.php	/^            $result = false;$/;"	v
result	library\Zend\Service\DeveloperGarden\Response\LocalSearch\LocalSearchResponse.php	/^        $result = parent::hasError();$/;"	v
Zend_Service_DeveloperGarden_Response_LocalSearch_LocalSearchResponseType	library\Zend\Service\DeveloperGarden\Response\LocalSearch\LocalSearchResponseType.php	/^class Zend_Service_DeveloperGarden_Response_LocalSearch_LocalSearchResponseType$/;"	c
Zend_Service_DeveloperGarden_Response_SecurityTokenServer_Exception	library\Zend\Service\DeveloperGarden\Response\SecurityTokenServer\Exception.php	/^class Zend_Service_DeveloperGarden_Response_SecurityTokenServer_Exception$/;"	c
Zend_Service_DeveloperGarden_Response_SecurityTokenServer_GetTokensResponse	library\Zend\Service\DeveloperGarden\Response\SecurityTokenServer\GetTokensResponse.php	/^class Zend_Service_DeveloperGarden_Response_SecurityTokenServer_GetTokensResponse$/;"	c
Zend_Service_DeveloperGarden_Response_SecurityTokenServer_SecurityTokenResponse	library\Zend\Service\DeveloperGarden\Response\SecurityTokenServer\SecurityTokenResponse.php	/^class Zend_Service_DeveloperGarden_Response_SecurityTokenServer_SecurityTokenResponse$/;"	c
Zend_Service_DeveloperGarden_Response_SendSms_SendFlashSMSResponse	library\Zend\Service\DeveloperGarden\Response\SendSms\SendFlashSMSResponse.php	/^class Zend_Service_DeveloperGarden_Response_SendSms_SendFlashSMSResponse$/;"	c
Zend_Service_DeveloperGarden_Response_SendSms_SendSMSResponse	library\Zend\Service\DeveloperGarden\Response\SendSms\SendSMSResponse.php	/^class Zend_Service_DeveloperGarden_Response_SendSms_SendSMSResponse$/;"	c
retValue	library\Zend\Service\DeveloperGarden\Response\SendSms\SendSmsAbstract.php	/^            $retValue = $this->return->description;$/;"	v
retValue	library\Zend\Service\DeveloperGarden\Response\SendSms\SendSmsAbstract.php	/^            $retValue = $this->return->status;$/;"	v
retValue	library\Zend\Service\DeveloperGarden\Response\SendSms\SendSmsAbstract.php	/^            $retValue = true;$/;"	v
retValue	library\Zend\Service\DeveloperGarden\Response\SendSms\SendSmsAbstract.php	/^        $retValue = false;$/;"	v
retValue	library\Zend\Service\DeveloperGarden\Response\SendSms\SendSmsAbstract.php	/^        $retValue = null;$/;"	v
Zend_Service_DeveloperGarden_Response_SmsValidation_GetValidatedNumbersResponse	library\Zend\Service\DeveloperGarden\Response\SmsValidation\GetValidatedNumbersResponse.php	/^class Zend_Service_DeveloperGarden_Response_SmsValidation_GetValidatedNumbersResponse$/;"	c
Zend_Service_DeveloperGarden_Response_SmsValidation_ValidateResponse	library\Zend\Service\DeveloperGarden\Response\SmsValidation\InvalidateResponse.php	/^class Zend_Service_DeveloperGarden_Response_SmsValidation_ValidateResponse$/;"	c
Zend_Service_DeveloperGarden_Response_SmsValidation_SendValidationKeywordResponse	library\Zend\Service\DeveloperGarden\Response\SmsValidation\SendValidationKeywordResponse.php	/^class Zend_Service_DeveloperGarden_Response_SmsValidation_SendValidationKeywordResponse$/;"	c
Zend_Service_DeveloperGarden_Response_SmsValidation_InvalidateResponse	library\Zend\Service\DeveloperGarden\Response\SmsValidation\ValidateResponse.php	/^class Zend_Service_DeveloperGarden_Response_SmsValidation_InvalidateResponse$/;"	c
Zend_Service_DeveloperGarden_Response_SmsValidation_ValidatedNumber	library\Zend\Service\DeveloperGarden\Response\SmsValidation\ValidatedNumber.php	/^class Zend_Service_DeveloperGarden_Response_SmsValidation_ValidatedNumber$/;"	c
Zend_Service_DeveloperGarden_Response_VoiceButler_CallStatus2Response	library\Zend\Service\DeveloperGarden\Response\VoiceButler\CallStatus2Response.php	/^class Zend_Service_DeveloperGarden_Response_VoiceButler_CallStatus2Response$/;"	c
Zend_Service_DeveloperGarden_Response_VoiceButler_CallStatusResponse	library\Zend\Service\DeveloperGarden\Response\VoiceButler\CallStatusResponse.php	/^class Zend_Service_DeveloperGarden_Response_VoiceButler_CallStatusResponse$/;"	c
Zend_Service_DeveloperGarden_Response_VoiceButler_NewCallResponse	library\Zend\Service\DeveloperGarden\Response\VoiceButler\NewCallResponse.php	/^class Zend_Service_DeveloperGarden_Response_VoiceButler_NewCallResponse$/;"	c
Zend_Service_DeveloperGarden_Response_VoiceButler_NewCallSequencedResponse	library\Zend\Service\DeveloperGarden\Response\VoiceButler\NewCallSequencedResponse.php	/^class Zend_Service_DeveloperGarden_Response_VoiceButler_NewCallSequencedResponse$/;"	c
Zend_Service_DeveloperGarden_Response_VoiceButler_TearDownCallResponse	library\Zend\Service\DeveloperGarden\Response\VoiceButler\TearDownCallResponse.php	/^class Zend_Service_DeveloperGarden_Response_VoiceButler_TearDownCallResponse$/;"	c
retValue	library\Zend\Service\DeveloperGarden\Response\VoiceButler\VoiceButlerAbstract.php	/^            $retValue = $this->return->err_msg;$/;"	v
retValue	library\Zend\Service\DeveloperGarden\Response\VoiceButler\VoiceButlerAbstract.php	/^            $retValue = $this->return->status;$/;"	v
retValue	library\Zend\Service\DeveloperGarden\Response\VoiceButler\VoiceButlerAbstract.php	/^            $retValue = true;$/;"	v
retValue	library\Zend\Service\DeveloperGarden\Response\VoiceButler\VoiceButlerAbstract.php	/^        $retValue = false;$/;"	v
retValue	library\Zend\Service\DeveloperGarden\Response\VoiceButler\VoiceButlerAbstract.php	/^        $retValue = null;$/;"	v
Zend_Service_DeveloperGarden_SecurityTokenServer	library\Zend\Service\DeveloperGarden\SecurityTokenServer.php	/^class Zend_Service_DeveloperGarden_SecurityTokenServer$/;"	c
token	library\Zend\Service\DeveloperGarden\SecurityTokenServer.php	/^            $token = $this->getSoapClient()->getTokens(array($/;"	v
token	library\Zend\Service\DeveloperGarden\SecurityTokenServer.php	/^            $token = $this->getSoapClient()->login('login');$/;"	v
token	library\Zend\Service\DeveloperGarden\SecurityTokenServer.php	/^        $token = Zend_Service_DeveloperGarden_SecurityTokenServer_Cache::getTokenFromCache($/;"	v
Zend_Service_DeveloperGarden_SecurityTokenServer_Cache	library\Zend\Service\DeveloperGarden\SecurityTokenServer\Cache.php	/^class Zend_Service_DeveloperGarden_SecurityTokenServer_Cache$/;"	c
cache	library\Zend\Service\DeveloperGarden\SecurityTokenServer\Cache.php	/^            $cache = self::getCache();$/;"	v
cache	library\Zend\Service\DeveloperGarden\SecurityTokenServer\Cache.php	/^        $cache = self::getCache();$/;"	v
token	library\Zend\Service\DeveloperGarden\SecurityTokenServer\Cache.php	/^            $token = $cache->load(md5($tokenId));$/;"	v
value	library\Zend\Service\DeveloperGarden\SecurityTokenServer\Cache.php	/^            $value = null;$/;"	v
Zend_Service_DeveloperGarden_SendSms	library\Zend\Service\DeveloperGarden\SendSms.php	/^class Zend_Service_DeveloperGarden_SendSms$/;"	c
client	library\Zend\Service\DeveloperGarden\SendSms.php	/^        $client = $this->getSoapClient();$/;"	v
request	library\Zend\Service\DeveloperGarden\SendSms.php	/^        $request = array($/;"	v
request	library\Zend\Service\DeveloperGarden\SendSms.php	/^        $request = new Zend_Service_DeveloperGarden_Request_SendSms_SendFlashSMS($this->getEnvironment());$/;"	v
request	library\Zend\Service\DeveloperGarden\SendSms.php	/^        $request = new Zend_Service_DeveloperGarden_Request_SendSms_SendSMS($this->getEnvironment());$/;"	v
response	library\Zend\Service\DeveloperGarden\SendSms.php	/^                $response = $client->sendFlashSms($request);$/;"	v
response	library\Zend\Service\DeveloperGarden\SendSms.php	/^                $response = $client->sendSms($request);$/;"	v
Zend_Service_DeveloperGarden_SmsValidation	library\Zend\Service\DeveloperGarden\SmsValidation.php	/^class Zend_Service_DeveloperGarden_SmsValidation extends Zend_Service_DeveloperGarden_Client_ClientAbstract$/;"	c
request	library\Zend\Service\DeveloperGarden\SmsValidation.php	/^        $request = new Zend_Service_DeveloperGarden_Request_SmsValidation_GetValidatedNumbers($/;"	v
request	library\Zend\Service\DeveloperGarden\SmsValidation.php	/^        $request = new Zend_Service_DeveloperGarden_Request_SmsValidation_Invalidate($/;"	v
request	library\Zend\Service\DeveloperGarden\SmsValidation.php	/^        $request = new Zend_Service_DeveloperGarden_Request_SmsValidation_SendValidationKeyword($/;"	v
request	library\Zend\Service\DeveloperGarden\SmsValidation.php	/^        $request = new Zend_Service_DeveloperGarden_Request_SmsValidation_Validate($/;"	v
Zend_Service_DeveloperGarden_VoiceCall	library\Zend\Service\DeveloperGarden\VoiceCall.php	/^class Zend_Service_DeveloperGarden_VoiceCall$/;"	c
account	library\Zend\Service\DeveloperGarden\VoiceCall.php	/^        $account = null, $privacyA = null, $privacyB = null, $greeter = null$/;"	v
request	library\Zend\Service\DeveloperGarden\VoiceCall.php	/^        $request = new Zend_Service_DeveloperGarden_Request_VoiceButler_CallStatus($/;"	v
request	library\Zend\Service\DeveloperGarden\VoiceCall.php	/^        $request = new Zend_Service_DeveloperGarden_Request_VoiceButler_NewCall($/;"	v
request	library\Zend\Service\DeveloperGarden\VoiceCall.php	/^        $request = new Zend_Service_DeveloperGarden_Request_VoiceButler_NewCallSequenced($/;"	v
request	library\Zend\Service\DeveloperGarden\VoiceCall.php	/^        $request = new Zend_Service_DeveloperGarden_Request_VoiceButler_TearDownCall($/;"	v
result	library\Zend\Service\DeveloperGarden\VoiceCall.php	/^        $result = $this->getSoapClient()->callStatus2(array($/;"	v
result	library\Zend\Service\DeveloperGarden\VoiceCall.php	/^        $result = $this->getSoapClient()->newCall(array($/;"	v
result	library\Zend\Service\DeveloperGarden\VoiceCall.php	/^        $result = $this->getSoapClient()->newCallSequenced(array($/;"	v
result	library\Zend\Service\DeveloperGarden\VoiceCall.php	/^        $result = $this->getSoapClient()->tearDownCall(array($/;"	v
glue	library\Zend\Service\Ebay\Abstract.php	/^                            $glue     = $hasAttribute ? '.@' : '.';$/;"	v
hasAttribute	library\Zend\Service\Ebay\Abstract.php	/^                $hasAttribute = array_key_exists('', $value);$/;"	v
isAssoc	library\Zend\Service\Ebay\Abstract.php	/^                $isAssoc   = count(array_diff($keyRaw, $keyNumber)) > 0;$/;"	v
keyNumber	library\Zend\Service\Ebay\Abstract.php	/^                $keyNumber = range(0, count($value) - 1);$/;"	v
keyRaw	library\Zend\Service\Ebay\Abstract.php	/^                $keyRaw    = array_keys($value);$/;"	v
name	library\Zend\Service\Ebay\Abstract.php	/^            $name = $name->toArray();$/;"	v
new	library\Zend\Service\Ebay\Abstract.php	/^            $new = $this->_optionsToNameValueSyntax($new);$/;"	v
new	library\Zend\Service\Ebay\Abstract.php	/^        $new      = array();$/;"	v
newName	library\Zend\Service\Ebay\Abstract.php	/^                        $newName = $name . '(' . $subName . ')';$/;"	v
newName	library\Zend\Service\Ebay\Abstract.php	/^                        $newName = $name;$/;"	v
options	library\Zend\Service\Ebay\Abstract.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Service\Ebay\Abstract.php	/^            $options = array();$/;"	v
options	library\Zend\Service\Ebay\Abstract.php	/^        $options  = self::optionsToArray($options);$/;"	v
options	library\Zend\Service\Ebay\Abstract.php	/^        $options = self::optionsToArray($options);$/;"	v
runAgain	library\Zend\Service\Ebay\Abstract.php	/^                        $runAgain = true;$/;"	v
runAgain	library\Zend\Service\Ebay\Abstract.php	/^        $runAgain = false;$/;"	v
subValue	library\Zend\Service\Ebay\Abstract.php	/^                        $subValue = self::toEbayValue($subValue);$/;"	v
value	library\Zend\Service\Ebay\Abstract.php	/^                $value = (string) $value == 'true';$/;"	v
value	library\Zend\Service\Ebay\Abstract.php	/^                $value = (string) $value;$/;"	v
value	library\Zend\Service\Ebay\Abstract.php	/^                $value = floatval((string) $value);$/;"	v
value	library\Zend\Service\Ebay\Abstract.php	/^            $value = $value ? '1' : '0';$/;"	v
value	library\Zend\Service\Ebay\Abstract.php	/^            $value = $value->format(DateTime::ISO8601);$/;"	v
value	library\Zend\Service\Ebay\Abstract.php	/^            $value = $value->getIso();$/;"	v
value	library\Zend\Service\Ebay\Abstract.php	/^            $value = (string) $value;$/;"	v
Zend_Service_Ebay_Exception	library\Zend\Service\Ebay\Exception.php	/^class Zend_Service_Ebay_Exception extends Zend_Service_Exception$/;"	c
Zend_Service_Ebay_Finding	library\Zend\Service\Ebay\Finding.php	/^class Zend_Service_Ebay_Finding extends Zend_Service_Ebay_Abstract$/;"	c
client	library\Zend\Service\Ebay\Finding.php	/^        $client = $this->getClient();$/;"	v
default	library\Zend\Service\Ebay\Finding.php	/^        $default = array('OPERATION-NAME'       => $operation,$/;"	v
dom	library\Zend\Service\Ebay\Finding.php	/^        $dom       = $this->_request($operation, $options);$/;"	v
dom	library\Zend\Service\Ebay\Finding.php	/^        $dom = $this->_request($operation, $options);$/;"	v
dom	library\Zend\Service\Ebay\Finding.php	/^        $dom = new DOMDocument();$/;"	v
errorIdNode	library\Zend\Service\Ebay\Finding.php	/^            $errorIdNode = $xpath->query("\/\/$ns:errorId[1]", $errorNode)->item(0);$/;"	v
errorNode	library\Zend\Service\Ebay\Finding.php	/^            $errorNode = $severityNode->parentNode;$/;"	v
expression	library\Zend\Service\Ebay\Finding.php	/^        $expression   = "\/\/$nsMs:errorMessage[1]\/$ns:error\/$ns:severity[.='Error']";$/;"	v
message	library\Zend\Service\Ebay\Finding.php	/^                $message = 'eBay error: ' . $messageNode->nodeValue;$/;"	v
message	library\Zend\Service\Ebay\Finding.php	/^                $message = 'eBay error: unknown';$/;"	v
message	library\Zend\Service\Ebay\Finding.php	/^            $message = $response->getMessage()$/;"	v
message	library\Zend\Service\Ebay\Finding.php	/^            $message = 'It was not possible to load XML returned.';$/;"	v
message	library\Zend\Service\Ebay\Finding.php	/^        $message = '';$/;"	v
messageNode	library\Zend\Service\Ebay\Finding.php	/^            $messageNode = $xpath->query("\/\/$ns:message[1]", $errorNode)->item(0);$/;"	v
ns	library\Zend\Service\Ebay\Finding.php	/^        $ns           = self::XMLNS_FINDING;$/;"	v
nsMs	library\Zend\Service\Ebay\Finding.php	/^        $nsMs         = self::XMLNS_MS;$/;"	v
operation	library\Zend\Service\Ebay\Finding.php	/^        $operation = 'getHistograms';$/;"	v
operation	library\Zend\Service\Ebay\Finding.php	/^        $operation = 'getSearchKeywordsRecommendation';$/;"	v
options	library\Zend\Service\Ebay\Finding.php	/^            $options = array(self::OPTION_APP_ID => $options);$/;"	v
options	library\Zend\Service\Ebay\Finding.php	/^            $options = parent::optionsToArray($options);$/;"	v
options	library\Zend\Service\Ebay\Finding.php	/^        $options                      = parent::optionsToArray($options);$/;"	v
options	library\Zend\Service\Ebay\Finding.php	/^        $options               = parent::optionsToArray($options);$/;"	v
options	library\Zend\Service\Ebay\Finding.php	/^        $options              = parent::optionsToArray($options);$/;"	v
options	library\Zend\Service\Ebay\Finding.php	/^        $options             = parent::optionsToArray($options);$/;"	v
options	library\Zend\Service\Ebay\Finding.php	/^        $options = $default + $this->_optionsToNameValueSyntax($options);$/;"	v
productIdType	library\Zend\Service\Ebay\Finding.php	/^            $productIdType = 'ReferenceID';$/;"	v
response	library\Zend\Service\Ebay\Finding.php	/^        $response = $client->setUri(self::ENDPOINT_URI)$/;"	v
response	library\Zend\Service\Ebay\Finding.php	/^        $response = new Zend_Service_Ebay_Finding_Response_Histograms($dom->firstChild);$/;"	v
response	library\Zend\Service\Ebay\Finding.php	/^        $response = new Zend_Service_Ebay_Finding_Response_Items($dom->firstChild);$/;"	v
response	library\Zend\Service\Ebay\Finding.php	/^        $response = new Zend_Service_Ebay_Finding_Response_Keywords($dom->firstChild);$/;"	v
severityNode	library\Zend\Service\Ebay\Finding.php	/^        $severityNode = $xpath->query($expression)->item(0);$/;"	v
xpath	library\Zend\Service\Ebay\Finding.php	/^        $xpath = new DOMXPath($dom);$/;"	v
document	library\Zend\Service\Ebay\Finding\Abstract.php	/^        $document = $this->_dom->ownerDocument;$/;"	v
nodes	library\Zend\Service\Ebay\Finding\Abstract.php	/^        $nodes  = $this->_xPath->query($path, $this->_dom);$/;"	v
value	library\Zend\Service\Ebay\Finding\Abstract.php	/^            $value    = (string) $node->nodeValue;$/;"	v
values	library\Zend\Service\Ebay\Finding\Abstract.php	/^        $values = array();$/;"	v
xpath	library\Zend\Service\Ebay\Finding\Abstract.php	/^            $xpath = new DOMXPath($document);$/;"	v
Zend_Service_Ebay_Finding_Aspect	library\Zend\Service\Ebay\Finding\Aspect.php	/^class Zend_Service_Ebay_Finding_Aspect extends Zend_Service_Ebay_Finding_Abstract$/;"	c
nodes	library\Zend\Service\Ebay\Finding\Aspect.php	/^        $nodes = $this->_xPath->query(".\/\/$ns:valueHistogram", $this->_dom);$/;"	v
ns	library\Zend\Service\Ebay\Finding\Aspect.php	/^        $ns = Zend_Service_Ebay_Finding::XMLNS_FINDING;$/;"	v
Zend_Service_Ebay_Finding_Aspect_Histogram_Container	library\Zend\Service\Ebay\Finding\Aspect\Histogram\Container.php	/^class Zend_Service_Ebay_Finding_Aspect_Histogram_Container extends Zend_Service_Ebay_Finding_Abstract$/;"	c
nodes	library\Zend\Service\Ebay\Finding\Aspect\Histogram\Container.php	/^        $nodes = $this->_xPath->query(".\/\/$ns:aspect", $this->_dom);$/;"	v
ns	library\Zend\Service\Ebay\Finding\Aspect\Histogram\Container.php	/^        $ns = Zend_Service_Ebay_Finding::XMLNS_FINDING;$/;"	v
Zend_Service_Ebay_Finding_Aspect_Histogram_Value	library\Zend\Service\Ebay\Finding\Aspect\Histogram\Value.php	/^class Zend_Service_Ebay_Finding_Aspect_Histogram_Value extends Zend_Service_Ebay_Finding_Abstract$/;"	c
ns	library\Zend\Service\Ebay\Finding\Aspect\Histogram\Value.php	/^        $ns = Zend_Service_Ebay_Finding::XMLNS_FINDING;$/;"	v
Zend_Service_Ebay_Finding_Aspect_Histogram_Value_Set	library\Zend\Service\Ebay\Finding\Aspect\Histogram\Value\Set.php	/^class Zend_Service_Ebay_Finding_Aspect_Histogram_Value_Set extends Zend_Service_Ebay_Finding_Set_Abstract$/;"	c
node	library\Zend\Service\Ebay\Finding\Aspect\Histogram\Value\Set.php	/^        $node = $this->_nodes->item($this->_key);$/;"	v
Zend_Service_Ebay_Finding_Aspect_Set	library\Zend\Service\Ebay\Finding\Aspect\Set.php	/^class Zend_Service_Ebay_Finding_Aspect_Set extends Zend_Service_Ebay_Finding_Set_Abstract$/;"	c
node	library\Zend\Service\Ebay\Finding\Aspect\Set.php	/^        $node = $this->_nodes->item($this->_key);$/;"	v
Zend_Service_Ebay_Finding_Category	library\Zend\Service\Ebay\Finding\Category.php	/^class Zend_Service_Ebay_Finding_Category extends Zend_Service_Ebay_Finding_Abstract$/;"	c
ns	library\Zend\Service\Ebay\Finding\Category.php	/^        $ns = Zend_Service_Ebay_Finding::XMLNS_FINDING;$/;"	v
Zend_Service_Ebay_Finding_Category_Histogram	library\Zend\Service\Ebay\Finding\Category\Histogram.php	/^class Zend_Service_Ebay_Finding_Category_Histogram extends Zend_Service_Ebay_Finding_Category$/;"	c
nodes	library\Zend\Service\Ebay\Finding\Category\Histogram.php	/^        $nodes = $this->_xPath->query(".\/\/$ns:childCategoryHistogram", $this->_dom);$/;"	v
ns	library\Zend\Service\Ebay\Finding\Category\Histogram.php	/^        $ns = Zend_Service_Ebay_Finding::XMLNS_FINDING;$/;"	v
Zend_Service_Ebay_Finding_Category_Histogram_Container	library\Zend\Service\Ebay\Finding\Category\Histogram\Container.php	/^class Zend_Service_Ebay_Finding_Category_Histogram_Container extends Zend_Service_Ebay_Finding_Abstract$/;"	c
nodes	library\Zend\Service\Ebay\Finding\Category\Histogram\Container.php	/^        $nodes = $this->_xPath->query(".\/\/$ns:categoryHistogram", $this->_dom);$/;"	v
ns	library\Zend\Service\Ebay\Finding\Category\Histogram\Container.php	/^        $ns = Zend_Service_Ebay_Finding::XMLNS_FINDING;$/;"	v
Zend_Service_Ebay_Finding_Category_Histogram_Set	library\Zend\Service\Ebay\Finding\Category\Histogram\Set.php	/^class Zend_Service_Ebay_Finding_Category_Histogram_Set extends Zend_Service_Ebay_Finding_Set_Abstract$/;"	c
node	library\Zend\Service\Ebay\Finding\Category\Histogram\Set.php	/^        $node = $this->_nodes->item($this->_key);$/;"	v
Zend_Service_Ebay_Finding_Error_Data	library\Zend\Service\Ebay\Finding\Error\Data.php	/^class Zend_Service_Ebay_Finding_Error_Data extends Zend_Service_Ebay_Finding_Abstract$/;"	c
ns	library\Zend\Service\Ebay\Finding\Error\Data.php	/^        $ns = Zend_Service_Ebay_Finding::XMLNS_FINDING;$/;"	v
Zend_Service_Ebay_Finding_Error_Data_Set	library\Zend\Service\Ebay\Finding\Error\Data\Set.php	/^class Zend_Service_Ebay_Finding_Error_Data_Set extends Zend_Service_Ebay_Finding_Set_Abstract$/;"	c
node	library\Zend\Service\Ebay\Finding\Error\Data\Set.php	/^        $node = $this->_nodes->item($this->_key);$/;"	v
Zend_Service_Ebay_Finding_Error_Message	library\Zend\Service\Ebay\Finding\Error\Message.php	/^class Zend_Service_Ebay_Finding_Error_Message extends Zend_Service_Ebay_Finding_Abstract$/;"	c
nodes	library\Zend\Service\Ebay\Finding\Error\Message.php	/^        $nodes = $this->_xPath->query(".\/\/$ns:error", $this->_dom);$/;"	v
ns	library\Zend\Service\Ebay\Finding\Error\Message.php	/^        $ns = Zend_Service_Ebay_Finding::XMLNS_FINDING;$/;"	v
Zend_Service_Ebay_Finding_Exception	library\Zend\Service\Ebay\Finding\Exception.php	/^class Zend_Service_Ebay_Finding_Exception extends Zend_Service_Ebay_Exception$/;"	c
Zend_Service_Ebay_Finding_ListingInfo	library\Zend\Service\Ebay\Finding\ListingInfo.php	/^class Zend_Service_Ebay_Finding_ListingInfo extends Zend_Service_Ebay_Finding_Abstract$/;"	c
ns	library\Zend\Service\Ebay\Finding\ListingInfo.php	/^        $ns = Zend_Service_Ebay_Finding::XMLNS_FINDING;$/;"	v
Zend_Service_Ebay_Finding_PaginationOutput	library\Zend\Service\Ebay\Finding\PaginationOutput.php	/^class Zend_Service_Ebay_Finding_PaginationOutput extends Zend_Service_Ebay_Finding_Abstract$/;"	c
ns	library\Zend\Service\Ebay\Finding\PaginationOutput.php	/^        $ns = Zend_Service_Ebay_Finding::XMLNS_FINDING;$/;"	v
name	library\Zend\Service\Ebay\Finding\Response\Abstract.php	/^            $name = $name->toArray();$/;"	v
node	library\Zend\Service\Ebay\Finding\Response\Abstract.php	/^        $node = $this->_xPath->query(".\/\/$ns:errorMessage[1]", $this->_dom)->item(0);$/;"	v
ns	library\Zend\Service\Ebay\Finding\Response\Abstract.php	/^        $ns = Zend_Service_Ebay_Finding::XMLNS_FINDING;$/;"	v
Zend_Service_Ebay_Finding_Response_Histograms	library\Zend\Service\Ebay\Finding\Response\Histograms.php	/^class Zend_Service_Ebay_Finding_Response_Histograms extends Zend_Service_Ebay_Finding_Response_Abstract$/;"	c
node	library\Zend\Service\Ebay\Finding\Response\Histograms.php	/^        $node = $this->_xPath->query(".\/\/$ns:aspectHistogramContainer[1]", $this->_dom)->item(0);$/;"	v
node	library\Zend\Service\Ebay\Finding\Response\Histograms.php	/^        $node = $this->_xPath->query(".\/\/$ns:categoryHistogramContainer[1]", $this->_dom)->item(0);$/;"	v
ns	library\Zend\Service\Ebay\Finding\Response\Histograms.php	/^        $ns = Zend_Service_Ebay_Finding::XMLNS_FINDING;$/;"	v
Zend_Service_Ebay_Finding_Response_Items	library\Zend\Service\Ebay\Finding\Response\Items.php	/^class Zend_Service_Ebay_Finding_Response_Items extends Zend_Service_Ebay_Finding_Response_Histograms$/;"	c
arguments	library\Zend\Service\Ebay\Finding\Response\Items.php	/^        $arguments = array();$/;"	v
callback	library\Zend\Service\Ebay\Finding\Response\Items.php	/^                $callback = array($proxy, $this->_operation);$/;"	v
entriesPerPage	library\Zend\Service\Ebay\Finding\Response\Items.php	/^        $entriesPerPage             = $this->paginationOutput->entriesPerPage;$/;"	v
id	library\Zend\Service\Ebay\Finding\Response\Items.php	/^        $id = serialize($arguments);$/;"	v
last	library\Zend\Service\Ebay\Finding\Response\Items.php	/^            $last = $max;$/;"	v
last	library\Zend\Service\Ebay\Finding\Response\Items.php	/^        $last = $this->paginationOutput->totalPages;$/;"	v
new	library\Zend\Service\Ebay\Finding\Response\Items.php	/^                $new      = call_user_func_array($callback, $arguments);$/;"	v
new	library\Zend\Service\Ebay\Finding\Response\Items.php	/^                $new = $this;$/;"	v
next	library\Zend\Service\Ebay\Finding\Response\Items.php	/^        $next = $this->paginationOutput->pageNumber + 1;$/;"	v
node	library\Zend\Service\Ebay\Finding\Response\Items.php	/^        $node = $this->_xPath->query(".\/\/$ns:paginationOutput[1]", $this->_dom)->item(0);$/;"	v
node	library\Zend\Service\Ebay\Finding\Response\Items.php	/^        $node = $this->_xPath->query(".\/\/$ns:searchResult[1]", $this->_dom)->item(0);$/;"	v
ns	library\Zend\Service\Ebay\Finding\Response\Items.php	/^        $ns = Zend_Service_Ebay_Finding::XMLNS_FINDING;$/;"	v
options	library\Zend\Service\Ebay\Finding\Response\Items.php	/^        $options = $this->_options;$/;"	v
previous	library\Zend\Service\Ebay\Finding\Response\Items.php	/^        $previous = $this->paginationOutput->pageNumber - 1;$/;"	v
productId	library\Zend\Service\Ebay\Finding\Response\Items.php	/^                    $productId = array('' => $productId);$/;"	v
productId	library\Zend\Service\Ebay\Finding\Response\Items.php	/^                $productId = $this->getOption('productId');$/;"	v
Zend_Service_Ebay_Finding_Response_Keywords	library\Zend\Service\Ebay\Finding\Response\Keywords.php	/^class Zend_Service_Ebay_Finding_Response_Keywords extends Zend_Service_Ebay_Finding_Response_Abstract$/;"	c
ns	library\Zend\Service\Ebay\Finding\Response\Keywords.php	/^        $ns = Zend_Service_Ebay_Finding::XMLNS_FINDING;$/;"	v
options	library\Zend\Service\Ebay\Finding\Response\Keywords.php	/^        $options = $options + $this->_options;$/;"	v
options	library\Zend\Service\Ebay\Finding\Response\Keywords.php	/^        $options = Zend_Service_Ebay_Abstract::optionsToArray($options);$/;"	v
Zend_Service_Ebay_Finding_Search_Item	library\Zend\Service\Ebay\Finding\Search\Item.php	/^class Zend_Service_Ebay_Finding_Search_Item extends Zend_Service_Ebay_Finding_Abstract$/;"	c
node	library\Zend\Service\Ebay\Finding\Search\Item.php	/^        $node = $this->_xPath->query(".\/$ns:shippingInfo", $this->_dom)->item(0);$/;"	v
node	library\Zend\Service\Ebay\Finding\Search\Item.php	/^        $node = $this->_xPath->query(".\/\/$ns:listingInfo[1]", $this->_dom)->item(0);$/;"	v
node	library\Zend\Service\Ebay\Finding\Search\Item.php	/^        $node = $this->_xPath->query(".\/\/$ns:primaryCategory[1]", $this->_dom)->item(0);$/;"	v
node	library\Zend\Service\Ebay\Finding\Search\Item.php	/^        $node = $this->_xPath->query(".\/\/$ns:secondaryCategory[1]", $this->_dom)->item(0);$/;"	v
node	library\Zend\Service\Ebay\Finding\Search\Item.php	/^        $node = $this->_xPath->query(".\/\/$ns:sellerInfo[1]", $this->_dom)->item(0);$/;"	v
node	library\Zend\Service\Ebay\Finding\Search\Item.php	/^        $node = $this->_xPath->query(".\/\/$ns:sellingStatus[1]", $this->_dom)->item(0);$/;"	v
node	library\Zend\Service\Ebay\Finding\Search\Item.php	/^        $node = $this->_xPath->query(".\/\/$ns:storeInfo[1]", $this->_dom)->item(0);$/;"	v
ns	library\Zend\Service\Ebay\Finding\Search\Item.php	/^        $ns = Zend_Service_Ebay_Finding::XMLNS_FINDING;$/;"	v
type	library\Zend\Service\Ebay\Finding\Search\Item.php	/^        $type = $this->attributes('productId', 'type');$/;"	v
Zend_Service_Ebay_Finding_Search_Item_Set	library\Zend\Service\Ebay\Finding\Search\Item\Set.php	/^class Zend_Service_Ebay_Finding_Search_Item_Set extends Zend_Service_Ebay_Finding_Set_Abstract$/;"	c
node	library\Zend\Service\Ebay\Finding\Search\Item\Set.php	/^        $node = $this->_nodes->item($this->_key);$/;"	v
Zend_Service_Ebay_Finding_Search_Result	library\Zend\Service\Ebay\Finding\Search\Result.php	/^class Zend_Service_Ebay_Finding_Search_Result extends Zend_Service_Ebay_Finding_Abstract$/;"	c
nodes	library\Zend\Service\Ebay\Finding\Search\Result.php	/^        $nodes = $this->_xPath->query(".\/\/$ns:item", $this->_dom);$/;"	v
ns	library\Zend\Service\Ebay\Finding\Search\Result.php	/^        $ns = Zend_Service_Ebay_Finding::XMLNS_FINDING;$/;"	v
Zend_Service_Ebay_Finding_SellerInfo	library\Zend\Service\Ebay\Finding\SellerInfo.php	/^class Zend_Service_Ebay_Finding_SellerInfo extends Zend_Service_Ebay_Finding_Abstract$/;"	c
ns	library\Zend\Service\Ebay\Finding\SellerInfo.php	/^        $ns = Zend_Service_Ebay_Finding::XMLNS_FINDING;$/;"	v
Zend_Service_Ebay_Finding_SellingStatus	library\Zend\Service\Ebay\Finding\SellingStatus.php	/^class Zend_Service_Ebay_Finding_SellingStatus extends Zend_Service_Ebay_Finding_Abstract$/;"	c
ns	library\Zend\Service\Ebay\Finding\SellingStatus.php	/^        $ns = Zend_Service_Ebay_Finding::XMLNS_FINDING;$/;"	v
message	library\Zend\Service\Ebay\Finding\Set\Abstract.php	/^            $message = "Position '{$key}' is not seekable.";$/;"	v
Zend_Service_Ebay_Finding_ShippingInfo	library\Zend\Service\Ebay\Finding\ShippingInfo.php	/^class Zend_Service_Ebay_Finding_ShippingInfo extends Zend_Service_Ebay_Finding_Abstract$/;"	c
ns	library\Zend\Service\Ebay\Finding\ShippingInfo.php	/^        $ns = Zend_Service_Ebay_Finding::XMLNS_FINDING;$/;"	v
Zend_Service_Ebay_Finding_Storefront	library\Zend\Service\Ebay\Finding\Storefront.php	/^class Zend_Service_Ebay_Finding_Storefront extends Zend_Service_Ebay_Finding_Abstract$/;"	c
ns	library\Zend\Service\Ebay\Finding\Storefront.php	/^        $ns = Zend_Service_Ebay_Finding::XMLNS_FINDING;$/;"	v
Zend_Service_Exception	library\Zend\Service\Exception.php	/^class Zend_Service_Exception extends Zend_Exception$/;"	c
Zend_Service_Flickr	library\Zend\Service\Flickr.php	/^class Zend_Service_Flickr$/;"	c
between	library\Zend\Service\Flickr.php	/^        $between = new Zend_Validate_Between(1, 500, true);$/;"	v
difference	library\Zend\Service\Flickr.php	/^        $difference = array_diff(array_keys($options), $validOptions);$/;"	v
dom	library\Zend\Service\Flickr.php	/^        $dom = new DOMDocument();$/;"	v
err	library\Zend\Service\Flickr.php	/^            $err = $xpath->query('\/\/err')->item(0);$/;"	v
extras	library\Zend\Service\Flickr.php	/^            $extras = explode(',', $options['extras']);$/;"	v
int	library\Zend\Service\Flickr.php	/^        $int = new Zend_Validate_Int();$/;"	v
label	library\Zend\Service\Flickr.php	/^            $label = (string) $size->getAttribute('label');$/;"	v
options	library\Zend\Service\Flickr.php	/^        $options = $this->_prepareOptions($method, $options, $defaultOptions);$/;"	v
options	library\Zend\Service\Flickr.php	/^        $options = array('api_key' => $this->apiKey, 'method' => $method, 'find_email' => (string) $email);$/;"	v
options	library\Zend\Service\Flickr.php	/^        $options = array('api_key' => $this->apiKey, 'method' => $method, 'photo_id' => $id);$/;"	v
options	library\Zend\Service\Flickr.php	/^        $options = array('api_key' => $this->apiKey, 'method' => $method, 'username' => (string) $username);$/;"	v
response	library\Zend\Service\Flickr.php	/^        $response = $restClient->restGet('\/services\/rest\/', $options);$/;"	v
restClient	library\Zend\Service\Flickr.php	/^        $restClient = $this->getRestClient();$/;"	v
retval	library\Zend\Service\Flickr.php	/^        $retval = array();$/;"	v
validExtras	library\Zend\Service\Flickr.php	/^            $validExtras = array('license', 'date_upload', 'date_taken', 'owner_name', 'icon_server');$/;"	v
validOptions	library\Zend\Service\Flickr.php	/^        $validOptions = array('api_key', 'method', 'user_id', 'per_page', 'page', 'extras', 'min_upload_date',$/;"	v
validOptions	library\Zend\Service\Flickr.php	/^        $validOptions = array('api_key', 'tags', 'method', 'group_id', 'per_page', 'page', 'extras', 'user_id');$/;"	v
validOptions	library\Zend\Service\Flickr.php	/^        $validOptions = array('method', 'api_key', 'user_id', 'tags', 'tag_mode', 'text', 'min_upload_date',$/;"	v
xpath	library\Zend\Service\Flickr.php	/^            $xpath = new DOMXPath($dom);$/;"	v
xpath	library\Zend\Service\Flickr.php	/^        $xpath = new DOMXPath($dom);$/;"	v
Zend_Service_Flickr_Image	library\Zend\Service\Flickr\Image.php	/^class Zend_Service_Flickr_Image$/;"	c
Zend_Service_Flickr_Result	library\Zend\Service\Flickr\Result.php	/^class Zend_Service_Flickr_Result$/;"	c
xpath	library\Zend\Service\Flickr\Result.php	/^        $xpath = new DOMXPath($image->ownerDocument);$/;"	v
Zend_Service_Flickr_ResultSet	library\Zend\Service\Flickr\ResultSet.php	/^class Zend_Service_Flickr_ResultSet implements SeekableIterator$/;"	c
indexInt	library\Zend\Service\Flickr\ResultSet.php	/^        $indexInt = (int) $index;$/;"	v
page	library\Zend\Service\Flickr\ResultSet.php	/^        $page    = $photos->getAttribute('page');$/;"	v
pages	library\Zend\Service\Flickr\ResultSet.php	/^        $pages   = $photos->getAttribute('pages');$/;"	v
perPage	library\Zend\Service\Flickr\ResultSet.php	/^        $perPage = $photos->getAttribute('perpage');$/;"	v
photos	library\Zend\Service\Flickr\ResultSet.php	/^        $photos = $xpath->query('\/\/photos')->item(0);$/;"	v
total	library\Zend\Service\Flickr\ResultSet.php	/^        $total   = $photos->getAttribute('total');$/;"	v
xpath	library\Zend\Service\Flickr\ResultSet.php	/^        $xpath = new DOMXPath($dom);$/;"	v
Zend_Service_LiveDocx	library\Zend\Service\LiveDocx.php	/^class Zend_Service_LiveDocx$/;"	c
method	library\Zend\Service\LiveDocx.php	/^            $method = 'set' . $key;$/;"	v
options	library\Zend\Service\LiveDocx.php	/^            $options = $options->toArray();$/;"	v
Zend_Service_LiveDocx_Exception	library\Zend\Service\LiveDocx\Exception.php	/^class Zend_Service_LiveDocx_Exception extends Zend_Service_Exception$/;"	c
Zend_Service_LiveDocx_MailMerge	library\Zend\Service\LiveDocx\MailMerge.php	/^class Zend_Service_LiveDocx_MailMerge extends Zend_Service_LiveDocx$/;"	c
arrayKeys	library\Zend\Service\LiveDocx\MailMerge.php	/^        $arrayKeys   = array_keys($assoc);$/;"	v
arrayKeys	library\Zend\Service\LiveDocx\MailMerge.php	/^        $arrayKeys   = array_keys($multi[0]);$/;"	v
arrayKeys	library\Zend\Service\LiveDocx\MailMerge.php	/^        $arrayKeys = array($arrayKeys);$/;"	v
arrayValues	library\Zend\Service\LiveDocx\MailMerge.php	/^        $arrayValues = array();$/;"	v
arrayValues	library\Zend\Service\LiveDocx\MailMerge.php	/^        $arrayValues = array_values($assoc);$/;"	v
date1	library\Zend\Service\LiveDocx\MailMerge.php	/^                   $date1 = new Zend_Date($o->string[3], Zend_Date::RFC_1123);$/;"	v
date2	library\Zend\Service\LiveDocx\MailMerge.php	/^                   $date2 = new Zend_Date($o->string[1], Zend_Date::RFC_1123);$/;"	v
errorMessage	library\Zend\Service\LiveDocx\MailMerge.php	/^        $errorMessage = sprintf($/;"	v
format	library\Zend\Service\LiveDocx\MailMerge.php	/^        $format = strtolower($format);$/;"	v
method	library\Zend\Service\LiveDocx\MailMerge.php	/^                $method = 'assocArrayToArrayOfArrayOfString';$/;"	v
method	library\Zend\Service\LiveDocx\MailMerge.php	/^                $method = 'multiAssocArrayToArrayOfArrayOfString';$/;"	v
o	library\Zend\Service\LiveDocx\MailMerge.php	/^                   $o = $a;$/;"	v
o	library\Zend\Service\LiveDocx\MailMerge.php	/^                   $o = new stdClass();$/;"	v
pageCounter	library\Zend\Service\LiveDocx\MailMerge.php	/^            $pageCounter = (integer) $fromPage;$/;"	v
pageCounter	library\Zend\Service\LiveDocx\MailMerge.php	/^            $pageCounter = 1;$/;"	v
replacement	library\Zend\Service\LiveDocx\MailMerge.php	/^        $replacement = 'getImageExportFormats';$/;"	v
result	library\Zend\Service\LiveDocx\MailMerge.php	/^            $result = $this->getSoapClient()->DownloadImage(array($/;"	v
result	library\Zend\Service\LiveDocx\MailMerge.php	/^            $result = $this->getSoapClient()->DownloadSharedDocument(array($/;"	v
result	library\Zend\Service\LiveDocx\MailMerge.php	/^            $result = $this->getSoapClient()->DownloadTemplate(array($/;"	v
result	library\Zend\Service\LiveDocx\MailMerge.php	/^            $result = $this->getSoapClient()->RetrieveDocument(array($/;"	v
result	library\Zend\Service\LiveDocx\MailMerge.php	/^        $result = $this->getSoapClient()->GetAllBitmaps(array($/;"	v
result	library\Zend\Service\LiveDocx\MailMerge.php	/^        $result = $this->getSoapClient()->GetAllMetafiles();$/;"	v
result	library\Zend\Service\LiveDocx\MailMerge.php	/^        $result = $this->getSoapClient()->GetBitmaps(array($/;"	v
result	library\Zend\Service\LiveDocx\MailMerge.php	/^        $result = $this->getSoapClient()->GetBlockFieldNames(array($/;"	v
result	library\Zend\Service\LiveDocx\MailMerge.php	/^        $result = $this->getSoapClient()->GetBlockNames();$/;"	v
result	library\Zend\Service\LiveDocx\MailMerge.php	/^        $result = $this->getSoapClient()->GetDocumentAccessOptions();$/;"	v
result	library\Zend\Service\LiveDocx\MailMerge.php	/^        $result = $this->getSoapClient()->GetDocumentFormats();$/;"	v
result	library\Zend\Service\LiveDocx\MailMerge.php	/^        $result = $this->getSoapClient()->GetFieldNames();$/;"	v
result	library\Zend\Service\LiveDocx\MailMerge.php	/^        $result = $this->getSoapClient()->GetFontNames();$/;"	v
result	library\Zend\Service\LiveDocx\MailMerge.php	/^        $result = $this->getSoapClient()->GetImageExportFormats();$/;"	v
result	library\Zend\Service\LiveDocx\MailMerge.php	/^        $result = $this->getSoapClient()->GetImageImportFormats();$/;"	v
result	library\Zend\Service\LiveDocx\MailMerge.php	/^        $result = $this->getSoapClient()->GetMetafiles(array($/;"	v
result	library\Zend\Service\LiveDocx\MailMerge.php	/^        $result = $this->getSoapClient()->GetTemplateFormats();$/;"	v
result	library\Zend\Service\LiveDocx\MailMerge.php	/^        $result = $this->getSoapClient()->ImageExists(array($/;"	v
result	library\Zend\Service\LiveDocx\MailMerge.php	/^        $result = $this->getSoapClient()->ListImages();$/;"	v
result	library\Zend\Service\LiveDocx\MailMerge.php	/^        $result = $this->getSoapClient()->ListSharedDocuments();$/;"	v
result	library\Zend\Service\LiveDocx\MailMerge.php	/^        $result = $this->getSoapClient()->ListTemplates();$/;"	v
result	library\Zend\Service\LiveDocx\MailMerge.php	/^        $result = $this->getSoapClient()->ShareDocument();$/;"	v
result	library\Zend\Service\LiveDocx\MailMerge.php	/^        $result = $this->getSoapClient()->TemplateExists(array($/;"	v
ret	library\Zend\Service\LiveDocx\MailMerge.php	/^                $ret = $result->GetBlockFieldNamesResult->string;$/;"	v
ret	library\Zend\Service\LiveDocx\MailMerge.php	/^                $ret = $result->GetBlockNamesResult->string;$/;"	v
ret	library\Zend\Service\LiveDocx\MailMerge.php	/^                $ret = $result->GetFieldNamesResult->string;$/;"	v
ret	library\Zend\Service\LiveDocx\MailMerge.php	/^                $ret = true;$/;"	v
ret	library\Zend\Service\LiveDocx\MailMerge.php	/^            $ret = $result->GetDocumentAccessOptionsResult->string;$/;"	v
ret	library\Zend\Service\LiveDocx\MailMerge.php	/^            $ret = $result->GetDocumentFormatsResult->string;$/;"	v
ret	library\Zend\Service\LiveDocx\MailMerge.php	/^            $ret = $result->GetFontNamesResult->string;$/;"	v
ret	library\Zend\Service\LiveDocx\MailMerge.php	/^            $ret = $result->GetImageExportFormatsResult->string;$/;"	v
ret	library\Zend\Service\LiveDocx\MailMerge.php	/^            $ret = $result->GetImageImportFormatsResult->string;$/;"	v
ret	library\Zend\Service\LiveDocx\MailMerge.php	/^            $ret = $result->GetTemplateFormatsResult->string;$/;"	v
ret	library\Zend\Service\LiveDocx\MailMerge.php	/^            $ret = $this->_backendListArrayToMultiAssocArray($/;"	v
ret	library\Zend\Service\LiveDocx\MailMerge.php	/^            $ret = $this->_backendListArrayToMultiAssocArray($result->ListImagesResult);$/;"	v
ret	library\Zend\Service\LiveDocx\MailMerge.php	/^            $ret = $this->_backendListArrayToMultiAssocArray($result->ListTemplatesResult);$/;"	v
ret	library\Zend\Service\LiveDocx\MailMerge.php	/^            $ret = (string) $result->ShareDocumentResult;$/;"	v
ret	library\Zend\Service\LiveDocx\MailMerge.php	/^            $ret = array_map('strtolower', $ret);$/;"	v
ret	library\Zend\Service\LiveDocx\MailMerge.php	/^        $ret             = false;$/;"	v
ret	library\Zend\Service\LiveDocx\MailMerge.php	/^        $ret    = array();$/;"	v
ret	library\Zend\Service\LiveDocx\MailMerge.php	/^        $ret    = null;$/;"	v
ret	library\Zend\Service\LiveDocx\MailMerge.php	/^        $ret = array();$/;"	v
sharedDocuments	library\Zend\Service\LiveDocx\MailMerge.php	/^        $sharedDocuments = $this->listSharedDocuments();$/;"	v
Zend_Service_Nirvanix	library\Zend\Service\Nirvanix.php	/^class Zend_Service_Nirvanix$/;"	c
class	library\Zend\Service\Nirvanix.php	/^                $class = 'Zend_Service_Nirvanix_Namespace_Base';$/;"	v
class	library\Zend\Service\Nirvanix.php	/^                $class = 'Zend_Service_Nirvanix_Namespace_Imfs';$/;"	v
defaultOptions	library\Zend\Service\Nirvanix.php	/^        $defaultOptions = array('defaults'   => array(),$/;"	v
options	library\Zend\Service\Nirvanix.php	/^        $options = array_merge($this->_options, $options);$/;"	v
resp	library\Zend\Service\Nirvanix.php	/^        $resp = $this->getService('Authentication')->login($authParams);$/;"	v
Zend_Service_Nirvanix_Exception	library\Zend\Service\Nirvanix\Exception.php	/^class Zend_Service_Nirvanix_Exception extends Zend_Service_Exception$/;"	c
Zend_Service_Nirvanix_Namespace_Base	library\Zend\Service\Nirvanix\Namespace\Base.php	/^class Zend_Service_Nirvanix_Namespace_Base$/;"	c
httpResponse	library\Zend\Service\Nirvanix\Namespace\Base.php	/^        $httpResponse = $this->_httpClient->request(Zend_Http_Client::POST);$/;"	v
methodName	library\Zend\Service\Nirvanix\Namespace\Base.php	/^        $methodName = ucfirst($methodName);$/;"	v
params	library\Zend\Service\Nirvanix\Namespace\Base.php	/^        $params = array_merge($this->_defaults, $args[0]);$/;"	v
uri	library\Zend\Service\Nirvanix\Namespace\Base.php	/^        $uri = $this->_makeUri($methodName);$/;"	v
Zend_Service_Nirvanix_Namespace_Imfs	library\Zend\Service\Nirvanix\Namespace\Imfs.php	/^class Zend_Service_Nirvanix_Namespace_Imfs extends Zend_Service_Nirvanix_Namespace_Base$/;"	c
host	library\Zend\Service\Nirvanix\Namespace\Imfs.php	/^        $host        = (string)$resp->GetStorageNode->UploadHost;$/;"	v
params	library\Zend\Service\Nirvanix\Namespace\Imfs.php	/^        $params = array('filePath'   => $filePath,$/;"	v
params	library\Zend\Service\Nirvanix\Namespace\Imfs.php	/^        $params = array('filePath' => $filePath);$/;"	v
params	library\Zend\Service\Nirvanix\Namespace\Imfs.php	/^        $params = array('sizeBytes' => strlen($data));$/;"	v
resp	library\Zend\Service\Nirvanix\Namespace\Imfs.php	/^        $resp = $this->_httpClient->request(Zend_Http_Client::GET);$/;"	v
resp	library\Zend\Service\Nirvanix\Namespace\Imfs.php	/^        $resp = $this->getOptimalUrls($params);$/;"	v
resp	library\Zend\Service\Nirvanix\Namespace\Imfs.php	/^        $resp = $this->getStorageNode($params);$/;"	v
response	library\Zend\Service\Nirvanix\Namespace\Imfs.php	/^        $response = $this->_httpClient->request(Zend_Http_Client::POST);$/;"	v
uploadToken	library\Zend\Service\Nirvanix\Namespace\Imfs.php	/^        $uploadToken = (string)$resp->GetStorageNode->UploadToken;$/;"	v
url	library\Zend\Service\Nirvanix\Namespace\Imfs.php	/^        $url = (string)$resp->Download->DownloadURL;$/;"	v
Zend_Service_Nirvanix_Response	library\Zend\Service\Nirvanix\Response.php	/^class Zend_Service_Nirvanix_Response$/;"	c
code	library\Zend\Service\Nirvanix\Response.php	/^        $code = (int)$this->_sxml->ResponseCode;$/;"	v
msg	library\Zend\Service\Nirvanix\Response.php	/^            $msg = (string)$this->_sxml->ErrorMessage;$/;"	v
name	library\Zend\Service\Nirvanix\Response.php	/^        $name = $this->_sxml->getName();$/;"	v
Zend_Service_ReCaptcha	library\Zend\Service\ReCaptcha.php	/^class Zend_Service_ReCaptcha extends Zend_Service_Abstract$/;"	c
challengeField	library\Zend\Service\ReCaptcha.php	/^            $challengeField = $name . '[' . $challengeField . ']';$/;"	v
challengeField	library\Zend\Service\ReCaptcha.php	/^        $challengeField = 'recaptcha_challenge_field';$/;"	v
encoded	library\Zend\Service\ReCaptcha.php	/^            $encoded = Zend_Json::encode($this->_options);$/;"	v
errorPart	library\Zend\Service\ReCaptcha.php	/^            $errorPart = '&error=' . urlencode($this->_params['error']);$/;"	v
errorPart	library\Zend\Service\ReCaptcha.php	/^        $errorPart = '';$/;"	v
host	library\Zend\Service\ReCaptcha.php	/^            $host = self::API_SECURE_SERVER;$/;"	v
host	library\Zend\Service\ReCaptcha.php	/^        $host = self::API_SERVER;$/;"	v
htmlBreak	library\Zend\Service\ReCaptcha.php	/^            $htmlBreak = '<br \/>';$/;"	v
htmlBreak	library\Zend\Service\ReCaptcha.php	/^        $htmlBreak = '<br>';$/;"	v
htmlInputClosing	library\Zend\Service\ReCaptcha.php	/^            $htmlInputClosing = '\/>';$/;"	v
htmlInputClosing	library\Zend\Service\ReCaptcha.php	/^        $htmlInputClosing = '>';$/;"	v
httpClient	library\Zend\Service\ReCaptcha.php	/^        $httpClient = self::getHttpClient();$/;"	v
options	library\Zend\Service\ReCaptcha.php	/^            $options = $options->toArray();$/;"	v
params	library\Zend\Service\ReCaptcha.php	/^                                $params = null, $options = null, $ip = null)$/;"	v
params	library\Zend\Service\ReCaptcha.php	/^            $params = $params->toArray();$/;"	v
postParams	library\Zend\Service\ReCaptcha.php	/^        $postParams = array('privatekey' => $this->_privateKey,$/;"	v
reCaptchaOptions	library\Zend\Service\ReCaptcha.php	/^            $reCaptchaOptions = <<<SCRIPT$/;"	v
reCaptchaOptions	library\Zend\Service\ReCaptcha.php	/^        $reCaptchaOptions = '';$/;"	v
response	library\Zend\Service\ReCaptcha.php	/^        $response = $this->_post($challengeField, $responseField);$/;"	v
responseField	library\Zend\Service\ReCaptcha.php	/^            $responseField  = $name . '[' . $responseField . ']';$/;"	v
responseField	library\Zend\Service\ReCaptcha.php	/^        $responseField  = 'recaptcha_response_field';$/;"	v
return	library\Zend\Service\ReCaptcha.php	/^            $return = $this->getHtml();$/;"	v
return	library\Zend\Service\ReCaptcha.php	/^            $return = '';$/;"	v
return	library\Zend\Service\ReCaptcha.php	/^        $return = $reCaptchaOptions;$/;"	v
Zend_Service_ReCaptcha_Exception	library\Zend\Service\ReCaptcha\Exception.php	/^class Zend_Service_ReCaptcha_Exception extends Zend_Service_Exception$/;"	c
Zend_Service_ReCaptcha_MailHide	library\Zend\Service\ReCaptcha\MailHide.php	/^class Zend_Service_ReCaptcha_MailHide extends Zend_Service_ReCaptcha$/;"	c
emailEncrypted	library\Zend\Service\ReCaptcha\MailHide.php	/^        $emailEncrypted = mcrypt_encrypt(self::ENCRYPTION_CIPHER, $this->_privateKeyPacked, $emailPadded, self::ENCRYPTION_MODE, self::ENCRYPTION_IV);$/;"	v
emailPadded	library\Zend\Service\ReCaptcha\MailHide.php	/^        $emailPadded = str_pad($this->_email, strlen($this->_email) + $numPad, chr($numPad));$/;"	v
emailParts	library\Zend\Service\ReCaptcha\MailHide.php	/^        $emailParts = explode('@', $email, 2);$/;"	v
enc	library\Zend\Service\ReCaptcha\MailHide.php	/^        $enc = $this->getOption('encoding');$/;"	v
html	library\Zend\Service\ReCaptcha\MailHide.php	/^        $html = htmlentities($this->getEmailLocalPart(), ENT_COMPAT, $enc)$/;"	v
numPad	library\Zend\Service\ReCaptcha\MailHide.php	/^        $numPad = self::ENCRYPTION_BLOCK_SIZE - (strlen($this->_email) % self::ENCRYPTION_BLOCK_SIZE);$/;"	v
options	library\Zend\Service\ReCaptcha\MailHide.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Service\ReCaptcha\MailHide.php	/^            $options = $this->getDefaultOptions();$/;"	v
options	library\Zend\Service\ReCaptcha\MailHide.php	/^            $options = array_merge($this->getDefaultOptions(), $options);$/;"	v
return	library\Zend\Service\ReCaptcha\MailHide.php	/^            $return = $this->getHtml();$/;"	v
return	library\Zend\Service\ReCaptcha\MailHide.php	/^            $return = '';$/;"	v
url	library\Zend\Service\ReCaptcha\MailHide.php	/^        $url = $this->_getUrl();$/;"	v
validator	library\Zend\Service\ReCaptcha\MailHide.php	/^        $validator = $this->getEmailValidator();$/;"	v
Zend_Service_ReCaptcha_MailHide_Exception	library\Zend\Service\ReCaptcha\MailHide\Exception.php	/^class Zend_Service_ReCaptcha_MailHide_Exception extends Zend_Service_ReCaptcha_Exception$/;"	c
Zend_Service_ReCaptcha_Response	library\Zend\Service\ReCaptcha\Response.php	/^class Zend_Service_ReCaptcha_Response$/;"	c
body	library\Zend\Service\ReCaptcha\Response.php	/^        $body = $response->getBody();$/;"	v
errorCode	library\Zend\Service\ReCaptcha\Response.php	/^            $errorCode = '';$/;"	v
parts	library\Zend\Service\ReCaptcha\Response.php	/^        $parts = explode("\\n", $body, 2);$/;"	v
status	library\Zend\Service\ReCaptcha\Response.php	/^            $status = 'false';$/;"	v
Zend_Service_ShortUrl_Exception	library\Zend\Service\ShortUrl\Exception.php	/^class Zend_Service_ShortUrl_Exception extends Zend_Service_Exception$/;"	c
Zend_Service_ShortUrl_IsGd	library\Zend\Service\ShortUrl\IsGd.php	/^class Zend_Service_ShortUrl_IsGd extends Zend_Service_ShortUrl_AbstractShortener$/;"	c
response	library\Zend\Service\ShortUrl\IsGd.php	/^        $response = $this->getHttpClient()->request();$/;"	v
serviceUri	library\Zend\Service\ShortUrl\IsGd.php	/^        $serviceUri = 'http:\/\/is.gd\/api.php';$/;"	v
Zend_Service_ShortUrl_JdemCz	library\Zend\Service\ShortUrl\JdemCz.php	/^class Zend_Service_ShortUrl_JdemCz extends Zend_Service_ShortUrl_AbstractShortener$/;"	c
response	library\Zend\Service\ShortUrl\JdemCz.php	/^        $response = $this->getHttpClient()->request();$/;"	v
serviceUri	library\Zend\Service\ShortUrl\JdemCz.php	/^        $serviceUri = 'http:\/\/www.jdem.cz\/get';$/;"	v
Zend_Service_ShortUrl_MetamarkNet	library\Zend\Service\ShortUrl\MetamarkNet.php	/^class Zend_Service_ShortUrl_MetamarkNet extends Zend_Service_ShortUrl_AbstractShortener$/;"	c
response	library\Zend\Service\ShortUrl\MetamarkNet.php	/^        $response = $this->getHttpClient()->request();$/;"	v
Zend_Service_ShortUrl_TinyUrlCom	library\Zend\Service\ShortUrl\TinyUrlCom.php	/^class Zend_Service_ShortUrl_TinyUrlCom extends Zend_Service_ShortUrl_AbstractShortener$/;"	c
dom	library\Zend\Service\ShortUrl\TinyUrlCom.php	/^        $dom = new Zend_Dom_Query($response->getBody());$/;"	v
originalUrl	library\Zend\Service\ShortUrl\TinyUrlCom.php	/^        $originalUrl = $results->current()->getAttribute('href');$/;"	v
response	library\Zend\Service\ShortUrl\TinyUrlCom.php	/^        $response = $this->getHttpClient()->request();$/;"	v
results	library\Zend\Service\ShortUrl\TinyUrlCom.php	/^        $results = $dom->query('a#redirecturl');$/;"	v
serviceUri	library\Zend\Service\ShortUrl\TinyUrlCom.php	/^        $serviceUri = 'http:\/\/tinyurl.com\/api-create.php';$/;"	v
Zend_Service_Simpy	library\Zend\Service\Simpy.php	/^class Zend_Service_Simpy$/;"	c
code	library\Zend\Service\Simpy.php	/^                $code = $list->item(0)->nodeValue;$/;"	v
doc	library\Zend\Service\Simpy.php	/^            $doc = $this->_makeRequest('GetLinks');$/;"	v
doc	library\Zend\Service\Simpy.php	/^            $doc = $this->_makeRequest('GetLinks', $query);$/;"	v
doc	library\Zend\Service\Simpy.php	/^            $doc = new DOMDocument();$/;"	v
doc	library\Zend\Service\Simpy.php	/^        $doc = $this->_makeRequest('GetNotes', $query);$/;"	v
doc	library\Zend\Service\Simpy.php	/^        $doc = $this->_makeRequest('GetTags', $query);$/;"	v
doc	library\Zend\Service\Simpy.php	/^        $doc = $this->_makeRequest('GetWatchlist', $query);$/;"	v
doc	library\Zend\Service\Simpy.php	/^        $doc = $this->_makeRequest('GetWatchlists');$/;"	v
list	library\Zend\Service\Simpy.php	/^                    $list = $xpath->query('\/status\/message');$/;"	v
list	library\Zend\Service\Simpy.php	/^            $list = $xpath->query('\/status\/code');$/;"	v
message	library\Zend\Service\Simpy.php	/^                    $message = $list->item(0)->nodeValue;$/;"	v
query	library\Zend\Service\Simpy.php	/^            $query = '?' . http_build_query($query);$/;"	v
query	library\Zend\Service\Simpy.php	/^            $query = array($/;"	v
query	library\Zend\Service\Simpy.php	/^            $query = array_diff($query, array_filter($query, 'is_null'));$/;"	v
query	library\Zend\Service\Simpy.php	/^        $query = array($/;"	v
response	library\Zend\Service\Simpy.php	/^        $response = $this->_http->request('GET');$/;"	v
tags	library\Zend\Service\Simpy.php	/^            $tags = implode(',', $tags);$/;"	v
xpath	library\Zend\Service\Simpy.php	/^            $xpath = new DOMXPath($doc);$/;"	v
Zend_Service_Simpy_Link	library\Zend\Service\Simpy\Link.php	/^class Zend_Service_Simpy_Link$/;"	c
doc	library\Zend\Service\Simpy\Link.php	/^        $doc = new DOMDocument();$/;"	v
list	library\Zend\Service\Simpy\Link.php	/^        $list = $xpath->query('\/link\/tags\/tag');$/;"	v
xpath	library\Zend\Service\Simpy\Link.php	/^        $xpath = new DOMXPath($doc);$/;"	v
Zend_Service_Simpy_LinkQuery	library\Zend\Service\Simpy\LinkQuery.php	/^class Zend_Service_Simpy_LinkQuery$/;"	c
Zend_Service_Simpy_LinkSet	library\Zend\Service\Simpy\LinkSet.php	/^class Zend_Service_Simpy_LinkSet implements IteratorAggregate$/;"	c
list	library\Zend\Service\Simpy\LinkSet.php	/^        $list = $xpath->query('\/\/links\/link');$/;"	v
xpath	library\Zend\Service\Simpy\LinkSet.php	/^        $xpath = new DOMXPath($doc);$/;"	v
Zend_Service_Simpy_Note	library\Zend\Service\Simpy\Note.php	/^class Zend_Service_Simpy_Note$/;"	c
doc	library\Zend\Service\Simpy\Note.php	/^        $doc = new DOMDocument();$/;"	v
list	library\Zend\Service\Simpy\Note.php	/^        $list = $xpath->query('\/note\/tags\/tag');$/;"	v
xpath	library\Zend\Service\Simpy\Note.php	/^        $xpath = new DOMXPath($doc);$/;"	v
Zend_Service_Simpy_NoteSet	library\Zend\Service\Simpy\NoteSet.php	/^class Zend_Service_Simpy_NoteSet implements IteratorAggregate$/;"	c
list	library\Zend\Service\Simpy\NoteSet.php	/^        $list = $xpath->query('\/\/notes\/note');$/;"	v
xpath	library\Zend\Service\Simpy\NoteSet.php	/^        $xpath = new DOMXPath($doc);$/;"	v
Zend_Service_Simpy_Tag	library\Zend\Service\Simpy\Tag.php	/^class Zend_Service_Simpy_Tag$/;"	c
map	library\Zend\Service\Simpy\Tag.php	/^        $map =& $node->attributes;$/;"	v
Zend_Service_Simpy_TagSet	library\Zend\Service\Simpy\TagSet.php	/^class Zend_Service_Simpy_TagSet implements IteratorAggregate$/;"	c
list	library\Zend\Service\Simpy\TagSet.php	/^        $list = $xpath->query('\/\/tags\/tag');$/;"	v
xpath	library\Zend\Service\Simpy\TagSet.php	/^        $xpath = new DOMXPath($doc);$/;"	v
Zend_Service_Simpy_Watchlist	library\Zend\Service\Simpy\Watchlist.php	/^class Zend_Service_Simpy_Watchlist$/;"	c
childNode	library\Zend\Service\Simpy\Watchlist.php	/^            $childNode = $childNode->nextSibling;$/;"	v
childNode	library\Zend\Service\Simpy\Watchlist.php	/^        $childNode = $node->firstChild;$/;"	v
filter	library\Zend\Service\Simpy\Watchlist.php	/^                $filter = new Zend_Service_Simpy_WatchlistFilter($childNode);$/;"	v
map	library\Zend\Service\Simpy\Watchlist.php	/^        $map =& $node->attributes;$/;"	v
Zend_Service_Simpy_WatchlistFilter	library\Zend\Service\Simpy\WatchlistFilter.php	/^class Zend_Service_Simpy_WatchlistFilter$/;"	c
map	library\Zend\Service\Simpy\WatchlistFilter.php	/^        $map =& $node->attributes;$/;"	v
Zend_Service_Simpy_WatchlistFilterSet	library\Zend\Service\Simpy\WatchlistFilterSet.php	/^class Zend_Service_Simpy_WatchlistFilterSet implements IteratorAggregate$/;"	c
Zend_Service_Simpy_WatchlistSet	library\Zend\Service\Simpy\WatchlistSet.php	/^class Zend_Service_Simpy_WatchlistSet implements IteratorAggregate$/;"	c
list	library\Zend\Service\Simpy\WatchlistSet.php	/^        $list = $xpath->query('\/\/watchlists\/watchlist');$/;"	v
xpath	library\Zend\Service\Simpy\WatchlistSet.php	/^        $xpath = new DOMXPath($doc);$/;"	v
Zend_Service_SlideShare	library\Zend\Service\SlideShare.php	/^class Zend_Service_SlideShare$/;"	c
cache	library\Zend\Service\SlideShare.php	/^            $cache = Zend_Cache::factory('Core', 'File', array('lifetime' => 43200,$/;"	v
cache	library\Zend\Service\SlideShare.php	/^        $cache = $this->getCacheObject();$/;"	v
cache_key	library\Zend\Service\SlideShare.php	/^        $cache_key = md5("__zendslideshare_cache_$ss_id");$/;"	v
cache_key	library\Zend\Service\SlideShare.php	/^        $cache_key = md5($key.$value.$offset.$limit);$/;"	v
client	library\Zend\Service\SlideShare.php	/^            $client = $this->getHttpClient();$/;"	v
client	library\Zend\Service\SlideShare.php	/^            $client = new Zend_Http_Client();$/;"	v
client	library\Zend\Service\SlideShare.php	/^        $client = $this->getHttpClient();$/;"	v
description	library\Zend\Service\SlideShare.php	/^        $description = $ss->getDescription();$/;"	v
filename	library\Zend\Service\SlideShare.php	/^        $filename = $ss->getFilename();$/;"	v
key	library\Zend\Service\SlideShare.php	/^                        $key => $value);$/;"	v
key	library\Zend\Service\SlideShare.php	/^        $key = strtolower($key);$/;"	v
message	library\Zend\Service\SlideShare.php	/^                $message = (string)$sxe->Message[0];$/;"	v
message	library\Zend\Service\SlideShare.php	/^            $message = (string)$sxe->Message[0];$/;"	v
params	library\Zend\Service\SlideShare.php	/^        $params = array('api_key' => $this->getApiKey(),$/;"	v
queryUri	library\Zend\Service\SlideShare.php	/^                $queryUri = self::SERVICE_GET_SHOW_BY_GROUP_URI;$/;"	v
queryUri	library\Zend\Service\SlideShare.php	/^                $queryUri = self::SERVICE_GET_SHOW_BY_TAG_URI;$/;"	v
queryUri	library\Zend\Service\SlideShare.php	/^                $queryUri = self::SERVICE_GET_SHOW_BY_USER_URI;$/;"	v
response	library\Zend\Service\SlideShare.php	/^                $response = $client->request('POST');$/;"	v
response	library\Zend\Service\SlideShare.php	/^            $response = $client->request('POST');$/;"	v
responseTag	library\Zend\Service\SlideShare.php	/^                $responseTag = 'Group';$/;"	v
responseTag	library\Zend\Service\SlideShare.php	/^                $responseTag = 'Tag';$/;"	v
responseTag	library\Zend\Service\SlideShare.php	/^                $responseTag = 'User';$/;"	v
retval	library\Zend\Service\SlideShare.php	/^            $retval = $this->_slideShowNodeToObject(clone $sxe->Slideshow[0]);$/;"	v
retval	library\Zend\Service\SlideShare.php	/^            $retval = array();$/;"	v
ss	library\Zend\Service\SlideShare.php	/^            $ss = new Zend_Service_SlideShare_SlideShow();$/;"	v
sxe	library\Zend\Service\SlideShare.php	/^            $sxe = simplexml_load_string($response->getBody());$/;"	v
sxe	library\Zend\Service\SlideShare.php	/^        $sxe = simplexml_load_string($response->getBody());$/;"	v
tag	library\Zend\Service\SlideShare.php	/^            $tag = implode(" ", $tmp);$/;"	v
tags	library\Zend\Service\SlideShare.php	/^        $tags = $ss->getTags();$/;"	v
timestamp	library\Zend\Service\SlideShare.php	/^        $timestamp = time();$/;"	v
tmp	library\Zend\Service\SlideShare.php	/^            $tmp = array();$/;"	v
Zend_Service_SlideShare_Exception	library\Zend\Service\SlideShare\Exception.php	/^class Zend_Service_SlideShare_Exception extends Zend_Service_Exception$/;"	c
Zend_Service_SlideShare_SlideShow	library\Zend\Service\SlideShare\SlideShow.php	/^class Zend_Service_SlideShare_SlideShow$/;"	c
Zend_Service_StrikeIron	library\Zend\Service\StrikeIron.php	/^class Zend_Service_StrikeIron$/;"	c
class	library\Zend\Service\StrikeIron.php	/^            $class = "Zend_Service_StrikeIron_{$class}";$/;"	v
class	library\Zend\Service\StrikeIron.php	/^        $class = isset($options['class']) ? $options['class'] : 'Base';$/;"	v
msg	library\Zend\Service\StrikeIron.php	/^            $msg = "Service '$class' could not be loaded: " . $e->getMessage();$/;"	v
service	library\Zend\Service\StrikeIron.php	/^        $service = new $class(array_merge($this->_options, $options));$/;"	v
Zend_Service_StrikeIron_Base	library\Zend\Service\StrikeIron\Base.php	/^class Zend_Service_StrikeIron_Base$/;"	c
foundLicenseInfo	library\Zend\Service\StrikeIron\Base.php	/^                    $foundLicenseInfo = true;$/;"	v
foundLicenseInfo	library\Zend\Service\StrikeIron\Base.php	/^        $foundLicenseInfo = false;$/;"	v
info	library\Zend\Service\StrikeIron\Base.php	/^            $info = (object)$this->_outputHeaders['SubscriptionInfo'];$/;"	v
message	library\Zend\Service\StrikeIron\Base.php	/^            $message = get_class($e) . ': ' . $e->getMessage();$/;"	v
msg	library\Zend\Service\StrikeIron\Base.php	/^            $msg = 'No SubscriptionInfo header found in last output headers';$/;"	v
params	library\Zend\Service\StrikeIron\Base.php	/^        $params = isset($params[0]) ? array($params[0]) : array();$/;"	v
result	library\Zend\Service\StrikeIron\Base.php	/^            $result = $result->$resultObjectName;$/;"	v
result	library\Zend\Service\StrikeIron\Base.php	/^            $result = $this->_options['client']->__soapCall($method,$/;"	v
result	library\Zend\Service\StrikeIron\Base.php	/^            $result = new Zend_Service_StrikeIron_Decorator($result, $resultObjectName);$/;"	v
result	library\Zend\Service\StrikeIron\Base.php	/^        $result = $this->_transformResult($result, $method, $params);$/;"	v
resultObjectName	library\Zend\Service\StrikeIron\Base.php	/^        $resultObjectName = "{$method}Result";$/;"	v
subscriptionInfo	library\Zend\Service\StrikeIron\Base.php	/^            $subscriptionInfo = new Zend_Service_StrikeIron_Decorator($info, 'SubscriptionInfo');$/;"	v
Zend_Service_StrikeIron_Decorator	library\Zend\Service\StrikeIron\Decorator.php	/^class Zend_Service_StrikeIron_Decorator$/;"	c
property	library\Zend\Service\StrikeIron\Decorator.php	/^            $property = $this->_inflect($property);$/;"	v
result	library\Zend\Service\StrikeIron\Decorator.php	/^            $result = $this->_decorate($result);$/;"	v
result	library\Zend\Service\StrikeIron\Decorator.php	/^            $result = $this->_object->$property;$/;"	v
result	library\Zend\Service\StrikeIron\Decorator.php	/^            $result = new self($result);$/;"	v
result	library\Zend\Service\StrikeIron\Decorator.php	/^        $result = null;$/;"	v
Zend_Service_StrikeIron_Exception	library\Zend\Service\StrikeIron\Exception.php	/^class Zend_Service_StrikeIron_Exception extends Zend_Service_Exception$/;"	c
Zend_Service_StrikeIron_SalesUseTaxBasic	library\Zend\Service\StrikeIron\SalesUseTaxBasic.php	/^class Zend_Service_StrikeIron_SalesUseTaxBasic extends Zend_Service_StrikeIron_Base$/;"	c
Zend_Service_StrikeIron_USAddressVerification	library\Zend\Service\StrikeIron\USAddressVerification.php	/^class Zend_Service_StrikeIron_USAddressVerification extends Zend_Service_StrikeIron_Base$/;"	c
Zend_Service_StrikeIron_ZipCodeInfo	library\Zend\Service\StrikeIron\ZipCodeInfo.php	/^class Zend_Service_StrikeIron_ZipCodeInfo extends Zend_Service_StrikeIron_Base$/;"	c
Zend_Service_Technorati	library\Zend\Service\Technorati.php	/^class Zend_Service_Technorati$/;"	c
difference	library\Zend\Service\Technorati.php	/^        $difference = array_diff(array_keys($options), $validOptions);$/;"	v
dom	library\Zend\Service\Technorati.php	/^        $dom = $this->_convertResponseAndCheckContent($response);$/;"	v
dom	library\Zend\Service\Technorati.php	/^        $dom = new DOMDocument();$/;"	v
error	library\Zend\Service\Technorati.php	/^            $error = $result->item(0)->nodeValue;$/;"	v
options	library\Zend\Service\Technorati.php	/^        $options = $this->_prepareOptions($options, $defaultOptions);$/;"	v
options	library\Zend\Service\Technorati.php	/^        $options = $this->_prepareOptions(array(), $defaultOptions);$/;"	v
options	library\Zend\Service\Technorati.php	/^        $options = (array) $options; \/\/ force cast to convert null to array()$/;"	v
options	library\Zend\Service\Technorati.php	/^        $options = array_merge($defaultOptions, $options);$/;"	v
response	library\Zend\Service\Technorati.php	/^        $response = $restClient->restGet($path, $options);$/;"	v
response	library\Zend\Service\Technorati.php	/^        $response = $this->_makeRequest(self::API_PATH_BLOGINFO, $options);$/;"	v
response	library\Zend\Service\Technorati.php	/^        $response = $this->_makeRequest(self::API_PATH_BLOGPOSTTAGS, $options);$/;"	v
response	library\Zend\Service\Technorati.php	/^        $response = $this->_makeRequest(self::API_PATH_COSMOS, $options);$/;"	v
response	library\Zend\Service\Technorati.php	/^        $response = $this->_makeRequest(self::API_PATH_DAILYCOUNTS, $options);$/;"	v
response	library\Zend\Service\Technorati.php	/^        $response = $this->_makeRequest(self::API_PATH_GETINFO, $options);$/;"	v
response	library\Zend\Service\Technorati.php	/^        $response = $this->_makeRequest(self::API_PATH_KEYINFO, $options);$/;"	v
response	library\Zend\Service\Technorati.php	/^        $response = $this->_makeRequest(self::API_PATH_SEARCH, $options);$/;"	v
response	library\Zend\Service\Technorati.php	/^        $response = $this->_makeRequest(self::API_PATH_TAG, $options);$/;"	v
response	library\Zend\Service\Technorati.php	/^        $response = $this->_makeRequest(self::API_PATH_TOPTAGS, $options);$/;"	v
restClient	library\Zend\Service\Technorati.php	/^        $restClient = $this->getRestClient();$/;"	v
result	library\Zend\Service\Technorati.php	/^        $result = $xpath->query("\/tapi\/document\/result\/error");$/;"	v
tmp	library\Zend\Service\Technorati.php	/^            $tmp = (int) $options['current'];$/;"	v
xpath	library\Zend\Service\Technorati.php	/^        $xpath = new DOMXPath($dom);$/;"	v
Zend_Service_Technorati_Author	library\Zend\Service\Technorati\Author.php	/^class Zend_Service_Technorati_Author$/;"	c
result	library\Zend\Service\Technorati\Author.php	/^        $result = $xpath->query('.\/bio\/text()', $dom);$/;"	v
result	library\Zend\Service\Technorati\Author.php	/^        $result = $xpath->query('.\/description\/text()', $dom);$/;"	v
result	library\Zend\Service\Technorati\Author.php	/^        $result = $xpath->query('.\/firstname\/text()', $dom);$/;"	v
result	library\Zend\Service\Technorati\Author.php	/^        $result = $xpath->query('.\/lastname\/text()', $dom);$/;"	v
result	library\Zend\Service\Technorati\Author.php	/^        $result = $xpath->query('.\/thumbnailpicture\/text()', $dom);$/;"	v
result	library\Zend\Service\Technorati\Author.php	/^        $result = $xpath->query('.\/username\/text()', $dom);$/;"	v
xpath	library\Zend\Service\Technorati\Author.php	/^        $xpath = new DOMXPath($dom->ownerDocument);$/;"	v
Zend_Service_Technorati_BlogInfoResult	library\Zend\Service\Technorati\BlogInfoResult.php	/^class Zend_Service_Technorati_BlogInfoResult$/;"	c
result	library\Zend\Service\Technorati\BlogInfoResult.php	/^        $result = $xpath->query('\/\/result\/inboundblogs\/text()');$/;"	v
result	library\Zend\Service\Technorati\BlogInfoResult.php	/^        $result = $xpath->query('\/\/result\/inboundlinks\/text()');$/;"	v
result	library\Zend\Service\Technorati\BlogInfoResult.php	/^        $result = $xpath->query('\/\/result\/url\/text()');$/;"	v
result	library\Zend\Service\Technorati\BlogInfoResult.php	/^        $result = $xpath->query('\/\/result\/weblog');$/;"	v
xpath	library\Zend\Service\Technorati\BlogInfoResult.php	/^        $xpath = new DOMXPath($dom);$/;"	v
Zend_Service_Technorati_CosmosResult	library\Zend\Service\Technorati\CosmosResult.php	/^class Zend_Service_Technorati_CosmosResult extends Zend_Service_Technorati_Result$/;"	c
Zend_Service_Technorati_CosmosResultSet	library\Zend\Service\Technorati\CosmosResultSet.php	/^class Zend_Service_Technorati_CosmosResultSet extends Zend_Service_Technorati_ResultSet$/;"	c
result	library\Zend\Service\Technorati\CosmosResultSet.php	/^        $result = $this->_xpath->query('\/tapi\/document\/result\/inboundblogs\/text()');$/;"	v
result	library\Zend\Service\Technorati\CosmosResultSet.php	/^        $result = $this->_xpath->query('\/tapi\/document\/result\/inboundlinks\/text()');$/;"	v
result	library\Zend\Service\Technorati\CosmosResultSet.php	/^        $result = $this->_xpath->query('\/tapi\/document\/result\/url\/text()');$/;"	v
result	library\Zend\Service\Technorati\CosmosResultSet.php	/^        $result = $this->_xpath->query('\/tapi\/document\/result\/weblog');$/;"	v
Zend_Service_Technorati_DailyCountsResult	library\Zend\Service\Technorati\DailyCountsResult.php	/^class Zend_Service_Technorati_DailyCountsResult extends Zend_Service_Technorati_Result$/;"	c
Zend_Service_Technorati_DailyCountsResultSet	library\Zend\Service\Technorati\DailyCountsResultSet.php	/^class Zend_Service_Technorati_DailyCountsResultSet extends Zend_Service_Technorati_ResultSet$/;"	c
result	library\Zend\Service\Technorati\DailyCountsResultSet.php	/^        $result = $this->_xpath->query('\/tapi\/document\/result\/days\/text()');$/;"	v
result	library\Zend\Service\Technorati\DailyCountsResultSet.php	/^        $result = $this->_xpath->query('\/tapi\/document\/result\/searchurl\/text()');$/;"	v
Zend_Service_Technorati_Exception	library\Zend\Service\Technorati\Exception.php	/^class Zend_Service_Technorati_Exception extends Zend_Service_Exception$/;"	c
Zend_Service_Technorati_GetInfoResult	library\Zend\Service\Technorati\GetInfoResult.php	/^class Zend_Service_Technorati_GetInfoResult$/;"	c
result	library\Zend\Service\Technorati\GetInfoResult.php	/^        $result = $xpath->query('\/\/item\/weblog');$/;"	v
result	library\Zend\Service\Technorati\GetInfoResult.php	/^        $result = $xpath->query('\/\/result');$/;"	v
xpath	library\Zend\Service\Technorati\GetInfoResult.php	/^        $xpath = new DOMXPath($dom);$/;"	v
Zend_Service_Technorati_KeyInfoResult	library\Zend\Service\Technorati\KeyInfoResult.php	/^class Zend_Service_Technorati_KeyInfoResult$/;"	c
xpath	library\Zend\Service\Technorati\KeyInfoResult.php	/^        $xpath = new DOMXPath($dom);$/;"	v
fields	library\Zend\Service\Technorati\Result.php	/^        $fields = array();$/;"	v
node	library\Zend\Service\Technorati\Result.php	/^            $node = $this->_xpath->query($query, $this->_dom);$/;"	v
query	library\Zend\Service\Technorati\Result.php	/^            $query = ".\/$xmlName\/text()";$/;"	v
result	library\Zend\Service\Technorati\Result.php	/^        $result = $this->_xpath->query('.\/weblog', $this->_dom);$/;"	v
dom	library\Zend\Service\Technorati\ResultSet.php	/^        $dom = new DOMDocument();$/;"	v
indexInt	library\Zend\Service\Technorati\ResultSet.php	/^        $indexInt = (int) $index;$/;"	v
vars	library\Zend\Service\Technorati\ResultSet.php	/^        $vars = array_keys(get_object_vars($this));$/;"	v
Zend_Service_Technorati_SearchResult	library\Zend\Service\Technorati\SearchResult.php	/^class Zend_Service_Technorati_SearchResult extends Zend_Service_Technorati_Result$/;"	c
Zend_Service_Technorati_SearchResultSet	library\Zend\Service\Technorati\SearchResultSet.php	/^class Zend_Service_Technorati_SearchResultSet extends Zend_Service_Technorati_ResultSet$/;"	c
result	library\Zend\Service\Technorati\SearchResultSet.php	/^        $result = $this->_xpath->query('\/tapi\/document\/result\/querycount\/text()');$/;"	v
Zend_Service_Technorati_TagResult	library\Zend\Service\Technorati\TagResult.php	/^class Zend_Service_Technorati_TagResult extends Zend_Service_Technorati_Result$/;"	c
Zend_Service_Technorati_TagResultSet	library\Zend\Service\Technorati\TagResultSet.php	/^class Zend_Service_Technorati_TagResultSet extends Zend_Service_Technorati_ResultSet$/;"	c
result	library\Zend\Service\Technorati\TagResultSet.php	/^        $result = $this->_xpath->query('\/tapi\/document\/result\/blogsmatched\/text()');$/;"	v
result	library\Zend\Service\Technorati\TagResultSet.php	/^        $result = $this->_xpath->query('\/tapi\/document\/result\/postsmatched\/text()');$/;"	v
Zend_Service_Technorati_TagsResult	library\Zend\Service\Technorati\TagsResult.php	/^class Zend_Service_Technorati_TagsResult extends Zend_Service_Technorati_Result$/;"	c
Zend_Service_Technorati_TagsResultSet	library\Zend\Service\Technorati\TagsResultSet.php	/^class Zend_Service_Technorati_TagsResultSet extends Zend_Service_Technorati_ResultSet$/;"	c
Zend_Service_Technorati_Utils	library\Zend\Service\Technorati\Utils.php	/^class Zend_Service_Technorati_Utils$/;"	c
uri	library\Zend\Service\Technorati\Utils.php	/^                $uri = Zend_Uri::factory((string) $input);$/;"	v
uri	library\Zend\Service\Technorati\Utils.php	/^            $uri = $input;$/;"	v
Zend_Service_Technorati_Weblog	library\Zend\Service\Technorati\Weblog.php	/^class Zend_Service_Technorati_Weblog$/;"	c
result	library\Zend\Service\Technorati\Weblog.php	/^        $result = $xpath->query('.\/atomurl\/text()', $dom);$/;"	v
result	library\Zend\Service\Technorati\Weblog.php	/^        $result = $xpath->query('.\/author', $dom);$/;"	v
result	library\Zend\Service\Technorati\Weblog.php	/^        $result = $xpath->query('.\/hasphoto\/text()', $dom);$/;"	v
result	library\Zend\Service\Technorati\Weblog.php	/^        $result = $xpath->query('.\/inboundblogs\/text()', $dom);$/;"	v
result	library\Zend\Service\Technorati\Weblog.php	/^        $result = $xpath->query('.\/inboundlinks\/text()', $dom);$/;"	v
result	library\Zend\Service\Technorati\Weblog.php	/^        $result = $xpath->query('.\/lastupdate\/text()', $dom);$/;"	v
result	library\Zend\Service\Technorati\Weblog.php	/^        $result = $xpath->query('.\/lat\/text()', $dom);$/;"	v
result	library\Zend\Service\Technorati\Weblog.php	/^        $result = $xpath->query('.\/lon\/text()', $dom);$/;"	v
result	library\Zend\Service\Technorati\Weblog.php	/^        $result = $xpath->query('.\/name\/text()', $dom);$/;"	v
result	library\Zend\Service\Technorati\Weblog.php	/^        $result = $xpath->query('.\/rank\/text()', $dom);$/;"	v
result	library\Zend\Service\Technorati\Weblog.php	/^        $result = $xpath->query('.\/rssurl\/text()', $dom);$/;"	v
result	library\Zend\Service\Technorati\Weblog.php	/^        $result = $xpath->query('.\/url\/text()', $dom);$/;"	v
xpath	library\Zend\Service\Technorati\Weblog.php	/^        $xpath = new DOMXPath($dom->ownerDocument);$/;"	v
Zend_Service_Twitter	library\Zend\Service\Twitter.php	/^class Zend_Service_Twitter extends Zend_Rest_Client$/;"	c
_params	library\Zend\Service\Twitter.php	/^        $_params = array();$/;"	v
client	library\Zend\Service\Twitter.php	/^        $client = $this->_localHttpClient;$/;"	v
count	library\Zend\Service\Twitter.php	/^                        $count = 1;$/;"	v
count	library\Zend\Service\Twitter.php	/^                        $count = 200;$/;"	v
count	library\Zend\Service\Twitter.php	/^                    $count = (int) $value;$/;"	v
cr	library\Zend\Service\Twitter.php	/^        $cr = new Zend_Rest_Client_Result($response->getBody());$/;"	v
data	library\Zend\Service\Twitter.php	/^        $data = array('status' => $status);$/;"	v
data	library\Zend\Service\Twitter.php	/^        $data = array('user' => $user, 'text' => $text);$/;"	v
data	library\Zend\Service\Twitter.php	/^        $data = array('user_a' => $this->getUsername(), 'user_b' => $id);$/;"	v
date	library\Zend\Service\Twitter.php	/^            $date = date($this->_dateFormat, $value);$/;"	v
date	library\Zend\Service\Twitter.php	/^            $date = date($this->_dateFormat, strtotime($value));$/;"	v
len	library\Zend\Service\Twitter.php	/^        $len = iconv_strlen($text, 'UTF-8');$/;"	v
len	library\Zend\Service\Twitter.php	/^        $len = iconv_strlen(htmlspecialchars($status, ENT_QUOTES, 'UTF-8'), 'UTF-8');$/;"	v
options	library\Zend\Service\Twitter.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Service\Twitter.php	/^            $options = array();$/;"	v
path	library\Zend\Service\Twitter.php	/^            $path = '\/' . $path;$/;"	v
path	library\Zend\Service\Twitter.php	/^        $path = '\/1\/blocks\/blocking';$/;"	v
path	library\Zend\Service\Twitter.php	/^        $path = '\/1\/blocks\/create\/' . $id . '.xml';$/;"	v
path	library\Zend\Service\Twitter.php	/^        $path = '\/1\/blocks\/destroy\/' . $id . '.xml';$/;"	v
path	library\Zend\Service\Twitter.php	/^        $path = '\/1\/blocks\/exists\/' . $id . '.xml';$/;"	v
path	library\Zend\Service\Twitter.php	/^        $path = '\/1\/direct_messages.xml';$/;"	v
path	library\Zend\Service\Twitter.php	/^        $path = '\/1\/direct_messages\/destroy\/' . $this->_validInteger($id) . '.xml';$/;"	v
path	library\Zend\Service\Twitter.php	/^        $path = '\/1\/direct_messages\/new.xml';$/;"	v
path	library\Zend\Service\Twitter.php	/^        $path = '\/1\/direct_messages\/sent.xml';$/;"	v
path	library\Zend\Service\Twitter.php	/^        $path = '\/1\/favorites';$/;"	v
path	library\Zend\Service\Twitter.php	/^        $path = '\/1\/favorites\/create\/' . $this->_validInteger($id) . '.xml';$/;"	v
path	library\Zend\Service\Twitter.php	/^        $path = '\/1\/favorites\/destroy\/' . $this->_validInteger($id) . '.xml';$/;"	v
path	library\Zend\Service\Twitter.php	/^        $path = '\/1\/friendships\/create\/' . $id . '.xml';$/;"	v
path	library\Zend\Service\Twitter.php	/^        $path = '\/1\/friendships\/destroy\/' . $id . '.xml';$/;"	v
path	library\Zend\Service\Twitter.php	/^        $path = '\/1\/friendships\/exists.xml';$/;"	v
path	library\Zend\Service\Twitter.php	/^        $path = '\/1\/statuses\/destroy\/' . $this->_validInteger($id) . '.xml';$/;"	v
path	library\Zend\Service\Twitter.php	/^        $path = '\/1\/statuses\/followers.xml';$/;"	v
path	library\Zend\Service\Twitter.php	/^        $path = '\/1\/statuses\/friends';$/;"	v
path	library\Zend\Service\Twitter.php	/^        $path = '\/1\/statuses\/friends_timeline';$/;"	v
path	library\Zend\Service\Twitter.php	/^        $path = '\/1\/statuses\/mentions.xml';$/;"	v
path	library\Zend\Service\Twitter.php	/^        $path = '\/1\/statuses\/public_timeline.xml';$/;"	v
path	library\Zend\Service\Twitter.php	/^        $path = '\/1\/statuses\/show\/' . $this->_validInteger($id) . '.xml';$/;"	v
path	library\Zend\Service\Twitter.php	/^        $path = '\/1\/statuses\/update.xml';$/;"	v
path	library\Zend\Service\Twitter.php	/^        $path = '\/1\/statuses\/user_timeline';$/;"	v
path	library\Zend\Service\Twitter.php	/^        $path = '\/1\/users\/show.xml';$/;"	v
response	library\Zend\Service\Twitter.php	/^        $response = $this->_get($path);$/;"	v
response	library\Zend\Service\Twitter.php	/^        $response = $this->_get($path, $_params);$/;"	v
response	library\Zend\Service\Twitter.php	/^        $response = $this->_get($path, $data);$/;"	v
response	library\Zend\Service\Twitter.php	/^        $response = $this->_get($path, array('id'=>$id));$/;"	v
response	library\Zend\Service\Twitter.php	/^        $response = $this->_get($path, array('page' => $page));$/;"	v
response	library\Zend\Service\Twitter.php	/^        $response = $this->_get('\/1\/account\/rate_limit_status.xml');$/;"	v
response	library\Zend\Service\Twitter.php	/^        $response = $this->_get('\/1\/account\/verify_credentials.xml');$/;"	v
response	library\Zend\Service\Twitter.php	/^        $response = $this->_post($path);$/;"	v
response	library\Zend\Service\Twitter.php	/^        $response = $this->_post($path, $data);$/;"	v
return	library\Zend\Service\Twitter.php	/^            $return = call_user_func_array(array($this->_oauthConsumer, $method), $params);$/;"	v
test	library\Zend\Service\Twitter.php	/^        $test = $this->_methodType . ucfirst($method);$/;"	v
uri	library\Zend\Service\Twitter.php	/^        $uri = $this->_uri->getUri();$/;"	v
Zend_Service_Twitter_Exception	library\Zend\Service\Twitter\Exception.php	/^class Zend_Service_Twitter_Exception extends Zend_Service_Exception$/;"	c
Zend_Service_Twitter_Search	library\Zend\Service\Twitter\Search.php	/^class Zend_Service_Twitter_Search extends Zend_Rest_Client$/;"	c
_query	library\Zend\Service\Twitter\Search.php	/^        $_query = array();$/;"	v
response	library\Zend\Service\Twitter\Search.php	/^        $response     = $this->restGet('\/trends.json');$/;"	v
response	library\Zend\Service\Twitter\Search.php	/^        $response = $this->restGet('\/search.' . $this->_responseType, $_query);$/;"	v
accountKey	library\Zend\Service\WindowsAzure\Credentials\CredentialsAbstract.php	/^		$accountKey  = Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::DEVSTORE_KEY,$/;"	v
accountName	library\Zend\Service\WindowsAzure\Credentials\CredentialsAbstract.php	/^		$accountName = Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::DEVSTORE_ACCOUNT,$/;"	v
forTableStorage	library\Zend\Service\WindowsAzure\Credentials\CredentialsAbstract.php	/^		$forTableStorage = false,$/;"	v
headers	library\Zend\Service\WindowsAzure\Credentials\CredentialsAbstract.php	/^		$headers = null,$/;"	v
httpVerb	library\Zend\Service\WindowsAzure\Credentials\CredentialsAbstract.php	/^		$httpVerb = Zend_Http_Client::GET,$/;"	v
path	library\Zend\Service\WindowsAzure\Credentials\CredentialsAbstract.php	/^		$path = '\/',$/;"	v
queryPart	library\Zend\Service\WindowsAzure\Credentials\CredentialsAbstract.php	/^    		$queryPart = explode('=', $queryPart, 2);$/;"	v
queryParts	library\Zend\Service\WindowsAzure\Credentials\CredentialsAbstract.php	/^	    $queryParts = $this->_makeArrayOfQueryString($value);$/;"	v
queryParts	library\Zend\Service\WindowsAzure\Credentials\CredentialsAbstract.php	/^    	$queryParts = explode('&', $value);$/;"	v
queryString	library\Zend\Service\WindowsAzure\Credentials\CredentialsAbstract.php	/^		$queryString = '',$/;"	v
rawData	library\Zend\Service\WindowsAzure\Credentials\CredentialsAbstract.php	/^		$rawData = null$/;"	v
requestUrl	library\Zend\Service\WindowsAzure\Credentials\CredentialsAbstract.php	/^		$requestUrl = '',$/;"	v
requiredPermission	library\Zend\Service\WindowsAzure\Credentials\CredentialsAbstract.php	/^		$requiredPermission = Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_READ$/;"	v
requiredPermission	library\Zend\Service\WindowsAzure\Credentials\CredentialsAbstract.php	/^		$requiredPermission = Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_READ,$/;"	v
resourceType	library\Zend\Service\WindowsAzure\Credentials\CredentialsAbstract.php	/^		$resourceType = Zend_Service_WindowsAzure_Storage::RESOURCE_UNKNOWN,$/;"	v
returnValue	library\Zend\Service\WindowsAzure\Credentials\CredentialsAbstract.php	/^		$returnValue = array();$/;"	v
returnValue	library\Zend\Service\WindowsAzure\Credentials\CredentialsAbstract.php	/^	    $returnValue = array();$/;"	v
usePathStyleUri	library\Zend\Service\WindowsAzure\Credentials\CredentialsAbstract.php	/^		$usePathStyleUri = false$/;"	v
value	library\Zend\Service\WindowsAzure\Credentials\CredentialsAbstract.php	/^    		$value = substr($value, 1);$/;"	v
Zend_Service_WindowsAzure_Credentials_Exception	library\Zend\Service\WindowsAzure\Credentials\Exception.php	/^class Zend_Service_WindowsAzure_Credentials_Exception extends Zend_Service_WindowsAzure_Exception$/;"	c
Zend_Service_WindowsAzure_Credentials_SharedAccessSignature	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^class Zend_Service_WindowsAzure_Credentials_SharedAccessSignature$/;"	c
accountKey	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^		$accountKey  = Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::DEVSTORE_KEY,$/;"	v
accountName	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^		$accountName = Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::DEVSTORE_ACCOUNT,$/;"	v
canonicalizedResource	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^		$canonicalizedResource  = '\/' . $this->_accountName;$/;"	v
expiry	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^        $expiry = '',$/;"	v
forTableStorage	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^		$forTableStorage = false,$/;"	v
headers	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^		$headers = null,$/;"	v
httpVerb	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^		$httpVerb = Zend_Http_Client::GET,$/;"	v
identifier	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^        $identifier = ''$/;"	v
matches	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^	            $matches = $matches && (strpbrk($value, $requiredPermission) !== false);$/;"	v
matches	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^	            $matches = $matches && (strpbrk($value, $requiredResourceType) !== false);$/;"	v
matches	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^	    $matches = $matches && (strpos($parsedRequestUrl['path'], $parsedPermissionUrl['path']) !== false);$/;"	v
matches	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^	    $matches = true;$/;"	v
parsedPermissionUrl	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^	    $parsedPermissionUrl = parse_url($permissionUrl);$/;"	v
parsedPermittedUrl	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^                $parsedPermittedUrl = parse_url($permittedUrl);$/;"	v
parsedRequestUrl	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^	    $parsedRequestUrl = parse_url($requestUrl);$/;"	v
parts	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^        $parts = array();$/;"	v
path	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^		$path = '\/',$/;"	v
path	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^            $path = '\/' . $path;$/;"	v
path	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^            $path = substr($path, strpos($path, '\/'));$/;"	v
path	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^        $path = '\/',$/;"	v
permissionParts	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^	    $permissionParts = explode('&', $parsedPermissionUrl['query']);$/;"	v
permissionUrl	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^        $permissionUrl = '',$/;"	v
permissions	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^        $permissions = 'r',$/;"	v
queryString	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^		$queryString = '',$/;"	v
queryString	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^        $queryString = '',$/;"	v
rawData	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^		$rawData = null$/;"	v
requestUrl	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^        $requestUrl = '',$/;"	v
requiredPermission	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^		$requiredPermission = Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_READ,$/;"	v
requiredPermission	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^        $requiredPermission = Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_READ$/;"	v
requiredResourceType	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^        $requiredResourceType = $resourceType;$/;"	v
resource	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^        $resource = 'b',$/;"	v
resourceType	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^		$resourceType = Zend_Service_WindowsAzure_Storage::RESOURCE_UNKNOWN,$/;"	v
resourceType	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^        $resourceType = Zend_Service_WindowsAzure_Storage::RESOURCE_UNKNOWN,$/;"	v
signature	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^        $signature    = base64_encode(hash_hmac('sha256', $stringToSign, $this->_accountKey, true));$/;"	v
start	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^        $start = '',$/;"	v
stringToSign	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^		$stringToSign   = array();$/;"	v
stringToSign	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^        $stringToSign = implode("\\n", $stringToSign);$/;"	v
usePathStyleUri	library\Zend\Service\WindowsAzure\Credentials\SharedAccessSignature.php	/^		$usePathStyleUri = false, $permissionSet = array()$/;"	v
Zend_Service_WindowsAzure_Credentials_SharedKey	library\Zend\Service\WindowsAzure\Credentials\SharedKey.php	/^class Zend_Service_WindowsAzure_Credentials_SharedKey$/;"	c
canonicalizedHeaders	library\Zend\Service\WindowsAzure\Credentials\SharedKey.php	/^        $canonicalizedHeaders = array();$/;"	v
canonicalizedResource	library\Zend\Service\WindowsAzure\Credentials\SharedKey.php	/^        $canonicalizedResource  = '\/' . $this->_accountName;$/;"	v
contentLength	library\Zend\Service\WindowsAzure\Credentials\SharedKey.php	/^                $contentLength = strlen($rawData);$/;"	v
contentLength	library\Zend\Service\WindowsAzure\Credentials\SharedKey.php	/^            $contentLength = 0;$/;"	v
contentLength	library\Zend\Service\WindowsAzure\Credentials\SharedKey.php	/^        $contentLength = '';$/;"	v
forTableStorage	library\Zend\Service\WindowsAzure\Credentials\SharedKey.php	/^        $forTableStorage = false,$/;"	v
headers	library\Zend\Service\WindowsAzure\Credentials\SharedKey.php	/^        $headers = null,$/;"	v
httpVerb	library\Zend\Service\WindowsAzure\Credentials\SharedKey.php	/^        $httpVerb = Zend_Http_Client::GET,$/;"	v
path	library\Zend\Service\WindowsAzure\Credentials\SharedKey.php	/^            $path = substr($path, strpos($path, '\/'));$/;"	v
path	library\Zend\Service\WindowsAzure\Credentials\SharedKey.php	/^        $path = '\/',$/;"	v
queryString	library\Zend\Service\WindowsAzure\Credentials\SharedKey.php	/^        $queryString = $this->_prepareQueryStringForSigning($queryString);$/;"	v
queryString	library\Zend\Service\WindowsAzure\Credentials\SharedKey.php	/^        $queryString = '',$/;"	v
queryStringItems	library\Zend\Service\WindowsAzure\Credentials\SharedKey.php	/^            $queryStringItems = $this->_makeArrayOfQueryString($queryString);$/;"	v
rawData	library\Zend\Service\WindowsAzure\Credentials\SharedKey.php	/^        $rawData = null$/;"	v
requestDate	library\Zend\Service\WindowsAzure\Credentials\SharedKey.php	/^            $requestDate = $headers[Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::PREFIX_STORAGE_HEADER . 'date'];$/;"	v
requestDate	library\Zend\Service\WindowsAzure\Credentials\SharedKey.php	/^            $requestDate = gmdate('D, d M Y H:i:s', time()) . ' GMT'; \/\/ RFC 1123$/;"	v
requestDate	library\Zend\Service\WindowsAzure\Credentials\SharedKey.php	/^        $requestDate = '';$/;"	v
requestUrl	library\Zend\Service\WindowsAzure\Credentials\SharedKey.php	/^        $requestUrl = '',$/;"	v
requiredPermission	library\Zend\Service\WindowsAzure\Credentials\SharedKey.php	/^        $requiredPermission = Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_READ$/;"	v
requiredPermission	library\Zend\Service\WindowsAzure\Credentials\SharedKey.php	/^        $requiredPermission = Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_READ,$/;"	v
resourceType	library\Zend\Service\WindowsAzure\Credentials\SharedKey.php	/^        $resourceType = Zend_Service_WindowsAzure_Storage::RESOURCE_UNKNOWN,$/;"	v
signString	library\Zend\Service\WindowsAzure\Credentials\SharedKey.php	/^    	$signString     = base64_encode(hash_hmac('sha256', $stringToSign, $this->_accountKey, true));$/;"	v
stringToSign	library\Zend\Service\WindowsAzure\Credentials\SharedKey.php	/^		$stringToSign   = array();$/;"	v
stringToSign	library\Zend\Service\WindowsAzure\Credentials\SharedKey.php	/^    	$stringToSign   = implode("\\n", $stringToSign);$/;"	v
value	library\Zend\Service\WindowsAzure\Credentials\SharedKey.php	/^                    $value = $value === true ? 'True' : 'False';$/;"	v
Zend_Service_WindowsAzure_Credentials_SharedKeyLite	library\Zend\Service\WindowsAzure\Credentials\SharedKeyLite.php	/^class Zend_Service_WindowsAzure_Credentials_SharedKeyLite$/;"	c
canonicalizedResource	library\Zend\Service\WindowsAzure\Credentials\SharedKeyLite.php	/^        $canonicalizedResource  = '\/' . $this->_accountName;$/;"	v
forTableStorage	library\Zend\Service\WindowsAzure\Credentials\SharedKeyLite.php	/^        $forTableStorage = false,$/;"	v
headers	library\Zend\Service\WindowsAzure\Credentials\SharedKeyLite.php	/^        $headers = null,$/;"	v
httpVerb	library\Zend\Service\WindowsAzure\Credentials\SharedKeyLite.php	/^        $httpVerb = Zend_Http_Client::GET,$/;"	v
path	library\Zend\Service\WindowsAzure\Credentials\SharedKeyLite.php	/^            $path = substr($path, strpos($path, '\/'));$/;"	v
path	library\Zend\Service\WindowsAzure\Credentials\SharedKeyLite.php	/^        $path = '\/',$/;"	v
queryParts	library\Zend\Service\WindowsAzure\Credentials\SharedKeyLite.php	/^    		$queryParts = explode('&', $value);$/;"	v
queryString	library\Zend\Service\WindowsAzure\Credentials\SharedKeyLite.php	/^        $queryString = $this->_prepareQueryStringForSigning($queryString);$/;"	v
queryString	library\Zend\Service\WindowsAzure\Credentials\SharedKeyLite.php	/^        $queryString = '',$/;"	v
rawData	library\Zend\Service\WindowsAzure\Credentials\SharedKeyLite.php	/^        $rawData = null$/;"	v
requestDate	library\Zend\Service\WindowsAzure\Credentials\SharedKeyLite.php	/^            $requestDate = $headers[Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::PREFIX_STORAGE_HEADER . 'date'];$/;"	v
requestDate	library\Zend\Service\WindowsAzure\Credentials\SharedKeyLite.php	/^            $requestDate = gmdate('D, d M Y H:i:s', time()) . ' GMT'; \/\/ RFC 1123$/;"	v
requestDate	library\Zend\Service\WindowsAzure\Credentials\SharedKeyLite.php	/^        $requestDate = '';$/;"	v
requestUrl	library\Zend\Service\WindowsAzure\Credentials\SharedKeyLite.php	/^        $requestUrl = '',$/;"	v
requiredPermission	library\Zend\Service\WindowsAzure\Credentials\SharedKeyLite.php	/^        $requiredPermission = Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_READ$/;"	v
requiredPermission	library\Zend\Service\WindowsAzure\Credentials\SharedKeyLite.php	/^        $requiredPermission = Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_READ,$/;"	v
resourceType	library\Zend\Service\WindowsAzure\Credentials\SharedKeyLite.php	/^        $resourceType = Zend_Service_WindowsAzure_Storage::RESOURCE_UNKNOWN,$/;"	v
signString	library\Zend\Service\WindowsAzure\Credentials\SharedKeyLite.php	/^    	$signString     = base64_encode(hash_hmac('sha256', $stringToSign, $this->_accountKey, true));$/;"	v
stringToSign	library\Zend\Service\WindowsAzure\Credentials\SharedKeyLite.php	/^		$stringToSign   = array();$/;"	v
stringToSign	library\Zend\Service\WindowsAzure\Credentials\SharedKeyLite.php	/^    	$stringToSign   = implode("\\n", $stringToSign);$/;"	v
value	library\Zend\Service\WindowsAzure\Credentials\SharedKeyLite.php	/^    			$value = substr($value, 1);$/;"	v
Zend_Service_WindowsAzure_Diagnostics_ConfigurationDataSources	library\Zend\Service\WindowsAzure\Diagnostics\ConfigurationDataSources.php	/^class Zend_Service_WindowsAzure_Diagnostics_ConfigurationDataSources$/;"	c
Zend_Service_WindowsAzure_Diagnostics_ConfigurationDiagnosticInfrastructureLogs	library\Zend\Service\WindowsAzure\Diagnostics\ConfigurationDiagnosticInfrastructureLogs.php	/^class Zend_Service_WindowsAzure_Diagnostics_ConfigurationDiagnosticInfrastructureLogs$/;"	c
Zend_Service_WindowsAzure_Diagnostics_ConfigurationDirectories	library\Zend\Service\WindowsAzure\Diagnostics\ConfigurationDirectories.php	/^class Zend_Service_WindowsAzure_Diagnostics_ConfigurationDirectories$/;"	c
Zend_Service_WindowsAzure_Diagnostics_ConfigurationInstance	library\Zend\Service\WindowsAzure\Diagnostics\ConfigurationInstance.php	/^class Zend_Service_WindowsAzure_Diagnostics_ConfigurationInstance$/;"	c
configurationXml	library\Zend\Service\WindowsAzure\Diagnostics\ConfigurationInstance.php	/^		$configurationXml = simplexml_load_string($configurationXml);$/;"	v
returnValue	library\Zend\Service\WindowsAzure\Diagnostics\ConfigurationInstance.php	/^		$returnValue = array();$/;"	v
subscriptions	library\Zend\Service\WindowsAzure\Diagnostics\ConfigurationInstance.php	/^				$subscriptions = $subscriptions->DirectoryConfiguration;$/;"	v
subscriptions	library\Zend\Service\WindowsAzure\Diagnostics\ConfigurationInstance.php	/^				$subscriptions = $subscriptions->PerformanceCounterConfiguration;$/;"	v
subscriptions	library\Zend\Service\WindowsAzure\Diagnostics\ConfigurationInstance.php	/^				$subscriptions = $subscriptions->string;$/;"	v
subscriptions	library\Zend\Service\WindowsAzure\Diagnostics\ConfigurationInstance.php	/^				$subscriptions = array($subscriptions->DirectoryConfiguration);$/;"	v
subscriptions	library\Zend\Service\WindowsAzure\Diagnostics\ConfigurationInstance.php	/^				$subscriptions = array($subscriptions->PerformanceCounterConfiguration);$/;"	v
subscriptions	library\Zend\Service\WindowsAzure\Diagnostics\ConfigurationInstance.php	/^				$subscriptions = array($subscriptions->string);$/;"	v
subscriptions	library\Zend\Service\WindowsAzure\Diagnostics\ConfigurationInstance.php	/^			$subscriptions = $configurationXml->DataSources->PerformanceCounters->Subscriptions;$/;"	v
subscriptions	library\Zend\Service\WindowsAzure\Diagnostics\ConfigurationInstance.php	/^			$subscriptions = $configurationXml->DataSources->WindowsEventLog->Subscriptions;$/;"	v
Zend_Service_WindowsAzure_Diagnostics_ConfigurationLogs	library\Zend\Service\WindowsAzure\Diagnostics\ConfigurationLogs.php	/^class Zend_Service_WindowsAzure_Diagnostics_ConfigurationLogs$/;"	c
Zend_Service_WindowsAzure_Diagnostics_ConfigurationPerformanceCounters	library\Zend\Service\WindowsAzure\Diagnostics\ConfigurationPerformanceCounters.php	/^class Zend_Service_WindowsAzure_Diagnostics_ConfigurationPerformanceCounters$/;"	c
Zend_Service_WindowsAzure_Diagnostics_ConfigurationWindowsEventLog	library\Zend\Service\WindowsAzure\Diagnostics\ConfigurationWindowsEventLog.php	/^class Zend_Service_WindowsAzure_Diagnostics_ConfigurationWindowsEventLog$/;"	c
Zend_Service_WindowsAzure_Diagnostics_DirectoryConfigurationSubscription	library\Zend\Service\WindowsAzure\Diagnostics\DirectoryConfigurationSubscription.php	/^class Zend_Service_WindowsAzure_Diagnostics_DirectoryConfigurationSubscription$/;"	c
Zend_Service_WindowsAzure_Diagnostics_Exception	library\Zend\Service\WindowsAzure\Diagnostics\Exception.php	/^class Zend_Service_WindowsAzure_Diagnostics_Exception$/;"	c
Zend_Service_WindowsAzure_Diagnostics_LogLevel	library\Zend\Service\WindowsAzure\Diagnostics\LogLevel.php	/^class Zend_Service_WindowsAzure_Diagnostics_LogLevel$/;"	c
Zend_Service_WindowsAzure_Diagnostics_Manager	library\Zend\Service\WindowsAzure\Diagnostics\Manager.php	/^class Zend_Service_WindowsAzure_Diagnostics_Manager$/;"	c
configurationInstance	library\Zend\Service\WindowsAzure\Diagnostics\Manager.php	/^            $configurationInstance = new Zend_Service_WindowsAzure_Diagnostics_ConfigurationInstance();$/;"	v
Zend_Service_WindowsAzure_Diagnostics_PerformanceCounterSubscription	library\Zend\Service\WindowsAzure\Diagnostics\PerformanceCounterSubscription.php	/^class Zend_Service_WindowsAzure_Diagnostics_PerformanceCounterSubscription$/;"	c
Zend_Service_WindowsAzure_Exception	library\Zend\Service\WindowsAzure\Exception.php	/^class Zend_Service_WindowsAzure_Exception extends Zend_Service_Exception$/;"	c
Zend_Service_WindowsAzure_RetryPolicy_Exception	library\Zend\Service\WindowsAzure\RetryPolicy\Exception.php	/^class Zend_Service_WindowsAzure_RetryPolicy_Exception extends Zend_Service_WindowsAzure_Exception$/;"	c
Zend_Service_WindowsAzure_RetryPolicy_NoRetry	library\Zend\Service\WindowsAzure\RetryPolicy\NoRetry.php	/^class Zend_Service_WindowsAzure_RetryPolicy_NoRetry extends Zend_Service_WindowsAzure_RetryPolicy_RetryPolicyAbstract$/;"	c
returnValue	library\Zend\Service\WindowsAzure\RetryPolicy\NoRetry.php	/^            $returnValue = call_user_func_array($function, $parameters);$/;"	v
returnValue	library\Zend\Service\WindowsAzure\RetryPolicy\NoRetry.php	/^        $returnValue = null;$/;"	v
Zend_Service_WindowsAzure_RetryPolicy_RetryN	library\Zend\Service\WindowsAzure\RetryPolicy\RetryN.php	/^class Zend_Service_WindowsAzure_RetryPolicy_RetryN extends Zend_Service_WindowsAzure_RetryPolicy_RetryPolicyAbstract$/;"	c
returnValue	library\Zend\Service\WindowsAzure\RetryPolicy\RetryN.php	/^                $returnValue = call_user_func_array($function, $parameters);$/;"	v
returnValue	library\Zend\Service\WindowsAzure\RetryPolicy\RetryN.php	/^        $returnValue = null;$/;"	v
Zend_Service_WindowsAzure_SessionHandler	library\Zend\Service\WindowsAzure\SessionHandler.php	/^class Zend_Service_WindowsAzure_SessionHandler$/;"	c
result	library\Zend\Service\WindowsAzure\SessionHandler.php	/^            $result = $this->_tableStorage->retrieveEntities($this->_sessionTable, 'PartitionKey eq \\'' . $this->_sessionTablePartition . '\\' and sessionExpires lt ' . (time() - $lifeTime));$/;"	v
sessionRecord	library\Zend\Service\WindowsAzure\SessionHandler.php	/^            $sessionRecord = $this->_tableStorage->retrieveEntityById($/;"	v
sessionRecord	library\Zend\Service\WindowsAzure\SessionHandler.php	/^        $sessionRecord = new Zend_Service_WindowsAzure_Storage_DynamicTableEntity($this->_sessionTablePartition, $id);$/;"	v
tableExists	library\Zend\Service\WindowsAzure\SessionHandler.php	/^        $tableExists = $this->_tableStorage->tableExists($this->_sessionTable);$/;"	v
Zend_Service_WindowsAzure_Storage	library\Zend\Service\WindowsAzure\Storage.php	/^class Zend_Service_WindowsAzure_Storage$/;"	c
accountKey	library\Zend\Service\WindowsAzure\Storage.php	/^		$accountKey = Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::DEVSTORE_KEY,$/;"	v
accountName	library\Zend\Service\WindowsAzure\Storage.php	/^		$accountName = Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::DEVSTORE_ACCOUNT,$/;"	v
credentials	library\Zend\Service\WindowsAzure\Storage.php	/^	    	$credentials = explode(':', $this->_proxyCredentials);$/;"	v
forTableStorage	library\Zend\Service\WindowsAzure\Storage.php	/^		$forTableStorage = false,$/;"	v
headers	library\Zend\Service\WindowsAzure\Storage.php	/^		    $headers = array();$/;"	v
headers	library\Zend\Service\WindowsAzure\Storage.php	/^		$headers = array(),$/;"	v
headers	library\Zend\Service\WindowsAzure\Storage.php	/^		$headers = array();$/;"	v
host	library\Zend\Service\WindowsAzure\Storage.php	/^		$host = self::URL_DEV_BLOB,$/;"	v
httpVerb	library\Zend\Service\WindowsAzure\Storage.php	/^		$httpVerb = Zend_Http_Client::GET,$/;"	v
metadata	library\Zend\Service\WindowsAzure\Storage.php	/^		$metadata = array();$/;"	v
namespaces	library\Zend\Service\WindowsAzure\Storage.php	/^            $namespaces = array_merge($xml->getNamespaces(true), $xml->getDocNamespaces(true));$/;"	v
options	library\Zend\Service\WindowsAzure\Storage.php	/^		$options = array($/;"	v
path	library\Zend\Service\WindowsAzure\Storage.php	/^			$path = '\/' . $path;$/;"	v
path	library\Zend\Service\WindowsAzure\Storage.php	/^		$path           = self::urlencode($path);$/;"	v
path	library\Zend\Service\WindowsAzure\Storage.php	/^		$path = '\/',$/;"	v
queryString	library\Zend\Service\WindowsAzure\Storage.php	/^		$queryString    = self::urlencode($queryString);$/;"	v
queryString	library\Zend\Service\WindowsAzure\Storage.php	/^		$queryString = '',$/;"	v
rawData	library\Zend\Service\WindowsAzure\Storage.php	/^		$rawData = null,$/;"	v
requestHeaders	library\Zend\Service\WindowsAzure\Storage.php	/^        $requestHeaders = $this->_credentials$/;"	v
requestUrl	library\Zend\Service\WindowsAzure\Storage.php	/^        $requestUrl     = $this->_credentials$/;"	v
requiredPermission	library\Zend\Service\WindowsAzure\Storage.php	/^		$requiredPermission = Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_READ$/;"	v
resourceType	library\Zend\Service\WindowsAzure\Storage.php	/^		$resourceType = Zend_Service_WindowsAzure_Storage::RESOURCE_UNKNOWN,$/;"	v
response	library\Zend\Service\WindowsAzure\Storage.php	/^		$response = $this->_retryPolicy->execute($/;"	v
returnValue	library\Zend\Service\WindowsAzure\Storage.php	/^	    $returnValue = str_replace('+00:00', '.0000000Z', @date('c', $timestamp));$/;"	v
timestamp	library\Zend\Service\WindowsAzure\Storage.php	/^	        $timestamp = time();$/;"	v
tz	library\Zend\Service\WindowsAzure\Storage.php	/^	    $tz = @date_default_timezone_get();$/;"	v
usePathStyleUri	library\Zend\Service\WindowsAzure\Storage.php	/^		$usePathStyleUri = false,$/;"	v
xml	library\Zend\Service\WindowsAzure\Storage.php	/^        $xml = @simplexml_load_string($response->getBody());$/;"	v
Zend_Service_WindowsAzure_Storage_Batch	library\Zend\Service\WindowsAzure\Storage\Batch.php	/^class Zend_Service_WindowsAzure_Storage_Batch$/;"	c
errors	library\Zend\Service\WindowsAzure\Storage\Batch.php	/^        $errors = null;$/;"	v
headers	library\Zend\Service\WindowsAzure\Storage\Batch.php	/^		    $headers = array();$/;"	v
operation	library\Zend\Service\WindowsAzure\Storage\Batch.php	/^		$operation = '';$/;"	v
path	library\Zend\Service\WindowsAzure\Storage\Batch.php	/^			$path = '\/' . $path;$/;"	v
path	library\Zend\Service\WindowsAzure\Storage\Batch.php	/^		$path           = Zend_Service_WindowsAzure_Storage::urlencode($path);$/;"	v
queryString	library\Zend\Service\WindowsAzure\Storage\Batch.php	/^		$queryString    = Zend_Service_WindowsAzure_Storage::urlencode($queryString);$/;"	v
rawData	library\Zend\Service\WindowsAzure\Storage\Batch.php	/^		    $rawData = '';$/;"	v
requestUrl	library\Zend\Service\WindowsAzure\Storage\Batch.php	/^		$requestUrl     = $this->getBaseUrl() . $path . $queryString;$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Batch.php	/^        $response = $this->_storageClient->performBatch($this->_operations, $this->_forTableStorage, $this->_isSingleSelect);$/;"	v
batchBoundary	library\Zend\Service\WindowsAzure\Storage\BatchStorageAbstract.php	/^	    $batchBoundary = 'batch_' . md5(time() . microtime());$/;"	v
changesetBoundary	library\Zend\Service\WindowsAzure\Storage\BatchStorageAbstract.php	/^	    $changesetBoundary = 'changeset_' . md5(time() . microtime());$/;"	v
headers	library\Zend\Service\WindowsAzure\Storage\BatchStorageAbstract.php	/^	    $headers = array();$/;"	v
httpVerb	library\Zend\Service\WindowsAzure\Storage\BatchStorageAbstract.php	/^        $httpVerb = Zend_Http_Client::POST;$/;"	v
operation	library\Zend\Service\WindowsAzure\Storage\BatchStorageAbstract.php	/^            $operation = $operations[0];$/;"	v
path	library\Zend\Service\WindowsAzure\Storage\BatchStorageAbstract.php	/^        $path           = '\/$batch';$/;"	v
queryString	library\Zend\Service\WindowsAzure\Storage\BatchStorageAbstract.php	/^        $queryString    = '';$/;"	v
rawData	library\Zend\Service\WindowsAzure\Storage\BatchStorageAbstract.php	/^        $rawData = '';$/;"	v
requestHeaders	library\Zend\Service\WindowsAzure\Storage\BatchStorageAbstract.php	/^        $requestHeaders = $this->_credentials->signRequestHeaders($httpVerb, $path, $queryString, $headers, $forTableStorage, $resourceType, $requiredPermission);$/;"	v
requestUrl	library\Zend\Service\WindowsAzure\Storage\BatchStorageAbstract.php	/^        $requestUrl     = $this->_credentials->signRequestUrl($this->getBaseUrl() . $path . $queryString, $resourceType, $requiredPermission);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\BatchStorageAbstract.php	/^        $response = $this->_retryPolicy->execute($/;"	v
Zend_Service_WindowsAzure_Storage_Blob	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^class Zend_Service_WindowsAzure_Storage_Blob extends Zend_Service_WindowsAzure_Storage$/;"	c
accessType	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^					$accessType = self::ACL_PUBLIC_CONTAINER;$/;"	v
accessType	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^				$accessType = $response->getHeader(Zend_Service_WindowsAzure_Storage::PREFIX_STORAGE_HEADER . 'blob-public-access');$/;"	v
blobs	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^					$blobs = array_merge($blobs, $this->listBlobs($containerName, $prefix, $delimiter, $maxResults, $marker, $include, $currentResultCount));$/;"	v
blobs	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^				$blobs = array_slice($blobs, 0, $maxResults);$/;"	v
blobs	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^			$blobs = array();$/;"	v
blockIdentifiers	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$blockIdentifiers = array();$/;"	v
blockList	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^			$blockList = $this->_parseResponse($response);$/;"	v
blockListType	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^			$blockListType = 'committed';$/;"	v
blockListType	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^			$blockListType = 'uncommitted';$/;"	v
blockListType	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$blockListType = 'all';$/;"	v
blocks	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$blocks = '';$/;"	v
containers	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^					$containers = array_merge($containers, $this->listContainers($prefix, $maxResults, $xmlMarker, $include, $currentResultCount));$/;"	v
containers	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^				$containers = array_slice($containers, 0, $maxResults);$/;"	v
containers	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^			$containers = array();$/;"	v
containers	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$containers = $this->listContainers($containerName, 1);$/;"	v
currentResultCount	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^			$currentResultCount = $currentResultCount + count($blobs);$/;"	v
currentResultCount	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^			$currentResultCount = $currentResultCount + count($containers);$/;"	v
destinationResourceName	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$destinationResourceName = self::createResourceName($destinationContainerName, $destinationBlobName);$/;"	v
entries	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^						$entries = $result->SignedIdentifier;$/;"	v
entries	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^						$entries = array($result->SignedIdentifier);$/;"	v
entries	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^				$entries = null;$/;"	v
fileContents	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^			$fileContents = fread($fp, self::MAX_BLOB_TRANSFER_SIZE);$/;"	v
fileContents	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^			$fileContents = null;$/;"	v
fileContents	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$fileContents = utf8_encode(implode("\\n", array($/;"	v
fp	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$fp = fopen($localFileName, 'r');$/;"	v
headers	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^			$headers = array();$/;"	v
headers	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^			$headers = array_merge($headers, $this->_generateMetadataHeaders($metadata));$/;"	v
headers	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$headers = array();$/;"	v
headers	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$headers = array_merge($headers, $this->_generateMetadataHeaders($metadata));$/;"	v
metadata	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^			$metadata = $this->_parseMetadataHeaders($response->getHeaders());$/;"	v
numberOfParts	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$numberOfParts = ceil( filesize($localFileName) \/ self::MAX_BLOB_TRANSFER_SIZE );$/;"	v
policies	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^			$policies  = '';$/;"	v
policies	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$policies = null;$/;"	v
properties	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^					$properties = (array)$xmlBlobs[$i]->Properties;$/;"	v
queryString	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$queryString = array('comp=blocklist', 'blocklisttype=' . $blockListType);$/;"	v
queryString	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$queryString = array('comp=list');$/;"	v
queryString	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$queryString = array('restype=container', 'comp=list');$/;"	v
queryString	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$queryString = array();$/;"	v
queryString	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$queryString = self::createQueryStringFromArray($queryString);$/;"	v
ranges	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^			$ranges = array();$/;"	v
resourceName	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^			$resourceName = $blobName;$/;"	v
resourceName	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^			$resourceName = $containerName;$/;"	v
resourceName	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^			$resourceName = self::createResourceName($containerName , $blobName);$/;"	v
resourceName	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$resourceName = $containerName . '\/' . $blobName;$/;"	v
resourceName	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$resourceName = self::createResourceName($containerName , $blobName);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^			$response = $this->_performRequest($resourceName, '?comp=blocklist', Zend_Http_Client::PUT, $headers, false, $fileContents, Zend_Service_WindowsAzure_Storage::RESOURCE_BLOB, Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_WRITE);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$response = $this->_parseResponse($response);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$response = $this->_performRequest($containerName . '\/' . $blobName, '?comp=metadata', Zend_Http_Client::PUT, $headers, false, null, Zend_Service_WindowsAzure_Storage::RESOURCE_BLOB, Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_WRITE);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$response = $this->_performRequest($containerName . '\/' . $blobName, '?comp=properties', Zend_Http_Client::PUT, $headers, false, null, Zend_Service_WindowsAzure_Storage::RESOURCE_BLOB, Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_WRITE);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$response = $this->_performRequest($containerName, $queryString, Zend_Http_Client::GET, array(), false, null, Zend_Service_WindowsAzure_Storage::RESOURCE_BLOB, Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_LIST);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$response = $this->_performRequest($containerName, '?restype=container&comp=acl', Zend_Http_Client::GET, array(), false, null, Zend_Service_WindowsAzure_Storage::RESOURCE_CONTAINER, Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_READ);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$response = $this->_performRequest($containerName, '?restype=container&comp=acl', Zend_Http_Client::PUT, $headers, false, $policies, Zend_Service_WindowsAzure_Storage::RESOURCE_CONTAINER, Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_WRITE);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$response = $this->_performRequest($containerName, '?restype=container&comp=metadata', Zend_Http_Client::PUT, $headers, false, null, Zend_Service_WindowsAzure_Storage::RESOURCE_CONTAINER, Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_WRITE);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$response = $this->_performRequest($containerName, '?restype=container', Zend_Http_Client::DELETE, $headers, false, null, Zend_Service_WindowsAzure_Storage::RESOURCE_CONTAINER, Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_WRITE);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$response = $this->_performRequest($containerName, '?restype=container', Zend_Http_Client::GET, array(), false, null, Zend_Service_WindowsAzure_Storage::RESOURCE_CONTAINER, Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_READ);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$response = $this->_performRequest($containerName, '?restype=container', Zend_Http_Client::PUT, $headers, false, null, Zend_Service_WindowsAzure_Storage::RESOURCE_CONTAINER, Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_WRITE);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$response = $this->_performRequest($destinationResourceName, '', Zend_Http_Client::PUT, $headers, false, null, Zend_Service_WindowsAzure_Storage::RESOURCE_BLOB, Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_WRITE);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$response = $this->_performRequest($resourceName, $queryString, Zend_Http_Client::DELETE, $headers, false, null, Zend_Service_WindowsAzure_Storage::RESOURCE_BLOB, Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_WRITE);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$response = $this->_performRequest($resourceName, $queryString, Zend_Http_Client::GET, $headers, false, null, Zend_Service_WindowsAzure_Storage::RESOURCE_BLOB, Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_READ);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$response = $this->_performRequest($resourceName, $queryString, Zend_Http_Client::HEAD, $headers, false, null, Zend_Service_WindowsAzure_Storage::RESOURCE_BLOB, Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_READ);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$response = $this->_performRequest($resourceName, '', Zend_Http_Client::PUT, $headers, false, $data, Zend_Service_WindowsAzure_Storage::RESOURCE_BLOB, Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_WRITE);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$response = $this->_performRequest($resourceName, '', Zend_Http_Client::PUT, $headers, false, '', Zend_Service_WindowsAzure_Storage::RESOURCE_BLOB, Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_WRITE);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$response = $this->_performRequest($resourceName, '?comp=block&blockid=' . base64_encode($identifier), Zend_Http_Client::PUT, $headers, false, $contents, Zend_Service_WindowsAzure_Storage::RESOURCE_BLOB, Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_WRITE);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$response = $this->_performRequest($resourceName, '?comp=lease', Zend_Http_Client::PUT, $headers, false, null, Zend_Service_WindowsAzure_Storage::RESOURCE_BLOB, Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_WRITE);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$response = $this->_performRequest($resourceName, '?comp=page', Zend_Http_Client::PUT, $headers, false, $contents, Zend_Service_WindowsAzure_Storage::RESOURCE_BLOB, Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_WRITE);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$response = $this->_performRequest($resourceName, '?comp=pagelist', Zend_Http_Client::GET, $headers, false, null, Zend_Service_WindowsAzure_Storage::RESOURCE_BLOB, Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_WRITE);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$response = $this->_performRequest($resourceName, '?comp=snapshot', Zend_Http_Client::PUT, $headers, false, null, Zend_Service_WindowsAzure_Storage::RESOURCE_BLOB, Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_WRITE);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$response = $this->_performRequest('', $queryString, Zend_Http_Client::GET, array(), false, null, Zend_Service_WindowsAzure_Storage::RESOURCE_CONTAINER, Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_LIST);$/;"	v
result	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^				$result = $this->_parseResponse($response);$/;"	v
result	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^			$result = $this->_parseResponse($response);$/;"	v
returnValue	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^				$returnValue = array();$/;"	v
returnValue	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^			$returnValue = '0' . $returnValue;$/;"	v
returnValue	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^			$returnValue = array();$/;"	v
returnValue	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$returnValue = $part;$/;"	v
size	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$size = strlen($contents);$/;"	v
sourceResourceName	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^		$sourceResourceName = self::createResourceName($sourceContainerName, $sourceBlobName);$/;"	v
xmlBlobs	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^			$xmlBlobs = $this->_parseResponse($response)->Blobs->Blob;$/;"	v
xmlBlobs	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^			$xmlBlobs = $this->_parseResponse($response)->Blobs->BlobPrefix;$/;"	v
xmlContainers	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^			$xmlContainers = $this->_parseResponse($response)->Containers->Container;$/;"	v
xmlMarker	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^			$xmlMarker = (string)$this->_parseResponse($response)->NextMarker;$/;"	v
xmlRanges	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^				$xmlRanges = $result->PageRange;$/;"	v
xmlRanges	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^				$xmlRanges = array($result->PageRange);$/;"	v
xmlRanges	library\Zend\Service\WindowsAzure\Storage\Blob.php	/^			$xmlRanges = null;$/;"	v
Zend_Service_WindowsAzure_Storage_BlobContainer	library\Zend\Service\WindowsAzure\Storage\BlobContainer.php	/^class Zend_Service_WindowsAzure_Storage_BlobContainer$/;"	c
Zend_Service_WindowsAzure_Storage_BlobInstance	library\Zend\Service\WindowsAzure\Storage\BlobInstance.php	/^class Zend_Service_WindowsAzure_Storage_BlobInstance$/;"	c
Zend_Service_WindowsAzure_Storage_Blob_Stream	library\Zend\Service\WindowsAzure\Storage\Blob\Stream.php	/^class Zend_Service_WindowsAzure_Storage_Blob_Stream$/;"	c
containerExists	library\Zend\Service\WindowsAzure\Storage\Blob\Stream.php	/^            $containerExists = $this->_getStorageClient($this->_fileName)->containerExists($/;"	v
fh	library\Zend\Service\WindowsAzure\Storage\Blob\Stream.php	/^        $fh = @fopen($this->_temporaryFileName, $mode);$/;"	v
fileName	library\Zend\Service\WindowsAzure\Storage\Blob\Stream.php	/^                $fileName = substr($fileName, 1);$/;"	v
fileName	library\Zend\Service\WindowsAzure\Storage\Blob\Stream.php	/^            $fileName = isset($url['path']) ? $url['path'] : $url['host'];$/;"	v
info	library\Zend\Service\WindowsAzure\Storage\Blob\Stream.php	/^            $info = $this->_getStorageClient($path)->getBlobInstance($/;"	v
info	library\Zend\Service\WindowsAzure\Storage\Blob\Stream.php	/^            $info = $this->_getStorageClient($this->_fileName)->getBlobInstance($/;"	v
info	library\Zend\Service\WindowsAzure\Storage\Blob\Stream.php	/^        $info = null;$/;"	v
len	library\Zend\Service\WindowsAzure\Storage\Blob\Stream.php	/^        $len = strlen($data);$/;"	v
object	library\Zend\Service\WindowsAzure\Storage\Blob\Stream.php	/^        $object = current($this->_blobs);$/;"	v
result	library\Zend\Service\WindowsAzure\Storage\Blob\Stream.php	/^        $result = fflush($this->_temporaryFileHandle);$/;"	v
stat	library\Zend\Service\WindowsAzure\Storage\Blob\Stream.php	/^        $stat = array();$/;"	v
url	library\Zend\Service\WindowsAzure\Storage\Blob\Stream.php	/^            $url = explode(':', $path);$/;"	v
url	library\Zend\Service\WindowsAzure\Storage\Blob\Stream.php	/^        $url = parse_url($path);$/;"	v
Zend_Service_WindowsAzure_Storage_DynamicTableEntity	library\Zend\Service\WindowsAzure\Storage\DynamicTableEntity.php	/^class Zend_Service_WindowsAzure_Storage_DynamicTableEntity extends Zend_Service_WindowsAzure_Storage_TableEntity$/;"	c
type	library\Zend\Service\WindowsAzure\Storage\DynamicTableEntity.php	/^                        $type = 'Edm.Boolean';$/;"	v
type	library\Zend\Service\WindowsAzure\Storage\DynamicTableEntity.php	/^                        $type = 'Edm.Double';$/;"	v
type	library\Zend\Service\WindowsAzure\Storage\DynamicTableEntity.php	/^                        $type = 'Edm.Int32';$/;"	v
type	library\Zend\Service\WindowsAzure\Storage\DynamicTableEntity.php	/^                    $type = 'Edm.String';$/;"	v
Zend_Service_WindowsAzure_Storage_LeaseInstance	library\Zend\Service\WindowsAzure\Storage\LeaseInstance.php	/^class Zend_Service_WindowsAzure_Storage_LeaseInstance$/;"	c
Zend_Service_WindowsAzure_Storage_PageRegionInstance	library\Zend\Service\WindowsAzure\Storage\PageRegionInstance.php	/^class Zend_Service_WindowsAzure_Storage_PageRegionInstance$/;"	c
Zend_Service_WindowsAzure_Storage_Queue	library\Zend\Service\WindowsAzure\Storage\Queue.php	/^class Zend_Service_WindowsAzure_Storage_Queue extends Zend_Service_WindowsAzure_Storage$/;"	c
currentResultCount	library\Zend\Service\WindowsAzure\Storage\Queue.php	/^			$currentResultCount = $currentResultCount + count($queues);$/;"	v
headers	library\Zend\Service\WindowsAzure\Storage\Queue.php	/^		$headers = array();$/;"	v
headers	library\Zend\Service\WindowsAzure\Storage\Queue.php	/^		$headers = array_merge($headers, $this->_generateMetadataHeaders($metadata));$/;"	v
messages	library\Zend\Service\WindowsAzure\Storage\Queue.php	/^			$messages = array();$/;"	v
metadata	library\Zend\Service\WindowsAzure\Storage\Queue.php	/^		    $metadata = $this->_parseMetadataHeaders($response->getHeaders());$/;"	v
queryString	library\Zend\Service\WindowsAzure\Storage\Queue.php	/^		$queryString = array();$/;"	v
queryString	library\Zend\Service\WindowsAzure\Storage\Queue.php	/^	    $queryString = self::createQueryStringFromArray($queryString);$/;"	v
queryString	library\Zend\Service\WindowsAzure\Storage\Queue.php	/^        $queryString = array('comp=list');$/;"	v
queue	library\Zend\Service\WindowsAzure\Storage\Queue.php	/^		    $queue = new Zend_Service_WindowsAzure_Storage_QueueInstance($/;"	v
queues	library\Zend\Service\WindowsAzure\Storage\Queue.php	/^			    $queues = array_slice($queues, 0, $maxResults);$/;"	v
queues	library\Zend\Service\WindowsAzure\Storage\Queue.php	/^			$queues = array();$/;"	v
queues	library\Zend\Service\WindowsAzure\Storage\Queue.php	/^    			    $queues = array_merge($queues, $this->listQueues($prefix, $maxResults, $xmlMarker, $include, $currentResultCount));$/;"	v
queues	library\Zend\Service\WindowsAzure\Storage\Queue.php	/^        $queues = $this->listQueues($queueName, 1);$/;"	v
rawData	library\Zend\Service\WindowsAzure\Storage\Queue.php	/^	    $rawData = '';$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Queue.php	/^		$response = $this->_parseResponse($response);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Queue.php	/^		$response = $this->_performRequest($queueName . '\/messages', $queryString, Zend_Http_Client::GET);	$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Queue.php	/^		$response = $this->_performRequest($queueName . '\/messages', $queryString, Zend_Http_Client::POST, array(), false, $rawData);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Queue.php	/^		$response = $this->_performRequest($queueName, '', Zend_Http_Client::PUT, $headers);	$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Queue.php	/^		$response = $this->_performRequest($queueName, '?comp=metadata', Zend_Http_Client::GET);	$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Queue.php	/^		$response = $this->_performRequest($queueName, '?comp=metadata', Zend_Http_Client::PUT, $headers);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Queue.php	/^		$response = $this->_performRequest('', $queryString, Zend_Http_Client::GET);	$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Queue.php	/^        $response = $this->_performRequest($queueName . '\/messages', '', Zend_Http_Client::DELETE);    $/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Queue.php	/^        $response = $this->_performRequest($queueName . '\/messages\/' . $message->MessageId, '?popreceipt=' . $message->PopReceipt, Zend_Http_Client::DELETE);    $/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Queue.php	/^        $response = $this->_performRequest($queueName, '', Zend_Http_Client::DELETE);$/;"	v
result	library\Zend\Service\WindowsAzure\Storage\Queue.php	/^			$result = $this->_parseResponse($response);$/;"	v
xmlMarker	library\Zend\Service\WindowsAzure\Storage\Queue.php	/^			$xmlMarker = (string)$this->_parseResponse($response)->NextMarker;$/;"	v
xmlMessages	library\Zend\Service\WindowsAzure\Storage\Queue.php	/^                $xmlMessages = $result->QueueMessage;$/;"	v
xmlMessages	library\Zend\Service\WindowsAzure\Storage\Queue.php	/^                $xmlMessages = array($result->QueueMessage);$/;"	v
xmlMessages	library\Zend\Service\WindowsAzure\Storage\Queue.php	/^            $xmlMessages = null;$/;"	v
xmlQueues	library\Zend\Service\WindowsAzure\Storage\Queue.php	/^			$xmlQueues = $this->_parseResponse($response)->Queues->Queue;$/;"	v
Zend_Service_WindowsAzure_Storage_QueueInstance	library\Zend\Service\WindowsAzure\Storage\QueueInstance.php	/^class Zend_Service_WindowsAzure_Storage_QueueInstance$/;"	c
Zend_Service_WindowsAzure_Storage_QueueMessage	library\Zend\Service\WindowsAzure\Storage\QueueMessage.php	/^class Zend_Service_WindowsAzure_Storage_QueueMessage$/;"	c
Zend_Service_WindowsAzure_Storage_SignedIdentifier	library\Zend\Service\WindowsAzure\Storage\SignedIdentifier.php	/^class Zend_Service_WindowsAzure_Storage_SignedIdentifier$/;"	c
Zend_Service_WindowsAzure_Storage_Table	library\Zend\Service\WindowsAzure\Storage\Table.php	/^class Zend_Service_WindowsAzure_Storage_Table$/;"	c
attributes	library\Zend\Service\WindowsAzure\Storage\Table.php	/^    		            $attributes = $value->attributes('http:\/\/schemas.microsoft.com\/ado\/2007\/08\/dataservices\/metadata');$/;"	v
azureRepresentation	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		$azureRepresentation = array();$/;"	v
azureValues	library\Zend\Service\WindowsAzure\Storage\Table.php	/^			$azureValues = $entity->getAzureValues();$/;"	v
azureValues	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		$azureValues         = $entity->getAzureValues();$/;"	v
entity	library\Zend\Service\WindowsAzure\Storage\Table.php	/^    		    $entity = new $entityClass('', '');$/;"	v
entityClass	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		    $entityClass = $filter;$/;"	v
entries	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		            $entries = array($result);$/;"	v
entries	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		        $entries = $result->entry;$/;"	v
entries	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		        $entries = array($result->entry);$/;"	v
entries	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		    $entries = null;$/;"	v
entries	library\Zend\Service\WindowsAzure\Storage\Table.php	/^    		        $entries = $result->entry;$/;"	v
entries	library\Zend\Service\WindowsAzure\Storage\Table.php	/^    		        $entries = array($result->entry);$/;"	v
entry	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		    $entry = $this->_parseResponse($response);$/;"	v
etag	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		    $etag      = $result->attributes('http:\/\/schemas.microsoft.com\/ado\/2007\/08\/dataservices\/metadata');$/;"	v
etag	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		    $etag      = (string)$etag['etag'];$/;"	v
etag	library\Zend\Service\WindowsAzure\Storage\Table.php	/^    		    $etag      = $entry->attributes('http:\/\/schemas.microsoft.com\/ado\/2007\/08\/dataservices\/metadata');$/;"	v
etag	library\Zend\Service\WindowsAzure\Storage\Table.php	/^    		    $etag      = (string)$etag['etag'];$/;"	v
filter	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		    $filter = '';$/;"	v
forTableStorage	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		$forTableStorage = false,$/;"	v
headers	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		$headers = array(),$/;"	v
headers	library\Zend\Service\WindowsAzure\Storage\Table.php	/^        $headers = array();$/;"	v
httpVerb	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		$httpVerb = Zend_Http_Client::GET,$/;"	v
innerResponse	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		    $innerResponse = $response->getBody();$/;"	v
innerResponse	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		    $innerResponse = substr($innerResponse, 0, strpos($innerResponse, '--batchresponse'));$/;"	v
innerResponse	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		    $innerResponse = substr($innerResponse, strpos($innerResponse, 'HTTP\/1.1 200 OK'));$/;"	v
mergeEntity	library\Zend\Service\WindowsAzure\Storage\Table.php	/^			$mergeEntity = $entity;$/;"	v
mergeEntity	library\Zend\Service\WindowsAzure\Storage\Table.php	/^			$mergeEntity = new Zend_Service_WindowsAzure_Storage_DynamicTableEntity($entity->getPartitionKey(), $entity->getRowKey());$/;"	v
mergeEntity	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		$mergeEntity = null;$/;"	v
path	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		$path = '\/',$/;"	v
properties	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		        $properties = $result->xpath('\/\/m:properties');$/;"	v
properties	library\Zend\Service\WindowsAzure\Storage\Table.php	/^    		    $properties = $entry->xpath('.\/\/m:properties');$/;"	v
properties	library\Zend\Service\WindowsAzure\Storage\Table.php	/^    		    $properties = $properties[0]->children('http:\/\/schemas.microsoft.com\/ado\/2007\/08\/dataservices');$/;"	v
query	library\Zend\Service\WindowsAzure\Storage\Table.php	/^    	    $query = array();$/;"	v
queryString	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		    $queryString = $tableName->assembleQueryString(true);$/;"	v
queryString	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		$queryString = '',$/;"	v
queryString	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		$queryString = '';$/;"	v
queryString	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		$queryString = array();$/;"	v
queryString	library\Zend\Service\WindowsAzure\Storage\Table.php	/^	    $queryString = self::createQueryStringFromArray($queryString);$/;"	v
queryString	library\Zend\Service\WindowsAzure\Storage\Table.php	/^    	        $queryString = '?' . implode('&', $query);$/;"	v
rawData	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		$rawData = null,$/;"	v
requestBody	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		$requestBody = '<?xml version="1.0" encoding="utf-8" standalone="yes"?>$/;"	v
requestBody	library\Zend\Service\WindowsAzure\Storage\Table.php	/^        $requestBody = $this->_fillTemplate($requestBody, array($/;"	v
requestBody	library\Zend\Service\WindowsAzure\Storage\Table.php	/^        $requestBody = '<?xml version="1.0" encoding="utf-8" standalone="yes"?>$/;"	v
requiredPermission	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		$requiredPermission = Zend_Service_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_READ$/;"	v
resourceType	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		$resourceType = Zend_Service_WindowsAzure_Storage::RESOURCE_UNKNOWN,$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		    $response = $this->_performRequest($tableName . '(PartitionKey=\\'' . $entity->getPartitionKey() . '\\', RowKey=\\'' . $entity->getRowKey() . '\\')', '', Zend_Http_Client::DELETE, $headers, true, null);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		    $response = $this->_performRequest($tableName . '(PartitionKey=\\'' . $entity->getPartitionKey() . '\\',RowKey=\\'' . $entity->getRowKey() . '\\')', '', $httpVerb, $headers, true, $requestBody);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		    $response = $this->_performRequest($tableName, $queryString, Zend_Http_Client::GET, array(), true, null);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		    $response = $this->_performRequest($tableName, '', Zend_Http_Client::POST, $headers, true, $requestBody);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		    $response = $this->getCurrentBatch()->commit();$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		    $response = Zend_Http_Response::fromString($innerResponse);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		$response = $this->_parseResponse($response);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		$response = $this->_performRequest('Tables', $queryString, Zend_Http_Client::GET, null, true);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		$response = $this->_performRequest('Tables', '', Zend_Http_Client::POST, $headers, true, $requestBody);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		$response = $this->_performRequest('Tables(\\'' . $tableName . '\\')', '', Zend_Http_Client::DELETE, $headers, true, null);$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		$response = null;$/;"	v
response	library\Zend\Service\WindowsAzure\Storage\Table.php	/^	    $response = null;$/;"	v
result	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		    $result = $this->_parseResponse($response);	$/;"	v
result	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		    $result = $this->_parseResponse($response);$/;"	v
result	library\Zend\Service\WindowsAzure\Storage\Table.php	/^        $result = $this->retrieveEntities($/;"	v
returnValue	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		            $returnValue = array_merge($returnValue, $this->retrieveEntities($tableName, $filter, $entityClass, $response->getHeader('x-ms-continuation-NextPartitionKey'), $response->getHeader('x-ms-continuation-NextRowKey')));$/;"	v
returnValue	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		        $returnValue = array_merge($returnValue, $this->listTables($response->getHeader('x-ms-continuation-NextTableName')));$/;"	v
returnValue	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		    $returnValue = array();		$/;"	v
tableName	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		        $tableName = $entry->xpath('.\/\/m:properties\/d:TableName');$/;"	v
tableName	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		        $tableName = (string)$tableName[0];$/;"	v
tableName	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		    $tableName = $entry->xpath('.\/\/m:properties\/d:TableName');$/;"	v
tableName	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		    $tableName = $tableName->assembleFrom(true);$/;"	v
tableName	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		    $tableName = (string)$tableName[0];$/;"	v
tables	library\Zend\Service\WindowsAzure\Storage\Table.php	/^        $tables = $this->listTables(); \/\/ 2009-09-19 does not support $this->listTables($tableName); all of a sudden...$/;"	v
templateText	library\Zend\Service\WindowsAzure\Storage\Table.php	/^	        $templateText = str_replace('{tpl:' . $key . '}', $value, $templateText);$/;"	v
timestamp	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		    $timestamp = $result->xpath('\/\/m:properties\/d:Timestamp');$/;"	v
timestamp	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		    $timestamp = (string)$timestamp[0];$/;"	v
timestamp	library\Zend\Service\WindowsAzure\Storage\Table.php	/^            $timestamp = $this->isoDate();$/;"	v
timestamp	library\Zend\Service\WindowsAzure\Storage\Table.php	/^        $timestamp = $entity->getTimestamp();$/;"	v
type	library\Zend\Service\WindowsAzure\Storage\Table.php	/^    		            $type = (string)$attributes['type'];$/;"	v
value	library\Zend\Service\WindowsAzure\Storage\Table.php	/^		    $value = array();$/;"	v
Zend_Service_WindowsAzure_Storage_TableEntity	library\Zend\Service\WindowsAzure\Storage\TableEntity.php	/^class Zend_Service_WindowsAzure_Storage_TableEntity$/;"	c
accessor	library\Zend\Service\WindowsAzure\Storage\TableEntity.php	/^            $accessor = self::getAzureAccessor($method);$/;"	v
accessor	library\Zend\Service\WindowsAzure\Storage\TableEntity.php	/^            $accessor = self::getAzureAccessor($property);$/;"	v
accessors	library\Zend\Service\WindowsAzure\Storage\TableEntity.php	/^        $accessors = self::getAzureAccessors(get_class($this));$/;"	v
azureAccessors	library\Zend\Service\WindowsAzure\Storage\TableEntity.php	/^        $azureAccessors = array();$/;"	v
azureComment	library\Zend\Service\WindowsAzure\Storage\TableEntity.php	/^                    $azureComment = str_replace('  ', ' ', $azureComment);$/;"	v
azureComment	library\Zend\Service\WindowsAzure\Storage\TableEntity.php	/^                $azureComment = trim(substr($commentLine, strpos($commentLine, '@azure') + 6));$/;"	v
azureComment	library\Zend\Service\WindowsAzure\Storage\TableEntity.php	/^        $azureComment = '';$/;"	v
azureProperties	library\Zend\Service\WindowsAzure\Storage\TableEntity.php	/^        $azureProperties = explode(' ', $azureComment);$/;"	v
commentLines	library\Zend\Service\WindowsAzure\Storage\TableEntity.php	/^        $commentLines = explode("\\n", $docComment);$/;"	v
docComment	library\Zend\Service\WindowsAzure\Storage\TableEntity.php	/^        $docComment = $member->getDocComment();$/;"	v
method	library\Zend\Service\WindowsAzure\Storage\TableEntity.php	/^                    $method = $accessor->EntityAccessor;$/;"	v
method	library\Zend\Service\WindowsAzure\Storage\TableEntity.php	/^                $method = $accessor->EntityAccessor;$/;"	v
methods	library\Zend\Service\WindowsAzure\Storage\TableEntity.php	/^        $methods = $type->getMethods();$/;"	v
properties	library\Zend\Service\WindowsAzure\Storage\TableEntity.php	/^        $properties = $type->getProperties();$/;"	v
property	library\Zend\Service\WindowsAzure\Storage\TableEntity.php	/^                    $property = $accessor->EntityAccessor;$/;"	v
property	library\Zend\Service\WindowsAzure\Storage\TableEntity.php	/^                $property = $accessor->EntityAccessor;$/;"	v
returnValue	library\Zend\Service\WindowsAzure\Storage\TableEntity.php	/^        $returnValue = array();$/;"	v
type	library\Zend\Service\WindowsAzure\Storage\TableEntity.php	/^        $type = new ReflectionClass($className);$/;"	v
Zend_Service_WindowsAzure_Storage_TableEntityQuery	library\Zend\Service\WindowsAzure\Storage\TableEntityQuery.php	/^class Zend_Service_WindowsAzure_Storage_TableEntityQuery$/;"	c
assembledQuery	library\Zend\Service\WindowsAzure\Storage\TableEntityQuery.php	/^		$assembledQuery = $this->assembleFrom();$/;"	v
cond	library\Zend\Service\WindowsAzure\Storage\TableEntityQuery.php	/^			$cond = ' ' . strtolower(trim($cond)) . ' ';$/;"	v
cond	library\Zend\Service\WindowsAzure\Storage\TableEntityQuery.php	/^			$cond = '';$/;"	v
condition	library\Zend\Service\WindowsAzure\Storage\TableEntityQuery.php	/^	        $condition = $this->_quoteInto($condition, $value);$/;"	v
condition	library\Zend\Service\WindowsAzure\Storage\TableEntityQuery.php	/^	    $condition = $this->_replaceOperators($condition);$/;"	v
filter	library\Zend\Service\WindowsAzure\Storage\TableEntityQuery.php	/^		    $filter = implode('', $this->_where);$/;"	v
i	library\Zend\Service\WindowsAzure\Storage\TableEntityQuery.php	/^	        $i = 0;$/;"	v
identifier	library\Zend\Service\WindowsAzure\Storage\TableEntityQuery.php	/^	    $identifier = '';$/;"	v
orderBy	library\Zend\Service\WindowsAzure\Storage\TableEntityQuery.php	/^		    $orderBy = implode(',', $this->_orderBy);$/;"	v
query	library\Zend\Service\WindowsAzure\Storage\TableEntityQuery.php	/^		$query = array();$/;"	v
query	library\Zend\Service\WindowsAzure\Storage\TableEntityQuery.php	/^		$query = str_replace(' ', '%20', $query);$/;"	v
query	library\Zend\Service\WindowsAzure\Storage\TableEntityQuery.php	/^		$query = str_replace('$', '%24', $query);$/;"	v
query	library\Zend\Service\WindowsAzure\Storage\TableEntityQuery.php	/^		$query = str_replace('&', '%26', $query);$/;"	v
query	library\Zend\Service\WindowsAzure\Storage\TableEntityQuery.php	/^		$query = str_replace('+', '%2B', $query);$/;"	v
query	library\Zend\Service\WindowsAzure\Storage\TableEntityQuery.php	/^		$query = str_replace(',', '%2C', $query);$/;"	v
query	library\Zend\Service\WindowsAzure\Storage\TableEntityQuery.php	/^		$query = str_replace(':', '%3A', $query);$/;"	v
query	library\Zend\Service\WindowsAzure\Storage\TableEntityQuery.php	/^		$query = str_replace('=', '%3D', $query);$/;"	v
query	library\Zend\Service\WindowsAzure\Storage\TableEntityQuery.php	/^		$query = str_replace('?', '%3F', $query);$/;"	v
query	library\Zend\Service\WindowsAzure\Storage\TableEntityQuery.php	/^		$query = str_replace('@', '%40', $query);$/;"	v
query	library\Zend\Service\WindowsAzure\Storage\TableEntityQuery.php	/^		$query = str_replace('\/', '%2F', $query);$/;"	v
queryString	library\Zend\Service\WindowsAzure\Storage\TableEntityQuery.php	/^		$queryString = $this->assembleQueryString();$/;"	v
text	library\Zend\Service\WindowsAzure\Storage\TableEntityQuery.php	/^	                $text = substr_replace($text, $value[$i++], strpos($text, '?'), 1);$/;"	v
text	library\Zend\Service\WindowsAzure\Storage\TableEntityQuery.php	/^	                $text = substr_replace($text, '\\'' . addslashes($value[$i++]) . '\\'', strpos($text, '?'), 1);$/;"	v
text	library\Zend\Service\WindowsAzure\Storage\TableEntityQuery.php	/^	        $text = str_replace('?', '\\'' . addslashes($value) . '\\'', $text);$/;"	v
text	library\Zend\Service\WindowsAzure\Storage\TableEntityQuery.php	/^	    $text = str_replace('!',  'not', $text);$/;"	v
text	library\Zend\Service\WindowsAzure\Storage\TableEntityQuery.php	/^	    $text = str_replace('!=', 'ne',  $text);$/;"	v
text	library\Zend\Service\WindowsAzure\Storage\TableEntityQuery.php	/^	    $text = str_replace('&&', 'and', $text);$/;"	v
text	library\Zend\Service\WindowsAzure\Storage\TableEntityQuery.php	/^	    $text = str_replace('<',  'lt',  $text);$/;"	v
text	library\Zend\Service\WindowsAzure\Storage\TableEntityQuery.php	/^	    $text = str_replace('<=', 'le',  $text);$/;"	v
text	library\Zend\Service\WindowsAzure\Storage\TableEntityQuery.php	/^	    $text = str_replace('==', 'eq',  $text);$/;"	v
text	library\Zend\Service\WindowsAzure\Storage\TableEntityQuery.php	/^	    $text = str_replace('>',  'gt',  $text);$/;"	v
text	library\Zend\Service\WindowsAzure\Storage\TableEntityQuery.php	/^	    $text = str_replace('>=', 'ge',  $text);$/;"	v
text	library\Zend\Service\WindowsAzure\Storage\TableEntityQuery.php	/^	    $text = str_replace('||', 'or',  $text);$/;"	v
Zend_Service_WindowsAzure_Storage_TableInstance	library\Zend\Service\WindowsAzure\Storage\TableInstance.php	/^class Zend_Service_WindowsAzure_Storage_TableInstance$/;"	c
Zend_Service_Yahoo	library\Zend\Service\Yahoo.php	/^class Zend_Service_Yahoo$/;"	c
between	library\Zend\Service\Yahoo.php	/^        $between = new Zend_Validate_Between(1, 100, true);$/;"	v
between	library\Zend\Service\Yahoo.php	/^        $between = new Zend_Validate_Between(1, 20, true);$/;"	v
between	library\Zend\Service\Yahoo.php	/^        $between = new Zend_Validate_Between(1, 50, true);$/;"	v
difference	library\Zend\Service\Yahoo.php	/^        $difference = array_diff(array_keys($options), $validOptions);$/;"	v
dom	library\Zend\Service\Yahoo.php	/^        $dom = new DOMDocument();$/;"	v
hasLocation	library\Zend\Service\Yahoo.php	/^                $hasLocation = true;$/;"	v
hasLocation	library\Zend\Service\Yahoo.php	/^        $hasLocation = false;$/;"	v
languages	library\Zend\Service\Yahoo.php	/^        $languages = array('ar', 'bg', 'ca', 'szh', 'tzh', 'hr', 'cs', 'da', 'nl', 'en', 'et', 'fi', 'fr', 'de', 'el',$/;"	v
locationFields	library\Zend\Service\Yahoo.php	/^        $locationFields = array('street', 'city', 'state', 'zip', 'location');$/;"	v
message	library\Zend\Service\Yahoo.php	/^            $message = $xpath->query('\/\/yapi:Error\/yapi:Message\/text()')->item(0)->data;$/;"	v
options	library\Zend\Service\Yahoo.php	/^        $options = $this->_prepareOptions($query, $options, $defaultOptions);$/;"	v
response	library\Zend\Service\Yahoo.php	/^        $response = $this->_rest->restGet('\/ImageSearchService\/V1\/imageSearch', $options);$/;"	v
response	library\Zend\Service\Yahoo.php	/^        $response = $this->_rest->restGet('\/LocalSearchService\/V1\/localSearch', $options);$/;"	v
response	library\Zend\Service\Yahoo.php	/^        $response = $this->_rest->restGet('\/NewsSearchService\/V1\/newsSearch', $options);$/;"	v
response	library\Zend\Service\Yahoo.php	/^        $response = $this->_rest->restGet('\/SiteExplorerService\/V1\/inlinkData', $options);$/;"	v
response	library\Zend\Service\Yahoo.php	/^        $response = $this->_rest->restGet('\/SiteExplorerService\/V1\/pageData', $options);$/;"	v
response	library\Zend\Service\Yahoo.php	/^        $response = $this->_rest->restGet('\/VideoSearchService\/V1\/videoSearch', $options);$/;"	v
response	library\Zend\Service\Yahoo.php	/^        $response = $this->_rest->restGet('\/WebSearchService\/V1\/webSearch', $options);$/;"	v
validOptions	library\Zend\Service\Yahoo.php	/^        $validOptions = array('appid', 'query', 'results', 'start', 'domain_only');$/;"	v
validOptions	library\Zend\Service\Yahoo.php	/^        $validOptions = array('appid', 'query', 'results', 'start', 'entire_site', 'omit_inlinks');$/;"	v
validOptions	library\Zend\Service\Yahoo.php	/^        $validOptions = array('appid', 'query', 'results', 'start', 'language', 'type', 'format', 'adult_ok',$/;"	v
validOptions	library\Zend\Service\Yahoo.php	/^        $validOptions = array('appid', 'query', 'results', 'start', 'sort', 'language', 'type', 'site');$/;"	v
validOptions	library\Zend\Service\Yahoo.php	/^        $validOptions = array('appid', 'query', 'results', 'start', 'sort', 'radius', 'street',$/;"	v
validOptions	library\Zend\Service\Yahoo.php	/^        $validOptions = array('appid', 'query', 'type', 'results', 'start', 'format', 'adult_ok');$/;"	v
validOptions	library\Zend\Service\Yahoo.php	/^        $validOptions = array('appid', 'query', 'type', 'results', 'start', 'format', 'coloration', 'adult_ok');$/;"	v
xpath	library\Zend\Service\Yahoo.php	/^        $xpath = new DOMXPath($dom);$/;"	v
Zend_Service_Yahoo_Image	library\Zend\Service\Yahoo\Image.php	/^class Zend_Service_Yahoo_Image$/;"	c
xpath	library\Zend\Service\Yahoo\Image.php	/^        $xpath = new DOMXPath($dom->ownerDocument);$/;"	v
Zend_Service_Yahoo_ImageResult	library\Zend\Service\Yahoo\ImageResult.php	/^class Zend_Service_Yahoo_ImageResult extends Zend_Service_Yahoo_Result$/;"	c
Zend_Service_Yahoo_ImageResultSet	library\Zend\Service\Yahoo\ImageResultSet.php	/^class Zend_Service_Yahoo_ImageResultSet extends Zend_Service_Yahoo_ResultSet$/;"	c
Zend_Service_Yahoo_InlinkDataResult	library\Zend\Service\Yahoo\InlinkDataResult.php	/^class Zend_Service_Yahoo_InlinkDataResult extends Zend_Service_Yahoo_Result$/;"	c
Zend_Service_Yahoo_InlinkDataResultSet	library\Zend\Service\Yahoo\InlinkDataResultSet.php	/^class Zend_Service_Yahoo_InlinkDataResultSet extends Zend_Service_Yahoo_ResultSet$/;"	c
Zend_Service_Yahoo_LocalResult	library\Zend\Service\Yahoo\LocalResult.php	/^class Zend_Service_Yahoo_LocalResult extends Zend_Service_Yahoo_Result$/;"	c
Zend_Service_Yahoo_LocalResultSet	library\Zend\Service\Yahoo\LocalResultSet.php	/^class Zend_Service_Yahoo_LocalResultSet extends Zend_Service_Yahoo_ResultSet$/;"	c
Zend_Service_Yahoo_NewsResult	library\Zend\Service\Yahoo\NewsResult.php	/^class Zend_Service_Yahoo_NewsResult extends Zend_Service_Yahoo_Result$/;"	c
Zend_Service_Yahoo_NewsResultSet	library\Zend\Service\Yahoo\NewsResultSet.php	/^class Zend_Service_Yahoo_NewsResultSet extends Zend_Service_Yahoo_ResultSet$/;"	c
Zend_Service_Yahoo_PageDataResult	library\Zend\Service\Yahoo\PageDataResult.php	/^class Zend_Service_Yahoo_PageDataResult extends Zend_Service_Yahoo_Result$/;"	c
Zend_Service_Yahoo_PageDataResultSet	library\Zend\Service\Yahoo\PageDataResultSet.php	/^class Zend_Service_Yahoo_PageDataResultSet extends Zend_Service_Yahoo_ResultSet$/;"	c
Zend_Service_Yahoo_Result	library\Zend\Service\Yahoo\Result.php	/^class Zend_Service_Yahoo_Result$/;"	c
fields	library\Zend\Service\Yahoo\Result.php	/^        $fields = array('Title', 'Url', 'ClickUrl');$/;"	v
node	library\Zend\Service\Yahoo\Result.php	/^            $node = $this->_xpath->query($query, $result);$/;"	v
node	library\Zend\Service\Yahoo\Result.php	/^        $node = $this->_xpath->query('.\/yh:Thumbnail', $this->_result);$/;"	v
query	library\Zend\Service\Yahoo\Result.php	/^            $query = ".\/yh:$f\/text()";$/;"	v
Zend_Service_Yahoo_ResultSet	library\Zend\Service\Yahoo\ResultSet.php	/^class Zend_Service_Yahoo_ResultSet implements SeekableIterator$/;"	c
indexInt	library\Zend\Service\Yahoo\ResultSet.php	/^        $indexInt = (int) $index;$/;"	v
Zend_Service_Yahoo_VideoResult	library\Zend\Service\Yahoo\VideoResult.php	/^class Zend_Service_Yahoo_VideoResult extends Zend_Service_Yahoo_Result$/;"	c
Zend_Service_Yahoo_VideoResultSet	library\Zend\Service\Yahoo\VideoResultSet.php	/^class Zend_Service_Yahoo_VideoResultSet extends Zend_Service_Yahoo_ResultSet$/;"	c
Zend_Service_Yahoo_WebResult	library\Zend\Service\Yahoo\WebResult.php	/^class Zend_Service_Yahoo_WebResult extends Zend_Service_Yahoo_Result$/;"	c
cacheSize	library\Zend\Service\Yahoo\WebResult.php	/^        $cacheSize = $this->_xpath->query('.\/yh:Cache\/yh:Size\/text()', $result)->item(0);$/;"	v
cacheUrl	library\Zend\Service\Yahoo\WebResult.php	/^        $cacheUrl = $this->_xpath->query('.\/yh:Cache\/yh:Url\/text()', $result)->item(0);$/;"	v
Zend_Service_Yahoo_WebResultSet	library\Zend\Service\Yahoo\WebResultSet.php	/^class Zend_Service_Yahoo_WebResultSet extends Zend_Service_Yahoo_ResultSet$/;"	c
Zend_Session	library\Zend\Session.php	/^class Zend_Session extends Zend_Session_Abstract$/;"	c
cookieParams	library\Zend\Session.php	/^        $cookieParams = session_get_cookie_params();$/;"	v
cookie_params	library\Zend\Session.php	/^            $cookie_params = session_get_cookie_params();$/;"	v
errorLevel	library\Zend\Session.php	/^        $errorLevel = (is_int(self::$_throwStartupExceptions)) ? self::$_throwStartupExceptions : E_ALL;$/;"	v
filename	library\Zend\Session.php	/^        $filename = $linenum = null;$/;"	v
options	library\Zend\Session.php	/^        $options = array();$/;"	v
seconds	library\Zend\Session.php	/^        $seconds = ($seconds > 0) ? $seconds : self::$_rememberMeSeconds;$/;"	v
seconds	library\Zend\Session.php	/^        $seconds = (int) $seconds;$/;"	v
spaces	library\Zend\Session.php	/^            $spaces = array_keys($_SESSION);$/;"	v
spaces	library\Zend\Session.php	/^        $spaces  = array();$/;"	v
startedCleanly	library\Zend\Session.php	/^            $startedCleanly = session_start();$/;"	v
userOptionName	library\Zend\Session.php	/^            $userOptionName = strtolower($userOptionName);$/;"	v
validator	library\Zend\Session.php	/^            $validator = new $validator_name;$/;"	v
currentData	library\Zend\Session\Abstract.php	/^        $currentData  = (isset($_SESSION[$namespace]) && is_array($_SESSION[$namespace])) ?$/;"	v
expiringData	library\Zend\Session\Abstract.php	/^        $expiringData = (isset(self::$_expiringData[$namespace]) && is_array(self::$_expiringData[$namespace])) ?$/;"	v
name	library\Zend\Session\Abstract.php	/^        $name = (string) $name;$/;"	v
Zend_Session_Exception	library\Zend\Session\Exception.php	/^class Zend_Session_Exception extends Zend_Exception$/;"	c
Zend_Session_Namespace	library\Zend\Session\Namespace.php	/^class Zend_Session_Namespace extends Zend_Session_Abstract implements IteratorAggregate$/;"	c
arg_list	library\Zend\Session\Namespace.php	/^        $arg_list = func_get_args();$/;"	v
name	library\Zend\Session\Namespace.php	/^        $name = (string) $name;$/;"	v
result	library\Zend\Session\Namespace.php	/^        $result = call_user_func_array($callback, $arg_list);$/;"	v
variables	library\Zend\Session\Namespace.php	/^                $variables = array($variables);$/;"	v
Zend_Session_SaveHandler_DbTable	library\Zend\Session\SaveHandler\DbTable.php	/^class Zend_Session_SaveHandler_DbTable$/;"	c
config	library\Zend\Session\SaveHandler\DbTable.php	/^            $config = $config->toArray();$/;"	v
data	library\Zend\Session\SaveHandler\DbTable.php	/^        $data = array($this->_modifiedColumn => time(),$/;"	v
primaryArray	library\Zend\Session\SaveHandler\DbTable.php	/^        $primaryArray = array();$/;"	v
return	library\Zend\Session\SaveHandler\DbTable.php	/^                $return = $row->{$this->_dataColumn};$/;"	v
return	library\Zend\Session\SaveHandler\DbTable.php	/^                $return = true;$/;"	v
return	library\Zend\Session\SaveHandler\DbTable.php	/^            $return = (int) $row->{$this->_lifetimeColumn};$/;"	v
return	library\Zend\Session\SaveHandler\DbTable.php	/^            $return = true;$/;"	v
return	library\Zend\Session\SaveHandler\DbTable.php	/^        $return = $this->_lifetime;$/;"	v
return	library\Zend\Session\SaveHandler\DbTable.php	/^        $return = '';$/;"	v
return	library\Zend\Session\SaveHandler\DbTable.php	/^        $return = false;$/;"	v
rows	library\Zend\Session\SaveHandler\DbTable.php	/^        $rows = call_user_func_array(array(&$this, 'find'), $this->_getPrimary($id));$/;"	v
type	library\Zend\Session\SaveHandler\DbTable.php	/^            $type = self::PRIMARY_TYPE_NUM;$/;"	v
value	library\Zend\Session\SaveHandler\DbTable.php	/^                    $value = $this->_sessionName;$/;"	v
value	library\Zend\Session\SaveHandler\DbTable.php	/^                    $value = $this->_sessionSavePath;$/;"	v
value	library\Zend\Session\SaveHandler\DbTable.php	/^                    $value = (string) $id;$/;"	v
value	library\Zend\Session\SaveHandler\DbTable.php	/^                    $value = (string) $this->_primaryAssignment[$index];$/;"	v
Zend_Session_SaveHandler_Exception	library\Zend\Session\SaveHandler\Exception.php	/^class Zend_Session_SaveHandler_Exception extends Zend_Session_Exception$/;"	c
validatorName	library\Zend\Session\Validator\Abstract.php	/^        $validatorName = get_class($this);$/;"	v
Zend_Session_Validator_HttpUserAgent	library\Zend\Session\Validator\HttpUserAgent.php	/^class Zend_Session_Validator_HttpUserAgent extends Zend_Session_Validator_Abstract$/;"	c
currentBrowser	library\Zend\Session\Validator\HttpUserAgent.php	/^        $currentBrowser = (isset($_SERVER['HTTP_USER_AGENT'])$/;"	v
Zend_Soap_AutoDiscover	library\Zend\Soap\AutoDiscover.php	/^class Zend_Soap_AutoDiscover implements Zend_Server_Interface$/;"	c
args	library\Zend\Soap\AutoDiscover.php	/^            $args = array();$/;"	v
args	library\Zend\Soap\AutoDiscover.php	/^        $args = array();$/;"	v
binding	library\Zend\Soap\AutoDiscover.php	/^            $binding = $wsdl->addBinding($name . 'Binding', 'tns:' .$name. 'Port');$/;"	v
binding	library\Zend\Soap\AutoDiscover.php	/^        $binding = $wsdl->addBinding($class . 'Binding', 'tns:' .$class. 'Port');$/;"	v
desc	library\Zend\Soap\AutoDiscover.php	/^        $desc = $function->getDescription();$/;"	v
element	library\Zend\Soap\AutoDiscover.php	/^                $element = array($/;"	v
element	library\Zend\Soap\AutoDiscover.php	/^            $element = array($/;"	v
function	library\Zend\Soap\AutoDiscover.php	/^            $function = (array) $function;$/;"	v
host	library\Zend\Soap\AutoDiscover.php	/^            $host       = $this->getHostName();$/;"	v
host	library\Zend\Soap\AutoDiscover.php	/^            $host = $_SERVER['HTTP_HOST'];$/;"	v
host	library\Zend\Soap\AutoDiscover.php	/^            $host = $_SERVER['SERVER_NAME'];$/;"	v
isOneWayMessage	library\Zend\Soap\AutoDiscover.php	/^            $isOneWayMessage = true;$/;"	v
isOneWayMessage	library\Zend\Soap\AutoDiscover.php	/^        $isOneWayMessage = false;$/;"	v
maxNumArgumentsOfPrototype	library\Zend\Soap\AutoDiscover.php	/^                $maxNumArgumentsOfPrototype = $numParams;$/;"	v
maxNumArgumentsOfPrototype	library\Zend\Soap\AutoDiscover.php	/^        $maxNumArgumentsOfPrototype = -1;$/;"	v
method	library\Zend\Soap\AutoDiscover.php	/^            $method = $this->_reflection->reflectFunction($func);$/;"	v
name	library\Zend\Soap\AutoDiscover.php	/^            $name = $parts[0];$/;"	v
numParams	library\Zend\Soap\AutoDiscover.php	/^            $numParams = count($tmpPrototype->getParameters());$/;"	v
operation	library\Zend\Soap\AutoDiscover.php	/^            $operation = $wsdl->addBindingOperation($binding, $function->getName(),  $this->_operationBodyStyle);$/;"	v
operation	library\Zend\Soap\AutoDiscover.php	/^            $operation = $wsdl->addBindingOperation($binding, $function->getName(),  $this->_operationBodyStyle, $this->_operationBodyStyle);$/;"	v
parts	library\Zend\Soap\AutoDiscover.php	/^            $parts = explode('.', basename($_SERVER['SCRIPT_NAME']));$/;"	v
port	library\Zend\Soap\AutoDiscover.php	/^            $port = $wsdl->addPortType($name . 'Port');$/;"	v
port	library\Zend\Soap\AutoDiscover.php	/^        $port = $wsdl->addPortType($class . 'Port');$/;"	v
portOperation	library\Zend\Soap\AutoDiscover.php	/^            $portOperation = $wsdl->addPortOperation($port, $function->getName(), 'tns:' . $function->getName() . 'In', 'tns:' . $function->getName() . 'Out');$/;"	v
portOperation	library\Zend\Soap\AutoDiscover.php	/^            $portOperation = $wsdl->addPortOperation($port, $function->getName(), 'tns:' . $function->getName() . 'In', false);$/;"	v
prototype	library\Zend\Soap\AutoDiscover.php	/^                $prototype = $tmpPrototype;$/;"	v
prototype	library\Zend\Soap\AutoDiscover.php	/^        $prototype = null;$/;"	v
requestUri	library\Zend\Soap\AutoDiscover.php	/^            $requestUri = $_SERVER['HTTP_X_REWRITE_URL'];$/;"	v
requestUri	library\Zend\Soap\AutoDiscover.php	/^            $requestUri = $_SERVER['ORIG_PATH_INFO'];$/;"	v
requestUri	library\Zend\Soap\AutoDiscover.php	/^            $requestUri = $_SERVER['REQUEST_URI'];$/;"	v
requestUri	library\Zend\Soap\AutoDiscover.php	/^            $requestUri = $_SERVER['SCRIPT_NAME'];$/;"	v
requestUri	library\Zend\Soap\AutoDiscover.php	/^            $requestUri = substr($requestUri, 0, $pos);$/;"	v
schema	library\Zend\Soap\AutoDiscover.php	/^            $schema     = $this->getSchema();$/;"	v
schema	library\Zend\Soap\AutoDiscover.php	/^            $schema = 'https';$/;"	v
schema	library\Zend\Soap\AutoDiscover.php	/^        $schema = "http";$/;"	v
scriptName	library\Zend\Soap\AutoDiscover.php	/^            $scriptName = $this->getRequestUriWithoutParameters();$/;"	v
sequence	library\Zend\Soap\AutoDiscover.php	/^                $sequence = array();$/;"	v
sequence	library\Zend\Soap\AutoDiscover.php	/^            $sequence = array();$/;"	v
sequenceElement	library\Zend\Soap\AutoDiscover.php	/^                $sequenceElement = array($/;"	v
uri	library\Zend\Soap\AutoDiscover.php	/^            $uri = $this->_uri;$/;"	v
uri	library\Zend\Soap\AutoDiscover.php	/^            $uri = Zend_Uri::factory($schema . ':\/\/' . $host . $scriptName);$/;"	v
uri	library\Zend\Soap\AutoDiscover.php	/^        $uri = $this->getUri();$/;"	v
wsdl	library\Zend\Soap\AutoDiscover.php	/^            $wsdl = $this->_wsdl;$/;"	v
wsdl	library\Zend\Soap\AutoDiscover.php	/^            $wsdl = new Zend_Soap_Wsdl($name, $uri, $this->_strategy);$/;"	v
wsdl	library\Zend\Soap\AutoDiscover.php	/^        $wsdl = new $this->_wsdlClass($class, $uri, $this->_strategy);$/;"	v
Zend_Soap_AutoDiscover_Exception	library\Zend\Soap\AutoDiscover\Exception.php	/^class Zend_Soap_AutoDiscover_Exception extends Zend_Exception$/;"	c
Zend_Soap_Client	library\Zend\Soap\Client.php	/^class Zend_Soap_Client$/;"	c
options	library\Zend\Soap\Client.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Soap\Client.php	/^        $options = array();$/;"	v
options	library\Zend\Soap\Client.php	/^        $options = array_merge($this->getOptions(), array('trace' => true));$/;"	v
result	library\Zend\Soap\Client.php	/^        $result = $soapClient->__soapCall($name,$/;"	v
scheme	library\Zend\Soap\Client.php	/^        $scheme = parse_url($urn, PHP_URL_SCHEME);$/;"	v
soapClient	library\Zend\Soap\Client.php	/^        $soapClient = $this->getSoapClient();$/;"	v
soapHeaders	library\Zend\Soap\Client.php	/^        $soapHeaders = array_merge($this->_permanentSoapInputHeaders, $this->_soapInputHeaders);$/;"	v
wsdl	library\Zend\Soap\Client.php	/^        $wsdl = $this->getWsdl();$/;"	v
Zend_Soap_Client_Common	library\Zend\Soap\Client\Common.php	/^class Zend_Soap_Client_Common extends SoapClient$/;"	c
__construct	library\Zend\Soap\Client\Common.php	/^    function __construct($doRequestCallback, $wsdl, $options)$/;"	f
__doRequest	library\Zend\Soap\Client\Common.php	/^    function __doRequest($request, $location, $action, $version, $one_way = null)$/;"	f
Zend_Soap_Client_DotNet	library\Zend\Soap\Client\DotNet.php	/^class Zend_Soap_Client_DotNet extends Zend_Soap_Client$/;"	c
resultProperty	library\Zend\Soap\Client\DotNet.php	/^        $resultProperty = $this->getLastMethod() . 'Result';$/;"	v
Zend_Soap_Client_Exception	library\Zend\Soap\Client\Exception.php	/^class Zend_Soap_Client_Exception extends Zend_Exception$/;"	c
Zend_Soap_Client_Local	library\Zend\Soap\Client\Local.php	/^class Zend_Soap_Client_Local extends Zend_Soap_Client$/;"	c
__construct	library\Zend\Soap\Client\Local.php	/^    function __construct(Zend_Soap_Server $server, $wsdl, $options = null)$/;"	f
response	library\Zend\Soap\Client\Local.php	/^        $response = ob_get_clean();$/;"	v
Zend_Soap_Server	library\Zend\Soap\Server.php	/^class Zend_Soap_Server implements Zend_Server_Interface$/;"	c
allowedFaultModes	library\Zend\Soap\Server.php	/^        $allowedFaultModes = array($/;"	v
args	library\Zend\Soap\Server.php	/^            $args = $this->_classArgs;$/;"	v
argv	library\Zend\Soap\Server.php	/^            $argv = func_get_args();$/;"	v
class	library\Zend\Soap\Server.php	/^            $class = get_class($fault);$/;"	v
code	library\Zend\Soap\Server.php	/^                $code    = empty($eCode) ? $code : $eCode;$/;"	v
code	library\Zend\Soap\Server.php	/^            $code = "Receiver";$/;"	v
displayErrorsOriginalState	library\Zend\Soap\Server.php	/^        $displayErrorsOriginalState = $this->_initializeSoapErrorContext();$/;"	v
displayErrorsOriginalState	library\Zend\Soap\Server.php	/^        $displayErrorsOriginalState = ini_get('display_errors');$/;"	v
dom	library\Zend\Soap\Server.php	/^            $dom = new DOMDocument();$/;"	v
eCode	library\Zend\Soap\Server.php	/^                $eCode   = $fault->getCode();$/;"	v
fault	library\Zend\Soap\Server.php	/^                $fault = $this->fault($e);$/;"	v
functions	library\Zend\Soap\Server.php	/^            $functions = get_class_methods($this->_class);$/;"	v
functions	library\Zend\Soap\Server.php	/^            $functions = get_class_methods($this->_object);$/;"	v
functions	library\Zend\Soap\Server.php	/^        $functions = array();$/;"	v
index	library\Zend\Soap\Server.php	/^            $index = array_search($class, $this->_faultExceptions);$/;"	v
message	library\Zend\Soap\Server.php	/^                $message = $fault->getMessage();$/;"	v
message	library\Zend\Soap\Server.php	/^                $message = 'Unknown error';$/;"	v
message	library\Zend\Soap\Server.php	/^            $message = $fault;$/;"	v
message	library\Zend\Soap\Server.php	/^            $message = 'Unknown error';$/;"	v
options	library\Zend\Soap\Server.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Soap\Server.php	/^        $options = $this->getOptions();$/;"	v
options	library\Zend\Soap\Server.php	/^        $options = array();$/;"	v
request	library\Zend\Soap\Server.php	/^            $request = file_get_contents('php:\/\/input');$/;"	v
scheme	library\Zend\Soap\Server.php	/^        $scheme = parse_url($urn, PHP_URL_SCHEME);$/;"	v
server	library\Zend\Soap\Server.php	/^        $server  = new SoapServer($this->_wsdl, $options);$/;"	v
setRequestException	library\Zend\Soap\Server.php	/^            $setRequestException = $e;$/;"	v
setRequestException	library\Zend\Soap\Server.php	/^        $setRequestException = null;$/;"	v
soap	library\Zend\Soap\Server.php	/^        $soap = $this->_getSoap();$/;"	v
xml	library\Zend\Soap\Server.php	/^                $xml = $request->__toString();$/;"	v
xml	library\Zend\Soap\Server.php	/^                $xml = $request;$/;"	v
xml	library\Zend\Soap\Server.php	/^            $xml = $request->asXML();$/;"	v
xml	library\Zend\Soap\Server.php	/^            $xml = $request->ownerDocument->saveXML();$/;"	v
xml	library\Zend\Soap\Server.php	/^            $xml = $request->saveXML();$/;"	v
Zend_Soap_Server_Exception	library\Zend\Soap\Server\Exception.php	/^class Zend_Soap_Server_Exception extends Zend_Exception$/;"	c
Zend_Soap_Wsdl	library\Zend\Soap\Wsdl.php	/^class Zend_Soap_Wsdl$/;"	c
binding	library\Zend\Soap\Wsdl.php	/^        $binding = $this->_dom->createElement('binding');$/;"	v
complexType	library\Zend\Soap\Wsdl.php	/^                    $complexType = $this->_dom->createElement('xsd:complexType');$/;"	v
container	library\Zend\Soap\Wsdl.php	/^                        $container = $this->_dom->createElement('xsd:' . $key);$/;"	v
doc	library\Zend\Soap\Wsdl.php	/^        $doc = $this->_dom->createElement('documentation');$/;"	v
doc_cdata	library\Zend\Soap\Wsdl.php	/^        $doc_cdata = $this->_dom->createTextNode(str_replace(array("\\r\\n", "\\r"), "\\n", $documentation));$/;"	v
dom	library\Zend\Soap\Wsdl.php	/^            $dom = $this->_dom->importNode($types);$/;"	v
dom	library\Zend\Soap\Wsdl.php	/^            $dom = $this->_dom->importNode($types->documentElement);$/;"	v
elementXml	library\Zend\Soap\Wsdl.php	/^        $elementXml = $this->_dom->createElement('xsd:element');$/;"	v
elementXml	library\Zend\Soap\Wsdl.php	/^        $elementXml = $this->_parseElement($element);$/;"	v
location	library\Zend\Soap\Wsdl.php	/^            $location = $location->getUri();$/;"	v
message	library\Zend\Soap\Wsdl.php	/^        $message = $this->_dom->createElement('message');$/;"	v
node	library\Zend\Soap\Wsdl.php	/^            $node = $input_node;$/;"	v
node	library\Zend\Soap\Wsdl.php	/^            $node = $this->_dom->createElement('fault');$/;"	v
node	library\Zend\Soap\Wsdl.php	/^            $node = $this->_dom->createElement('input');$/;"	v
node	library\Zend\Soap\Wsdl.php	/^            $node = $this->_dom->createElement('output');$/;"	v
node	library\Zend\Soap\Wsdl.php	/^            $node = $this->_dom->documentElement;$/;"	v
node	library\Zend\Soap\Wsdl.php	/^            $node= $this->_dom->createElement('output');$/;"	v
oldUri	library\Zend\Soap\Wsdl.php	/^        $oldUri = $this->_uri;$/;"	v
operation	library\Zend\Soap\Wsdl.php	/^        $operation = $this->_dom->createElement('operation');$/;"	v
part	library\Zend\Soap\Wsdl.php	/^                $part = $this->_dom->createElement('part');$/;"	v
port	library\Zend\Soap\Wsdl.php	/^        $port = $this->_dom->createElement('port');$/;"	v
portType	library\Zend\Soap\Wsdl.php	/^        $portType = $this->_dom->createElement('portType');$/;"	v
schema	library\Zend\Soap\Wsdl.php	/^        $schema = $this->getSchema();$/;"	v
service	library\Zend\Soap\Wsdl.php	/^        $service = $this->_dom->createElement('service');$/;"	v
soap_action	library\Zend\Soap\Wsdl.php	/^            $soap_action = $soap_action->getUri();$/;"	v
soap_address	library\Zend\Soap\Wsdl.php	/^        $soap_address = $this->_dom->createElement('soap:address');$/;"	v
soap_binding	library\Zend\Soap\Wsdl.php	/^        $soap_binding = $this->_dom->createElement('soap:binding');$/;"	v
soap_node	library\Zend\Soap\Wsdl.php	/^            $soap_node = $this->_dom->createElement('soap:body');$/;"	v
soap_node	library\Zend\Soap\Wsdl.php	/^            $soap_node = $this->_dom->createElement('soap:fault');$/;"	v
soap_operation	library\Zend\Soap\Wsdl.php	/^        $soap_operation = $this->_dom->createElement('soap:operation');$/;"	v
strategy	library\Zend\Soap\Wsdl.php	/^                $strategy = new $strategy();$/;"	v
strategy	library\Zend\Soap\Wsdl.php	/^            $strategy = new Zend_Soap_Wsdl_Strategy_AnyType();$/;"	v
strategy	library\Zend\Soap\Wsdl.php	/^            $strategy = new Zend_Soap_Wsdl_Strategy_DefaultComplexType();$/;"	v
strategy	library\Zend\Soap\Wsdl.php	/^        $strategy = $this->getComplexTypeStrategy();$/;"	v
subelementXml	library\Zend\Soap\Wsdl.php	/^                            $subelementXml = $this->_parseElement($subelement);$/;"	v
types	library\Zend\Soap\Wsdl.php	/^            $types = $this->_dom->createElement('types');$/;"	v
uri	library\Zend\Soap\Wsdl.php	/^            $uri = $uri->getUri();$/;"	v
wsdl	library\Zend\Soap\Wsdl.php	/^        $wsdl = "<?xml version='1.0' ?>$/;"	v
xml	library\Zend\Soap\Wsdl.php	/^            $xml = $this->_dom->saveXML();$/;"	v
xml	library\Zend\Soap\Wsdl.php	/^            $xml = str_replace($oldUri, $uri, $xml);$/;"	v
Zend_Soap_Wsdl_Exception	library\Zend\Soap\Wsdl\Exception.php	/^class Zend_Soap_Wsdl_Exception extends Zend_Exception { }/;"	c
Zend_Soap_Wsdl_Strategy_AnyType	library\Zend\Soap\Wsdl\Strategy\AnyType.php	/^class Zend_Soap_Wsdl_Strategy_AnyType implements Zend_Soap_Wsdl_Strategy_Interface$/;"	c
Zend_Soap_Wsdl_Strategy_ArrayOfTypeComplex	library\Zend\Soap\Wsdl\Strategy\ArrayOfTypeComplex.php	/^class Zend_Soap_Wsdl_Strategy_ArrayOfTypeComplex extends Zend_Soap_Wsdl_Strategy_DefaultComplexType$/;"	c
complexContent	library\Zend\Soap\Wsdl\Strategy\ArrayOfTypeComplex.php	/^            $complexContent = $dom->createElement("xsd:complexContent");$/;"	v
complexType	library\Zend\Soap\Wsdl\Strategy\ArrayOfTypeComplex.php	/^            $complexType = $dom->createElement('xsd:complexType');$/;"	v
dom	library\Zend\Soap\Wsdl\Strategy\ArrayOfTypeComplex.php	/^        $dom = $this->getContext()->toDomDocument();$/;"	v
nestingLevel	library\Zend\Soap\Wsdl\Strategy\ArrayOfTypeComplex.php	/^        $nestingLevel = $this->_getNestedCount($type);$/;"	v
singularType	library\Zend\Soap\Wsdl\Strategy\ArrayOfTypeComplex.php	/^        $singularType = $this->_getSingularPhpType($type);$/;"	v
xsdAttribute	library\Zend\Soap\Wsdl\Strategy\ArrayOfTypeComplex.php	/^            $xsdAttribute = $dom->createElement("xsd:attribute");$/;"	v
xsdComplexTypeName	library\Zend\Soap\Wsdl\Strategy\ArrayOfTypeComplex.php	/^            $xsdComplexTypeName = $singularType;$/;"	v
xsdComplexTypeName	library\Zend\Soap\Wsdl\Strategy\ArrayOfTypeComplex.php	/^            $xsdComplexTypeName = $this->_addArrayOfComplexType($singularType, $type);$/;"	v
xsdComplexTypeName	library\Zend\Soap\Wsdl\Strategy\ArrayOfTypeComplex.php	/^        $xsdComplexTypeName = $this->_getXsdComplexTypeName($singularType);$/;"	v
xsdRestriction	library\Zend\Soap\Wsdl\Strategy\ArrayOfTypeComplex.php	/^            $xsdRestriction = $dom->createElement("xsd:restriction");$/;"	v
Zend_Soap_Wsdl_Strategy_ArrayOfTypeSequence	library\Zend\Soap\Wsdl\Strategy\ArrayOfTypeSequence.php	/^class Zend_Soap_Wsdl_Strategy_ArrayOfTypeSequence extends Zend_Soap_Wsdl_Strategy_DefaultComplexType$/;"	c
arrayType	library\Zend\Soap\Wsdl\Strategy\ArrayOfTypeSequence.php	/^            $arrayType = $prefix.$xsdType;$/;"	v
childTypeName	library\Zend\Soap\Wsdl\Strategy\ArrayOfTypeSequence.php	/^                $childTypeName = $this->_getTypeNameBasedOnNestingLevel($singularType, $i-1);$/;"	v
complexType	library\Zend\Soap\Wsdl\Strategy\ArrayOfTypeSequence.php	/^            $complexType = $dom->createElement('xsd:complexType');$/;"	v
complexTypeName	library\Zend\Soap\Wsdl\Strategy\ArrayOfTypeSequence.php	/^                $complexTypeName = substr($this->_getTypeNameBasedOnNestingLevel($singularType, $i), 4);$/;"	v
dom	library\Zend\Soap\Wsdl\Strategy\ArrayOfTypeSequence.php	/^            $dom = $this->getContext()->toDomDocument();$/;"	v
element	library\Zend\Soap\Wsdl\Strategy\ArrayOfTypeSequence.php	/^            $element = $dom->createElement('xsd:element');$/;"	v
nestedCounter	library\Zend\Soap\Wsdl\Strategy\ArrayOfTypeSequence.php	/^        $nestedCounter = $this->_getNestedCount($type);$/;"	v
prefix	library\Zend\Soap\Wsdl\Strategy\ArrayOfTypeSequence.php	/^            $prefix = str_repeat("ArrayOf", $level);$/;"	v
sequence	library\Zend\Soap\Wsdl\Strategy\ArrayOfTypeSequence.php	/^            $sequence = $dom->createElement('xsd:sequence');$/;"	v
singularType	library\Zend\Soap\Wsdl\Strategy\ArrayOfTypeSequence.php	/^            $singularType = $this->_getSingularType($type);$/;"	v
singulartype	library\Zend\Soap\Wsdl\Strategy\ArrayOfTypeSequence.php	/^        $singulartype = $this->getContext()->getType(str_replace("[]", "", $type));$/;"	v
xsdType	library\Zend\Soap\Wsdl\Strategy\ArrayOfTypeSequence.php	/^            $xsdType = $this->_getStrippedXsdType($singularType);$/;"	v
Zend_Soap_Wsdl_Strategy_Composite	library\Zend\Soap\Wsdl\Strategy\Composite.php	/^class Zend_Soap_Wsdl_Strategy_Composite implements Zend_Soap_Wsdl_Strategy_Interface$/;"	c
strategy	library\Zend\Soap\Wsdl\Strategy\Composite.php	/^                $strategy = new $strategy();$/;"	v
strategy	library\Zend\Soap\Wsdl\Strategy\Composite.php	/^            $strategy = $this->_typeMap[$type];$/;"	v
strategy	library\Zend\Soap\Wsdl\Strategy\Composite.php	/^            $strategy = $this->getDefaultStrategy();$/;"	v
strategy	library\Zend\Soap\Wsdl\Strategy\Composite.php	/^            $strategy = new $strategy;$/;"	v
strategy	library\Zend\Soap\Wsdl\Strategy\Composite.php	/^        $strategy = $this->_defaultStrategy;$/;"	v
strategy	library\Zend\Soap\Wsdl\Strategy\Composite.php	/^        $strategy = $this->getStrategyOfType($type);$/;"	v
Zend_Soap_Wsdl_Strategy_DefaultComplexType	library\Zend\Soap\Wsdl\Strategy\DefaultComplexType.php	/^class Zend_Soap_Wsdl_Strategy_DefaultComplexType extends Zend_Soap_Wsdl_Strategy_Abstract$/;"	c
all	library\Zend\Soap\Wsdl\Strategy\DefaultComplexType.php	/^        $all = $dom->createElement('xsd:all');$/;"	v
class	library\Zend\Soap\Wsdl\Strategy\DefaultComplexType.php	/^        $class = new ReflectionClass($type);$/;"	v
complexType	library\Zend\Soap\Wsdl\Strategy\DefaultComplexType.php	/^        $complexType = $dom->createElement('xsd:complexType');$/;"	v
defaultProperties	library\Zend\Soap\Wsdl\Strategy\DefaultComplexType.php	/^        $defaultProperties = $class->getDefaultProperties();$/;"	v
dom	library\Zend\Soap\Wsdl\Strategy\DefaultComplexType.php	/^        $dom = $this->getContext()->toDomDocument();$/;"	v
element	library\Zend\Soap\Wsdl\Strategy\DefaultComplexType.php	/^                $element = $dom->createElement('xsd:element');$/;"	v
Zend_Tag_Cloud	library\Zend\Tag\Cloud.php	/^class Zend_Tag_Cloud$/;"	c
classname	library\Zend\Tag\Cloud.php	/^            $classname = $this->getPluginLoader()->load($decorator);$/;"	v
cloudResult	library\Zend\Tag\Cloud.php	/^        $cloudResult = $this->getCloudDecorator()->render($tagsResult);$/;"	v
decorator	library\Zend\Tag\Cloud.php	/^                $decorator = $decorator['decorator'];$/;"	v
decorator	library\Zend\Tag\Cloud.php	/^            $decorator = new $classname($options);$/;"	v
itemList	library\Zend\Tag\Cloud.php	/^        $itemList = $this->getItemList();$/;"	v
loader	library\Zend\Tag\Cloud.php	/^        $loader = $this->getPluginLoader();$/;"	v
message	library\Zend\Tag\Cloud.php	/^            $message = "Exception caught by tag cloud: " . $e->getMessage()$/;"	v
method	library\Zend\Tag\Cloud.php	/^            $method = 'set' . ucfirst($key);$/;"	v
options	library\Zend\Tag\Cloud.php	/^                $options = $decorator['options'];$/;"	v
options	library\Zend\Tag\Cloud.php	/^        $options = null;$/;"	v
pathPrefix	library\Zend\Tag\Cloud.php	/^            $pathPrefix = 'Zend\/Tag\/Cloud\/Decorator\/';$/;"	v
prefix	library\Zend\Tag\Cloud.php	/^            $prefix     = 'Zend_Tag_Cloud_Decorator_';$/;"	v
result	library\Zend\Tag\Cloud.php	/^            $result = $this->render();$/;"	v
tags	library\Zend\Tag\Cloud.php	/^        $tags = $this->getItemList();$/;"	v
tagsResult	library\Zend\Tag\Cloud.php	/^        $tagsResult  = $this->getTagDecorator()->render($tags);$/;"	v
method	library\Zend\Tag\Cloud\Decorator\Cloud.php	/^            $method = 'set' . $key;$/;"	v
options	library\Zend\Tag\Cloud\Decorator\Cloud.php	/^            $options = $options->toArray();$/;"	v
Zend_Tag_Cloud_Decorator_Exception	library\Zend\Tag\Cloud\Decorator\Exception.php	/^class Zend_Tag_Cloud_Decorator_Exception extends Zend_Tag_Cloud_Exception$/;"	c
Zend_Tag_Cloud_Decorator_HtmlCloud	library\Zend\Tag\Cloud\Decorator\HtmlCloud.php	/^class Zend_Tag_Cloud_Decorator_HtmlCloud extends Zend_Tag_Cloud_Decorator_Cloud$/;"	c
attributes	library\Zend\Tag\Cloud\Decorator\HtmlCloud.php	/^                $attributes = '';$/;"	v
cloudHtml	library\Zend\Tag\Cloud\Decorator\HtmlCloud.php	/^            $cloudHtml = sprintf('<%1$s%3$s>%2$s<\/%1$s>', $htmlTag, $cloudHtml, $attributes);$/;"	v
cloudHtml	library\Zend\Tag\Cloud\Decorator\HtmlCloud.php	/^        $cloudHtml = implode($this->getSeparator(), $tags);$/;"	v
enc	library\Zend\Tag\Cloud\Decorator\HtmlCloud.php	/^        $enc = $this->getEncoding();$/;"	v
htmlTag	library\Zend\Tag\Cloud\Decorator\HtmlCloud.php	/^                $htmlTag    = $data;$/;"	v
htmlTag	library\Zend\Tag\Cloud\Decorator\HtmlCloud.php	/^                $htmlTag    = $key;$/;"	v
Zend_Tag_Cloud_Decorator_HtmlTag	library\Zend\Tag\Cloud\Decorator\HtmlTag.php	/^class Zend_Tag_Cloud_Decorator_HtmlTag extends Zend_Tag_Cloud_Decorator_Tag$/;"	c
attribute	library\Zend\Tag\Cloud\Decorator\HtmlTag.php	/^                $attribute = sprintf('class="%s"', htmlspecialchars($tag->getParam('weightValue'), ENT_COMPAT, $enc));$/;"	v
attribute	library\Zend\Tag\Cloud\Decorator\HtmlTag.php	/^                $attribute = sprintf('style="font-size: %d%s;"', $tag->getParam('weightValue'), $this->getFontSizeUnit());$/;"	v
attributes	library\Zend\Tag\Cloud\Decorator\HtmlTag.php	/^                    $attributes = '';$/;"	v
enc	library\Zend\Tag\Cloud\Decorator\HtmlTag.php	/^        $enc = $this->getEncoding();$/;"	v
htmlTag	library\Zend\Tag\Cloud\Decorator\HtmlTag.php	/^                    $htmlTag    = $data;$/;"	v
htmlTag	library\Zend\Tag\Cloud\Decorator\HtmlTag.php	/^                    $htmlTag    = $key;$/;"	v
result	library\Zend\Tag\Cloud\Decorator\HtmlTag.php	/^        $result = array();$/;"	v
tagHtml	library\Zend\Tag\Cloud\Decorator\HtmlTag.php	/^                $tagHtml = sprintf('<%1$s%3$s>%2$s<\/%1$s>', $htmlTag, $tagHtml, $attributes);$/;"	v
tagHtml	library\Zend\Tag\Cloud\Decorator\HtmlTag.php	/^            $tagHtml = sprintf('<a href="%s" %s>%s<\/a>', htmlSpecialChars($tag->getParam('url'), ENT_COMPAT, $enc), $attribute, $tag->getTitle());$/;"	v
weightValues	library\Zend\Tag\Cloud\Decorator\HtmlTag.php	/^            $weightValues = range($this->getMinFontSize(), $this->getMaxFontSize());$/;"	v
method	library\Zend\Tag\Cloud\Decorator\Tag.php	/^            $method = 'set' . $key;$/;"	v
options	library\Zend\Tag\Cloud\Decorator\Tag.php	/^            $options = $options->toArray();$/;"	v
Zend_Tag_Cloud_Exception	library\Zend\Tag\Cloud\Exception.php	/^class Zend_Tag_Cloud_Exception extends Zend_Tag_Exception$/;"	c
Zend_Tag_Exception	library\Zend\Tag\Exception.php	/^class Zend_Tag_Exception extends Zend_Exception$/;"	c
Zend_Tag_Item	library\Zend\Tag\Item.php	/^class Zend_Tag_Item implements Zend_Tag_Taggable$/;"	c
method	library\Zend\Tag\Item.php	/^            $method = 'set' . $key;$/;"	v
options	library\Zend\Tag\Item.php	/^            $options = $options->toArray();$/;"	v
Zend_Tag_ItemList	library\Zend\Tag\ItemList.php	/^class Zend_Tag_ItemList implements Countable, SeekableIterator, ArrayAccess$/;"	c
delta	library\Zend\Tag\ItemList.php	/^            $delta      = ($maxWeight - $minWeight) \/ ($steps - 1);$/;"	v
maxWeight	library\Zend\Tag\ItemList.php	/^                    $maxWeight = $item->getWeight();$/;"	v
maxWeight	library\Zend\Tag\ItemList.php	/^                    $maxWeight = max($maxWeight, $item->getWeight());$/;"	v
maxWeight	library\Zend\Tag\ItemList.php	/^            $maxWeight = null;$/;"	v
minWeight	library\Zend\Tag\ItemList.php	/^                    $minWeight = $item->getWeight();$/;"	v
minWeight	library\Zend\Tag\ItemList.php	/^                    $minWeight = min($minWeight, $item->getWeight());$/;"	v
minWeight	library\Zend\Tag\ItemList.php	/^            $minWeight = null;$/;"	v
position	library\Zend\Tag\ItemList.php	/^        $position = 0;$/;"	v
steps	library\Zend\Tag\ItemList.php	/^            $steps      = count($values);$/;"	v
threshold	library\Zend\Tag\ItemList.php	/^                $threshold = floor(100 * log($item->getWeight() + 2));$/;"	v
thresholds	library\Zend\Tag\ItemList.php	/^            $thresholds = array();$/;"	v
values	library\Zend\Tag\ItemList.php	/^        $values = array_values($values);$/;"	v
Zend_Test_DbAdapter	library\Zend\Test\DbAdapter.php	/^class Zend_Test_DbAdapter extends Zend_Db_Adapter_Abstract$/;"	c
getServerVersion	library\Zend\Test\DbAdapter.php	/^    function getServerVersion()$/;"	f
profiler	library\Zend\Test\DbAdapter.php	/^        $profiler = new Zend_Db_Profiler();$/;"	v
qp	library\Zend\Test\DbAdapter.php	/^            $qp = $this->getProfiler()->getQueryProfile($queryId);$/;"	v
queryId	library\Zend\Test\DbAdapter.php	/^        $queryId = $this->getProfiler()->queryStart($sql);$/;"	v
stmt	library\Zend\Test\DbAdapter.php	/^            $stmt = array_pop($this->_statementStack);$/;"	v
stmt	library\Zend\Test\DbAdapter.php	/^            $stmt = new Zend_Test_DbStatement();$/;"	v
Zend_Test_DbStatement	library\Zend\Test\DbStatement.php	/^class Zend_Test_DbStatement implements Zend_Db_Statement_Interface$/;"	c
keys	library\Zend\Test\DbStatement.php	/^            $keys = array_keys($row);$/;"	v
object	library\Zend\Test\DbStatement.php	/^        $object = new $class();$/;"	v
row	library\Zend\Test\DbStatement.php	/^            $row = array_shift($this->_fetchStack);$/;"	v
row	library\Zend\Test\DbStatement.php	/^        $row = $this->fetch();$/;"	v
rows	library\Zend\Test\DbStatement.php	/^        $rows = $this->_fetchStack;$/;"	v
stmt	library\Zend\Test\DbStatement.php	/^        $stmt = new Zend_Test_DbStatement();$/;"	v
Zend_Test_PHPUnit_Constraint_DomQuery	library\Zend\Test\PHPUnit\Constraint\DomQuery.php	/^class Zend_Test_PHPUnit_Constraint_DomQuery extends PHPUnit_Framework_Constraint$/;"	c
argc	library\Zend\Test\PHPUnit\Constraint\DomQuery.php	/^        $argc     = func_num_args();$/;"	v
argv	library\Zend\Test\PHPUnit\Constraint\DomQuery.php	/^        $argv     = func_get_args();$/;"	v
assertType	library\Zend\Test\PHPUnit\Constraint\DomQuery.php	/^            $assertType = str_replace('Not', '', $assertType);$/;"	v
assertType	library\Zend\Test\PHPUnit\Constraint\DomQuery.php	/^            $assertType = str_replace('Xpath', 'Query', $assertType);$/;"	v
content	library\Zend\Test\PHPUnit\Constraint\DomQuery.php	/^            $content = $doc->saveXML($node);$/;"	v
content	library\Zend\Test\PHPUnit\Constraint\DomQuery.php	/^            $content = $this->_getNodeContent($node);$/;"	v
count	library\Zend\Test\PHPUnit\Constraint\DomQuery.php	/^        $count = count($result);$/;"	v
doc	library\Zend\Test\PHPUnit\Constraint\DomQuery.php	/^            $doc     = $node->ownerDocument;$/;"	v
domQuery	library\Zend\Test\PHPUnit\Constraint\DomQuery.php	/^        $domQuery = new Zend_Dom_Query($other);$/;"	v
failure	library\Zend\Test\PHPUnit\Constraint\DomQuery.php	/^                    $failure = 'Failed asserting node DENOTED BY %s DOES NOT CONTAIN content "%s"';$/;"	v
failure	library\Zend\Test\PHPUnit\Constraint\DomQuery.php	/^                    $failure = 'Failed asserting node DENOTED BY %s DOES NOT CONTAIN content MATCHING "%s"';$/;"	v
failure	library\Zend\Test\PHPUnit\Constraint\DomQuery.php	/^                    $failure = 'Failed asserting node DENOTED BY %s DOES NOT EXIST';$/;"	v
failure	library\Zend\Test\PHPUnit\Constraint\DomQuery.php	/^                    $failure = 'Failed asserting node DENOTED BY %s DOES NOT OCCUR EXACTLY %d times';$/;"	v
failure	library\Zend\Test\PHPUnit\Constraint\DomQuery.php	/^                $failure = 'Failed asserting node DENOTED BY %s EXISTS';$/;"	v
failure	library\Zend\Test\PHPUnit\Constraint\DomQuery.php	/^                $failure = 'Failed asserting node DENOTED BY %s OCCURS AT LEAST %d times';$/;"	v
failure	library\Zend\Test\PHPUnit\Constraint\DomQuery.php	/^                $failure = 'Failed asserting node DENOTED BY %s OCCURS AT MOST %d times';$/;"	v
failure	library\Zend\Test\PHPUnit\Constraint\DomQuery.php	/^                $failure = 'Failed asserting node DENOTED BY %s OCCURS EXACTLY %d times';$/;"	v
failure	library\Zend\Test\PHPUnit\Constraint\DomQuery.php	/^                $failure = 'Failed asserting node denoted by %s CONTAINS content "%s"';$/;"	v
failure	library\Zend\Test\PHPUnit\Constraint\DomQuery.php	/^                $failure = 'Failed asserting node denoted by %s CONTAINS content MATCHING "%s"';$/;"	v
failure	library\Zend\Test\PHPUnit\Constraint\DomQuery.php	/^                $failure = sprintf($failure, $other);$/;"	v
failure	library\Zend\Test\PHPUnit\Constraint\DomQuery.php	/^                $failure = sprintf($failure, $other, $this->_content);$/;"	v
failure	library\Zend\Test\PHPUnit\Constraint\DomQuery.php	/^            $failure = $description . "\\n" . $failure;$/;"	v
match	library\Zend\Test\PHPUnit\Constraint\DomQuery.php	/^        $match = (string) $match;$/;"	v
method	library\Zend\Test\PHPUnit\Constraint\DomQuery.php	/^        $method   = $this->_useXpath ? 'queryXpath' : 'query';$/;"	v
regex	library\Zend\Test\PHPUnit\Constraint\DomQuery.php	/^            $regex   = '|<\/?' . $tag . '[^>]*>|';$/;"	v
result	library\Zend\Test\PHPUnit\Constraint\DomQuery.php	/^        $result   = $domQuery->$method($this->_path);$/;"	v
tag	library\Zend\Test\PHPUnit\Constraint\DomQuery.php	/^            $tag     = $node->nodeName;$/;"	v
Zend_Test_PHPUnit_Constraint_Exception	library\Zend\Test\PHPUnit\Constraint\Exception.php	/^class Zend_Test_PHPUnit_Constraint_Exception extends PHPUnit_Framework_ExpectationFailedException$/;"	c
Zend_Test_PHPUnit_Constraint_Redirect	library\Zend\Test\PHPUnit\Constraint\Redirect.php	/^class Zend_Test_PHPUnit_Constraint_Redirect extends PHPUnit_Framework_Constraint$/;"	c
argc	library\Zend\Test\PHPUnit\Constraint\Redirect.php	/^        $argc     = func_num_args();$/;"	v
argv	library\Zend\Test\PHPUnit\Constraint\Redirect.php	/^        $argv     = func_get_args();$/;"	v
assertType	library\Zend\Test\PHPUnit\Constraint\Redirect.php	/^            $assertType = str_replace('Not', '', $assertType);$/;"	v
failure	library\Zend\Test\PHPUnit\Constraint\Redirect.php	/^                    $failure = 'Failed asserting response DOES NOT redirect to "%s"';$/;"	v
failure	library\Zend\Test\PHPUnit\Constraint\Redirect.php	/^                    $failure = 'Failed asserting response DOES NOT redirect to URL MATCHING "%s"';$/;"	v
failure	library\Zend\Test\PHPUnit\Constraint\Redirect.php	/^                    $failure = 'Failed asserting response is NOT a redirect';$/;"	v
failure	library\Zend\Test\PHPUnit\Constraint\Redirect.php	/^                $failure = 'Failed asserting response is a redirect';$/;"	v
failure	library\Zend\Test\PHPUnit\Constraint\Redirect.php	/^                $failure = 'Failed asserting response redirects to "%s"';$/;"	v
failure	library\Zend\Test\PHPUnit\Constraint\Redirect.php	/^                $failure = 'Failed asserting response redirects to URL MATCHING "%s"';$/;"	v
failure	library\Zend\Test\PHPUnit\Constraint\Redirect.php	/^                $failure = sprintf($failure, $this->_match);$/;"	v
failure	library\Zend\Test\PHPUnit\Constraint\Redirect.php	/^            $failure = $description . "\\n" . $failure;$/;"	v
headers	library\Zend\Test\PHPUnit\Constraint\Redirect.php	/^        $headers  = $response->sendHeaders();$/;"	v
redirect	library\Zend\Test\PHPUnit\Constraint\Redirect.php	/^        $redirect = $headers['location'];$/;"	v
redirect	library\Zend\Test\PHPUnit\Constraint\Redirect.php	/^        $redirect = str_replace('Location: ', '', $redirect);$/;"	v
response	library\Zend\Test\PHPUnit\Constraint\Redirect.php	/^        $response = $other;$/;"	v
Zend_Test_PHPUnit_Constraint_ResponseHeader	library\Zend\Test\PHPUnit\Constraint\ResponseHeader.php	/^class Zend_Test_PHPUnit_Constraint_ResponseHeader extends PHPUnit_Framework_Constraint$/;"	c
argc	library\Zend\Test\PHPUnit\Constraint\ResponseHeader.php	/^        $argc     = func_num_args();$/;"	v
argv	library\Zend\Test\PHPUnit\Constraint\ResponseHeader.php	/^        $argv     = func_get_args();$/;"	v
assertType	library\Zend\Test\PHPUnit\Constraint\ResponseHeader.php	/^            $assertType = str_replace('Not', '', $assertType);$/;"	v
contents	library\Zend\Test\PHPUnit\Constraint\ResponseHeader.php	/^        $contents = str_replace($header . ': ', '', $fullHeader);$/;"	v
failure	library\Zend\Test\PHPUnit\Constraint\ResponseHeader.php	/^                    $failure = 'Failed asserting response code IS NOT "%s"';$/;"	v
failure	library\Zend\Test\PHPUnit\Constraint\ResponseHeader.php	/^                    $failure = 'Failed asserting response header "%s" DOES NOT CONTAIN "%s"';$/;"	v
failure	library\Zend\Test\PHPUnit\Constraint\ResponseHeader.php	/^                    $failure = 'Failed asserting response header "%s" DOES NOT MATCH regex "%s"';$/;"	v
failure	library\Zend\Test\PHPUnit\Constraint\ResponseHeader.php	/^                    $failure = 'Failed asserting response response header "%s" WAS NOT found';$/;"	v
failure	library\Zend\Test\PHPUnit\Constraint\ResponseHeader.php	/^                $failure = 'Failed asserting response code "%s"';$/;"	v
failure	library\Zend\Test\PHPUnit\Constraint\ResponseHeader.php	/^                $failure = 'Failed asserting response header "%s" exists and contains "%s"';$/;"	v
failure	library\Zend\Test\PHPUnit\Constraint\ResponseHeader.php	/^                $failure = 'Failed asserting response header "%s" exists and matches regex "%s"';$/;"	v
failure	library\Zend\Test\PHPUnit\Constraint\ResponseHeader.php	/^                $failure = 'Failed asserting response header "%s" found';$/;"	v
failure	library\Zend\Test\PHPUnit\Constraint\ResponseHeader.php	/^                $failure = sprintf($failure, $this->_code);$/;"	v
failure	library\Zend\Test\PHPUnit\Constraint\ResponseHeader.php	/^                $failure = sprintf($failure, $this->_header);$/;"	v
failure	library\Zend\Test\PHPUnit\Constraint\ResponseHeader.php	/^                $failure = sprintf($failure, $this->_header, $this->_match);$/;"	v
failure	library\Zend\Test\PHPUnit\Constraint\ResponseHeader.php	/^            $failure = $description . "\\n" . $failure;$/;"	v
header	library\Zend\Test\PHPUnit\Constraint\ResponseHeader.php	/^        $header  = strtolower($header);$/;"	v
headers	library\Zend\Test\PHPUnit\Constraint\ResponseHeader.php	/^        $headers = $response->sendHeaders();$/;"	v
response	library\Zend\Test\PHPUnit\Constraint\ResponseHeader.php	/^        $response = $other;$/;"	v
test	library\Zend\Test\PHPUnit\Constraint\ResponseHeader.php	/^            $test = 200;$/;"	v
test	library\Zend\Test\PHPUnit\Constraint\ResponseHeader.php	/^        $test = $response->getHttpResponseCode();$/;"	v
test	library\Zend\Test\PHPUnit\Constraint\ResponseHeader.php	/^        $test = $this->_getCode($response);$/;"	v
_COOKIE	library\Zend\Test\PHPUnit\ControllerTestCase.php	/^        $_COOKIE  = array();$/;"	v
_GET	library\Zend\Test\PHPUnit\ControllerTestCase.php	/^        $_GET     = array();$/;"	v
_POST	library\Zend\Test\PHPUnit\ControllerTestCase.php	/^        $_POST    = array();$/;"	v
_SESSION	library\Zend\Test\PHPUnit\ControllerTestCase.php	/^        $_SESSION = array();$/;"	v
ccToDash	library\Zend\Test\PHPUnit\ControllerTestCase.php	/^        $ccToDash = new Zend_Filter_Word_CamelCaseToDash();$/;"	v
constraint	library\Zend\Test\PHPUnit\ControllerTestCase.php	/^        $constraint = new Zend_Test_PHPUnit_Constraint_DomQuery($path);$/;"	v
constraint	library\Zend\Test\PHPUnit\ControllerTestCase.php	/^        $constraint = new Zend_Test_PHPUnit_Constraint_Redirect();$/;"	v
constraint	library\Zend\Test\PHPUnit\ControllerTestCase.php	/^        $constraint = new Zend_Test_PHPUnit_Constraint_ResponseHeader();$/;"	v
content	library\Zend\Test\PHPUnit\ControllerTestCase.php	/^        $content    = $this->response->outputBody();$/;"	v
controller	library\Zend\Test\PHPUnit\ControllerTestCase.php	/^        $controller = $this->getFrontController();$/;"	v
frontController	library\Zend\Test\PHPUnit\ControllerTestCase.php	/^        $frontController = $this->getFrontController();$/;"	v
json	library\Zend\Test\PHPUnit\ControllerTestCase.php	/^        $json = Zend_Controller_Action_HelperBroker::getStaticHelper('json');$/;"	v
msg	library\Zend\Test\PHPUnit\ControllerTestCase.php	/^                $msg = $message . "\\n" . $msg;$/;"	v
msg	library\Zend\Test\PHPUnit\ControllerTestCase.php	/^            $msg = sprintf('Failed asserting last action used <"%s"> was "%s"', $this->request->getActionName(), $action);$/;"	v
msg	library\Zend\Test\PHPUnit\ControllerTestCase.php	/^            $msg = sprintf('Failed asserting last action used <"%s"> was NOT "%s"', $this->request->getActionName(), $action);$/;"	v
msg	library\Zend\Test\PHPUnit\ControllerTestCase.php	/^            $msg = sprintf('Failed asserting last controller used <"%s"> was "%s"',$/;"	v
msg	library\Zend\Test\PHPUnit\ControllerTestCase.php	/^            $msg = sprintf('Failed asserting last controller used <"%s"> was NOT "%s"',$/;"	v
msg	library\Zend\Test\PHPUnit\ControllerTestCase.php	/^            $msg = sprintf('Failed asserting last module used <"%s"> was "%s"',$/;"	v
msg	library\Zend\Test\PHPUnit\ControllerTestCase.php	/^            $msg = sprintf('Failed asserting last module used was NOT "%s"', $module);$/;"	v
msg	library\Zend\Test\PHPUnit\ControllerTestCase.php	/^            $msg = sprintf('Failed asserting matched route was "%s", actual route is %s',$/;"	v
msg	library\Zend\Test\PHPUnit\ControllerTestCase.php	/^            $msg = sprintf('Failed asserting route matched was NOT "%s"', $route);$/;"	v
redirector	library\Zend\Test\PHPUnit\ControllerTestCase.php	/^        $redirector = Zend_Controller_Action_HelperBroker::getStaticHelper('redirector');$/;"	v
registry	library\Zend\Test\PHPUnit\ControllerTestCase.php	/^        $registry = Zend_Registry::getInstance();$/;"	v
remove	library\Zend\Test\PHPUnit\ControllerTestCase.php	/^        $remove   = array();$/;"	v
request	library\Zend\Test\PHPUnit\ControllerTestCase.php	/^        $request    = $this->getRequest();$/;"	v
response	library\Zend\Test\PHPUnit\ControllerTestCase.php	/^        $response   = $this->response;$/;"	v
router	library\Zend\Test\PHPUnit\ControllerTestCase.php	/^        $router = $frontController->getRouter();$/;"	v
router	library\Zend\Test\PHPUnit\ControllerTestCase.php	/^        $router = $this->frontController->getRouter();$/;"	v
stack	library\Zend\Test\PHPUnit\ControllerTestCase.php	/^        $stack = debug_backtrace();$/;"	v
dataSet	library\Zend\Test\PHPUnit\DatabaseTestCase.php	/^        $dataSet = new Zend_Test_PHPUnit_Db_DataSet_DbTableDataSet();$/;"	v
Zend_Test_PHPUnit_Db_Connection	library\Zend\Test\PHPUnit\Db\Connection.php	/^class Zend_Test_PHPUnit_Db_Connection extends PHPUnit_Extensions_Database_DB_DefaultDatabaseConnection$/;"	c
Zend_Test_PHPUnit_Db_DataSet_DbRowset	library\Zend\Test\PHPUnit\Db\DataSet\DbRowset.php	/^class Zend_Test_PHPUnit_Db_DataSet_DbRowset extends PHPUnit_Extensions_Database_DataSet_AbstractTable$/;"	c
columns	library\Zend\Test\PHPUnit\Db\DataSet\DbRowset.php	/^            $columns = $rowset->getTable()->info('cols');$/;"	v
columns	library\Zend\Test\PHPUnit\Db\DataSet\DbRowset.php	/^            $columns = array_keys($this->data[0]);$/;"	v
columns	library\Zend\Test\PHPUnit\Db\DataSet\DbRowset.php	/^        $columns = array();$/;"	v
table	library\Zend\Test\PHPUnit\Db\DataSet\DbRowset.php	/^            $table = $rowset->getTable();$/;"	v
tableName	library\Zend\Test\PHPUnit\Db\DataSet\DbRowset.php	/^                $tableName = $table->info('name');$/;"	v
Zend_Test_PHPUnit_Db_DataSet_DbTable	library\Zend\Test\PHPUnit\Db\DataSet\DbTable.php	/^class Zend_Test_PHPUnit_Db_DataSet_DbTable extends PHPUnit_Extensions_Database_DataSet_QueryTable$/;"	c
Zend_Test_PHPUnit_Db_DataSet_DbTableDataSet	library\Zend\Test\PHPUnit\Db\DataSet\DbTableDataSet.php	/^class Zend_Test_PHPUnit_Db_DataSet_DbTableDataSet extends PHPUnit_Extensions_Database_DataSet_AbstractDataSet$/;"	c
tableName	library\Zend\Test\PHPUnit\Db\DataSet\DbTableDataSet.php	/^        $tableName = $table->info('name');$/;"	v
Zend_Test_PHPUnit_Db_DataSet_QueryDataSet	library\Zend\Test\PHPUnit\Db\DataSet\QueryDataSet.php	/^class Zend_Test_PHPUnit_Db_DataSet_QueryDataSet extends PHPUnit_Extensions_Database_DataSet_QueryDataSet$/;"	c
query	library\Zend\Test\PHPUnit\Db\DataSet\QueryDataSet.php	/^            $query = $query->__toString();$/;"	v
query	library\Zend\Test\PHPUnit\Db\DataSet\QueryDataSet.php	/^            $query = $this->databaseConnection->getConnection()->select();$/;"	v
Zend_Test_PHPUnit_Db_DataSet_QueryTable	library\Zend\Test\PHPUnit\Db\DataSet\QueryTable.php	/^class Zend_Test_PHPUnit_Db_DataSet_QueryTable extends PHPUnit_Extensions_Database_DataSet_QueryTable$/;"	c
keys	library\Zend\Test\PHPUnit\Db\DataSet\QueryTable.php	/^                $keys = array_keys($this->data[0]);$/;"	v
keys	library\Zend\Test\PHPUnit\Db\DataSet\QueryTable.php	/^            $keys = array();$/;"	v
stmt	library\Zend\Test\PHPUnit\Db\DataSet\QueryTable.php	/^            $stmt = $this->databaseConnection->getConnection()->query($this->query);$/;"	v
Zend_Test_PHPUnit_Db_Exception	library\Zend\Test\PHPUnit\Db\Exception.php	/^class Zend_Test_PHPUnit_Db_Exception extends Zend_Exception$/;"	c
Zend_Test_PHPUnit_Db_Metadata_Generic	library\Zend\Test\PHPUnit\Db\Metadata\Generic.php	/^class Zend_Test_PHPUnit_Db_Metadata_Generic implements PHPUnit_Extensions_Database_DB_IMetaData$/;"	c
columns	library\Zend\Test\PHPUnit\Db\Metadata\Generic.php	/^        $columns = array_keys($tableMeta);$/;"	v
primaryColumnNames	library\Zend\Test\PHPUnit\Db\Metadata\Generic.php	/^        $primaryColumnNames = array();$/;"	v
tableMeta	library\Zend\Test\PHPUnit\Db\Metadata\Generic.php	/^        $tableMeta = $this->getTableDescription($tableName);$/;"	v
Zend_Test_PHPUnit_Db_Operation_DeleteAll	library\Zend\Test\PHPUnit\Db\Operation\DeleteAll.php	/^class Zend_Test_PHPUnit_Db_Operation_DeleteAll implements PHPUnit_Extensions_Database_Operation_IDatabaseOperation$/;"	c
tableName	library\Zend\Test\PHPUnit\Db\Operation\DeleteAll.php	/^                $tableName = $table->getTableMetaData()->getTableName();$/;"	v
Zend_Test_PHPUnit_Db_Operation_Insert	library\Zend\Test\PHPUnit\Db\Operation\Insert.php	/^class Zend_Test_PHPUnit_Db_Operation_Insert implements PHPUnit_Extensions_Database_Operation_IDatabaseOperation$/;"	c
databaseDataSet	library\Zend\Test\PHPUnit\Db\Operation\Insert.php	/^        $databaseDataSet = $connection->createDataSet();$/;"	v
db	library\Zend\Test\PHPUnit\Db\Operation\Insert.php	/^            $db = $connection->getConnection();$/;"	v
dsIterator	library\Zend\Test\PHPUnit\Db\Operation\Insert.php	/^        $dsIterator = $dataSet->getIterator();$/;"	v
tableName	library\Zend\Test\PHPUnit\Db\Operation\Insert.php	/^            $tableName = $table->getTableMetaData()->getTableName();$/;"	v
values	library\Zend\Test\PHPUnit\Db\Operation\Insert.php	/^                $values = $this->buildInsertValues($table, $i);$/;"	v
values	library\Zend\Test\PHPUnit\Db\Operation\Insert.php	/^        $values = array();$/;"	v
Zend_Test_PHPUnit_Db_Operation_Truncate	library\Zend\Test\PHPUnit\Db\Operation\Truncate.php	/^class Zend_Test_PHPUnit_Db_Operation_Truncate implements PHPUnit_Extensions_Database_Operation_IDatabaseOperation$/;"	c
file	library\Zend\Test\PHPUnit\Db\Operation\Truncate.php	/^                $file = tempnam(sys_get_temp_dir(), "zendtestdbibm_");$/;"	v
tableName	library\Zend\Test\PHPUnit\Db\Operation\Truncate.php	/^                $tableName = $table->getTableMetaData()->getTableName();$/;"	v
tableName	library\Zend\Test\PHPUnit\Db\Operation\Truncate.php	/^        $tableName = $db->quoteIdentifier($tableName, true);$/;"	v
Zend_Test_PHPUnit_Db_SimpleTester	library\Zend\Test\PHPUnit\Db\SimpleTester.php	/^class Zend_Test_PHPUnit_Db_SimpleTester extends PHPUnit_Extensions_Database_DefaultTester$/;"	c
Zend_Text_Exception	library\Zend\Text\Exception.php	/^class Zend_Text_Exception extends Zend_Exception$/;"	c
Zend_Text_Figlet	library\Zend\Text\Figlet.php	/^class Zend_Text_Figlet$/;"	c
amount	library\Zend\Text\Figlet.php	/^                $amount = ($charbd + $this->_outlineLength - 1 - $linebd);$/;"	v
amount	library\Zend\Text\Figlet.php	/^                $amount = ($linebd + $this->_currentCharWidth - 1 - $charbd);$/;"	v
amount	library\Zend\Text\Figlet.php	/^        $amount   = $maxSmush;$/;"	v
char	library\Zend\Text\Figlet.php	/^                $char = ($char === "\\t" || $char === ' ') ? ' ': "\\n";$/;"	v
char	library\Zend\Text\Figlet.php	/^                $char = (ctype_space($nextChar)) ? "\\n" : ' ';$/;"	v
char	library\Zend\Text\Figlet.php	/^            $char = $this->_loadChar($fp);$/;"	v
char	library\Zend\Text\Figlet.php	/^            $char = iconv_substr($text, $charNum, 1, 'UTF-8');$/;"	v
char	library\Zend\Text\Figlet.php	/^        $char = array();$/;"	v
charNotAdded	library\Zend\Text\Figlet.php	/^                    $charNotAdded  = true;$/;"	v
charNotAdded	library\Zend\Text\Figlet.php	/^                $charNotAdded = false;$/;"	v
charbd	library\Zend\Text\Figlet.php	/^                $charbd = 0;$/;"	v
charbd	library\Zend\Text\Figlet.php	/^                $charbd = strlen($this->_currentChar[$row]);$/;"	v
compressed	library\Zend\Text\Figlet.php	/^            $compressed = false;$/;"	v
compressed	library\Zend\Text\Figlet.php	/^            $compressed = true;$/;"	v
dummy	library\Zend\Text\Figlet.php	/^                $dummy = fgetc($fp);$/;"	v
dummy	library\Zend\Text\Figlet.php	/^            $dummy = fgetc($fp);$/;"	v
dummy	library\Zend\Text\Figlet.php	/^        $dummy = fgetc($fp);$/;"	v
firstLength	library\Zend\Text\Figlet.php	/^        $firstLength = ($i + 1);$/;"	v
firstPart	library\Zend\Text\Figlet.php	/^        $firstPart = '';$/;"	v
fontFile	library\Zend\Text\Figlet.php	/^            $fontFile   = 'compress.zlib:\/\/' . $fontFile;$/;"	v
fp	library\Zend\Text\Figlet.php	/^        $fp = fopen($fontFile, 'rb');$/;"	v
gotSpace	library\Zend\Text\Figlet.php	/^                $gotSpace  = true;$/;"	v
gotSpace	library\Zend\Text\Figlet.php	/^        $gotSpace = false;$/;"	v
h	library\Zend\Text\Figlet.php	/^        $h = ord($c[0]);$/;"	v
lastCharWasEol	library\Zend\Text\Figlet.php	/^            $lastCharWasEol = (ctype_space($char) && $char !== "\\t" && $char !== ' ');$/;"	v
lastCharWasEol	library\Zend\Text\Figlet.php	/^        $lastCharWasEol = false;$/;"	v
lastLength	library\Zend\Text\Figlet.php	/^        $lastLength  = ($this->_inCharLineLength - $lastSpace - 1);$/;"	v
lastPart	library\Zend\Text\Figlet.php	/^        $lastPart = '';$/;"	v
lastSpace	library\Zend\Text\Figlet.php	/^                $lastSpace = $i;$/;"	v
leftChar	library\Zend\Text\Figlet.php	/^                        $leftChar = $this->_currentChar[$row][$charbd];$/;"	v
leftChar	library\Zend\Text\Figlet.php	/^                        $leftChar = $this->_outputLine[$row][$linebd];$/;"	v
leftChar	library\Zend\Text\Figlet.php	/^                        $leftChar = $this->_outputLine[$row][$position];$/;"	v
leftChar	library\Zend\Text\Figlet.php	/^                        $leftChar = null;$/;"	v
length	library\Zend\Text\Figlet.php	/^                $length = ($this->_outputWidth - 1);$/;"	v
length	library\Zend\Text\Figlet.php	/^        $length = strlen($string);$/;"	v
line	library\Zend\Text\Figlet.php	/^                $line = str_replace($result[1], '', $line);$/;"	v
line	library\Zend\Text\Figlet.php	/^            $line = rtrim(fgets($fp, 2048), "\\r\\n");$/;"	v
linebd	library\Zend\Text\Figlet.php	/^                $linebd = 0;$/;"	v
linebd	library\Zend\Text\Figlet.php	/^                $linebd = strlen($this->_outputLine[$row]);$/;"	v
magic	library\Zend\Text\Figlet.php	/^        $magic = $this->_readMagic($fp);$/;"	v
magic	library\Zend\Text\Figlet.php	/^        $magic = '';$/;"	v
maxSmush	library\Zend\Text\Figlet.php	/^            $maxSmush = min($amount, $maxSmush);$/;"	v
maxSmush	library\Zend\Text\Figlet.php	/^        $maxSmush = $this->_currentCharWidth;$/;"	v
method	library\Zend\Text\Figlet.php	/^            $method = 'set' . ucfirst($key);$/;"	v
nextChar	library\Zend\Text\Figlet.php	/^                    $nextChar = null;$/;"	v
nextChar	library\Zend\Text\Figlet.php	/^                $nextChar = iconv_substr($text, ($charNum + 1), 1, 'UTF-8');$/;"	v
numsRead	library\Zend\Text\Figlet.php	/^        $numsRead = sscanf(fgets($fp, 1000),$/;"	v
offset	library\Zend\Text\Figlet.php	/^                            $offset = (strlen($this->_currentChar[$i]) - $this->_outlineLengthLimit);$/;"	v
ord	library\Zend\Text\Figlet.php	/^            $ord = $h;$/;"	v
ord	library\Zend\Text\Figlet.php	/^            $ord = (($h & 0x0F) << 12 | (ord($c[1]) & 0x3F) << 6 | (ord($c[2]) & 0x3F));$/;"	v
ord	library\Zend\Text\Figlet.php	/^            $ord = (($h & 0x0F) << 18 | (ord($c[1]) & 0x3F) << 12 |$/;"	v
ord	library\Zend\Text\Figlet.php	/^            $ord = (($h & 0x1F) << 6 | (ord($c[1]) & 0x3F));$/;"	v
ord	library\Zend\Text\Figlet.php	/^            $ord = 0;$/;"	v
ordChar	library\Zend\Text\Figlet.php	/^            $ordChar = $this->_uniOrd($char);$/;"	v
position	library\Zend\Text\Figlet.php	/^                    $position            = ($this->_currentCharWidth - $smushAmount + $k);$/;"	v
position	library\Zend\Text\Figlet.php	/^                    $position = ($this->_outlineLength - $smushAmount + $k);$/;"	v
rightChar	library\Zend\Text\Figlet.php	/^                        $rightChar = $this->_currentChar[$row][$charbd];$/;"	v
rightChar	library\Zend\Text\Figlet.php	/^                        $rightChar = $this->_outputLine[$row][$linebd];$/;"	v
rightChar	library\Zend\Text\Figlet.php	/^                        $rightChar = null;$/;"	v
rightToLeft	library\Zend\Text\Figlet.php	/^            $rightToLeft = 0;$/;"	v
smushAmount	library\Zend\Text\Figlet.php	/^        $smushAmount = $this->_smushAmount();$/;"	v
smushMode	library\Zend\Text\Figlet.php	/^        $smushMode = (int) $smushMode;$/;"	v
tempLine	library\Zend\Text\Figlet.php	/^                $tempLine = $this->_currentChar[$row];$/;"	v
tempLine	library\Zend\Text\Figlet.php	/^        $tempLine = '';$/;"	v
text	library\Zend\Text\Figlet.php	/^            $text = iconv($encoding, 'UTF-8', $text);$/;"	v
textLength	library\Zend\Text\Figlet.php	/^        $textLength     = @iconv_strlen($text, 'UTF-8');$/;"	v
uniCode	library\Zend\Text\Figlet.php	/^                $uniCode = (int) $uniCode;$/;"	v
uniCode	library\Zend\Text\Figlet.php	/^                $uniCode = hexdec(substr($uniCode, 2));$/;"	v
uniCode	library\Zend\Text\Figlet.php	/^                $uniCode = octdec($uniCode);$/;"	v
wordBreakMode	library\Zend\Text\Figlet.php	/^                        $wordBreakMode = ($wordBreakMode > 0) ? 2: 0;$/;"	v
wordBreakMode	library\Zend\Text\Figlet.php	/^                        $wordBreakMode = ($wordBreakMode >= 2) ? 3: 1;$/;"	v
wordBreakMode	library\Zend\Text\Figlet.php	/^                        $wordBreakMode = 0;$/;"	v
wordBreakMode	library\Zend\Text\Figlet.php	/^                    $wordBreakMode = ($wordBreakMode === 3) ? 1 : 0;$/;"	v
wordBreakMode	library\Zend\Text\Figlet.php	/^                    $wordBreakMode = -1;$/;"	v
wordBreakMode	library\Zend\Text\Figlet.php	/^                    $wordBreakMode = 0;$/;"	v
wordBreakMode	library\Zend\Text\Figlet.php	/^                    $wordBreakMode = false;$/;"	v
wordBreakMode	library\Zend\Text\Figlet.php	/^        $wordBreakMode  = 0;$/;"	v
Zend_Text_Figlet_Exception	library\Zend\Text\Figlet\Exception.php	/^class Zend_Text_Figlet_Exception extends Zend_Text_Exception$/;"	c
Zend_Text_MultiByte	library\Zend\Text\MultiByte.php	/^class Zend_Text_MultiByte$/;"	c
afterNextChar	library\Zend\Text\MultiByte.php	/^                        $afterNextChar = iconv_substr($string, $width + 1, 1, $charset);$/;"	v
breakPos	library\Zend\Text\MultiByte.php	/^            $breakPos = iconv_strpos($string, $break, 0, $charset);$/;"	v
breakWidth	library\Zend\Text\MultiByte.php	/^        $breakWidth = iconv_strlen($break, $charset);$/;"	v
cutLength	library\Zend\Text\MultiByte.php	/^                                $cutLength = $spacePos + 1;$/;"	v
cutLength	library\Zend\Text\MultiByte.php	/^                                $cutLength = null;$/;"	v
cutLength	library\Zend\Text\MultiByte.php	/^                            $cutLength = $spacePos + 1;$/;"	v
cutLength	library\Zend\Text\MultiByte.php	/^                            $cutLength = $width;$/;"	v
cutLength	library\Zend\Text\MultiByte.php	/^                        $cutLength = iconv_strlen($subString, $charset) + 1;$/;"	v
cutLength	library\Zend\Text\MultiByte.php	/^                    $cutLength = $breakPos + $breakWidth;$/;"	v
cutLength	library\Zend\Text\MultiByte.php	/^                    $cutLength = null;$/;"	v
lastString	library\Zend\Text\MultiByte.php	/^                $lastString = iconv_substr($padString, 0, $lengthOfPadding % $padStringLength, $charset);$/;"	v
lastStringLeft	library\Zend\Text\MultiByte.php	/^                $lastStringLeft  = '';$/;"	v
lastStringLeft	library\Zend\Text\MultiByte.php	/^                $lastStringLeft  = iconv_substr($padString, 0, $lastStringLeftLength, $charset);$/;"	v
lastStringLeftLength	library\Zend\Text\MultiByte.php	/^                $lastStringLeftLength   = $lastStringRightLength = floor($lastStringLength \/ 2);$/;"	v
lastStringLength	library\Zend\Text\MultiByte.php	/^                $lastStringLength       = $lengthOfPadding - 2 * $repeatCountLeft * $padStringLength;$/;"	v
lastStringRight	library\Zend\Text\MultiByte.php	/^                $lastStringRight = '';$/;"	v
lastStringRight	library\Zend\Text\MultiByte.php	/^                $lastStringRight = iconv_substr($padString, 0, $lastStringRightLength, $charset);$/;"	v
lengthOfPadding	library\Zend\Text\MultiByte.php	/^        $lengthOfPadding = $padLength - iconv_strlen($input, $charset);$/;"	v
nextBreak	library\Zend\Text\MultiByte.php	/^                        $nextBreak = $nextChar;$/;"	v
nextBreak	library\Zend\Text\MultiByte.php	/^                        $nextBreak = iconv_substr($string, $breakWidth, 1, $charset);$/;"	v
nextChar	library\Zend\Text\MultiByte.php	/^                    $nextChar = iconv_substr($string, $width, 1, $charset);$/;"	v
padStringLength	library\Zend\Text\MultiByte.php	/^        $padStringLength = iconv_strlen($padString, $charset);$/;"	v
repeatCount	library\Zend\Text\MultiByte.php	/^            $repeatCount = floor($lengthOfPadding \/ $padStringLength);$/;"	v
repeatCountLeft	library\Zend\Text\MultiByte.php	/^                $repeatCountLeft = $repeatCountRight = ($repeatCount - $repeatCount % 2) \/ 2;$/;"	v
result	library\Zend\Text\MultiByte.php	/^        $result     = array();$/;"	v
return	library\Zend\Text\MultiByte.php	/^                    $return = $input . str_repeat($padString, $repeatCount) . $lastString;$/;"	v
return	library\Zend\Text\MultiByte.php	/^                    $return = str_repeat($padString, $repeatCount) . $lastString . $input;$/;"	v
return	library\Zend\Text\MultiByte.php	/^                $return = str_repeat($padString, $repeatCountLeft) . $lastStringLeft$/;"	v
return	library\Zend\Text\MultiByte.php	/^            $return = $input;$/;"	v
return	library\Zend\Text\MultiByte.php	/^        $return          = '';$/;"	v
spacePos	library\Zend\Text\MultiByte.php	/^                            $spacePos = iconv_strpos($string, ' ', 0, $charset);$/;"	v
spacePos	library\Zend\Text\MultiByte.php	/^                        $spacePos = iconv_strrpos($subString, ' ', $charset);$/;"	v
string	library\Zend\Text\MultiByte.php	/^                $string = iconv_substr($string, $cutLength, ($stringLength - $cutLength), $charset);$/;"	v
subString	library\Zend\Text\MultiByte.php	/^                                $subString = $string;$/;"	v
subString	library\Zend\Text\MultiByte.php	/^                                $subString = iconv_substr($string, 0, $spacePos, $charset);$/;"	v
subString	library\Zend\Text\MultiByte.php	/^                            $subString = iconv_substr($subString, 0, $spacePos, $charset);$/;"	v
subString	library\Zend\Text\MultiByte.php	/^                            $subString = iconv_substr($subString, 0, $width, $charset);$/;"	v
subString	library\Zend\Text\MultiByte.php	/^                    $subString = $string;$/;"	v
subString	library\Zend\Text\MultiByte.php	/^                    $subString = iconv_substr($string, 0, $breakPos, $charset);$/;"	v
subString	library\Zend\Text\MultiByte.php	/^                $subString = iconv_substr($string, 0, $width, $charset);$/;"	v
Zend_Text_Table	library\Zend\Text\Table.php	/^class Zend_Text_Table$/;"	c
align	library\Zend\Text\Table.php	/^                    $align = $this->_defaultColumnAligns[$colNum];$/;"	v
align	library\Zend\Text\Table.php	/^                    $align = null;$/;"	v
classname	library\Zend\Text\Table.php	/^            $classname        = $this->getPluginLoader()->load($decorator);$/;"	v
colNum	library\Zend\Text\Table.php	/^            $colNum = 0;$/;"	v
columnWidths	library\Zend\Text\Table.php	/^            $columnWidths = $row->getColumnWidths();$/;"	v
connector	library\Zend\Text\Table.php	/^                        $connector          = 0x0;$/;"	v
currentLowerColumn	library\Zend\Text\Table.php	/^                    $currentLowerColumn = 0;$/;"	v
currentLowerWidth	library\Zend\Text\Table.php	/^                            $currentLowerWidth   = 0;$/;"	v
currentLowerWidth	library\Zend\Text\Table.php	/^                    $currentLowerWidth  = 0;$/;"	v
currentUpperColumn	library\Zend\Text\Table.php	/^                    $currentUpperColumn = 0;$/;"	v
currentUpperWidth	library\Zend\Text\Table.php	/^                            $currentUpperWidth   = 0;$/;"	v
currentUpperWidth	library\Zend\Text\Table.php	/^                    $currentUpperWidth  = 0;$/;"	v
data	library\Zend\Text\Table.php	/^            $data   = $row;$/;"	v
drawSeparator	library\Zend\Text\Table.php	/^                    $drawSeparator = false;$/;"	v
drawSeparator	library\Zend\Text\Table.php	/^                    $drawSeparator = true;$/;"	v
lastColumnWidths	library\Zend\Text\Table.php	/^                $lastColumnWidths = $columnWidths;$/;"	v
method	library\Zend\Text\Table.php	/^            $method = 'set' . ucfirst($key);$/;"	v
numColumns	library\Zend\Text\Table.php	/^            $numColumns   = count($columnWidths);$/;"	v
numRows	library\Zend\Text\Table.php	/^        $numRows = count($this->_rows);$/;"	v
pathPrefix	library\Zend\Text\Table.php	/^            $pathPrefix = 'Zend\/Text\/Table\/Decorator\/';$/;"	v
prefix	library\Zend\Text\Table.php	/^            $prefix     = 'Zend_Text_Table_Decorator_';$/;"	v
renderedRow	library\Zend\Text\Table.php	/^            $renderedRow  = $row->render($this->_columnWidths, $this->_decorator, $this->_padding);$/;"	v
result	library\Zend\Text\Table.php	/^        $result = '';$/;"	v
row	library\Zend\Text\Table.php	/^            $row    = new Zend_Text_Table_Row();$/;"	v
totalNumColumns	library\Zend\Text\Table.php	/^        $totalNumColumns = count($this->_columnWidths);$/;"	v
Zend_Text_Table_Column	library\Zend\Text\Table\Column.php	/^class Zend_Text_Table_Column$/;"	c
content	library\Zend\Text\Table\Column.php	/^                $content = iconv($inputCharset, $outputCharset, $content);$/;"	v
inputCharset	library\Zend\Text\Table\Column.php	/^            $inputCharset = Zend_Text_Table::getInputCharset();$/;"	v
inputCharset	library\Zend\Text\Table\Column.php	/^            $inputCharset = strtolower($charset);$/;"	v
lines	library\Zend\Text\Table\Column.php	/^        $lines         = explode("\\n", Zend_Text_MultiByte::wordWrap($this->_content, $columnWidth, "\\n", true, $outputCharset));$/;"	v
outputCharset	library\Zend\Text\Table\Column.php	/^        $outputCharset = Zend_Text_Table::getOutputCharset();$/;"	v
padMode	library\Zend\Text\Table\Column.php	/^                $padMode = STR_PAD_BOTH;$/;"	v
padMode	library\Zend\Text\Table\Column.php	/^                $padMode = STR_PAD_LEFT;$/;"	v
padMode	library\Zend\Text\Table\Column.php	/^                $padMode = STR_PAD_RIGHT;$/;"	v
paddedLines	library\Zend\Text\Table\Column.php	/^        $paddedLines   = array();$/;"	v
result	library\Zend\Text\Table\Column.php	/^        $result = implode("\\n", $paddedLines);$/;"	v
Zend_Text_Table_Decorator_Ascii	library\Zend\Text\Table\Decorator\Ascii.php	/^class Zend_Text_Table_Decorator_Ascii implements Zend_Text_Table_Decorator_Interface$/;"	c
Zend_Text_Table_Decorator_Unicode	library\Zend\Text\Table\Decorator\Unicode.php	/^class Zend_Text_Table_Decorator_Unicode implements Zend_Text_Table_Decorator_Interface$/;"	c
char	library\Zend\Text\Table\Decorator\Unicode.php	/^            $char =  chr(0xE0 | $code >> 12)$/;"	v
char	library\Zend\Text\Table\Decorator\Unicode.php	/^            $char =  chr(0xF0 | $code >> 18)$/;"	v
char	library\Zend\Text\Table\Decorator\Unicode.php	/^            $char = chr($code);$/;"	v
char	library\Zend\Text\Table\Decorator\Unicode.php	/^            $char = chr(0xC0 | $code >> 6)$/;"	v
Zend_Text_Table_Exception	library\Zend\Text\Table\Exception.php	/^class Zend_Text_Table_Exception extends Zend_Text_Exception$/;"	c
Zend_Text_Table_Row	library\Zend\Text\Table\Row.php	/^class Zend_Text_Table_Row$/;"	c
align	library\Zend\Text\Table\Row.php	/^        $align    = null;$/;"	v
colNum	library\Zend\Text\Table\Row.php	/^        $colNum          = 0;$/;"	v
colSpan	library\Zend\Text\Table\Row.php	/^            $colSpan = $column->getColSpan();$/;"	v
colSpan	library\Zend\Text\Table\Row.php	/^        $colSpan  = null;$/;"	v
column	library\Zend\Text\Table\Row.php	/^        $column = new Zend_Text_Table_Column($content, $align, $colSpan, $encoding);$/;"	v
columnWidth	library\Zend\Text\Table\Row.php	/^            $columnWidth = ($colSpan - 1 + array_sum(array_slice($columnWidths,$/;"	v
encoding	library\Zend\Text\Table\Row.php	/^        $encoding = null;$/;"	v
maxHeight	library\Zend\Text\Table\Row.php	/^            $maxHeight         = max($maxHeight, count($result));$/;"	v
maxHeight	library\Zend\Text\Table\Row.php	/^        $maxHeight       = 0;$/;"	v
padding	library\Zend\Text\Table\Row.php	/^                           $padding = 0)$/;"	v
remainingWidth	library\Zend\Text\Table\Row.php	/^            $remainingWidth = (count($columnWidths) - $colNum - 1) +$/;"	v
renderedColumns	library\Zend\Text\Table\Row.php	/^        $renderedColumns = array();$/;"	v
result	library\Zend\Text\Table\Row.php	/^            $result = explode("\\n", $column->render($columnWidth, $padding));$/;"	v
result	library\Zend\Text\Table\Row.php	/^        $result = '';$/;"	v
Zend_TimeSync	library\Zend\TimeSync.php	/^class Zend_TimeSync implements IteratorAggregate$/;"	c
adress	library\Zend\TimeSync.php	/^                $adress = substr($adress, 0, $pos);$/;"	v
adress	library\Zend\TimeSync.php	/^            $adress = $target;$/;"	v
adress	library\Zend\TimeSync.php	/^            $adress = substr($target, $pos + 3);$/;"	v
className	library\Zend\TimeSync.php	/^        $className = 'Zend_TimeSync_' . $protocol;$/;"	v
masterException	library\Zend\TimeSync.php	/^                    $masterException = new Zend_TimeSync_Exception('all timeservers are bogus');$/;"	v
port	library\Zend\TimeSync.php	/^                $port = null;$/;"	v
port	library\Zend\TimeSync.php	/^                $port = substr($adress, $pos + 1);$/;"	v
port	library\Zend\TimeSync.php	/^            $port = null;$/;"	v
posbr	library\Zend\TimeSync.php	/^            $posbr = strpos($adress, ']');$/;"	v
protocol	library\Zend\TimeSync.php	/^            $protocol = self::DEFAULT_PROTOCOL;$/;"	v
protocol	library\Zend\TimeSync.php	/^            $protocol = substr($target, 0, $pos);$/;"	v
protocol	library\Zend\TimeSync.php	/^        $protocol = ucfirst(strtolower($protocol));$/;"	v
timeServerObj	library\Zend\TimeSync.php	/^        $timeServerObj = new $className($adress, $port);$/;"	v
Zend_TimeSync_Exception	library\Zend\TimeSync\Exception.php	/^class Zend_TimeSync_Exception extends Zend_Exception$/;"	c
Zend_TimeSync_Ntp	library\Zend\TimeSync\Ntp.php	/^class Zend_TimeSync_Ntp extends Zend_TimeSync_Protocol$/;"	c
f1	library\Zend\TimeSync\Ntp.php	/^        $f1  = $f2 . '.' . $f3;$/;"	v
f1	library\Zend\TimeSync\Ntp.php	/^        $f1  = (ord($input[0]) * pow(256, 3));$/;"	v
f1	library\Zend\TimeSync\Ntp.php	/^        $f1  = str_pad(ord($input[0]), 2, '0', STR_PAD_LEFT);$/;"	v
f2	library\Zend\TimeSync\Ntp.php	/^        $f2  = $f1 >> 17;$/;"	v
f2	library\Zend\TimeSync\Ntp.php	/^        $f2  = (ord($input[4]) * pow(256, 3));$/;"	v
f3	library\Zend\TimeSync\Ntp.php	/^        $f3  = ($f1 & 0x0001FFFF);$/;"	v
flags	library\Zend\TimeSync\Ntp.php	/^        $flags = ord(fread($this->_socket, 1));$/;"	v
frac	library\Zend\TimeSync\Ntp.php	/^        $frac   = microtime();$/;"	v
fracba	library\Zend\TimeSync\Ntp.php	/^        $fracba = ($frac & 0xff000000) >> 24;$/;"	v
fracbb	library\Zend\TimeSync\Ntp.php	/^        $fracbb = ($frac & 0x00ff0000) >> 16;$/;"	v
fracbc	library\Zend\TimeSync\Ntp.php	/^        $fracbc = ($frac & 0x0000ff00) >> 8;$/;"	v
fracbd	library\Zend\TimeSync\Ntp.php	/^        $fracbd = ($frac & 0x000000ff);$/;"	v
info	library\Zend\TimeSync\Ntp.php	/^        $info  = stream_get_meta_data($this->_socket);$/;"	v
leap	library\Zend\TimeSync\Ntp.php	/^        $leap = ($binary['flags'] & 0xc0) >> 6;$/;"	v
mode	library\Zend\TimeSync\Ntp.php	/^        $mode = ($binary['flags'] & 0x07);$/;"	v
ntppacket	library\Zend\TimeSync\Ntp.php	/^        $ntppacket = chr(0xd9) . $nul . chr(0x0a) . chr(0xfa);$/;"	v
ntpserviceid	library\Zend\TimeSync\Ntp.php	/^                    $ntpserviceid = 'Atomic Clock (calibrated)';$/;"	v
ntpserviceid	library\Zend\TimeSync\Ntp.php	/^                    $ntpserviceid = 'DCN routing protocol';$/;"	v
ntpserviceid	library\Zend\TimeSync\Ntp.php	/^                    $ntpserviceid = 'Digital Time Service';$/;"	v
ntpserviceid	library\Zend\TimeSync\Ntp.php	/^                    $ntpserviceid = 'GOES UHF environment satellite';$/;"	v
ntpserviceid	library\Zend\TimeSync\Ntp.php	/^                    $ntpserviceid = 'GPS UHF satellite positioning';$/;"	v
ntpserviceid	library\Zend\TimeSync\Ntp.php	/^                    $ntpserviceid = 'Generic radio';$/;"	v
ntpserviceid	library\Zend\TimeSync\Ntp.php	/^                    $ntpserviceid = 'LORAN-C radionavigation';$/;"	v
ntpserviceid	library\Zend\TimeSync\Ntp.php	/^                    $ntpserviceid = 'NIST public modem';$/;"	v
ntpserviceid	library\Zend\TimeSync\Ntp.php	/^                    $ntpserviceid = 'TSP time protocol';$/;"	v
ntpserviceid	library\Zend\TimeSync\Ntp.php	/^                    $ntpserviceid = 'VLF radio';$/;"	v
ntpserviceid	library\Zend\TimeSync\Ntp.php	/^                $ntpserviceid  = ord(substr($binary['referenceid'], 0, 1));$/;"	v
ntpserviceid	library\Zend\TimeSync\Ntp.php	/^        $ntpserviceid = 'Unknown Stratum ' . $binary['stratum'] . ' Service';$/;"	v
nul	library\Zend\TimeSync\Ntp.php	/^        $nul       = chr(0x00);$/;"	v
nulbyte	library\Zend\TimeSync\Ntp.php	/^        $nulbyte   = $nul . $nul . $nul . $nul;$/;"	v
refid	library\Zend\TimeSync\Ntp.php	/^        $refid = strtoupper($binary['referenceid']);$/;"	v
result	library\Zend\TimeSync\Ntp.php	/^        $result = array($/;"	v
sec	library\Zend\TimeSync\Ntp.php	/^        $sec   = (time() + 2208988800);$/;"	v
secba	library\Zend\TimeSync\Ntp.php	/^        $secba = ($sec & 0xff000000) >> 24;$/;"	v
secbb	library\Zend\TimeSync\Ntp.php	/^        $secbb = ($sec & 0x00ff0000) >> 16;$/;"	v
secbc	library\Zend\TimeSync\Ntp.php	/^        $secbc = ($sec & 0x0000ff00) >> 8;$/;"	v
secbd	library\Zend\TimeSync\Ntp.php	/^        $secbd = ($sec & 0x000000ff);$/;"	v
time	library\Zend\TimeSync\Ntp.php	/^        $time = (time() - $this->_info['offset']);$/;"	v
date	library\Zend\TimeSync\Protocol.php	/^        $date = new Zend_Date($this, null, $locale);$/;"	v
socket	library\Zend\TimeSync\Protocol.php	/^        $socket = @fsockopen($this->_timeserver, $this->_port, $errno, $errstr,$/;"	v
timestamp	library\Zend\TimeSync\Protocol.php	/^            $timestamp = $this->_extract($this->_read());$/;"	v
timestamp	library\Zend\TimeSync\Protocol.php	/^        $timestamp = $this->_extract($this->_read());$/;"	v
Zend_TimeSync_Sntp	library\Zend\TimeSync\Sntp.php	/^class Zend_TimeSync_Sntp extends Zend_TimeSync_Protocol$/;"	c
dec	library\Zend\TimeSync\Sntp.php	/^        $dec   = hexdec('7fffffff');$/;"	v
result	library\Zend\TimeSync\Sntp.php	/^        $result       = fread($this->_socket, 49);$/;"	v
time	library\Zend\TimeSync\Sntp.php	/^        $time  = abs(($dec - hexdec(bin2hex($result))) - $dec);$/;"	v
Zend_Tool_Framework_Action_Base	library\Zend\Tool\Framework\Action\Base.php	/^class Zend_Tool_Framework_Action_Base implements Zend_Tool_Framework_Action_Interface$/;"	c
actionName	library\Zend\Tool\Framework\Action\Base.php	/^        $actionName = substr($className, strrpos($className, '_')+1);$/;"	v
className	library\Zend\Tool\Framework\Action\Base.php	/^        $className = get_class($this);$/;"	v
Zend_Tool_Framework_Action_Exception	library\Zend\Tool\Framework\Action\Exception.php	/^class Zend_Tool_Framework_Action_Exception extends Zend_Tool_Framework_Exception$/;"	c
Zend_Tool_Framework_Action_Repository	library\Zend\Tool\Framework\Action\Repository.php	/^class Zend_Tool_Framework_Action_Repository$/;"	c
actionName	library\Zend\Tool\Framework\Action\Repository.php	/^        $actionName = $action->getName();$/;"	v
actionName	library\Zend\Tool\Framework\Client\Abstract.php	/^        $actionName = $this->_registry->getRequest()->getActionName();$/;"	v
callParameters	library\Zend\Tool\Framework\Client\Abstract.php	/^        $callParameters = array();$/;"	v
inputHandler	library\Zend\Tool\Framework\Client\Abstract.php	/^        $inputHandler = new Zend_Tool_Framework_Client_Interactive_InputHandler();$/;"	v
manifest	library\Zend\Tool\Framework\Client\Abstract.php	/^        $manifest = $this->_registry->getManifestRepository();$/;"	v
methodName	library\Zend\Tool\Framework\Client\Abstract.php	/^        $methodName       = $actionableMethod['methodName'];$/;"	v
methodParameters	library\Zend\Tool\Framework\Client\Abstract.php	/^        $methodParameters = $actionableMethod['parameterInfo'];$/;"	v
parameterPromptValue	library\Zend\Tool\Framework\Client\Abstract.php	/^                    $parameterPromptValue = $this->promptInteractiveInput($promptSting)->getContent();$/;"	v
promptSting	library\Zend\Tool\Framework\Client\Abstract.php	/^                    $promptSting = $this->getMissingParameterPromptString($provider, $actionableMethod['action'], $methodParameterValue['name']);$/;"	v
provider	library\Zend\Tool\Framework\Client\Abstract.php	/^        $provider = $providerSignature->getProvider();$/;"	v
providerRepository	library\Zend\Tool\Framework\Client\Abstract.php	/^        $providerRepository = $this->_registry->getProviderRepository();$/;"	v
providerSignature	library\Zend\Tool\Framework\Client\Abstract.php	/^        $providerSignature = $providerRepository->getProviderSignature($request->getProviderName());$/;"	v
registry	library\Zend\Tool\Framework\Client\Abstract.php	/^        $registry = new Zend_Tool_Framework_Registry();$/;"	v
request	library\Zend\Tool\Framework\Client\Abstract.php	/^        $request = $this->_registry->getRequest();$/;"	v
requestParameters	library\Zend\Tool\Framework\Client\Abstract.php	/^        $requestParameters = $this->_registry->getRequest()->getProviderParameters();$/;"	v
setMethodName	library\Zend\Tool\Framework\Client\Abstract.php	/^            $setMethodName = 'set' . $optionName;$/;"	v
specialtyName	library\Zend\Tool\Framework\Client\Abstract.php	/^        $specialtyName = $this->_registry->getRequest()->getSpecialtyName();$/;"	v
Zend_Tool_Framework_Client_Config	library\Zend\Tool\Framework\Client\Config.php	/^class Zend_Tool_Framework_Client_Config$/;"	c
setMethodName	library\Zend\Tool\Framework\Client\Config.php	/^            $setMethodName = 'set' . $optionName;$/;"	v
suffix	library\Zend\Tool\Framework\Client\Config.php	/^        $suffix = substr($configFilepath, -4);$/;"	v
suffix	library\Zend\Tool\Framework\Client\Config.php	/^        $suffix = substr($this->getConfigFilepath(), -4);$/;"	v
writer	library\Zend\Tool\Framework\Client\Config.php	/^                $writer = new Zend_Config_Writer_Array();$/;"	v
writer	library\Zend\Tool\Framework\Client\Config.php	/^                $writer = new Zend_Config_Writer_Ini();$/;"	v
writer	library\Zend\Tool\Framework\Client\Config.php	/^                $writer = new Zend_Config_Writer_Xml();$/;"	v
writer	library\Zend\Tool\Framework\Client\Config.php	/^            $writer = $this->getConfigWriter();$/;"	v
Zend_Tool_Framework_Client_Console	library\Zend\Tool\Framework\Client\Console.php	/^class Zend_Tool_Framework_Client_Console$/;"	c
classesToLoad	library\Zend\Tool\Framework\Client\Console.php	/^                $classesToLoad = array_merge($classesToLoad, $this->_classesToLoad);$/;"	v
classesToLoad	library\Zend\Tool\Framework\Client\Console.php	/^        $classesToLoad = array($/;"	v
cliClient	library\Zend\Tool\Framework\Client\Console.php	/^        $cliClient = new self($options);$/;"	v
config	library\Zend\Tool\Framework\Client\Console.php	/^        $config = $this->_registry->getConfig();$/;"	v
filter	library\Zend\Tool\Framework\Client\Console.php	/^            $filter = new Zend_Filter();$/;"	v
helpSystem	library\Zend\Tool\Framework\Client\Console.php	/^            $helpSystem = new Zend_Tool_Framework_Client_Console_HelpSystem();$/;"	v
inputContent	library\Zend\Tool\Framework\Client\Console.php	/^        $inputContent = fgets(STDIN);$/;"	v
optParser	library\Zend\Tool\Framework\Client\Console.php	/^        $optParser = new Zend_Tool_Framework_Client_Console_ArgumentParser();$/;"	v
request	library\Zend\Tool\Framework\Client\Console.php	/^        $request = $this->_registry->getRequest();$/;"	v
response	library\Zend\Tool\Framework\Client\Console.php	/^        $response = $this->_registry->getResponse();$/;"	v
storage	library\Zend\Tool\Framework\Client\Console.php	/^        $storage = $this->_registry->getStorage();$/;"	v
Zend_Tool_Framework_Client_Console_ArgumentParser	library\Zend\Tool\Framework\Client\Console\ArgumentParser.php	/^class Zend_Tool_Framework_Client_Console_ArgumentParser implements Zend_Tool_Framework_Registry_EnabledInterface$/;"	c
actionMetadata	library\Zend\Tool\Framework\Client\Console\ArgumentParser.php	/^            $actionMetadata = $this->_manifestRepository->getMetadata($actionSearchCriteria);$/;"	v
actionMetadata	library\Zend\Tool\Framework\Client\Console\ArgumentParser.php	/^        $actionMetadata = $this->_manifestRepository->getMetadata($actionSearchCriteria);$/;"	v
actionSearchCriteria	library\Zend\Tool\Framework\Client\Console\ArgumentParser.php	/^        $actionSearchCriteria = array($/;"	v
actionableMethodLongParamsMetadata	library\Zend\Tool\Framework\Client\Console\ArgumentParser.php	/^        $actionableMethodLongParamsMetadata = $this->_manifestRepository->getMetadata($/;"	v
actionableMethodLongParamsMetadataReference	library\Zend\Tool\Framework\Client\Console\ArgumentParser.php	/^        $actionableMethodLongParamsMetadataReference = $actionableMethodLongParamsMetadata->getReference();$/;"	v
actionableMethodShortParamsMetadata	library\Zend\Tool\Framework\Client\Console\ArgumentParser.php	/^        $actionableMethodShortParamsMetadata = $this->_manifestRepository->getMetadata($/;"	v
consoleActionName	library\Zend\Tool\Framework\Client\Console\ArgumentParser.php	/^        $consoleActionName = array_shift($this->_argumentsWorking);$/;"	v
consoleProviderFull	library\Zend\Tool\Framework\Client\Console\ArgumentParser.php	/^        $consoleProviderFull = array_shift($this->_argumentsWorking);$/;"	v
consoleProviderName	library\Zend\Tool\Framework\Client\Console\ArgumentParser.php	/^            $consoleProviderName = $consoleProviderFull;$/;"	v
consoleSpecialtyName	library\Zend\Tool\Framework\Client\Console\ArgumentParser.php	/^        $consoleSpecialtyName = '_global';$/;"	v
getoptOptions	library\Zend\Tool\Framework\Client\Console\ArgumentParser.php	/^        $getoptOptions = array();$/;"	v
getoptParser	library\Zend\Tool\Framework\Client\Console\ArgumentParser.php	/^        $getoptParser = new Zend_Console_Getopt($getoptOptions, $this->_argumentsWorking, array('parseAll' => false));$/;"	v
helpResponseOptions	library\Zend\Tool\Framework\Client\Console\ArgumentParser.php	/^            $helpResponseOptions = array_merge($/;"	v
helpResponseOptions	library\Zend\Tool\Framework\Client\Console\ArgumentParser.php	/^        $helpResponseOptions = array();$/;"	v
helpSystem	library\Zend\Tool\Framework\Client\Console\ArgumentParser.php	/^        $helpSystem = new Zend_Tool_Framework_Client_Console_HelpSystem();$/;"	v
longParamCanonicalNames	library\Zend\Tool\Framework\Client\Console\ArgumentParser.php	/^        $longParamCanonicalNames = array();$/;"	v
optionConfig	library\Zend\Tool\Framework\Client\Console\ArgumentParser.php	/^            $optionConfig = $consoleParameterNameLong . '|';$/;"	v
paramNameShortValues	library\Zend\Tool\Framework\Client\Console\ArgumentParser.php	/^        $paramNameShortValues = $actionableMethodShortParamsMetadata->getValue();$/;"	v
parameterInfo	library\Zend\Tool\Framework\Client\Console\ArgumentParser.php	/^            $parameterInfo = $actionableMethodLongParamsMetadataReference['parameterInfo'][$parameterNameLong];$/;"	v
property	library\Zend\Tool\Framework\Client\Console\ArgumentParser.php	/^                $property = '_'.$option;$/;"	v
providerMetadata	library\Zend\Tool\Framework\Client\Console\ArgumentParser.php	/^            $providerMetadata = $this->_manifestRepository->getMetadata($providerSearchCriteria);$/;"	v
providerMetadata	library\Zend\Tool\Framework\Client\Console\ArgumentParser.php	/^        $providerMetadata = $this->_manifestRepository->getMetadata($providerSearchCriteria);$/;"	v
providerParamOption	library\Zend\Tool\Framework\Client\Console\ArgumentParser.php	/^            $providerParamOption = $longParamCanonicalNames[$option];$/;"	v
providerSearchCriteria	library\Zend\Tool\Framework\Client\Console\ArgumentParser.php	/^        $providerSearchCriteria = array($/;"	v
providerSpecialtyMetadata	library\Zend\Tool\Framework\Client\Console\ArgumentParser.php	/^            $providerSpecialtyMetadata = $this->_manifestRepository->getMetadata($providerSpecialtySearchCriteria);$/;"	v
providerSpecialtyMetadata	library\Zend\Tool\Framework\Client\Console\ArgumentParser.php	/^        $providerSpecialtyMetadata = $this->_manifestRepository->getMetadata($providerSpecialtySearchCriteria);$/;"	v
providerSpecialtySearchCriteria	library\Zend\Tool\Framework\Client\Console\ArgumentParser.php	/^        $providerSpecialtySearchCriteria = array($/;"	v
searchParams	library\Zend\Tool\Framework\Client\Console\ArgumentParser.php	/^        $searchParams = array($/;"	v
value	library\Zend\Tool\Framework\Client\Console\ArgumentParser.php	/^            $value = $getoptParser->getOption($option);$/;"	v
wordArguments	library\Zend\Tool\Framework\Client\Console\ArgumentParser.php	/^        $wordArguments = array();$/;"	v
wordStack	library\Zend\Tool\Framework\Client\Console\ArgumentParser.php	/^        $wordStack = array();$/;"	v
Zend_Tool_Framework_Client_Console_HelpSystem	library\Zend\Tool\Framework\Client\Console\HelpSystem.php	/^class Zend_Tool_Framework_Client_Console_HelpSystem$/;"	c
actionIsGlobal	library\Zend\Tool\Framework\Client\Console\HelpSystem.php	/^                    $actionIsGlobal = false;$/;"	v
actionIsGlobal	library\Zend\Tool\Framework\Client\Console\HelpSystem.php	/^                    $actionIsGlobal = true;$/;"	v
actionMetadata	library\Zend\Tool\Framework\Client\Console\HelpSystem.php	/^                    $actionMetadata = $displayActionMetadatas[$foundActionIndex];$/;"	v
actionMetadatasSearch	library\Zend\Tool\Framework\Client\Console\HelpSystem.php	/^            $actionMetadatasSearch = array_merge($actionMetadatasSearch, array('actionName' => $actionNameFilter));$/;"	v
actionMetadatasSearch	library\Zend\Tool\Framework\Client\Console\HelpSystem.php	/^        $actionMetadatasSearch = array($/;"	v
actionName	library\Zend\Tool\Framework\Client\Console\HelpSystem.php	/^                $actionName = $actionInfo->getName();$/;"	v
actionableGlobalLongParamMetadata	library\Zend\Tool\Framework\Client\Console\HelpSystem.php	/^                $actionableGlobalLongParamMetadata = $manifest->getMetadata(array($/;"	v
actionableGlobalMetadatas	library\Zend\Tool\Framework\Client\Console\HelpSystem.php	/^                $actionableGlobalMetadatas = $manifest->getMetadatas(array($/;"	v
actionableSpecialtyLongMetadata	library\Zend\Tool\Framework\Client\Console\HelpSystem.php	/^                        $actionableSpecialtyLongMetadata = $manifest->getMetadata(array($/;"	v
displayActionMetadatas	library\Zend\Tool\Framework\Client\Console\HelpSystem.php	/^        $displayActionMetadatas = $manifest->getMetadatas($actionMetadatasSearch);$/;"	v
displayProviderMetadatas	library\Zend\Tool\Framework\Client\Console\HelpSystem.php	/^        $displayProviderMetadatas = $manifest->getMetadatas($providerMetadatasSearch);$/;"	v
errorMessages	library\Zend\Tool\Framework\Client\Console\HelpSystem.php	/^        $errorMessages = explode(PHP_EOL, wordwrap($errorMessage, 70, PHP_EOL, false));$/;"	v
isSingleSpecialProviderAction	library\Zend\Tool\Framework\Client\Console\HelpSystem.php	/^                    $isSingleSpecialProviderAction = true;$/;"	v
isSingleSpecialProviderAction	library\Zend\Tool\Framework\Client\Console\HelpSystem.php	/^                $isSingleSpecialProviderAction = false;$/;"	v
manifest	library\Zend\Tool\Framework\Client\Console\HelpSystem.php	/^        $manifest = $this->_registry->getManifestRepository();$/;"	v
methodInfo	library\Zend\Tool\Framework\Client\Console\HelpSystem.php	/^            $methodInfo = $parameterLongMetadata->getReference();$/;"	v
noSeparator	library\Zend\Tool\Framework\Client\Console\HelpSystem.php	/^        $noSeparator = array('separator' => false);$/;"	v
paramString	library\Zend\Tool\Framework\Client\Console\HelpSystem.php	/^            $paramString = ' ' . $consoleParamName;$/;"	v
providerMetadatasSearch	library\Zend\Tool\Framework\Client\Console\HelpSystem.php	/^            $providerMetadatasSearch = array_merge($providerMetadatasSearch, array('providerName' => $providerNameFilter));$/;"	v
providerMetadatasSearch	library\Zend\Tool\Framework\Client\Console\HelpSystem.php	/^        $providerMetadatasSearch = array($/;"	v
providerName	library\Zend\Tool\Framework\Client\Console\HelpSystem.php	/^            $providerName = $providerMetadata->getProviderName();$/;"	v
providerNameDisplayed	library\Zend\Tool\Framework\Client\Console\HelpSystem.php	/^                        $providerNameDisplayed = true;$/;"	v
providerNameDisplayed	library\Zend\Tool\Framework\Client\Console\HelpSystem.php	/^                    $providerNameDisplayed = true;$/;"	v
providerNameDisplayed	library\Zend\Tool\Framework\Client\Console\HelpSystem.php	/^            $providerNameDisplayed = false;$/;"	v
providerSignature	library\Zend\Tool\Framework\Client\Console\HelpSystem.php	/^            $providerSignature = $providerMetadata->getReference();$/;"	v
specialtyMetadata	library\Zend\Tool\Framework\Client\Console\HelpSystem.php	/^                        $specialtyMetadata = $manifest->getMetadata(array($/;"	v
specialtyMetadata	library\Zend\Tool\Framework\Client\Console\HelpSystem.php	/^                $specialtyMetadata = $manifest->getMetadata(array($/;"	v
text	library\Zend\Tool\Framework\Client\Console\HelpSystem.php	/^        $text = 'An Error Has Occurred';$/;"	v
Zend_Tool_Framework_Client_Console_Manifest	library\Zend\Tool\Framework\Client\Console\Manifest.php	/^class Zend_Tool_Framework_Client_Console_Manifest$/;"	c
actionRepository	library\Zend\Tool\Framework\Client\Console\Manifest.php	/^        $actionRepository   = $this->_registry->getActionRepository();$/;"	v
ccToDashedFilter	library\Zend\Tool\Framework\Client\Console\Manifest.php	/^        $ccToDashedFilter = new Zend_Filter();$/;"	v
metadatas	library\Zend\Tool\Framework\Client\Console\Manifest.php	/^        $metadatas = array();$/;"	v
methodLongParams	library\Zend\Tool\Framework\Client\Console\Manifest.php	/^                $methodLongParams  = array();$/;"	v
methodShortParams	library\Zend\Tool\Framework\Client\Console\Manifest.php	/^                $methodShortParams = array();$/;"	v
providerRepository	library\Zend\Tool\Framework\Client\Console\Manifest.php	/^        $providerRepository = $this->_registry->getProviderRepository();$/;"	v
Zend_Tool_Framework_Client_Console_ResponseDecorator_AlignCenter	library\Zend\Tool\Framework\Client\Console\ResponseDecorator\AlignCenter.php	/^class Zend_Tool_Framework_Client_Console_ResponseDecorator_AlignCenter$/;"	c
append	library\Zend\Tool\Framework\Client\Console\ResponseDecorator\AlignCenter.php	/^                    $append = false;$/;"	v
append	library\Zend\Tool\Framework\Client\Console\ResponseDecorator\AlignCenter.php	/^                    $append = true;$/;"	v
append	library\Zend\Tool\Framework\Client\Console\ResponseDecorator\AlignCenter.php	/^            $append = false;$/;"	v
content	library\Zend\Tool\Framework\Client\Console\ResponseDecorator\AlignCenter.php	/^                    $content = " ".$content;$/;"	v
content	library\Zend\Tool\Framework\Client\Console\ResponseDecorator\AlignCenter.php	/^                    $content = $content." ";$/;"	v
len	library\Zend\Tool\Framework\Client\Console\ResponseDecorator\AlignCenter.php	/^            $len = strlen($content);$/;"	v
lineLength	library\Zend\Tool\Framework\Client\Console\ResponseDecorator\AlignCenter.php	/^            $lineLength = 72;$/;"	v
Zend_Tool_Framework_Client_Console_ResponseDecorator_Blockize	library\Zend\Tool\Framework\Client\Console\ResponseDecorator\Blockize.php	/^class Zend_Tool_Framework_Client_Console_ResponseDecorator_Blockize$/;"	c
content	library\Zend\Tool\Framework\Client\Console\ResponseDecorator\Blockize.php	/^        $content = array();$/;"	v
lineLength	library\Zend\Tool\Framework\Client\Console\ResponseDecorator\Blockize.php	/^            $lineLength = 72;$/;"	v
lines	library\Zend\Tool\Framework\Client\Console\ResponseDecorator\Blockize.php	/^        $lines = explode(PHP_EOL, wordwrap($content, $lineLength, PHP_EOL, false));$/;"	v
Zend_Tool_Framework_Client_Console_ResponseDecorator_Colorizer	library\Zend\Tool\Framework\Client\Console\ResponseDecorator\Colorizer.php	/^class Zend_Tool_Framework_Client_Console_ResponseDecorator_Colorizer$/;"	c
color	library\Zend\Tool\Framework\Client\Console\ResponseDecorator\Colorizer.php	/^            $color = array($color);$/;"	v
newContent	library\Zend\Tool\Framework\Client\Console\ResponseDecorator\Colorizer.php	/^        $newContent = '';$/;"	v
Zend_Tool_Framework_Client_Console_ResponseDecorator_Indention	library\Zend\Tool\Framework\Client\Console\ResponseDecorator\Indention.php	/^class Zend_Tool_Framework_Client_Console_ResponseDecorator_Indention$/;"	c
lineIndention	library\Zend\Tool\Framework\Client\Console\ResponseDecorator\Indention.php	/^        $lineIndention = str_repeat(' ', $indention);$/;"	v
lines	library\Zend\Tool\Framework\Client\Console\ResponseDecorator\Indention.php	/^        $lines = preg_split('((\\r\\n|\\r|\\n)+)', $content);$/;"	v
newContent	library\Zend\Tool\Framework\Client\Console\ResponseDecorator\Indention.php	/^        $newContent = "";$/;"	v
Zend_Tool_Framework_Client_Exception	library\Zend\Tool\Framework\Client\Exception.php	/^class Zend_Tool_Framework_Client_Exception extends Zend_Tool_Framework_Exception$/;"	c
Zend_Tool_Framework_Client_Interactive_InputHandler	library\Zend\Tool\Framework\Client\Interactive\InputHandler.php	/^class Zend_Tool_Framework_Client_Interactive_InputHandler$/;"	c
inputRequest	library\Zend\Tool\Framework\Client\Interactive\InputHandler.php	/^            $inputRequest = new Zend_Tool_Framework_Client_Interactive_InputRequest($inputRequest);$/;"	v
inputResponse	library\Zend\Tool\Framework\Client\Interactive\InputHandler.php	/^            $inputResponse = new Zend_Tool_Framework_Client_Interactive_InputResponse($inputResponse);$/;"	v
inputResponse	library\Zend\Tool\Framework\Client\Interactive\InputHandler.php	/^        $inputResponse = $this->_client->handleInteractiveInputRequest($this->_inputRequest);$/;"	v
Zend_Tool_Framework_Client_Interactive_InputRequest	library\Zend\Tool\Framework\Client\Interactive\InputRequest.php	/^class Zend_Tool_Framework_Client_Interactive_InputRequest$/;"	c
Zend_Tool_Framework_Client_Interactive_InputResponse	library\Zend\Tool\Framework\Client\Interactive\InputResponse.php	/^class Zend_Tool_Framework_Client_Interactive_InputResponse$/;"	c
Zend_Tool_Framework_Client_Manifest	library\Zend\Tool\Framework\Client\Manifest.php	/^class Zend_Tool_Framework_Client_Manifest$/;"	c
actionRepository	library\Zend\Tool\Framework\Client\Manifest.php	/^        $actionRepository   = $this->_registry->getActionRepository();$/;"	v
lowerFilter	library\Zend\Tool\Framework\Client\Manifest.php	/^        $lowerFilter = new Zend_Filter();$/;"	v
metadatas	library\Zend\Tool\Framework\Client\Manifest.php	/^        $metadatas = array();$/;"	v
methodLongParams	library\Zend\Tool\Framework\Client\Manifest.php	/^                $methodLongParams  = array();$/;"	v
methodShortParams	library\Zend\Tool\Framework\Client\Manifest.php	/^                $methodShortParams = array();$/;"	v
providerRepository	library\Zend\Tool\Framework\Client\Manifest.php	/^        $providerRepository = $this->_registry->getProviderRepository();$/;"	v
Zend_Tool_Framework_Client_Request	library\Zend\Tool\Framework\Client\Request.php	/^class Zend_Tool_Framework_Client_Request$/;"	c
Zend_Tool_Framework_Client_Response	library\Zend\Tool\Framework\Client\Response.php	/^class Zend_Tool_Framework_Client_Response$/;"	c
content	library\Zend\Tool\Framework\Client\Response.php	/^                    $content = $decorator->decorate($content, $options[$decoratorName]);$/;"	v
content	library\Zend\Tool\Framework\Client\Response.php	/^        $content = $this->_applyDecorators($content, $decoratorOptions);$/;"	v
decoratorName	library\Zend\Tool\Framework\Client\Response.php	/^        $decoratorName = strtolower($contentDecorator->getName());$/;"	v
options	library\Zend\Tool\Framework\Client\Response.php	/^        $options = array_change_key_case($options, CASE_LOWER);$/;"	v
options	library\Zend\Tool\Framework\Client\Response.php	/^        $options = array_merge($this->_defaultDecoratorOptions, $decoratorOptions);$/;"	v
Zend_Tool_Framework_Client_Response_ContentDecorator_Separator	library\Zend\Tool\Framework\Client\Response\ContentDecorator\Separator.php	/^class Zend_Tool_Framework_Client_Response_ContentDecorator_Separator$/;"	c
run	library\Zend\Tool\Framework\Client\Response\ContentDecorator\Separator.php	/^            $run = $decoratorValue;$/;"	v
run	library\Zend\Tool\Framework\Client\Response\ContentDecorator\Separator.php	/^        $run = 1;$/;"	v
Zend_Tool_Framework_Client_Storage	library\Zend\Tool\Framework\Client\Storage.php	/^class Zend_Tool_Framework_Client_Storage$/;"	c
adapter	library\Zend\Tool\Framework\Client\Storage.php	/^            $adapter = new $storageAdapterClass();$/;"	v
storageAdapterClass	library\Zend\Tool\Framework\Client\Storage.php	/^            $storageAdapterClass = 'Zend_Tool_Framework_Client_Storage_' . ucfirst($adapter);$/;"	v
Zend_Tool_Framework_Client_Storage_Directory	library\Zend\Tool\Framework\Client\Storage\Directory.php	/^class Zend_Tool_Framework_Client_Storage_Directory$/;"	c
Zend_Tool_Framework_Exception	library\Zend\Tool\Framework\Exception.php	/^class Zend_Tool_Framework_Exception extends Zend_Exception$/;"	c
classesLoadedAfter	library\Zend\Tool\Framework\Loader\Abstract.php	/^            $classesLoadedAfter = get_declared_classes();$/;"	v
classesLoadedBefore	library\Zend\Tool\Framework\Loader\Abstract.php	/^            $classesLoadedBefore = get_declared_classes();$/;"	v
loadedClasses	library\Zend\Tool\Framework\Loader\Abstract.php	/^            $loadedClasses = array_merge($loadedClasses, array_diff($classesLoadedAfter, $classesLoadedBefore));$/;"	v
loadedClasses	library\Zend\Tool\Framework\Loader\Abstract.php	/^        $loadedClasses = array();$/;"	v
manifestRepository	library\Zend\Tool\Framework\Loader\Abstract.php	/^        $manifestRepository = $this->_registry->getManifestRepository();$/;"	v
oldLevel	library\Zend\Tool\Framework\Loader\Abstract.php	/^            $oldLevel = error_reporting(E_ALL | ~E_STRICT); \/\/ remove strict so that other packages wont throw warnings$/;"	v
providerRepository	library\Zend\Tool\Framework\Loader\Abstract.php	/^        $providerRepository = $this->_registry->getProviderRepository();$/;"	v
reflectionClass	library\Zend\Tool\Framework\Loader\Abstract.php	/^            $reflectionClass = new ReflectionClass($loadedClass);$/;"	v
Zend_Tool_Framework_Loader_BasicLoader	library\Zend\Tool\Framework\Loader\BasicLoader.php	/^class Zend_Tool_Framework_Loader_BasicLoader$/;"	c
loadedClasses	library\Zend\Tool\Framework\Loader\BasicLoader.php	/^        $loadedClasses = array();$/;"	v
manifestRegistry	library\Zend\Tool\Framework\Loader\BasicLoader.php	/^        $manifestRegistry = $this->_registry->getManifestRepository();$/;"	v
providerRegistry	library\Zend\Tool\Framework\Loader\BasicLoader.php	/^        $providerRegistry = $this->_registry->getProviderRepository();$/;"	v
reflectionClass	library\Zend\Tool\Framework\Loader\BasicLoader.php	/^            $reflectionClass = new ReflectionClass($class);$/;"	v
setMethod	library\Zend\Tool\Framework\Loader\BasicLoader.php	/^            $setMethod = 'set' . $optionName;$/;"	v
Zend_Tool_Framework_Loader_IncludePathLoader	library\Zend\Tool\Framework\Loader\IncludePathLoader.php	/^class Zend_Tool_Framework_Loader_IncludePathLoader extends Zend_Tool_Framework_Loader_Abstract$/;"	c
blacklist	library\Zend\Tool\Framework\Loader\IncludePathLoader.php	/^        $blacklist = array($/;"	v
file	library\Zend\Tool\Framework\Loader\IncludePathLoader.php	/^                $file = (string)$item;$/;"	v
files	library\Zend\Tool\Framework\Loader\IncludePathLoader.php	/^        $files           = array();$/;"	v
filter	library\Zend\Tool\Framework\Loader\IncludePathLoader.php	/^            $filter = new Zend_Tool_Framework_Loader_IncludePathLoader_RecursiveFilterIterator($/;"	v
filterAcceptFilePattern	library\Zend\Tool\Framework\Loader\IncludePathLoader.php	/^            $filterAcceptFilePattern    = '.*(?:Manifest|Provider)\\.php$';$/;"	v
filterDenyDirectoryPattern	library\Zend\Tool\Framework\Loader\IncludePathLoader.php	/^                    $filterDenyDirectoryPattern = '.*((\/|\\\\\\\\).svn|' . preg_quote($realIncludePath . DIRECTORY_SEPARATOR) . 'Zend)';$/;"	v
filterDenyDirectoryPattern	library\Zend\Tool\Framework\Loader\IncludePathLoader.php	/^            $filterDenyDirectoryPattern = '.*(\/|\\\\\\\\).svn';$/;"	v
isZendTraversed	library\Zend\Tool\Framework\Loader\IncludePathLoader.php	/^                    $isZendTraversed = true;$/;"	v
isZendTraversed	library\Zend\Tool\Framework\Loader\IncludePathLoader.php	/^        $isZendTraversed = false;$/;"	v
iterator	library\Zend\Tool\Framework\Loader\IncludePathLoader.php	/^            $iterator = new RecursiveIteratorIterator($filter);$/;"	v
paths	library\Zend\Tool\Framework\Loader\IncludePathLoader.php	/^        $paths = Zend_Loader::explodeIncludePath();$/;"	v
rdi	library\Zend\Tool\Framework\Loader\IncludePathLoader.php	/^            $rdi = new RecursiveDirectoryIterator($path);$/;"	v
realIncludePath	library\Zend\Tool\Framework\Loader\IncludePathLoader.php	/^            $realIncludePath = realpath($path);$/;"	v
relativeItem	library\Zend\Tool\Framework\Loader\IncludePathLoader.php	/^                $relativeItem = preg_replace('#^' . preg_quote($realIncludePath . DIRECTORY_SEPARATOR, '#') . '#', '', $item->getRealPath());$/;"	v
relativeItems	library\Zend\Tool\Framework\Loader\IncludePathLoader.php	/^        $relativeItems   = array();$/;"	v
Zend_Tool_Framework_Loader_IncludePathLoader_RecursiveFilterIterator	library\Zend\Tool\Framework\Loader\IncludePathLoader\RecursiveFilterIterator.php	/^class Zend_Tool_Framework_Loader_IncludePathLoader_RecursiveFilterIterator extends RecursiveFilterIterator$/;"	c
acceptable	library\Zend\Tool\Framework\Loader\IncludePathLoader\RecursiveFilterIterator.php	/^        $acceptable = (preg_match('#' . $this->_acceptFilePattern . '#', $currentNodeRealPath)) ? true : false;$/;"	v
currentNode	library\Zend\Tool\Framework\Loader\IncludePathLoader\RecursiveFilterIterator.php	/^        $currentNode = $this->current();$/;"	v
currentNodeRealPath	library\Zend\Tool\Framework\Loader\IncludePathLoader\RecursiveFilterIterator.php	/^        $currentNodeRealPath = $currentNode->getRealPath();$/;"	v
Zend_Tool_Framework_Manifest_ActionMetadata	library\Zend\Tool\Framework\Manifest\ActionMetadata.php	/^class Zend_Tool_Framework_Manifest_ActionMetadata$/;"	c
Zend_Tool_Framework_Manifest_Exception	library\Zend\Tool\Framework\Manifest\Exception.php	/^class Zend_Tool_Framework_Manifest_Exception extends Zend_Tool_Framework_Exception$/;"	c
Zend_Tool_Framework_Manifest_Metadata	library\Zend\Tool\Framework\Manifest\Metadata.php	/^class Zend_Tool_Framework_Manifest_Metadata$/;"	c
Zend_Tool_Framework_Manifest_ProviderMetadata	library\Zend\Tool\Framework\Manifest\ProviderMetadata.php	/^class Zend_Tool_Framework_Manifest_ProviderMetadata$/;"	c
Zend_Tool_Framework_Manifest_Repository	library\Zend\Tool\Framework\Manifest\Repository.php	/^class Zend_Tool_Framework_Manifest_Repository$/;"	c
action	library\Zend\Tool\Framework\Manifest\Repository.php	/^                    $action = new Zend_Tool_Framework_Action_Base($action);$/;"	v
actionRepository	library\Zend\Tool\Framework\Manifest\Repository.php	/^        $actionRepository   = $this->_registry->getActionRepository();$/;"	v
actions	library\Zend\Tool\Framework\Manifest\Repository.php	/^                $actions = array($actions);$/;"	v
actions	library\Zend\Tool\Framework\Manifest\Repository.php	/^            $actions = $manifest->getActions();$/;"	v
index	library\Zend\Tool\Framework\Manifest\Repository.php	/^            $index = $manifest->getIndex();$/;"	v
index	library\Zend\Tool\Framework\Manifest\Repository.php	/^        $index = count($this->_manifests);$/;"	v
metadata	library\Zend\Tool\Framework\Manifest\Repository.php	/^                        $metadata = new Zend_Tool_Framework_Metadata_Dynamic($metadata);$/;"	v
metadataString	library\Zend\Tool\Framework\Manifest\Repository.php	/^                $metadataString = '    ' . $metadata->__toString() . PHP_EOL;$/;"	v
metadatas	library\Zend\Tool\Framework\Manifest\Repository.php	/^                    $metadatas = array($metadatas);$/;"	v
metadatas	library\Zend\Tool\Framework\Manifest\Repository.php	/^                $metadatas = $manifest->getMetadata();$/;"	v
metadatas	library\Zend\Tool\Framework\Manifest\Repository.php	/^        $metadatas = $this->getMetadatas($searchProperties, $includeNonExistentProperties);$/;"	v
metadatasByType	library\Zend\Tool\Framework\Manifest\Repository.php	/^        $metadatasByType = array();$/;"	v
provider	library\Zend\Tool\Framework\Manifest\Repository.php	/^                    $provider = new $provider();$/;"	v
providerRepository	library\Zend\Tool\Framework\Manifest\Repository.php	/^        $providerRepository = $this->_registry->getProviderRepository();$/;"	v
providers	library\Zend\Tool\Framework\Manifest\Repository.php	/^                $providers = array($providers);$/;"	v
providers	library\Zend\Tool\Framework\Manifest\Repository.php	/^            $providers = $manifest->getProviders();$/;"	v
returnMetadatas	library\Zend\Tool\Framework\Manifest\Repository.php	/^        $returnMetadatas = array();$/;"	v
string	library\Zend\Tool\Framework\Manifest\Repository.php	/^        $string = '';$/;"	v
Zend_Tool_Framework_Metadata_Basic	library\Zend\Tool\Framework\Metadata\Basic.php	/^class Zend_Tool_Framework_Metadata_Basic$/;"	c
metadataPairValues	library\Zend\Tool\Framework\Metadata\Basic.php	/^        $metadataPairValues = array();$/;"	v
setMethod	library\Zend\Tool\Framework\Metadata\Basic.php	/^            $setMethod = 'set' . $optionName;$/;"	v
thisReflection	library\Zend\Tool\Framework\Metadata\Basic.php	/^        $thisReflection = new ReflectionObject($this);$/;"	v
varValue	library\Zend\Tool\Framework\Metadata\Basic.php	/^                    $varValue = '(null)';$/;"	v
varValue	library\Zend\Tool\Framework\Metadata\Basic.php	/^                    $varValue = '(object)';$/;"	v
Zend_Tool_Framework_Metadata_Dynamic	library\Zend\Tool\Framework\Metadata\Dynamic.php	/^class Zend_Tool_Framework_Metadata_Dynamic$/;"	c
methodName	library\Zend\Tool\Framework\Metadata\Dynamic.php	/^            $methodName = 'set' . $optName;$/;"	v
Zend_Tool_Framework_Metadata_Tool	library\Zend\Tool\Framework\Metadata\Tool.php	/^class Zend_Tool_Framework_Metadata_Tool extends Zend_Tool_Framework_Metadata_Basic$/;"	c
string	library\Zend\Tool\Framework\Metadata\Tool.php	/^        $string = parent::__toString();$/;"	v
Zend_Tool_Framework_Provider_Exception	library\Zend\Tool\Framework\Provider\Exception.php	/^class Zend_Tool_Framework_Provider_Exception extends Zend_Tool_Framework_Exception$/;"	c
Zend_Tool_Framework_Provider_Repository	library\Zend\Tool\Framework\Provider\Repository.php	/^class Zend_Tool_Framework_Provider_Repository$/;"	c
className	library\Zend\Tool\Framework\Provider\Repository.php	/^        $className = get_class($provider);$/;"	v
provider	library\Zend\Tool\Framework\Provider\Repository.php	/^            $provider = array_shift($this->_unprocessedProviders);$/;"	v
providerName	library\Zend\Tool\Framework\Provider\Repository.php	/^            $providerName = $provider->getName();$/;"	v
providerName	library\Zend\Tool\Framework\Provider\Repository.php	/^            $providerName = $this->_parseName($provider);$/;"	v
providerName	library\Zend\Tool\Framework\Provider\Repository.php	/^            $providerName = key($this->_unprocessedProviders);$/;"	v
providerName	library\Zend\Tool\Framework\Provider\Repository.php	/^            $providerName = strtolower($providerName);$/;"	v
providerName	library\Zend\Tool\Framework\Provider\Repository.php	/^            $providerName = substr($providerName, 0, strlen($providerName)-8);$/;"	v
providerName	library\Zend\Tool\Framework\Provider\Repository.php	/^            $providerName = substr($providerName, strrpos($providerName, '_')+1);$/;"	v
providerName	library\Zend\Tool\Framework\Provider\Repository.php	/^        $providerName = $className;$/;"	v
providerSignature	library\Zend\Tool\Framework\Provider\Repository.php	/^            $providerSignature = new Zend_Tool_Framework_Provider_Signature($provider);$/;"	v
targetProviderClassName	library\Zend\Tool\Framework\Provider\Repository.php	/^            $targetProviderClassName = (string) $providerOrClassName;$/;"	v
targetProviderClassName	library\Zend\Tool\Framework\Provider\Repository.php	/^            $targetProviderClassName = get_class($providerOrClassName);$/;"	v
Zend_Tool_Framework_Provider_Signature	library\Zend\Tool\Framework\Provider\Signature.php	/^class Zend_Tool_Framework_Provider_Signature implements Zend_Tool_Framework_Registry_EnabledInterface$/;"	c
action	library\Zend\Tool\Framework\Provider\Signature.php	/^                $action = new Zend_Tool_Framework_Action_Base($actionableMethods[$methodName]['actionName']);$/;"	v
action	library\Zend\Tool\Framework\Provider\Signature.php	/^            $action = $this->_registry->getActionRepository()->getAction($actionableMethods[$methodName]['actionName']);$/;"	v
actionableMethods	library\Zend\Tool\Framework\Provider\Signature.php	/^        $actionableMethods = array();$/;"	v
actionableName	library\Zend\Tool\Framework\Provider\Signature.php	/^                $actionableName = substr($actionableName, 0, -6);$/;"	v
actionableName	library\Zend\Tool\Framework\Provider\Signature.php	/^            $actionableName = ucfirst($methodName);$/;"	v
className	library\Zend\Tool\Framework\Provider\Signature.php	/^            $className = get_class($this->_provider);$/;"	v
currentParam	library\Zend\Tool\Framework\Provider\Signature.php	/^                    $currentParam = ltrim($matches[2][$i], '$');$/;"	v
currentParam	library\Zend\Tool\Framework\Provider\Signature.php	/^                $currentParam = $parameter->getName();$/;"	v
defaultProperties	library\Zend\Tool\Framework\Provider\Signature.php	/^            $defaultProperties = $this->_providerReflection->getDefaultProperties();$/;"	v
descriptionSource	library\Zend\Tool\Framework\Provider\Signature.php	/^                        $descriptionSource = $matches[3][$i];$/;"	v
matches	library\Zend\Tool\Framework\Provider\Signature.php	/^            $matches = null;$/;"	v
methodName	library\Zend\Tool\Framework\Provider\Signature.php	/^            $methodName = $method->getName();$/;"	v
methods	library\Zend\Tool\Framework\Provider\Signature.php	/^        $methods = $this->_providerReflection->getMethods();$/;"	v
name	library\Zend\Tool\Framework\Provider\Signature.php	/^                $name = substr($name, strrpos($name, '_')+1);$/;"	v
name	library\Zend\Tool\Framework\Provider\Signature.php	/^            $name = $className;$/;"	v
name	library\Zend\Tool\Framework\Provider\Signature.php	/^            $name = preg_replace('#(Provider|Manifest)$#', '', $name);$/;"	v
parameterInfo	library\Zend\Tool\Framework\Provider\Signature.php	/^            $parameterInfo = array();$/;"	v
position	library\Zend\Tool\Framework\Provider\Signature.php	/^            $position = 1;$/;"	v
specialties	library\Zend\Tool\Framework\Provider\Signature.php	/^            $specialties = $this->_provider->getSpecialties();$/;"	v
specialties	library\Zend\Tool\Framework\Provider\Signature.php	/^            $specialties = (isset($defaultProperties['_specialties'])) ? $defaultProperties['_specialties'] : array();$/;"	v
specialties	library\Zend\Tool\Framework\Provider\Signature.php	/^        $specialties = array();$/;"	v
specialtyRegex	library\Zend\Tool\Framework\Provider\Signature.php	/^        $specialtyRegex = '#(.*)(' . implode('|', $this->_specialties) . ')$#i';$/;"	v
Zend_Tool_Framework_Registry	library\Zend\Tool\Framework\Registry.php	/^class Zend_Tool_Framework_Registry implements Zend_Tool_Framework_Registry_Interface$/;"	c
Zend_Tool_Framework_Registry_Exception	library\Zend\Tool\Framework\Registry\Exception.php	/^class Zend_Tool_Framework_Registry_Exception extends Zend_Tool_Framework_Exception$/;"	c
Zend_Tool_Framework_System_Action_Create	library\Zend\Tool\Framework\System\Action\Create.php	/^class Zend_Tool_Framework_System_Action_Create extends Zend_Tool_Framework_Action_Base$/;"	c
Zend_Tool_Framework_System_Action_Delete	library\Zend\Tool\Framework\System\Action\Delete.php	/^class Zend_Tool_Framework_System_Action_Delete extends Zend_Tool_Framework_Action_Base$/;"	c
Zend_Tool_Framework_System_Manifest	library\Zend\Tool\Framework\System\Manifest.php	/^class Zend_Tool_Framework_System_Manifest$/;"	c
actions	library\Zend\Tool\Framework\System\Manifest.php	/^        $actions = array($/;"	v
providers	library\Zend\Tool\Framework\System\Manifest.php	/^        $providers = array($/;"	v
Zend_Tool_Framework_System_Provider_Config	library\Zend\Tool\Framework\System\Provider\Config.php	/^class Zend_Tool_Framework_System_Provider_Config extends Zend_Tool_Framework_Provider_Abstract$/;"	c
config	library\Zend\Tool\Framework\System\Provider\Config.php	/^        $config = array($/;"	v
configArray	library\Zend\Tool\Framework\System\Provider\Config.php	/^        $configArray = $userConfig->getConfigInstance()->toArray();$/;"	v
envVars	library\Zend\Tool\Framework\System\Provider\Config.php	/^        $envVars = array("ZF_HOME", "HOME", "HOMEPATH");$/;"	v
filename	library\Zend\Tool\Framework\System\Provider\Config.php	/^        $filename = $homeDirectory."\/.zf.ini";$/;"	v
homeDirectory	library\Zend\Tool\Framework\System\Provider\Config.php	/^            $homeDirectory = getenv($env);$/;"	v
homeDirectory	library\Zend\Tool\Framework\System\Provider\Config.php	/^        $homeDirectory = $this->_detectHomeDirectory();$/;"	v
i	library\Zend\Tool\Framework\System\Provider\Config.php	/^            $i = 0;$/;"	v
i	library\Zend\Tool\Framework\System\Provider\Config.php	/^        $i = 0;$/;"	v
pointer	library\Zend\Tool\Framework\System\Provider\Config.php	/^            $pointer = "`-- ";$/;"	v
pointer	library\Zend\Tool\Framework\System\Provider\Config.php	/^            $pointer = "|-- ";$/;"	v
pos	library\Zend\Tool\Framework\System\Provider\Config.php	/^                $pos = 0;$/;"	v
pos	library\Zend\Tool\Framework\System\Provider\Config.php	/^                $pos = max(array_keys($providerClasses))+1;$/;"	v
prefix	library\Zend\Tool\Framework\System\Provider\Config.php	/^        $prefix = "";$/;"	v
providerClasses	library\Zend\Tool\Framework\System\Provider\Config.php	/^        $providerClasses = $userConfig->basicloader->classes->toArray();$/;"	v
reflClass	library\Zend\Tool\Framework\System\Provider\Config.php	/^        $reflClass = new ReflectionClass($className);$/;"	v
resp	library\Zend\Tool\Framework\System\Provider\Config.php	/^        $resp = $this->_registry->getResponse();$/;"	v
tree	library\Zend\Tool\Framework\System\Provider\Config.php	/^        $tree = "";$/;"	v
userConfig	library\Zend\Tool\Framework\System\Provider\Config.php	/^        $userConfig = $this->_loadUserConfigIfExists();$/;"	v
userConfig	library\Zend\Tool\Framework\System\Provider\Config.php	/^        $userConfig = $this->_registry->getConfig();$/;"	v
writer	library\Zend\Tool\Framework\System\Provider\Config.php	/^        $writer = new Zend_Config_Writer_Ini();$/;"	v
Zend_Tool_Framework_System_Provider_Manifest	library\Zend\Tool\Framework\System\Provider\Manifest.php	/^class Zend_Tool_Framework_System_Provider_Manifest$/;"	c
longestAttrNameLen	library\Zend\Tool\Framework\System\Provider\Manifest.php	/^            $longestAttrNameLen = (strlen($metadataAttrs) > $longestAttrNameLen) ? strlen($metadataAttrs) : $longestAttrNameLen;$/;"	v
longestAttrNameLen	library\Zend\Tool\Framework\System\Provider\Manifest.php	/^        $longestAttrNameLen = 50;$/;"	v
manifestRepository	library\Zend\Tool\Framework\System\Provider\Manifest.php	/^        $manifestRepository = $this->_registry->getManifestRepository();$/;"	v
metadataAttrs	library\Zend\Tool\Framework\System\Provider\Manifest.php	/^                $metadataAttrs = '(None)';$/;"	v
metadataAttrs	library\Zend\Tool\Framework\System\Provider\Manifest.php	/^                $metadataAttrs = urldecode(http_build_query($metadataAttrs, null, ', '));$/;"	v
metadataAttrs	library\Zend\Tool\Framework\System\Provider\Manifest.php	/^            $metadataAttrs = $metadata->getAttributes('attributesParent');$/;"	v
metadataName	library\Zend\Tool\Framework\System\Provider\Manifest.php	/^            $metadataName  = $metadata->getName();$/;"	v
metadataTree	library\Zend\Tool\Framework\System\Provider\Manifest.php	/^        $metadataTree = array();$/;"	v
metadataType	library\Zend\Tool\Framework\System\Provider\Manifest.php	/^            $metadataType  = $metadata->getType();$/;"	v
metadataValue	library\Zend\Tool\Framework\System\Provider\Manifest.php	/^                $metadataValue = '(empty array)';$/;"	v
metadataValue	library\Zend\Tool\Framework\System\Provider\Manifest.php	/^                $metadataValue = urldecode(http_build_query($metadataValue, null, ', '));$/;"	v
metadataValue	library\Zend\Tool\Framework\System\Provider\Manifest.php	/^            $metadataValue = $metadata->getValue();$/;"	v
response	library\Zend\Tool\Framework\System\Provider\Manifest.php	/^        $response           = $this->_registry->getResponse();$/;"	v
string	library\Zend\Tool\Framework\System\Provider\Manifest.php	/^                        $string = sprintf("      %-{$longestAttrNameLen}.{$longestAttrNameLen}s : ", $metadataAttributeName)$/;"	v
Zend_Tool_Framework_System_Provider_Phpinfo	library\Zend\Tool\Framework\System\Provider\Phpinfo.php	/^class Zend_Tool_Framework_System_Provider_Phpinfo implements Zend_Tool_Framework_Provider_Interface$/;"	c
Zend_Tool_Framework_System_Provider_Version	library\Zend\Tool\Framework\System\Provider\Version.php	/^class Zend_Tool_Framework_System_Provider_Version$/;"	c
output	library\Zend\Tool\Framework\System\Provider\Version.php	/^            $output = 'Zend Framework Version: ' . $output;$/;"	v
output	library\Zend\Tool\Framework\System\Provider\Version.php	/^        $output = (($nameIncluded == true) ? 'ZF Major Version: ' : null) . $versionNumbers['major'];$/;"	v
output	library\Zend\Tool\Framework\System\Provider\Version.php	/^        $output = (($nameIncluded == true) ? 'ZF Mini Version: ' : null)  . $versionNumbers['mini'];$/;"	v
output	library\Zend\Tool\Framework\System\Provider\Version.php	/^        $output = (($nameIncluded == true) ? 'ZF Minor Version: ' : null) . $versionNumbers['minor'];$/;"	v
output	library\Zend\Tool\Framework\System\Provider\Version.php	/^        $output = implode('.', $versionInfo);$/;"	v
versionInfo	library\Zend\Tool\Framework\System\Provider\Version.php	/^        $versionInfo = $this->_splitVersion();$/;"	v
versionNumbers	library\Zend\Tool\Framework\System\Provider\Version.php	/^        $versionNumbers = $this->_splitVersion();$/;"	v
Zend_Tool_Project_Context_Content_Engine	library\Zend\Tool\Project\Context\Content\Engine.php	/^class Zend_Tool_Project_Context_Content_Engine$/;"	c
content	library\Zend\Tool\Project\Context\Content\Engine.php	/^                $content = $engine->getContent($context, $methodName, $parameters);$/;"	v
content	library\Zend\Tool\Project\Context\Content\Engine.php	/^        $content = null;$/;"	v
Zend_Tool_Project_Context_Content_Engine_CodeGenerator	library\Zend\Tool\Project\Context\Content\Engine\CodeGenerator.php	/^class Zend_Tool_Project_Context_Content_Engine_CodeGenerator$/;"	c
codeGenerator	library\Zend\Tool\Project\Context\Content\Engine\CodeGenerator.php	/^            $codeGenerator = $context->getCodeGenerator();$/;"	v
codeGenerator	library\Zend\Tool\Project\Context\Content\Engine\CodeGenerator.php	/^            $codeGenerator = new Zend_CodeGenerator_Php_File();$/;"	v
codeGenerator	library\Zend\Tool\Project\Context\Content\Engine\CodeGenerator.php	/^        $codeGenerator = include $streamUri;$/;"	v
streamUri	library\Zend\Tool\Project\Context\Content\Engine\CodeGenerator.php	/^        $streamUri = $this->_storage->getStreamUri($this->_contentPrefix . '\/' . $context->getName() . '\/' . $method . '.php');$/;"	v
Zend_Tool_Project_Context_Content_Engine_Phtml	library\Zend\Tool\Project\Context\Content\Engine\Phtml.php	/^class Zend_Tool_Project_Context_Content_Engine_Phtml$/;"	c
content	library\Zend\Tool\Project\Context\Content\Engine\Phtml.php	/^        $content = ob_get_clean();$/;"	v
streamUri	library\Zend\Tool\Project\Context\Content\Engine\Phtml.php	/^        $streamUri = $this->_storage->getStreamUri($this->_contentPrefix . '\/' . $context->getName() . '\/' . $method . '.phtml');$/;"	v
Zend_Tool_Project_Context_Exception	library\Zend\Tool\Project\Context\Exception.php	/^class Zend_Tool_Project_Context_Exception extends Zend_Tool_Project_Exception$/;"	c
parentBaseDirectory	library\Zend\Tool\Project\Context\Filesystem\Abstract.php	/^        $parentBaseDirectory = $this->_resource->getParentResource()->getContext()->getPath();$/;"	v
path	library\Zend\Tool\Project\Context\Filesystem\Abstract.php	/^        $path = $this->_baseDirectory;$/;"	v
Zend_Tool_Project_Context_Filesystem_Directory	library\Zend\Tool\Project\Context\Filesystem\Directory.php	/^class Zend_Tool_Project_Context_Filesystem_Directory extends Zend_Tool_Project_Context_Filesystem_Abstract$/;"	c
Zend_Tool_Project_Context_Filesystem_File	library\Zend\Tool\Project\Context\Filesystem\File.php	/^class Zend_Tool_Project_Context_Filesystem_File extends Zend_Tool_Project_Context_Filesystem_Abstract$/;"	c
contentFunc	library\Zend\Tool\Project\Context\Filesystem\File.php	/^            $contentFunc = $this->_resource->getAttribute('defaultContentCallback');$/;"	v
returnAttrs	library\Zend\Tool\Project\Context\Filesystem\File.php	/^        $returnAttrs = array();$/;"	v
Zend_Tool_Project_Context_Repository	library\Zend\Tool\Project\Context\Repository.php	/^class Zend_Tool_Project_Context_Repository implements Countable$/;"	c
class	library\Zend\Tool\Project\Context\Repository.php	/^            $class = $prefix . substr($directoryItem->getFilename(), 0, -4);$/;"	v
context	library\Zend\Tool\Project\Context\Repository.php	/^            $context = new $contextClass();$/;"	v
index	library\Zend\Tool\Project\Context\Repository.php	/^        $index = $this->_shortContextNames[$name];$/;"	v
index	library\Zend\Tool\Project\Context\Repository.php	/^        $index = (count($this->_contexts)) ? max(array_keys($this->_contexts)) + 1 : 1;$/;"	v
isOverwritable	library\Zend\Tool\Project\Context\Repository.php	/^        $isOverwritable = !($context instanceof Zend_Tool_Project_Context_System_NotOverwritable);$/;"	v
isSystem	library\Zend\Tool\Project\Context\Repository.php	/^        $isSystem       = ($context instanceof Zend_Tool_Project_Context_System_Interface);$/;"	v
isTopLevel	library\Zend\Tool\Project\Context\Repository.php	/^        $isTopLevel     = ($context instanceof Zend_Tool_Project_Context_System_TopLevelRestrictable);$/;"	v
name	library\Zend\Tool\Project\Context\Repository.php	/^        $name = $this->_normalizeName($name);$/;"	v
normalName	library\Zend\Tool\Project\Context\Repository.php	/^        $normalName = $this->_normalizeName($context->getName());$/;"	v
prefix	library\Zend\Tool\Project\Context\Repository.php	/^        $prefix = trim($prefix, '_') . '_';$/;"	v
reflectionContextClass	library\Zend\Tool\Project\Context\Repository.php	/^        $reflectionContextClass = new ReflectionClass($contextClass);$/;"	v
Zend_Tool_Project_Context_System_ProjectDirectory	library\Zend\Tool\Project\Context\System\ProjectDirectory.php	/^class Zend_Tool_Project_Context_System_ProjectDirectory$/;"	c
projectDirectory	library\Zend\Tool\Project\Context\System\ProjectDirectory.php	/^            $projectDirectory = $this->_resource->getProfile()->getAttribute('projectDirectory');$/;"	v
projectDirectory	library\Zend\Tool\Project\Context\System\ProjectDirectory.php	/^        $projectDirectory = $this->_resource->getAttribute('path');$/;"	v
Zend_Tool_Project_Context_System_ProjectProfileFile	library\Zend\Tool\Project\Context\System\ProjectProfileFile.php	/^class Zend_Tool_Project_Context_System_ProjectProfileFile$/;"	c
parser	library\Zend\Tool\Project\Context\System\ProjectProfileFile.php	/^        $parser = new Zend_Tool_Project_Profile_FileParser_Xml();$/;"	v
profile	library\Zend\Tool\Project\Context\System\ProjectProfileFile.php	/^        $profile = $this->_resource->getProfile();$/;"	v
xml	library\Zend\Tool\Project\Context\System\ProjectProfileFile.php	/^        $xml = $parser->serialize($profile);$/;"	v
Zend_Tool_Project_Context_System_ProjectProvidersDirectory	library\Zend\Tool\Project\Context\System\ProjectProvidersDirectory.php	/^class Zend_Tool_Project_Context_System_ProjectProvidersDirectory$/;"	c
className	library\Zend\Tool\Project\Context\System\ProjectProvidersDirectory.php	/^                    $className = substr($item->getFilename(), 0, $suffixStart+8);$/;"	v
providerRepository	library\Zend\Tool\Project\Context\System\ProjectProvidersDirectory.php	/^            $providerRepository = $registry->getProviderRepository();$/;"	v
containingResource	library\Zend\Tool\Project\Context\Zf\AbstractClassFile.php	/^                $containingResource = $currentResource;$/;"	v
currentResource	library\Zend\Tool\Project\Context\Zf\AbstractClassFile.php	/^        $currentResource = $this->_resource;$/;"	v
filter	library\Zend\Tool\Project\Context\Zf\AbstractClassFile.php	/^                $filter = new Zend_Filter_Word_DashToCamelCase();$/;"	v
fullClassName	library\Zend\Tool\Project\Context\Zf\AbstractClassFile.php	/^                $fullClassName = $prefix;$/;"	v
fullClassName	library\Zend\Tool\Project\Context\Zf\AbstractClassFile.php	/^        $fullClassName = '';$/;"	v
prefix	library\Zend\Tool\Project\Context\Zf\AbstractClassFile.php	/^                $prefix = $containingResource->getAttribute('classNamePrefix');$/;"	v
prefix	library\Zend\Tool\Project\Context\Zf\AbstractClassFile.php	/^                $prefix = $filter->filter(ucfirst($containingResource->getAttribute('moduleName'))) . '_';$/;"	v
resourceName	library\Zend\Tool\Project\Context\Zf\AbstractClassFile.php	/^            $resourceName = $currentResource->getName();$/;"	v
Zend_Tool_Project_Context_Zf_ActionMethod	library\Zend\Tool\Project\Context\Zf\ActionMethod.php	/^class Zend_Tool_Project_Context_Zf_ActionMethod implements Zend_Tool_Project_Context_Interface$/;"	c
controllerCodeGenFile	library\Zend\Tool\Project\Context\Zf\ActionMethod.php	/^        $controllerCodeGenFile = Zend_CodeGenerator_Php_File::fromReflectedFileName($controllerPath, true, true);$/;"	v
Zend_Tool_Project_Context_Zf_ApisDirectory	library\Zend\Tool\Project\Context\Zf\ApisDirectory.php	/^class Zend_Tool_Project_Context_Zf_ApisDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
Zend_Tool_Project_Context_Zf_ApplicationConfigFile	library\Zend\Tool\Project\Context\Zf\ApplicationConfigFile.php	/^class Zend_Tool_Project_Context_Zf_ApplicationConfigFile extends Zend_Tool_Project_Context_Filesystem_File$/;"	c
configKeyNames	library\Zend\Tool\Project\Context\Zf\ApplicationConfigFile.php	/^        $configKeyNames = array();$/;"	v
contentLines	library\Zend\Tool\Project\Context\Zf\ApplicationConfigFile.php	/^        $contentLines = file($this->getPath());$/;"	v
contentLines	library\Zend\Tool\Project\Context\Zf\ApplicationConfigFile.php	/^        $contentLines = preg_split('#[\\n\\r]#', $this->getContents());$/;"	v
contents	library\Zend\Tool\Project\Context\Zf\ApplicationConfigFile.php	/^        $contents =<<<EOS$/;"	v
insideSection	library\Zend\Tool\Project\Context\Zf\ApplicationConfigFile.php	/^                    $insideSection = null;$/;"	v
insideSection	library\Zend\Tool\Project\Context\Zf\ApplicationConfigFile.php	/^                $insideSection = true;$/;"	v
insideSection	library\Zend\Tool\Project\Context\Zf\ApplicationConfigFile.php	/^        $insideSection = false;$/;"	v
lastDepth	library\Zend\Tool\Project\Context\Zf\ApplicationConfigFile.php	/^            $lastDepth = $rii->getDepth();$/;"	v
lastDepth	library\Zend\Tool\Project\Context\Zf\ApplicationConfigFile.php	/^        $lastDepth = 0;$/;"	v
newLines	library\Zend\Tool\Project\Context\Zf\ApplicationConfigFile.php	/^        $newLines = array();$/;"	v
quoteValue	library\Zend\Tool\Project\Context\Zf\ApplicationConfigFile.php	/^            $quoteValue = preg_match('#[\\"\\']#', $value) ? false : true;$/;"	v
rii	library\Zend\Tool\Project\Context\Zf\ApplicationConfigFile.php	/^        $rii = new RecursiveIteratorIterator($/;"	v
stringItems	library\Zend\Tool\Project\Context\Zf\ApplicationConfigFile.php	/^        $stringItems = array();$/;"	v
stringValues	library\Zend\Tool\Project\Context\Zf\ApplicationConfigFile.php	/^        $stringValues = array();$/;"	v
value	library\Zend\Tool\Project\Context\Zf\ApplicationConfigFile.php	/^            $value = '"' . $value . '"';$/;"	v
Zend_Tool_Project_Context_Zf_ApplicationDirectory	library\Zend\Tool\Project\Context\Zf\ApplicationDirectory.php	/^class Zend_Tool_Project_Context_Zf_ApplicationDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
APPLICATION_PATH	library\Zend\Tool\Project\Context\Zf\BootstrapFile.php	/^                define('APPLICATION_PATH', $this->_applicationDirectory->getPath());$/;"	d
Zend_Tool_Project_Context_Zf_BootstrapFile	library\Zend\Tool\Project\Context\Zf\BootstrapFile.php	/^class Zend_Tool_Project_Context_Zf_BootstrapFile extends Zend_Tool_Project_Context_Filesystem_File$/;"	c
applicationOptions	library\Zend\Tool\Project\Context\Zf\BootstrapFile.php	/^                $applicationOptions = array();$/;"	v
codeGenFile	library\Zend\Tool\Project\Context\Zf\BootstrapFile.php	/^        $codeGenFile = new Zend_CodeGenerator_Php_File(array($/;"	v
Zend_Tool_Project_Context_Zf_CacheDirectory	library\Zend\Tool\Project\Context\Zf\CacheDirectory.php	/^class Zend_Tool_Project_Context_Zf_CacheDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
Zend_Tool_Project_Context_Zf_ConfigFile	library\Zend\Tool\Project\Context\Zf\ConfigFile.php	/^class Zend_Tool_Project_Context_Zf_ConfigFile extends Zend_Tool_Project_Context_Filesystem_File$/;"	c
Zend_Tool_Project_Context_Zf_ConfigsDirectory	library\Zend\Tool\Project\Context\Zf\ConfigsDirectory.php	/^class Zend_Tool_Project_Context_Zf_ConfigsDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
Zend_Tool_Project_Context_Zf_ControllerFile	library\Zend\Tool\Project\Context\Zf\ControllerFile.php	/^class Zend_Tool_Project_Context_Zf_ControllerFile extends Zend_Tool_Project_Context_Filesystem_File$/;"	c
class	library\Zend\Tool\Project\Context\Zf\ControllerFile.php	/^        $class = array_shift($codeGenFileClasses);$/;"	v
classCodeGen	library\Zend\Tool\Project\Context\Zf\ControllerFile.php	/^        $classCodeGen = $this->getCodeGenerator();$/;"	v
className	library\Zend\Tool\Project\Context\Zf\ControllerFile.php	/^        $className = ($this->_moduleName) ? $filter->filter(ucfirst($this->_moduleName)) . '_' : '';$/;"	v
codeGenFile	library\Zend\Tool\Project\Context\Zf\ControllerFile.php	/^            $codeGenFile = new Zend_CodeGenerator_Php_File(array($/;"	v
codeGenFile	library\Zend\Tool\Project\Context\Zf\ControllerFile.php	/^        $codeGenFile = Zend_CodeGenerator_Php_File::fromReflectedFileName($this->getPath());$/;"	v
codeGenFile	library\Zend\Tool\Project\Context\Zf\ControllerFile.php	/^        $codeGenFile = new Zend_CodeGenerator_Php_File(array($/;"	v
codeGenFileClasses	library\Zend\Tool\Project\Context\Zf\ControllerFile.php	/^        $codeGenFileClasses = $codeGenFile->getClasses();$/;"	v
filter	library\Zend\Tool\Project\Context\Zf\ControllerFile.php	/^        $filter = new Zend_Filter_Word_DashToCamelCase();$/;"	v
Zend_Tool_Project_Context_Zf_ControllersDirectory	library\Zend\Tool\Project\Context\Zf\ControllersDirectory.php	/^class Zend_Tool_Project_Context_Zf_ControllersDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
Zend_Tool_Project_Context_Zf_DataDirectory	library\Zend\Tool\Project\Context\Zf\DataDirectory.php	/^class Zend_Tool_Project_Context_Zf_DataDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
Zend_Tool_Project_Context_Zf_DbTableDirectory	library\Zend\Tool\Project\Context\Zf\DbTableDirectory.php	/^class Zend_Tool_Project_Context_Zf_DbTableDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
Zend_Tool_Project_Context_Zf_DbTableFile	library\Zend\Tool\Project\Context\Zf\DbTableFile.php	/^class Zend_Tool_Project_Context_Zf_DbTableFile extends Zend_Tool_Project_Context_Zf_AbstractClassFile$/;"	c
className	library\Zend\Tool\Project\Context\Zf\DbTableFile.php	/^        $className = $this->getFullClassName($this->_dbTableName, 'Model_DbTable');$/;"	v
codeGenFile	library\Zend\Tool\Project\Context\Zf\DbTableFile.php	/^        $codeGenFile = new Zend_CodeGenerator_Php_File(array($/;"	v
Zend_Tool_Project_Context_Zf_DocsDirectory	library\Zend\Tool\Project\Context\Zf\DocsDirectory.php	/^class Zend_Tool_Project_Context_Zf_DocsDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
Zend_Tool_Project_Context_Zf_FormFile	library\Zend\Tool\Project\Context\Zf\FormFile.php	/^class Zend_Tool_Project_Context_Zf_FormFile extends Zend_Tool_Project_Context_Zf_AbstractClassFile$/;"	c
className	library\Zend\Tool\Project\Context\Zf\FormFile.php	/^        $className = $this->getFullClassName($this->_formName, 'Form');$/;"	v
codeGenFile	library\Zend\Tool\Project\Context\Zf\FormFile.php	/^        $codeGenFile = new Zend_CodeGenerator_Php_File(array($/;"	v
Zend_Tool_Project_Context_Zf_FormsDirectory	library\Zend\Tool\Project\Context\Zf\FormsDirectory.php	/^class Zend_Tool_Project_Context_Zf_FormsDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
Zend_Tool_Project_Context_Zf_HtaccessFile	library\Zend\Tool\Project\Context\Zf\HtaccessFile.php	/^class Zend_Tool_Project_Context_Zf_HtaccessFile extends Zend_Tool_Project_Context_Filesystem_File$/;"	c
output	library\Zend\Tool\Project\Context\Zf\HtaccessFile.php	/^        $output = <<<EOS$/;"	v
Zend_Tool_Project_Context_Zf_LayoutScriptFile	library\Zend\Tool\Project\Context\Zf\LayoutScriptFile.php	/^class Zend_Tool_Project_Context_Zf_LayoutScriptFile extends Zend_Tool_Project_Context_Filesystem_File$/;"	c
attributes	library\Zend\Tool\Project\Context\Zf\LayoutScriptFile.php	/^        $attributes = array();$/;"	v
contents	library\Zend\Tool\Project\Context\Zf\LayoutScriptFile.php	/^        $contents = <<<EOS$/;"	v
Zend_Tool_Project_Context_Zf_LayoutScriptsDirectory	library\Zend\Tool\Project\Context\Zf\LayoutScriptsDirectory.php	/^class Zend_Tool_Project_Context_Zf_LayoutScriptsDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
Zend_Tool_Project_Context_Zf_LayoutsDirectory	library\Zend\Tool\Project\Context\Zf\LayoutsDirectory.php	/^class Zend_Tool_Project_Context_Zf_LayoutsDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
Zend_Tool_Project_Context_Zf_LibraryDirectory	library\Zend\Tool\Project\Context\Zf\LibraryDirectory.php	/^class Zend_Tool_Project_Context_Zf_LibraryDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
Zend_Tool_Project_Context_Zf_LocalesDirectory	library\Zend\Tool\Project\Context\Zf\LocalesDirectory.php	/^class Zend_Tool_Project_Context_Zf_LocalesDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
Zend_Tool_Project_Context_Zf_LogsDirectory	library\Zend\Tool\Project\Context\Zf\LogsDirectory.php	/^class Zend_Tool_Project_Context_Zf_LogsDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
Zend_Tool_Project_Context_Zf_ModelFile	library\Zend\Tool\Project\Context\Zf\ModelFile.php	/^class Zend_Tool_Project_Context_Zf_ModelFile extends Zend_Tool_Project_Context_Zf_AbstractClassFile$/;"	c
className	library\Zend\Tool\Project\Context\Zf\ModelFile.php	/^        $className = $this->getFullClassName($this->_modelName, 'Model');$/;"	v
codeGenFile	library\Zend\Tool\Project\Context\Zf\ModelFile.php	/^        $codeGenFile = new Zend_CodeGenerator_Php_File(array($/;"	v
Zend_Tool_Project_Context_Zf_ModelsDirectory	library\Zend\Tool\Project\Context\Zf\ModelsDirectory.php	/^class Zend_Tool_Project_Context_Zf_ModelsDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
Zend_Tool_Project_Context_Zf_ModuleDirectory	library\Zend\Tool\Project\Context\Zf\ModuleDirectory.php	/^class Zend_Tool_Project_Context_Zf_ModuleDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
Zend_Tool_Project_Context_Zf_ModulesDirectory	library\Zend\Tool\Project\Context\Zf\ModulesDirectory.php	/^class Zend_Tool_Project_Context_Zf_ModulesDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
Zend_Tool_Project_Context_Zf_ProjectProviderFile	library\Zend\Tool\Project\Context\Zf\ProjectProviderFile.php	/^class Zend_Tool_Project_Context_Zf_ProjectProviderFile extends Zend_Tool_Project_Context_Filesystem_File$/;"	c
class	library\Zend\Tool\Project\Context\Zf\ProjectProviderFile.php	/^        $class = new Zend_CodeGenerator_Php_Class(array($/;"	v
className	library\Zend\Tool\Project\Context\Zf\ProjectProviderFile.php	/^        $className = $filter->filter($this->_projectProviderName) . 'Provider';$/;"	v
codeGenFile	library\Zend\Tool\Project\Context\Zf\ProjectProviderFile.php	/^        $codeGenFile = new Zend_CodeGenerator_Php_File(array($/;"	v
filter	library\Zend\Tool\Project\Context\Zf\ProjectProviderFile.php	/^        $filter = new Zend_Filter_Word_DashToCamelCase();$/;"	v
methods	library\Zend\Tool\Project\Context\Zf\ProjectProviderFile.php	/^        $methods = array();$/;"	v
Zend_Tool_Project_Context_Zf_PublicDirectory	library\Zend\Tool\Project\Context\Zf\PublicDirectory.php	/^class Zend_Tool_Project_Context_Zf_PublicDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
Zend_Tool_Project_Context_Zf_PublicImagesDirectory	library\Zend\Tool\Project\Context\Zf\PublicImagesDirectory.php	/^class Zend_Tool_Project_Context_Zf_PublicImagesDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
Zend_Tool_Project_Context_Zf_PublicIndexFile	library\Zend\Tool\Project\Context\Zf\PublicIndexFile.php	/^class Zend_Tool_Project_Context_Zf_PublicIndexFile extends Zend_Tool_Project_Context_Filesystem_File$/;"	c
codeGenerator	library\Zend\Tool\Project\Context\Zf\PublicIndexFile.php	/^        $codeGenerator = new Zend_CodeGenerator_Php_File(array($/;"	v
Zend_Tool_Project_Context_Zf_PublicScriptsDirectory	library\Zend\Tool\Project\Context\Zf\PublicScriptsDirectory.php	/^class Zend_Tool_Project_Context_Zf_PublicScriptsDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
Zend_Tool_Project_Context_Zf_PublicStylesheetsDirectory	library\Zend\Tool\Project\Context\Zf\PublicStylesheetsDirectory.php	/^class Zend_Tool_Project_Context_Zf_PublicStylesheetsDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
Zend_Tool_Project_Context_Zf_SearchIndexesDirectory	library\Zend\Tool\Project\Context\Zf\SearchIndexesDirectory.php	/^class Zend_Tool_Project_Context_Zf_SearchIndexesDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
Zend_Tool_Project_Context_Zf_SessionsDirectory	library\Zend\Tool\Project\Context\Zf\SessionsDirectory.php	/^class Zend_Tool_Project_Context_Zf_SessionsDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
Zend_Tool_Project_Context_Zf_TemporaryDirectory	library\Zend\Tool\Project\Context\Zf\TemporaryDirectory.php	/^class Zend_Tool_Project_Context_Zf_TemporaryDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
Zend_Tool_Project_Context_Zf_TestApplicationActionMethod	library\Zend\Tool\Project\Context\Zf\TestApplicationActionMethod.php	/^class Zend_Tool_Project_Context_Zf_TestApplicationActionMethod implements Zend_Tool_Project_Context_Interface$/;"	c
actionParam	library\Zend\Tool\Project\Context\Zf\TestApplicationActionMethod.php	/^        $actionParam = $this->getForActionName();$/;"	v
assert	library\Zend\Tool\Project\Context\Zf\TestApplicationActionMethod.php	/^            $assert = '$this->assertQueryContentContains("div#welcome h3", "This is your project\\'s main page");';$/;"	v
assert	library\Zend\Tool\Project\Context\Zf\TestApplicationActionMethod.php	/^            $assert = <<<EOS$/;"	v
codeGenFile	library\Zend\Tool\Project\Context\Zf\TestApplicationActionMethod.php	/^        $codeGenFile = Zend_CodeGenerator_Php_File::fromReflectedFileName($file, true, true);$/;"	v
controllerCodeGenFile	library\Zend\Tool\Project\Context\Zf\TestApplicationActionMethod.php	/^        $controllerCodeGenFile = Zend_CodeGenerator_Php_File::fromReflectedFileName($controllerPath, true, true);$/;"	v
controllerDirectoryResource	library\Zend\Tool\Project\Context\Zf\TestApplicationActionMethod.php	/^        $controllerDirectoryResource = $this->_resource->getParentResource()->getParentResource();$/;"	v
controllerParam	library\Zend\Tool\Project\Context\Zf\TestApplicationActionMethod.php	/^        $controllerParam = $this->_resource->getParentResource()->getForControllerName();$/;"	v
file	library\Zend\Tool\Project\Context\Zf\TestApplicationActionMethod.php	/^        $file = $this->_testApplicationControllerPath;$/;"	v
moduleParam	library\Zend\Tool\Project\Context\Zf\TestApplicationActionMethod.php	/^            $moduleParam = $controllerDirectoryResource->getParentResource()->getForModuleName();$/;"	v
moduleParam	library\Zend\Tool\Project\Context\Zf\TestApplicationActionMethod.php	/^            $moduleParam = 'default';$/;"	v
Zend_Tool_Project_Context_Zf_TestApplicationBootstrapFile	library\Zend\Tool\Project\Context\Zf\TestApplicationBootstrapFile.php	/^class Zend_Tool_Project_Context_Zf_TestApplicationBootstrapFile extends Zend_Tool_Project_Context_Filesystem_File$/;"	c
Zend_Tool_Project_Context_Zf_TestApplicationControllerDirectory	library\Zend\Tool\Project\Context\Zf\TestApplicationControllerDirectory.php	/^class Zend_Tool_Project_Context_Zf_TestApplicationControllerDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
Zend_Tool_Project_Context_Zf_TestApplicationControllerFile	library\Zend\Tool\Project\Context\Zf\TestApplicationControllerFile.php	/^class Zend_Tool_Project_Context_Zf_TestApplicationControllerFile extends Zend_Tool_Project_Context_Filesystem_File$/;"	c
attributes	library\Zend\Tool\Project\Context\Zf\TestApplicationControllerFile.php	/^        $attributes = array();$/;"	v
className	library\Zend\Tool\Project\Context\Zf\TestApplicationControllerFile.php	/^            $className = $filter->filter(ucfirst($controllerDirectoryResource->getParentResource()->getForModuleName()))$/;"	v
className	library\Zend\Tool\Project\Context\Zf\TestApplicationControllerFile.php	/^        $className = $filter->filter($this->_forControllerName) . 'ControllerTest';$/;"	v
codeGenFile	library\Zend\Tool\Project\Context\Zf\TestApplicationControllerFile.php	/^        $codeGenFile = new Zend_CodeGenerator_Php_File(array($/;"	v
controllerDirectoryResource	library\Zend\Tool\Project\Context\Zf\TestApplicationControllerFile.php	/^        $controllerDirectoryResource = $this->_resource->getParentResource();$/;"	v
filter	library\Zend\Tool\Project\Context\Zf\TestApplicationControllerFile.php	/^        $filter = new Zend_Filter_Word_DashToCamelCase();$/;"	v
Zend_Tool_Project_Context_Zf_TestApplicationDirectory	library\Zend\Tool\Project\Context\Zf\TestApplicationDirectory.php	/^class Zend_Tool_Project_Context_Zf_TestApplicationDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
Zend_Tool_Project_Context_Zf_TestApplicationModuleDirectory	library\Zend\Tool\Project\Context\Zf\TestApplicationModuleDirectory.php	/^class Zend_Tool_Project_Context_Zf_TestApplicationModuleDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
Zend_Tool_Project_Context_Zf_TestApplicationModulesDirectory	library\Zend\Tool\Project\Context\Zf\TestApplicationModulesDirectory.php	/^class Zend_Tool_Project_Context_Zf_TestApplicationModulesDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
Zend_Tool_Project_Context_Zf_TestLibraryBootstrapFile	library\Zend\Tool\Project\Context\Zf\TestLibraryBootstrapFile.php	/^class Zend_Tool_Project_Context_Zf_TestLibraryBootstrapFile extends Zend_Tool_Project_Context_Filesystem_File$/;"	c
Zend_Tool_Project_Context_Zf_TestLibraryDirectory	library\Zend\Tool\Project\Context\Zf\TestLibraryDirectory.php	/^class Zend_Tool_Project_Context_Zf_TestLibraryDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
Zend_Tool_Project_Context_Zf_TestLibraryFile	library\Zend\Tool\Project\Context\Zf\TestLibraryFile.php	/^class Zend_Tool_Project_Context_Zf_TestLibraryFile extends Zend_Tool_Project_Context_Filesystem_File$/;"	c
className	library\Zend\Tool\Project\Context\Zf\TestLibraryFile.php	/^        $className = $filter->filter($this->_forClassName) . 'Test';$/;"	v
codeGenFile	library\Zend\Tool\Project\Context\Zf\TestLibraryFile.php	/^        $codeGenFile = new Zend_CodeGenerator_Php_File(array($/;"	v
filter	library\Zend\Tool\Project\Context\Zf\TestLibraryFile.php	/^        $filter = new Zend_Filter_Word_DashToCamelCase();$/;"	v
Zend_Tool_Project_Context_Zf_TestLibraryNamespaceDirectory	library\Zend\Tool\Project\Context\Zf\TestLibraryNamespaceDirectory.php	/^class Zend_Tool_Project_Context_Zf_TestLibraryNamespaceDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
attributes	library\Zend\Tool\Project\Context\Zf\TestLibraryNamespaceDirectory.php	/^        $attributes = array();$/;"	v
Zend_Tool_Project_Context_Zf_TestPHPUnitBootstrapFile	library\Zend\Tool\Project\Context\Zf\TestPHPUnitBootstrapFile.php	/^class Zend_Tool_Project_Context_Zf_TestPHPUnitBootstrapFile extends Zend_Tool_Project_Context_Filesystem_File$/;"	c
codeGenerator	library\Zend\Tool\Project\Context\Zf\TestPHPUnitBootstrapFile.php	/^        $codeGenerator = new Zend_CodeGenerator_Php_File(array($/;"	v
Zend_Tool_Project_Context_Zf_TestPHPUnitConfigFile	library\Zend\Tool\Project\Context\Zf\TestPHPUnitConfigFile.php	/^class Zend_Tool_Project_Context_Zf_TestPHPUnitConfigFile extends Zend_Tool_Project_Context_Filesystem_File$/;"	c
Zend_Tool_Project_Context_Zf_TestsDirectory	library\Zend\Tool\Project\Context\Zf\TestsDirectory.php	/^class Zend_Tool_Project_Context_Zf_TestsDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
Zend_Tool_Project_Context_Zf_UploadsDirectory	library\Zend\Tool\Project\Context\Zf\UploadsDirectory.php	/^class Zend_Tool_Project_Context_Zf_UploadsDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
Zend_Tool_Project_Context_Zf_ViewControllerScriptsDirectory	library\Zend\Tool\Project\Context\Zf\ViewControllerScriptsDirectory.php	/^class Zend_Tool_Project_Context_Zf_ViewControllerScriptsDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
filter	library\Zend\Tool\Project\Context\Zf\ViewControllerScriptsDirectory.php	/^        $filter = new Zend_Filter();$/;"	v
Zend_Tool_Project_Context_Zf_ViewFiltersDirectory	library\Zend\Tool\Project\Context\Zf\ViewFiltersDirectory.php	/^class Zend_Tool_Project_Context_Zf_ViewFiltersDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
Zend_Tool_Project_Context_Zf_ViewHelpersDirectory	library\Zend\Tool\Project\Context\Zf\ViewHelpersDirectory.php	/^class Zend_Tool_Project_Context_Zf_ViewHelpersDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
Zend_Tool_Project_Context_Zf_ViewScriptFile	library\Zend\Tool\Project\Context\Zf\ViewScriptFile.php	/^class Zend_Tool_Project_Context_Zf_ViewScriptFile extends Zend_Tool_Project_Context_Filesystem_File$/;"	c
actionName	library\Zend\Tool\Project\Context\Zf\ViewScriptFile.php	/^            $actionName = $this->_forActionName;$/;"	v
attributes	library\Zend\Tool\Project\Context\Zf\ViewScriptFile.php	/^        $attributes = array();$/;"	v
contents	library\Zend\Tool\Project\Context\Zf\ViewScriptFile.php	/^            $contents = <<<EOS$/;"	v
contents	library\Zend\Tool\Project\Context\Zf\ViewScriptFile.php	/^            $contents =<<<EOS$/;"	v
contents	library\Zend\Tool\Project\Context\Zf\ViewScriptFile.php	/^        $contents = '';$/;"	v
controllerName	library\Zend\Tool\Project\Context\Zf\ViewScriptFile.php	/^            $controllerName = $this->_resource->getParentResource()->getAttribute('forControllerName');$/;"	v
controllerName	library\Zend\Tool\Project\Context\Zf\ViewScriptFile.php	/^        $controllerName = $this->_resource->getParentResource()->getAttribute('forControllerName');$/;"	v
filter	library\Zend\Tool\Project\Context\Zf\ViewScriptFile.php	/^        $filter = new Zend_Filter();$/;"	v
moduleName	library\Zend\Tool\Project\Context\Zf\ViewScriptFile.php	/^            $moduleName = $viewsDirectoryResource->getParentResource()->getModuleName();$/;"	v
moduleName	library\Zend\Tool\Project\Context\Zf\ViewScriptFile.php	/^            $moduleName = 'default';$/;"	v
viewsDirectoryResource	library\Zend\Tool\Project\Context\Zf\ViewScriptFile.php	/^        $viewsDirectoryResource = $this->_resource$/;"	v
Zend_Tool_Project_Context_Zf_ViewScriptsDirectory	library\Zend\Tool\Project\Context\Zf\ViewScriptsDirectory.php	/^class Zend_Tool_Project_Context_Zf_ViewScriptsDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
Zend_Tool_Project_Context_Zf_ViewsDirectory	library\Zend\Tool\Project\Context\Zf\ViewsDirectory.php	/^class Zend_Tool_Project_Context_Zf_ViewsDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
Zend_Tool_Project_Context_Zf_ZfStandardLibraryDirectory	library\Zend\Tool\Project\Context\Zf\ZfStandardLibraryDirectory.php	/^class Zend_Tool_Project_Context_Zf_ZfStandardLibraryDirectory extends Zend_Tool_Project_Context_Filesystem_Directory$/;"	c
relativePath	library\Zend\Tool\Project\Context\Zf\ZfStandardLibraryDirectory.php	/^                $relativePath = preg_replace('#^'.preg_quote(realpath($zfPath), '#').'#', '', realpath($file->getPath())) . DIRECTORY_SEPARATOR . $file->getFilename();$/;"	v
zfIterator	library\Zend\Tool\Project\Context\Zf\ZfStandardLibraryDirectory.php	/^            $zfIterator = new RecursiveDirectoryIterator($zfPath);$/;"	v
zfPath	library\Zend\Tool\Project\Context\Zf\ZfStandardLibraryDirectory.php	/^        $zfPath = $this->_getZfPath();$/;"	v
Zend_Tool_Project_Exception	library\Zend\Tool\Project\Exception.php	/^class Zend_Tool_Project_Exception extends Zend_Exception$/;"	c
Zend_Tool_Project_Profile	library\Zend\Tool\Project\Profile.php	/^class Zend_Tool_Project_Profile extends Zend_Tool_Project_Profile_Resource_Container$/;"	c
file	library\Zend\Tool\Project\Profile.php	/^            $file = $this->_attributes['projectProfileFile'];$/;"	v
file	library\Zend\Tool\Project\Profile.php	/^        $file = null;$/;"	v
parser	library\Zend\Tool\Project\Profile.php	/^        $parser = new Zend_Tool_Project_Profile_FileParser_Xml();$/;"	v
profileData	library\Zend\Tool\Project\Profile.php	/^        $profileData = file_get_contents($projectProfileFilePath);$/;"	v
profileFileParser	library\Zend\Tool\Project\Profile.php	/^        $profileFileParser = new Zend_Tool_Project_Profile_FileParser_Xml();$/;"	v
projectProfileFilePath	library\Zend\Tool\Project\Profile.php	/^            $projectProfileFilePath = $this->_attributes['projectProfileFile'];$/;"	v
projectProfileFilePath	library\Zend\Tool\Project\Profile.php	/^            $projectProfileFilePath = rtrim($this->_attributes['projectDirectory'], '\/\\\\') . '\/.zfproject.xml';$/;"	v
rii	library\Zend\Tool\Project\Profile.php	/^            $rii = new RecursiveIteratorIterator($resource, RecursiveIteratorIterator::SELF_FIRST);$/;"	v
string	library\Zend\Tool\Project\Profile.php	/^        $string = '';$/;"	v
xml	library\Zend\Tool\Project\Profile.php	/^        $xml = $parser->serialize($this);$/;"	v
Zend_Tool_Project_Profile_Exception	library\Zend\Tool\Project\Profile\Exception.php	/^class Zend_Tool_Project_Profile_Exception extends Zend_Tool_Project_Exception$/;"	c
Zend_Tool_Project_Profile_FileParser_Xml	library\Zend\Tool\Project\Profile\FileParser\Xml.php	/^class Zend_Tool_Project_Profile_FileParser_Xml implements Zend_Tool_Project_Profile_FileParser_Interface$/;"	c
attributes	library\Zend\Tool\Project\Profile\FileParser\Xml.php	/^                $attributes = array();$/;"	v
contextName	library\Zend\Tool\Project\Profile\FileParser\Xml.php	/^            $contextName = $resourceName;$/;"	v
doc	library\Zend\Tool\Project\Profile\FileParser\Xml.php	/^        $doc = new DOMDocument('1.0');$/;"	v
domnode	library\Zend\Tool\Project\Profile\FileParser\Xml.php	/^        $domnode = $doc->appendChild($domnode);$/;"	v
domnode	library\Zend\Tool\Project\Profile\FileParser\Xml.php	/^        $domnode = $doc->importNode($domnode, true);$/;"	v
domnode	library\Zend\Tool\Project\Profile\FileParser\Xml.php	/^        $domnode = dom_import_simplexml($xmlElement);$/;"	v
newNode	library\Zend\Tool\Project\Profile\FileParser\Xml.php	/^            $newNode = $xmlNode->addChild($resourceName);$/;"	v
profile	library\Zend\Tool\Project\Profile\FileParser\Xml.php	/^        $profile = clone $profile;$/;"	v
resourceName	library\Zend\Tool\Project\Profile\FileParser\Xml.php	/^            $resourceName = $resource->getContext()->getName();$/;"	v
rii	library\Zend\Tool\Project\Profile\FileParser\Xml.php	/^            $rii = new RecursiveIteratorIterator($topResource, RecursiveIteratorIterator::SELF_FIRST);$/;"	v
subResource	library\Zend\Tool\Project\Profile\FileParser\Xml.php	/^            $subResource = new Zend_Tool_Project_Profile_Resource($contextName);$/;"	v
xmlDataIterator	library\Zend\Tool\Project\Profile\FileParser\Xml.php	/^        $xmlDataIterator = new SimpleXMLIterator($data);$/;"	v
xmlElement	library\Zend\Tool\Project\Profile\FileParser\Xml.php	/^        $xmlElement = new SimpleXMLElement('<projectProfile \/>');$/;"	v
Zend_Tool_Project_Profile_Iterator_ContextFilter	library\Zend\Tool\Project\Profile\Iterator\ContextFilter.php	/^class Zend_Tool_Project_Profile_Iterator_ContextFilter extends RecursiveFilterIterator$/;"	c
acceptNames	library\Zend\Tool\Project\Profile\Iterator\ContextFilter.php	/^            $acceptNames = array($acceptNames);$/;"	v
acceptTypes	library\Zend\Tool\Project\Profile\Iterator\ContextFilter.php	/^            $acceptTypes = array($acceptTypes);$/;"	v
currentItem	library\Zend\Tool\Project\Profile\Iterator\ContextFilter.php	/^        $currentItem = $this->current();$/;"	v
denyNames	library\Zend\Tool\Project\Profile\Iterator\ContextFilter.php	/^            $denyNames = array($denyNames);$/;"	v
denyTypes	library\Zend\Tool\Project\Profile\Iterator\ContextFilter.php	/^            $denyTypes = array($denyTypes);$/;"	v
getChildren	library\Zend\Tool\Project\Profile\Iterator\ContextFilter.php	/^    function getChildren()$/;"	f
Zend_Tool_Project_Profile_Iterator_EnabledResourceFilter	library\Zend\Tool\Project\Profile\Iterator\EnabledResourceFilter.php	/^class Zend_Tool_Project_Profile_Iterator_EnabledResourceFilter extends RecursiveFilterIterator$/;"	c
Zend_Tool_Project_Profile_Resource	library\Zend\Tool\Project\Profile\Resource.php	/^class Zend_Tool_Project_Profile_Resource extends Zend_Tool_Project_Profile_Resource_Container$/;"	c
Zend_Tool_Project_Profile_Resource_Container	library\Zend\Tool\Project\Profile\Resource\Container.php	/^class Zend_Tool_Project_Profile_Resource_Container implements RecursiveIterator, Countable$/;"	c
context	library\Zend\Tool\Project\Profile\Resource\Container.php	/^                $context = $contextRegistry->getContext($context);$/;"	v
contextRegistry	library\Zend\Tool\Project\Profile\Resource\Container.php	/^            $contextRegistry = Zend_Tool_Project_Context_Repository::getInstance();$/;"	v
currentConstraint	library\Zend\Tool\Project\Profile\Resource\Container.php	/^        $currentConstraint = $matchSearchConstraints->getConstraint();$/;"	v
currentResourceAttributes	library\Zend\Tool\Project\Profile\Resource\Container.php	/^                    $currentResourceAttributes = $currentResource->getAttributes();$/;"	v
filterIterator	library\Zend\Tool\Project\Profile\Resource\Container.php	/^            $filterIterator = new Zend_Tool_Project_Profile_Iterator_ContextFilter($this, array('denyNames' => $nonMatchSearchConstraints));$/;"	v
foundDepth	library\Zend\Tool\Project\Profile\Resource\Container.php	/^                    $foundDepth = $riIterator->getDepth();$/;"	v
foundDepth	library\Zend\Tool\Project\Profile\Resource\Container.php	/^        $foundDepth        = 0;$/;"	v
foundResource	library\Zend\Tool\Project\Profile\Resource\Container.php	/^                        $foundResource = $currentResource;$/;"	v
foundResource	library\Zend\Tool\Project\Profile\Resource\Container.php	/^        $foundResource     = false;$/;"	v
matchSearchConstraints	library\Zend\Tool\Project\Profile\Resource\Container.php	/^            $matchSearchConstraints = new Zend_Tool_Project_Profile_Resource_SearchConstraints($matchSearchConstraints);$/;"	v
newResource	library\Zend\Tool\Project\Profile\Resource\Container.php	/^        $newResource = new Zend_Tool_Project_Profile_Resource($context);$/;"	v
paramsMatch	library\Zend\Tool\Project\Profile\Resource\Container.php	/^                            $paramsMatch = false;$/;"	v
paramsMatch	library\Zend\Tool\Project\Profile\Resource\Container.php	/^                $paramsMatch = true;$/;"	v
parentResource	library\Zend\Tool\Project\Profile\Resource\Container.php	/^            $parentResource = $appendResourceOrSearchConstraints;$/;"	v
riIterator	library\Zend\Tool\Project\Profile\Resource\Container.php	/^            $riIterator = new RecursiveIteratorIterator($filterIterator, RecursiveIteratorIterator::SELF_FIRST);$/;"	v
riIterator	library\Zend\Tool\Project\Profile\Resource\Container.php	/^            $riIterator = new RecursiveIteratorIterator($this, RecursiveIteratorIterator::SELF_FIRST);$/;"	v
setMethod	library\Zend\Tool\Project\Profile\Resource\Container.php	/^            $setMethod = 'set' . $attrName;$/;"	v
Zend_Tool_Project_Profile_Resource_SearchConstraints	library\Zend\Tool\Project\Profile\Resource\SearchConstraints.php	/^class Zend_Tool_Project_Profile_Resource_SearchConstraints$/;"	c
constraint	library\Zend\Tool\Project\Profile\Resource\SearchConstraints.php	/^        $constraint = $this->_makeConstraint($name, $params);$/;"	v
name	library\Zend\Tool\Project\Profile\Resource\SearchConstraints.php	/^            $name   = $constraint;$/;"	v
name	library\Zend\Tool\Project\Profile\Resource\SearchConstraints.php	/^            $name   = $constraint['name'];$/;"	v
params	library\Zend\Tool\Project\Profile\Resource\SearchConstraints.php	/^            $params = $constraint['params'];$/;"	v
params	library\Zend\Tool\Project\Profile\Resource\SearchConstraints.php	/^            $params = array();$/;"	v
value	library\Zend\Tool\Project\Profile\Resource\SearchConstraints.php	/^        $value = array('name' => $name, 'params' => $params);$/;"	v
contents	library\Zend\Tool\Project\Provider\Abstract.php	/^        $contents = file_get_contents($pathToProfileFile);$/;"	v
contextRegistry	library\Zend\Tool\Project\Provider\Abstract.php	/^            $contextRegistry = Zend_Tool_Project_Context_Repository::getInstance();$/;"	v
engine	library\Zend\Tool\Project\Provider\Abstract.php	/^        $engine = new Zend_Tool_Project_Context_Content_Engine($storage);$/;"	v
foundPath	library\Zend\Tool\Project\Provider\Abstract.php	/^        $foundPath = $this->_findProfileDirectory($projectDirectory, $searchParentDirectories);$/;"	v
name	library\Zend\Tool\Project\Provider\Abstract.php	/^        $name = $projectProfileFile->getContext()->getPath();$/;"	v
parentDirectoriesArray	library\Zend\Tool\Project\Provider\Abstract.php	/^        $parentDirectoriesArray = explode(DIRECTORY_SEPARATOR, ltrim($projectDirectory, DIRECTORY_SEPARATOR));$/;"	v
ppd	library\Zend\Tool\Project\Provider\Abstract.php	/^                $ppd = $profile->search('ProjectProvidersDirectory');$/;"	v
profile	library\Zend\Tool\Project\Provider\Abstract.php	/^                $profile = $this->_loadProfile();$/;"	v
profile	library\Zend\Tool\Project\Provider\Abstract.php	/^        $profile = $this->_loadProfile();$/;"	v
profile	library\Zend\Tool\Project\Provider\Abstract.php	/^        $profile = new Zend_Tool_Project_Profile();$/;"	v
profilePath	library\Zend\Tool\Project\Provider\Abstract.php	/^            $profilePath = $this->_findProfileDirectory();$/;"	v
projectDirectory	library\Zend\Tool\Project\Provider\Abstract.php	/^            $projectDirectory = getcwd();$/;"	v
projectDirectoryAssembled	library\Zend\Tool\Project\Provider\Abstract.php	/^                $projectDirectoryAssembled = DIRECTORY_SEPARATOR . $projectDirectoryAssembled;$/;"	v
projectDirectoryAssembled	library\Zend\Tool\Project\Provider\Abstract.php	/^            $projectDirectoryAssembled = implode(DIRECTORY_SEPARATOR, $parentDirectoriesArray);$/;"	v
projectProfileFile	library\Zend\Tool\Project\Provider\Abstract.php	/^        $projectProfileFile = $this->_loadedProfile->search('ProjectProfileFile');$/;"	v
registry	library\Zend\Tool\Project\Provider\Abstract.php	/^        $registry = Zend_Tool_Project_Context_Repository::getInstance();$/;"	v
storage	library\Zend\Tool\Project\Provider\Abstract.php	/^        $storage = $this->_registry->getStorage();$/;"	v
Zend_Tool_Project_Provider_Action	library\Zend\Tool\Project\Provider\Action.php	/^class Zend_Tool_Project_Provider_Action$/;"	c
actionMethod	library\Zend\Tool\Project\Provider\Action.php	/^        $actionMethod = $controllerFile->createResource('ActionMethod', array('actionName' => $actionName));$/;"	v
actionMethodResource	library\Zend\Tool\Project\Provider\Action.php	/^        $actionMethodResource = self::createResource($this->_loadedProfile, $name, $controllerName, $module);$/;"	v
controllerFile	library\Zend\Tool\Project\Provider\Action.php	/^        $controllerFile = self::_getControllerFileResource($profile, $controllerName, $moduleName);$/;"	v
controllerName	library\Zend\Tool\Project\Provider\Action.php	/^        $controllerName = ucfirst($controllerName);$/;"	v
name	library\Zend\Tool\Project\Provider\Action.php	/^        $name = strtolower(substr($name, 0, 1)) . substr($name, 1);$/;"	v
originalControllerName	library\Zend\Tool\Project\Provider\Action.php	/^        $originalControllerName = $controllerName;$/;"	v
originalName	library\Zend\Tool\Project\Provider\Action.php	/^        $originalName = $name;$/;"	v
profileSearchParams	library\Zend\Tool\Project\Provider\Action.php	/^            $profileSearchParams = array('modulesDirectory', 'moduleDirectory' => array('moduleName' => $moduleName));$/;"	v
profileSearchParams	library\Zend\Tool\Project\Provider\Action.php	/^        $profileSearchParams = array();$/;"	v
request	library\Zend\Tool\Project\Provider\Action.php	/^        $request = $this->_registry->getRequest();$/;"	v
response	library\Zend\Tool\Project\Provider\Action.php	/^        $response = $this->_registry->getResponse();$/;"	v
tense	library\Zend\Tool\Project\Provider\Action.php	/^        $tense = (($request->isPretend()) ? 'would be' : 'is');$/;"	v
testActionMethodResource	library\Zend\Tool\Project\Provider\Action.php	/^            $testActionMethodResource = Zend_Tool_Project_Provider_Test::createApplicationResource($this->_loadedProfile, $controllerName, $name, $module);$/;"	v
testActionMethodResource	library\Zend\Tool\Project\Provider\Action.php	/^        $testActionMethodResource = null;$/;"	v
testingEnabled	library\Zend\Tool\Project\Provider\Action.php	/^            $testingEnabled = false;$/;"	v
testingEnabled	library\Zend\Tool\Project\Provider\Action.php	/^        $testingEnabled = Zend_Tool_Project_Provider_Test::isTestingEnabled($this->_loadedProfile);$/;"	v
viewResource	library\Zend\Tool\Project\Provider\Action.php	/^            $viewResource = Zend_Tool_Project_Provider_View::createResource($this->_loadedProfile, $name, $controllerName, $module);$/;"	v
Zend_Tool_Project_Provider_Application	library\Zend\Tool\Project\Provider\Application.php	/^class Zend_Tool_Project_Provider_Application$/;"	c
applicationDirectory	library\Zend\Tool\Project\Provider\Application.php	/^        $applicationDirectory = $profile->search('ApplicationDirectory');$/;"	v
configFileResource	library\Zend\Tool\Project\Provider\Application.php	/^        $configFileResource = $profile->search('ApplicationConfigFile');$/;"	v
originalClassNamePrefix	library\Zend\Tool\Project\Provider\Application.php	/^        $originalClassNamePrefix = $classNamePrefix;$/;"	v
profile	library\Zend\Tool\Project\Provider\Application.php	/^        $profile = $this->_loadProfile(self::NO_PROFILE_THROW_EXCEPTION);$/;"	v
response	library\Zend\Tool\Project\Provider\Application.php	/^        $response = $this->_registry->getResponse();$/;"	v
zc	library\Zend\Tool\Project\Provider\Application.php	/^        $zc = $configFileResource->getAsZendConfig('production');$/;"	v
Zend_Tool_Project_Provider_Controller	library\Zend\Tool\Project\Provider\Controller.php	/^class Zend_Tool_Project_Provider_Controller$/;"	c
controllerResource	library\Zend\Tool\Project\Provider\Controller.php	/^            $controllerResource = self::createResource($this->_loadedProfile, $name, $module);$/;"	v
controllersDirectory	library\Zend\Tool\Project\Provider\Controller.php	/^        $controllersDirectory = self::_getControllersDirectoryResource($profile, $moduleName);$/;"	v
exceptionMessage	library\Zend\Tool\Project\Provider\Controller.php	/^                $exceptionMessage = 'A controller directory for module "' . $moduleName . '" was not found.';$/;"	v
exceptionMessage	library\Zend\Tool\Project\Provider\Controller.php	/^                $exceptionMessage = 'A controller directory was not found.';$/;"	v
indexActionResource	library\Zend\Tool\Project\Provider\Controller.php	/^                $indexActionResource = Zend_Tool_Project_Provider_Action::createResource($this->_loadedProfile, 'index', $name, $module);$/;"	v
indexActionViewResource	library\Zend\Tool\Project\Provider\Controller.php	/^                $indexActionViewResource = Zend_Tool_Project_Provider_View::createResource($this->_loadedProfile, 'index', $name, $module);$/;"	v
name	library\Zend\Tool\Project\Provider\Controller.php	/^        $name = ucfirst($name);$/;"	v
newController	library\Zend\Tool\Project\Provider\Controller.php	/^        $newController = $controllersDirectory->createResource($/;"	v
originalName	library\Zend\Tool\Project\Provider\Controller.php	/^        $originalName = $name;$/;"	v
profileSearchParams	library\Zend\Tool\Project\Provider\Controller.php	/^            $profileSearchParams = array('modulesDirectory', 'moduleDirectory' => array('moduleName' => $moduleName));$/;"	v
profileSearchParams	library\Zend\Tool\Project\Provider\Controller.php	/^        $profileSearchParams = array();$/;"	v
request	library\Zend\Tool\Project\Provider\Controller.php	/^        $request = $this->_registry->getRequest();$/;"	v
response	library\Zend\Tool\Project\Provider\Controller.php	/^        $response = $this->_registry->getResponse();$/;"	v
tense	library\Zend\Tool\Project\Provider\Controller.php	/^            $tense = (($request->isPretend()) ? 'would be' : 'is');$/;"	v
testActionResource	library\Zend\Tool\Project\Provider\Controller.php	/^                $testActionResource = Zend_Tool_Project_Provider_Test::createApplicationResource($this->_loadedProfile, $name, 'index', $module);$/;"	v
testingEnabled	library\Zend\Tool\Project\Provider\Controller.php	/^            $testingEnabled = false;$/;"	v
testingEnabled	library\Zend\Tool\Project\Provider\Controller.php	/^        $testingEnabled = Zend_Tool_Project_Provider_Test::isTestingEnabled($this->_loadedProfile);$/;"	v
Zend_Tool_Project_Provider_DbAdapter	library\Zend\Tool\Project\Provider\DbAdapter.php	/^class Zend_Tool_Project_Provider_DbAdapter$/;"	c
appConfigFileResource	library\Zend\Tool\Project\Provider\DbAdapter.php	/^        $appConfigFileResource = $profile->search('applicationConfigFile');$/;"	v
applicationConfig	library\Zend\Tool\Project\Provider\DbAdapter.php	/^        $applicationConfig = $this->_loadedProfile->search('ApplicationConfigFile');$/;"	v
dbConfigValues	library\Zend\Tool\Project\Provider\DbAdapter.php	/^        $dbConfigValues = array('resources' => array('db' => null));$/;"	v
dsnVars	library\Zend\Tool\Project\Provider\DbAdapter.php	/^        $dsnVars = array();$/;"	v
isPretend	library\Zend\Tool\Project\Provider\DbAdapter.php	/^        $isPretend = $this->_registry->getRequest()->isPretend();$/;"	v
profile	library\Zend\Tool\Project\Provider\DbAdapter.php	/^        $profile = $this->_loadProfile(self::NO_PROFILE_THROW_EXCEPTION);$/;"	v
response	library\Zend\Tool\Project\Provider\DbAdapter.php	/^        $response = $this->_registry->getResponse();$/;"	v
value	library\Zend\Tool\Project\Provider\DbAdapter.php	/^        $value = stripslashes($value);$/;"	v
Zend_Tool_Project_Provider_DbTable	library\Zend\Tool\Project\Provider\DbTable.php	/^class Zend_Tool_Project_Provider_DbTable$/;"	c
bootstrapResource	library\Zend\Tool\Project\Provider\DbTable.php	/^        $bootstrapResource = $this->_loadedProfile->search('BootstrapFile');$/;"	v
db	library\Zend\Tool\Project\Provider\DbTable.php	/^        $db = $zendApp->getBootstrap()->getResource('db');$/;"	v
dbTableDirectory	library\Zend\Tool\Project\Provider\DbTable.php	/^            $dbTableDirectory = $modelsDirectory->createResource('DbTableDirectory');$/;"	v
dbTableFile	library\Zend\Tool\Project\Provider\DbTable.php	/^        $dbTableFile = $dbTableDirectory->createResource('DbTableFile', array('dbTableName' => $dbTableName, 'actualTableName' => $actualTableName));$/;"	v
dbTableFile	library\Zend\Tool\Project\Provider\DbTable.php	/^        $dbTableFile = $dbTableDirectory->search(array('DbTableFile' => array('dbTableName' => $dbTableName)));$/;"	v
dbTableName	library\Zend\Tool\Project\Provider\DbTable.php	/^            $dbTableName = $this->_convertTableNameToClassName($actualTableName);$/;"	v
modelsDirectory	library\Zend\Tool\Project\Provider\DbTable.php	/^        $modelsDirectory = $profile->search($profileSearchParams);$/;"	v
name	library\Zend\Tool\Project\Provider\DbTable.php	/^        $name = ucfirst($name);$/;"	v
originalName	library\Zend\Tool\Project\Provider\DbTable.php	/^        $originalName = $name;$/;"	v
profileSearchParams	library\Zend\Tool\Project\Provider\DbTable.php	/^            $profileSearchParams = array('modulesDirectory', 'moduleDirectory' => array('moduleName' => $moduleName));$/;"	v
profileSearchParams	library\Zend\Tool\Project\Provider\DbTable.php	/^        $profileSearchParams = array();$/;"	v
request	library\Zend\Tool\Project\Provider\DbTable.php	/^        $request = $this->_registry->getRequest();$/;"	v
response	library\Zend\Tool\Project\Provider\DbTable.php	/^            $response = $this->_registry->getResponse();$/;"	v
response	library\Zend\Tool\Project\Provider\DbTable.php	/^        $response = $this->_registry->getResponse();$/;"	v
tableResource	library\Zend\Tool\Project\Provider\DbTable.php	/^            $tableResource = self::createResource($this->_loadedProfile, $name, $actualTableName, $module);$/;"	v
tableResources	library\Zend\Tool\Project\Provider\DbTable.php	/^        $tableResources = array();$/;"	v
tense	library\Zend\Tool\Project\Provider\DbTable.php	/^        $tense = (($request->isPretend()) ? 'would be' : 'is');$/;"	v
zendApp	library\Zend\Tool\Project\Provider\DbTable.php	/^        $zendApp = $bootstrapResource->getApplicationInstance();$/;"	v
Zend_Tool_Project_Provider_Exception	library\Zend\Tool\Project\Provider\Exception.php	/^class Zend_Tool_Project_Provider_Exception extends Zend_Tool_Project_Exception$/;"	c
Zend_Tool_Project_Provider_Form	library\Zend\Tool\Project\Provider\Form.php	/^class Zend_Tool_Project_Provider_Form extends Zend_Tool_Project_Provider_Abstract$/;"	c
exceptionMessage	library\Zend\Tool\Project\Provider\Form.php	/^                $exceptionMessage = 'A form directory for module "' . $moduleName . '" was not found.';$/;"	v
exceptionMessage	library\Zend\Tool\Project\Provider\Form.php	/^                $exceptionMessage = 'A form directory was not found.';$/;"	v
formDirectoryResource	library\Zend\Tool\Project\Provider\Form.php	/^        $formDirectoryResource = self::_getFormsDirectoryResource($this->_loadedProfile, $module);$/;"	v
formResource	library\Zend\Tool\Project\Provider\Form.php	/^            $formResource = self::createResource($this->_loadedProfile, $name, $module);$/;"	v
formsDirectory	library\Zend\Tool\Project\Provider\Form.php	/^        $formsDirectory = self::_getFormsDirectoryResource($profile, $moduleName);$/;"	v
name	library\Zend\Tool\Project\Provider\Form.php	/^        $name = ucwords($name);$/;"	v
newForm	library\Zend\Tool\Project\Provider\Form.php	/^        $newForm = $formsDirectory->createResource($/;"	v
profileSearchParams	library\Zend\Tool\Project\Provider\Form.php	/^            $profileSearchParams = array('modulesDirectory', 'moduleDirectory' => array('moduleName' => $moduleName));$/;"	v
profileSearchParams	library\Zend\Tool\Project\Provider\Form.php	/^        $profileSearchParams = array();$/;"	v
response	library\Zend\Tool\Project\Provider\Form.php	/^            $response = $this->_registry->getResponse();$/;"	v
testFormResource	library\Zend\Tool\Project\Provider\Form.php	/^                $testFormResource = null;$/;"	v
testingEnabled	library\Zend\Tool\Project\Provider\Form.php	/^        $testingEnabled = Zend_Tool_Project_Provider_Test::isTestingEnabled($this->_loadedProfile);$/;"	v
Zend_Tool_Project_Provider_Layout	library\Zend\Tool\Project\Provider\Layout.php	/^class Zend_Tool_Project_Provider_Layout extends Zend_Tool_Project_Provider_Abstract implements Zend_Tool_Framework_Provider_Pretendable$/;"	c
applicationConfigResource	library\Zend\Tool\Project\Provider\Layout.php	/^        $applicationConfigResource = $profile->search('ApplicationConfigFile');$/;"	v
applicationDirectory	library\Zend\Tool\Project\Provider\Layout.php	/^        $applicationDirectory = $profile->search('applicationDirectory');$/;"	v
layoutDirectory	library\Zend\Tool\Project\Provider\Layout.php	/^            $layoutDirectory = $applicationDirectory->createResource('layoutsDirectory');$/;"	v
layoutDirectory	library\Zend\Tool\Project\Provider\Layout.php	/^        $layoutDirectory = $applicationDirectory->search('layoutsDirectory');$/;"	v
layoutPath	library\Zend\Tool\Project\Provider\Layout.php	/^        $layoutPath = 'APPLICATION_PATH "\/layouts\/scripts\/"';$/;"	v
layoutScriptFile	library\Zend\Tool\Project\Provider\Layout.php	/^            $layoutScriptFile = $layoutScriptsDirectory->createResource('layoutScriptFile', array('layoutName' => 'layout'));$/;"	v
layoutScriptFile	library\Zend\Tool\Project\Provider\Layout.php	/^            $layoutScriptFile = self::createResource($profile);$/;"	v
layoutScriptFile	library\Zend\Tool\Project\Provider\Layout.php	/^        $layoutScriptFile = $layoutScriptsDirectory->search('layoutScriptFile', array('layoutName' => 'layout'));$/;"	v
layoutScriptsDirectory	library\Zend\Tool\Project\Provider\Layout.php	/^            $layoutScriptsDirectory = $layoutDirectory->createResource('layoutScriptsDirectory');$/;"	v
layoutScriptsDirectory	library\Zend\Tool\Project\Provider\Layout.php	/^        $layoutScriptsDirectory = $layoutDirectory->search('layoutScriptsDirectory');$/;"	v
profile	library\Zend\Tool\Project\Provider\Layout.php	/^        $profile = $this->_loadProfile(self::NO_PROFILE_THROW_EXCEPTION);$/;"	v
zc	library\Zend\Tool\Project\Provider\Layout.php	/^        $zc = $applicationConfigResource->getAsZendConfig();$/;"	v
Zend_Tool_Project_Provider_Manifest	library\Zend\Tool\Project\Provider\Manifest.php	/^class Zend_Tool_Project_Provider_Manifest implements$/;"	c
Zend_Tool_Project_Provider_Model	library\Zend\Tool\Project\Provider\Model.php	/^class Zend_Tool_Project_Provider_Model extends Zend_Tool_Project_Provider_Abstract$/;"	c
exceptionMessage	library\Zend\Tool\Project\Provider\Model.php	/^                $exceptionMessage = 'A model directory for module "' . $moduleName . '" was not found.';$/;"	v
exceptionMessage	library\Zend\Tool\Project\Provider\Model.php	/^                $exceptionMessage = 'A model directory was not found.';$/;"	v
modelResource	library\Zend\Tool\Project\Provider\Model.php	/^            $modelResource = self::createResource($this->_loadedProfile, $name, $module);$/;"	v
modelsDirectory	library\Zend\Tool\Project\Provider\Model.php	/^        $modelsDirectory = self::_getModelsDirectoryResource($profile, $moduleName);$/;"	v
name	library\Zend\Tool\Project\Provider\Model.php	/^        $name = ucwords($name);$/;"	v
newModel	library\Zend\Tool\Project\Provider\Model.php	/^        $newModel = $modelsDirectory->createResource($/;"	v
originalName	library\Zend\Tool\Project\Provider\Model.php	/^        $originalName = $name;$/;"	v
profileSearchParams	library\Zend\Tool\Project\Provider\Model.php	/^            $profileSearchParams = array('modulesDirectory', 'moduleDirectory' => array('moduleName' => $moduleName));$/;"	v
profileSearchParams	library\Zend\Tool\Project\Provider\Model.php	/^        $profileSearchParams = array();$/;"	v
request	library\Zend\Tool\Project\Provider\Model.php	/^        $request = $this->_registry->getRequest();$/;"	v
response	library\Zend\Tool\Project\Provider\Model.php	/^        $response = $this->_registry->getResponse();$/;"	v
tense	library\Zend\Tool\Project\Provider\Model.php	/^        $tense = (($request->isPretend()) ? 'would be' : 'is');$/;"	v
testModelResource	library\Zend\Tool\Project\Provider\Model.php	/^        $testModelResource = null;$/;"	v
testingEnabled	library\Zend\Tool\Project\Provider\Model.php	/^        $testingEnabled = false; \/\/Zend_Tool_Project_Provider_Test::isTestingEnabled($this->_loadedProfile);$/;"	v
Zend_Tool_Project_Provider_Module	library\Zend\Tool\Project\Provider\Module.php	/^class Zend_Tool_Project_Provider_Module$/;"	c
appConfigFile	library\Zend\Tool\Project\Provider\Module.php	/^            $appConfigFile = $this->_loadedProfile->search('ApplicationConfigFile');$/;"	v
currentChildResource	library\Zend\Tool\Project\Provider\Module.php	/^            $currentChildResource = $currentResource->createResource($targetSubResource->getName(), $params);$/;"	v
currentDepth	library\Zend\Tool\Project\Provider\Module.php	/^            $currentDepth = $targetIterator->getDepth();$/;"	v
currentDepth	library\Zend\Tool\Project\Provider\Module.php	/^        $currentDepth = 0;$/;"	v
currentResource	library\Zend\Tool\Project\Provider\Module.php	/^                    $currentResource = array_pop($parentResources);$/;"	v
currentResource	library\Zend\Tool\Project\Provider\Module.php	/^                $currentResource = $currentChildResource;$/;"	v
currentResource	library\Zend\Tool\Project\Provider\Module.php	/^        $currentResource = $moduleDirectory;$/;"	v
depthDifference	library\Zend\Tool\Project\Provider\Module.php	/^            $depthDifference = $targetIterator->getDepth() - $currentDepth;$/;"	v
enabledFilter	library\Zend\Tool\Project\Provider\Module.php	/^            $enabledFilter = new Zend_Tool_Project_Profile_Iterator_EnabledResourceFilter($resources);$/;"	v
i	library\Zend\Tool\Project\Provider\Module.php	/^                $i = $depthDifference;$/;"	v
moduleContextFilterIterator	library\Zend\Tool\Project\Provider\Module.php	/^        $moduleContextFilterIterator = new Zend_Tool_Project_Profile_Iterator_ContextFilter($/;"	v
moduleDirectory	library\Zend\Tool\Project\Provider\Module.php	/^        $moduleDirectory = $modulesDirectory->createResource('moduleDirectory', array('moduleName' => $moduleName));$/;"	v
modulesDirectory	library\Zend\Tool\Project\Provider\Module.php	/^        $modulesDirectory = $profile->search('modulesDirectory');$/;"	v
params	library\Zend\Tool\Project\Provider\Module.php	/^            $params = $targetSubResource->getAttributes();$/;"	v
parentResources	library\Zend\Tool\Project\Provider\Module.php	/^        $parentResources = array();$/;"	v
resources	library\Zend\Tool\Project\Provider\Module.php	/^        $resources = self::createResources($this->_loadedProfile, $name);$/;"	v
response	library\Zend\Tool\Project\Provider\Module.php	/^        $response = $this->_registry->getResponse();$/;"	v
targetIterator	library\Zend\Tool\Project\Provider\Module.php	/^        $targetIterator = new RecursiveIteratorIterator($moduleContextFilterIterator, RecursiveIteratorIterator::SELF_FIRST);$/;"	v
targetModuleEnabledResources	library\Zend\Tool\Project\Provider\Module.php	/^            $targetModuleEnabledResources = array($/;"	v
targetModuleResource	library\Zend\Tool\Project\Provider\Module.php	/^            $targetModuleResource = $profile->search('applicationDirectory');$/;"	v
Zend_Tool_Project_Provider_Profile	library\Zend\Tool\Project\Provider\Profile.php	/^class Zend_Tool_Project_Provider_Profile extends Zend_Tool_Project_Provider_Abstract$/;"	c
profileIterator	library\Zend\Tool\Project\Provider\Profile.php	/^        $profileIterator = $this->_loadedProfile->getIterator();$/;"	v
Zend_Tool_Project_Provider_Project	library\Zend\Tool\Project\Provider\Project.php	/^class Zend_Tool_Project_Provider_Project$/;"	c
created	library\Zend\Tool\Project\Provider\Project.php	/^                $created = mkdir($path);$/;"	v
data	library\Zend\Tool\Project\Provider\Project.php	/^        $data = <<<EOS$/;"	v
name	library\Zend\Tool\Project\Provider\Project.php	/^            $name = ltrim(strrchr($projectDirResource->getPath(), DIRECTORY_SEPARATOR), DIRECTORY_SEPARATOR);$/;"	v
newProfile	library\Zend\Tool\Project\Provider\Project.php	/^        $newProfile = new Zend_Tool_Project_Profile(array($/;"	v
path	library\Zend\Tool\Project\Provider\Project.php	/^            $path = $projectDirResource->getPath() . '\/public';$/;"	v
path	library\Zend\Tool\Project\Provider\Project.php	/^            $path = '\/path\/to\/public';$/;"	v
path	library\Zend\Tool\Project\Provider\Project.php	/^            $path = getcwd();$/;"	v
path	library\Zend\Tool\Project\Provider\Project.php	/^            $path = str_replace('\\\\', '\/', realpath($path));$/;"	v
path	library\Zend\Tool\Project\Provider\Project.php	/^            $path = trim($path);$/;"	v
profile	library\Zend\Tool\Project\Provider\Project.php	/^        $profile = $this->_loadProfile(self::NO_PROFILE_RETURN_FALSE);$/;"	v
profile	library\Zend\Tool\Project\Provider\Project.php	/^        $profile = $this->_loadProfile(self::NO_PROFILE_RETURN_FALSE, $path);$/;"	v
profileData	library\Zend\Tool\Project\Provider\Project.php	/^            $profileData = $storage->get('project\/profiles\/' . $nameOfProfile . '.xml');$/;"	v
profileData	library\Zend\Tool\Project\Provider\Project.php	/^            $profileData = $this->_getDefaultProfile();$/;"	v
profileData	library\Zend\Tool\Project\Provider\Project.php	/^            $profileData = file_get_contents($fileOfProfile);$/;"	v
profileData	library\Zend\Tool\Project\Provider\Project.php	/^        $profileData = null;$/;"	v
projectDirResource	library\Zend\Tool\Project\Provider\Project.php	/^        $projectDirResource = $caller->getResource()->getProfile()->search('projectDirectory');$/;"	v
response	library\Zend\Tool\Project\Provider\Project.php	/^        $response = $this->_registry->getResponse();$/;"	v
storage	library\Zend\Tool\Project\Provider\Project.php	/^        $storage = $this->_registry->getStorage();$/;"	v
testAction	library\Zend\Tool\Project\Provider\Project.php	/^            $testAction = '                    	<testApplicationActionMethod forActionName="index" \/>';$/;"	v
testAction	library\Zend\Tool\Project\Provider\Project.php	/^        $testAction = '';$/;"	v
version	library\Zend\Tool\Project\Provider\Project.php	/^        $version = Zend_Version::VERSION;$/;"	v
Zend_Tool_Project_Provider_ProjectProvider	library\Zend\Tool\Project\Provider\ProjectProvider.php	/^class Zend_Tool_Project_Provider_ProjectProvider extends Zend_Tool_Project_Provider_Abstract$/;"	c
profile	library\Zend\Tool\Project\Provider\ProjectProvider.php	/^        $profile = $this->_loadProfileRequired();$/;"	v
profileSearchParams	library\Zend\Tool\Project\Provider\ProjectProvider.php	/^        $profileSearchParams = array();$/;"	v
projectProvider	library\Zend\Tool\Project\Provider\ProjectProvider.php	/^        $projectProvider = $profile->createResourceAt($profileSearchParams, 'projectProviderFile', array('projectProviderName' => $projectProviderName, 'actionNames' => $actionNames));$/;"	v
projectProvider	library\Zend\Tool\Project\Provider\ProjectProvider.php	/^        $projectProvider = self::createResource($profile, $name, $actions);$/;"	v
Zend_Tool_Project_Provider_Test	library\Zend\Tool\Project\Provider\Test.php	/^class Zend_Tool_Project_Provider_Test extends Zend_Tool_Project_Provider_Abstract$/;"	c
currentDirectoryResource	library\Zend\Tool\Project\Provider\Test.php	/^                    $currentDirectoryResource = $currentDirectoryResource->createResource('TestLibraryNamespaceDirectory', array('namespaceName' => $nameOrNamespacePart));$/;"	v
currentDirectoryResource	library\Zend\Tool\Project\Provider\Test.php	/^                    $currentDirectoryResource = $libraryDirectoryResource;$/;"	v
currentDirectoryResource	library\Zend\Tool\Project\Provider\Test.php	/^        $currentDirectoryResource = $testLibraryDirectoryResource;$/;"	v
fsParts	library\Zend\Tool\Project\Provider\Test.php	/^        $fsParts = explode('_', $libraryClassName);$/;"	v
included	library\Zend\Tool\Project\Provider\Test.php	/^        $included = @include 'PHPUnit\/Runner\/Version.php';$/;"	v
libraryFileResource	library\Zend\Tool\Project\Provider\Test.php	/^                    $libraryFileResource = $currentDirectoryResource->createResource('TestLibraryFile', array('forClassName' => $libraryClassName));$/;"	v
profile	library\Zend\Tool\Project\Provider\Test.php	/^        $profile = $this->_loadProfile();$/;"	v
profileSearchParams	library\Zend\Tool\Project\Provider\Test.php	/^        $profileSearchParams = array('testsDirectory');$/;"	v
response	library\Zend\Tool\Project\Provider\Test.php	/^        $response = $this->_registry->getResponse();$/;"	v
testAppControllerDirectoryResource	library\Zend\Tool\Project\Provider\Test.php	/^            $testAppControllerDirectoryResource = $testParentOfControllerDirectoryResource->createResource('testApplicationControllerDirectory');$/;"	v
testAppControllerFileResource	library\Zend\Tool\Project\Provider\Test.php	/^            $testAppControllerFileResource = $testAppControllerDirectoryResource->createResource('testApplicationControllerFile', array('forControllerName' => $controllerName));$/;"	v
testAppModuleDirectoryResource	library\Zend\Tool\Project\Provider\Test.php	/^                $testAppModuleDirectoryResource = $testAppModulesDirectoryResource->createResource('testApplicationModuleDirectory', array('forModuleName' => $moduleName));$/;"	v
testAppModulesDirectoryResource	library\Zend\Tool\Project\Provider\Test.php	/^                $testAppModulesDirectoryResource = $testParentOfControllerDirectoryResource->createResource('testApplicationModulesDirectory');$/;"	v
testLibraryDirectoryResource	library\Zend\Tool\Project\Provider\Test.php	/^        $testLibraryDirectoryResource = $profile->search(array('TestsDirectory', 'TestLibraryDirectory'));$/;"	v
testLibraryResource	library\Zend\Tool\Project\Provider\Test.php	/^        $testLibraryResource = self::createLibraryResource($profile, $libraryClassName);$/;"	v
testParentOfControllerDirectoryResource	library\Zend\Tool\Project\Provider\Test.php	/^            $testParentOfControllerDirectoryResource = $testAppModuleDirectoryResource;$/;"	v
testParentOfControllerDirectoryResource	library\Zend\Tool\Project\Provider\Test.php	/^            $testParentOfControllerDirectoryResource = $testsDirectoryResource->createResource('testApplicationDirectory');$/;"	v
testsDirectory	library\Zend\Tool\Project\Provider\Test.php	/^        $testsDirectory = $profile->search($profileSearchParams);$/;"	v
testsDirectoryResource	library\Zend\Tool\Project\Provider\Test.php	/^        $testsDirectoryResource = $profile->search('testsDirectory');$/;"	v
Zend_Tool_Project_Provider_View	library\Zend\Tool\Project\Provider\View.php	/^class Zend_Tool_Project_Provider_View extends Zend_Tool_Project_Provider_Abstract$/;"	c
newViewScriptFile	library\Zend\Tool\Project\Provider\View.php	/^        $newViewScriptFile = $viewControllerScriptsDirectory->createResource('ViewScriptFile', array('forActionName' => $actionName));$/;"	v
noModuleSearch	library\Zend\Tool\Project\Provider\View.php	/^            $noModuleSearch = array('modulesDirectory');$/;"	v
noModuleSearch	library\Zend\Tool\Project\Provider\View.php	/^            $noModuleSearch = null;$/;"	v
profile	library\Zend\Tool\Project\Provider\View.php	/^        $profile = $this->_loadProfile();$/;"	v
profileSearchParams	library\Zend\Tool\Project\Provider\View.php	/^            $profileSearchParams = array('modulesDirectory', 'moduleDirectory' => array('moduleName' => $moduleName));$/;"	v
profileSearchParams	library\Zend\Tool\Project\Provider\View.php	/^        $profileSearchParams = array();$/;"	v
view	library\Zend\Tool\Project\Provider\View.php	/^        $view = self::createResource($profile, $actionNameOrSimpleName, $controllerName, $module);$/;"	v
viewControllerScriptsDirectory	library\Zend\Tool\Project\Provider\View.php	/^            $viewControllerScriptsDirectory = $viewScriptsDirectory->createResource('viewControllerScriptsDirectory', array('forControllerName' => $controllerName));$/;"	v
Zend_Translate	library\Zend\Translate.php	/^class Zend_Translate {$/;"	c
adapter	library\Zend\Translate.php	/^        $adapter = $options['adapter'];$/;"	v
args	library\Zend\Translate.php	/^            $args               = func_get_args();$/;"	v
opt	library\Zend\Translate.php	/^                $opt     = array_shift($args);$/;"	v
options	library\Zend\Translate.php	/^                $options = array_merge($opt, $options);$/;"	v
options	library\Zend\Translate.php	/^            $options            = array();$/;"	v
options	library\Zend\Translate.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Translate.php	/^            $options = array('adapter' => $options);$/;"	v
args	library\Zend\Translate\Adapter.php	/^            $args               = func_get_args();$/;"	v
args	library\Zend\Translate\Adapter.php	/^            $args = func_get_args();$/;"	v
backend	library\Zend\Translate\Adapter.php	/^        $backend = self::$_cache->getBackend();$/;"	v
browser	library\Zend\Translate\Adapter.php	/^            $browser = $find->getEnvironment() + $find->getBrowser();$/;"	v
cacheOptions	library\Zend\Translate\Adapter.php	/^            $cacheOptions = $backend->getCapabilities();$/;"	v
change	library\Zend\Translate\Adapter.php	/^                $change = true;$/;"	v
change	library\Zend\Translate\Adapter.php	/^        $change = false;$/;"	v
content	library\Zend\Translate\Adapter.php	/^                $content = $options['content'];$/;"	v
file	library\Zend\Translate\Adapter.php	/^                $file = $info->getFilename();$/;"	v
filename	library\Zend\Translate\Adapter.php	/^                        $filename = explode('.', $file);$/;"	v
filename	library\Zend\Translate\Adapter.php	/^                        $filename = implode('.', $filename);$/;"	v
find	library\Zend\Translate\Adapter.php	/^            $find = new Zend_Locale($options['locale']);$/;"	v
id	library\Zend\Translate\Adapter.php	/^                $id = 'Zend_Translate_' . $this->toString() . '_Options';$/;"	v
id	library\Zend\Translate\Adapter.php	/^            $id = 'Zend_Translate_' . $this->toString() . '_Options';$/;"	v
id	library\Zend\Translate\Adapter.php	/^            $id = 'Zend_Translate_' . md5(serialize($options['content'])) . '_' . $this->toString();$/;"	v
iterator	library\Zend\Translate\Adapter.php	/^            $iterator = new RecursiveIteratorIterator($/;"	v
keys	library\Zend\Translate\Adapter.php	/^        $keys = array_keys($temp);$/;"	v
list	library\Zend\Translate\Adapter.php	/^        $list = array_keys($this->_translate);$/;"	v
locale	library\Zend\Translate\Adapter.php	/^                $locale = $option;$/;"	v
locale	library\Zend\Translate\Adapter.php	/^            $locale   = $original;$/;"	v
locale	library\Zend\Translate\Adapter.php	/^            $locale = $options['locale'];$/;"	v
locale	library\Zend\Translate\Adapter.php	/^            $locale = $temp[0];$/;"	v
locale	library\Zend\Translate\Adapter.php	/^            $locale = $this->_options['locale'];$/;"	v
locale	library\Zend\Translate\Adapter.php	/^            $locale = Zend_Locale::findLocale($locale);$/;"	v
locale	library\Zend\Translate\Adapter.php	/^            $locale = new Zend_Locale($locale);$/;"	v
locale	library\Zend\Translate\Adapter.php	/^            $locale = substr($locale, 0, -strlen(strrchr($locale, '_')));$/;"	v
locale	library\Zend\Translate\Adapter.php	/^        $locale = (string) $locale;$/;"	v
locale	library\Zend\Translate\Adapter.php	/^        $locale = null;$/;"	v
locales	library\Zend\Translate\Adapter.php	/^                $locales = $content->getList();$/;"	v
message	library\Zend\Translate\Adapter.php	/^            $message = str_replace('%locale%', $locale, $message);$/;"	v
message	library\Zend\Translate\Adapter.php	/^            $message = str_replace('%message%', $message, $this->_options['logMessage']);$/;"	v
messageId	library\Zend\Translate\Adapter.php	/^                $messageId = $messageId[0];$/;"	v
number	library\Zend\Translate\Adapter.php	/^                    $number  = array_pop($messageId);$/;"	v
number	library\Zend\Translate\Adapter.php	/^                $number = array_pop($messageId);$/;"	v
opt	library\Zend\Translate\Adapter.php	/^                $opt     = array_shift($args);$/;"	v
options	library\Zend\Translate\Adapter.php	/^                $options = array_merge($opt, $options);$/;"	v
options	library\Zend\Translate\Adapter.php	/^            $options            = array();$/;"	v
options	library\Zend\Translate\Adapter.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Translate\Adapter.php	/^            $options = array('content' => $options);$/;"	v
options	library\Zend\Translate\Adapter.php	/^        $options  = $options + $this->_options;$/;"	v
original	library\Zend\Translate\Adapter.php	/^            $original = false;$/;"	v
originate	library\Zend\Translate\Adapter.php	/^            $originate = (string) $options['locale'];$/;"	v
originate	library\Zend\Translate\Adapter.php	/^        $originate = null;$/;"	v
parts	library\Zend\Translate\Adapter.php	/^                            $parts  = array_merge($parts, $parts2);$/;"	v
parts	library\Zend\Translate\Adapter.php	/^                            $parts  = explode('.', $file);$/;"	v
parts	library\Zend\Translate\Adapter.php	/^                            $parts = array_merge($parts, $parts2);$/;"	v
parts	library\Zend\Translate\Adapter.php	/^                            $parts = array_unique($parts);$/;"	v
parts2	library\Zend\Translate\Adapter.php	/^                            $parts2 = array();$/;"	v
plocale	library\Zend\Translate\Adapter.php	/^                    $plocale = $number;$/;"	v
plocale	library\Zend\Translate\Adapter.php	/^                    $plocale = 'en';$/;"	v
plural	library\Zend\Translate\Adapter.php	/^                $plural    = $messageId;$/;"	v
plural	library\Zend\Translate\Adapter.php	/^        $plural = null;$/;"	v
prev	library\Zend\Translate\Adapter.php	/^                                        $prev              = $token;$/;"	v
prev	library\Zend\Translate\Adapter.php	/^                            $prev  = '';$/;"	v
prev	library\Zend\Translate\Adapter.php	/^                        $prev              = (string) $options['locale'];$/;"	v
prev	library\Zend\Translate\Adapter.php	/^            $prev = '';$/;"	v
read	library\Zend\Translate\Adapter.php	/^                $read = false;$/;"	v
read	library\Zend\Translate\Adapter.php	/^            $read = true;$/;"	v
read	library\Zend\Translate\Adapter.php	/^        $read = true;$/;"	v
result	library\Zend\Translate\Adapter.php	/^            $result = self::$_cache->load($id);$/;"	v
result	library\Zend\Translate\Adapter.php	/^        $result = null;$/;"	v
return	library\Zend\Translate\Adapter.php	/^        $return = isset($this->_translate[(string) $locale]);$/;"	v
rule	library\Zend\Translate\Adapter.php	/^                    $rule = 0;$/;"	v
rule	library\Zend\Translate\Adapter.php	/^                $rule = Zend_Translate_Plural::getPlural($number, $locale);$/;"	v
rule	library\Zend\Translate\Adapter.php	/^                $rule = Zend_Translate_Plural::getPlural($number, $plocale);$/;"	v
rule	library\Zend\Translate\Adapter.php	/^            $rule = 0;$/;"	v
rule	library\Zend\Translate\Adapter.php	/^            $rule = Zend_Translate_Plural::getPlural($number, $locale);$/;"	v
rule	library\Zend\Translate\Adapter.php	/^        $rule = Zend_Translate_Plural::getPlural($number, $plocale);$/;"	v
tag	library\Zend\Translate\Adapter.php	/^                $tag = 'Zend_Translate';$/;"	v
temp	library\Zend\Translate\Adapter.php	/^                $temp = $this->_loadTranslationData($options['content'], $options['locale'], $options);$/;"	v
temp	library\Zend\Translate\Adapter.php	/^                $temp = array($options['locale'] => $options['content']);$/;"	v
temp	library\Zend\Translate\Adapter.php	/^            $temp = array();$/;"	v
temp	library\Zend\Translate\Adapter.php	/^            $temp = explode('_', $locale);$/;"	v
temp	library\Zend\Translate\Adapter.php	/^            $temp = self::$_cache->load($id);$/;"	v
Zend_Translate_Adapter_Array	library\Zend\Translate\Adapter\Array.php	/^class Zend_Translate_Adapter_Array extends Zend_Translate_Adapter$/;"	c
data	library\Zend\Translate\Adapter\Array.php	/^                $data = include($data);$/;"	v
Zend_Translate_Adapter_Csv	library\Zend\Translate\Adapter\Csv.php	/^class Zend_Translate_Adapter_Csv extends Zend_Translate_Adapter$/;"	c
args	library\Zend\Translate\Adapter\Csv.php	/^            $args               = func_get_args();$/;"	v
opt	library\Zend\Translate\Adapter\Csv.php	/^                $opt     = array_shift($args);$/;"	v
options	library\Zend\Translate\Adapter\Csv.php	/^                $options = array_merge($opt, $options);$/;"	v
options	library\Zend\Translate\Adapter\Csv.php	/^            $options            = array();$/;"	v
options	library\Zend\Translate\Adapter\Csv.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Translate\Adapter\Csv.php	/^            $options = array('content' => $options);$/;"	v
options	library\Zend\Translate\Adapter\Csv.php	/^        $options     = $options + $this->_options;$/;"	v
singular	library\Zend\Translate\Adapter\Csv.php	/^                $singular = array_shift($data);$/;"	v
OOffset	library\Zend\Translate\Adapter\Gettext.php	/^        $OOffset = $input[1];$/;"	v
TOffset	library\Zend\Translate\Adapter\Gettext.php	/^        $TOffset = $input[1];$/;"	v
Zend_Translate_Adapter_Gettext	library\Zend\Translate\Adapter\Gettext.php	/^class Zend_Translate_Adapter_Gettext extends Zend_Translate_Adapter {$/;"	c
input	library\Zend\Translate\Adapter\Gettext.php	/^        $input = $this->_readMOData(1);$/;"	v
original	library\Zend\Translate\Adapter\Gettext.php	/^                $original = @fread($this->_file, $origtemp[$count * 2 + 1]);$/;"	v
original	library\Zend\Translate\Adapter\Gettext.php	/^                $original = explode("\\0", $original);$/;"	v
origtemp	library\Zend\Translate\Adapter\Gettext.php	/^        $origtemp = $this->_readMOData(2 * $total);$/;"	v
total	library\Zend\Translate\Adapter\Gettext.php	/^        $total = $input[1];$/;"	v
translate	library\Zend\Translate\Adapter\Gettext.php	/^                $translate = explode("\\0", $translate);$/;"	v
translate	library\Zend\Translate\Adapter\Gettext.php	/^                $translate = fread($this->_file, $transtemp[$count * 2 + 1]);$/;"	v
transtemp	library\Zend\Translate\Adapter\Gettext.php	/^        $transtemp = $this->_readMOData(2 * $total);$/;"	v
Zend_Translate_Adapter_Ini	library\Zend\Translate\Adapter\Ini.php	/^class Zend_Translate_Adapter_Ini extends Zend_Translate_Adapter$/;"	c
inidata	library\Zend\Translate\Adapter\Ini.php	/^        $inidata = parse_ini_file($data, false);$/;"	v
Zend_Translate_Adapter_Qt	library\Zend\Translate\Adapter\Qt.php	/^class Zend_Translate_Adapter_Qt extends Zend_Translate_Adapter {$/;"	c
encoding	library\Zend\Translate\Adapter\Qt.php	/^            $encoding = substr($encoding, 1, strpos($encoding, $encoding[0], 1) - 1);$/;"	v
encoding	library\Zend\Translate\Adapter\Qt.php	/^            $encoding = substr($file, strpos($file, "encoding") + 9);$/;"	v
encoding	library\Zend\Translate\Adapter\Qt.php	/^        $encoding = $this->_findEncoding($filename);$/;"	v
ex	library\Zend\Translate\Adapter\Qt.php	/^            $ex = sprintf('XML error: %s at line %d',$/;"	v
file	library\Zend\Translate\Adapter\Qt.php	/^        $file = file_get_contents($filename, null, null, 0, 100);$/;"	v
Zend_Translate_Adapter_Tbx	library\Zend\Translate\Adapter\Tbx.php	/^class Zend_Translate_Adapter_Tbx extends Zend_Translate_Adapter {$/;"	c
encoding	library\Zend\Translate\Adapter\Tbx.php	/^            $encoding = substr($encoding, 1, strpos($encoding, $encoding[0], 1) - 1);$/;"	v
encoding	library\Zend\Translate\Adapter\Tbx.php	/^            $encoding = substr($file, strpos($file, "encoding") + 9);$/;"	v
encoding	library\Zend\Translate\Adapter\Tbx.php	/^        $encoding = $this->_findEncoding($filename);$/;"	v
ex	library\Zend\Translate\Adapter\Tbx.php	/^            $ex = sprintf('XML error: %s at line %d',$/;"	v
file	library\Zend\Translate\Adapter\Tbx.php	/^        $file = file_get_contents($filename, null, null, 0, 100);$/;"	v
Zend_Translate_Adapter_Tmx	library\Zend\Translate\Adapter\Tmx.php	/^class Zend_Translate_Adapter_Tmx extends Zend_Translate_Adapter {$/;"	c
encoding	library\Zend\Translate\Adapter\Tmx.php	/^            $encoding = substr($encoding, 1, strpos($encoding, $encoding[0], 1) - 1);$/;"	v
encoding	library\Zend\Translate\Adapter\Tmx.php	/^            $encoding = substr($file, strpos($file, "encoding") + 9);$/;"	v
encoding	library\Zend\Translate\Adapter\Tmx.php	/^        $encoding = $this->_findEncoding($filename);$/;"	v
ex	library\Zend\Translate\Adapter\Tmx.php	/^            $ex = sprintf('XML error: %s at line %d',$/;"	v
file	library\Zend\Translate\Adapter\Tmx.php	/^        $file = file_get_contents($filename, null, null, 0, 100);$/;"	v
Zend_Translate_Adapter_Xliff	library\Zend\Translate\Adapter\Xliff.php	/^class Zend_Translate_Adapter_Xliff extends Zend_Translate_Adapter {$/;"	c
encoding	library\Zend\Translate\Adapter\Xliff.php	/^            $encoding = substr($encoding, 1, strpos($encoding, $encoding[0], 1) - 1);$/;"	v
encoding	library\Zend\Translate\Adapter\Xliff.php	/^            $encoding = substr($file, strpos($file, "encoding") + 9);$/;"	v
encoding	library\Zend\Translate\Adapter\Xliff.php	/^        $encoding      = $this->_findEncoding($filename);$/;"	v
ex	library\Zend\Translate\Adapter\Xliff.php	/^            $ex = sprintf('XML error: %s at line %d',$/;"	v
file	library\Zend\Translate\Adapter\Xliff.php	/^        $file = file_get_contents($filename, null, null, 0, 100);$/;"	v
Zend_Translate_Adapter_XmlTm	library\Zend\Translate\Adapter\XmlTm.php	/^class Zend_Translate_Adapter_XmlTm extends Zend_Translate_Adapter {$/;"	c
encoding	library\Zend\Translate\Adapter\XmlTm.php	/^            $encoding = substr($encoding, 1, strpos($encoding, $encoding[0], 1) - 1);$/;"	v
encoding	library\Zend\Translate\Adapter\XmlTm.php	/^            $encoding = substr($file, strpos($file, "encoding") + 9);$/;"	v
encoding	library\Zend\Translate\Adapter\XmlTm.php	/^        $encoding    = $this->_findEncoding($filename);$/;"	v
ex	library\Zend\Translate\Adapter\XmlTm.php	/^            $ex = sprintf('XML error: %s at line %d',$/;"	v
file	library\Zend\Translate\Adapter\XmlTm.php	/^        $file = file_get_contents($filename, null, null, 0, 100);$/;"	v
Zend_Translate_Exception	library\Zend\Translate\Exception.php	/^class Zend_Translate_Exception extends Zend_Exception$/;"	c
Zend_Translate_Plural	library\Zend\Translate\Plural.php	/^class Zend_Translate_Plural$/;"	c
locale	library\Zend\Translate\Plural.php	/^            $locale = "xbr";$/;"	v
locale	library\Zend\Translate\Plural.php	/^            $locale = substr($locale, 0, -strlen(strrchr($locale, '_')));$/;"	v
return	library\Zend\Translate\Plural.php	/^                $return = 0;$/;"	v
return	library\Zend\Translate\Plural.php	/^            $return = call_user_func(self::$_plural[$locale], $number);$/;"	v
className	library\Zend\Uri.php	/^                    $className = 'Zend_Uri_Http';$/;"	v
config	library\Zend\Uri.php	/^            $config = $config->toArray();$/;"	v
scheme	library\Zend\Uri.php	/^        $scheme         = strtolower($uri[0]);$/;"	v
schemeHandler	library\Zend\Uri.php	/^        $schemeHandler = new $className($scheme, $schemeSpecific);$/;"	v
schemeSpecific	library\Zend\Uri.php	/^        $schemeSpecific = isset($uri[1]) === true ? $uri[1] : '';$/;"	v
uri	library\Zend\Uri.php	/^            $uri = self::factory($uri);$/;"	v
uri	library\Zend\Uri.php	/^        $uri            = explode(':', $uri, 2);$/;"	v
Zend_Uri_Exception	library\Zend\Uri\Exception.php	/^class Zend_Uri_Exception extends Zend_Exception$/;"	c
Zend_Uri_Http	library\Zend\Uri\Http.php	/^class Zend_Uri_Http extends Zend_Uri$/;"	c
auth	library\Zend\Uri\Http.php	/^        $auth     = strlen($this->_username) > 0 ? "$this->_username$password@" : '';$/;"	v
combo	library\Zend\Uri\Http.php	/^        $combo   = isset($matches[3]) === true ? $matches[3] : '';$/;"	v
fragment	library\Zend\Uri\Http.php	/^            $fragment = $this->_fragment;$/;"	v
fragment	library\Zend\Uri\Http.php	/^        $fragment = strlen($this->_fragment) > 0 ? "#$this->_fragment" : '';$/;"	v
host	library\Zend\Uri\Http.php	/^            $host = $this->_host;$/;"	v
oldFragment	library\Zend\Uri\Http.php	/^        $oldFragment     = $this->_fragment;$/;"	v
oldHost	library\Zend\Uri\Http.php	/^        $oldHost     = $this->_host;$/;"	v
oldPassword	library\Zend\Uri\Http.php	/^        $oldPassword     = $this->_password;$/;"	v
oldPath	library\Zend\Uri\Http.php	/^        $oldPath     = $this->_path;$/;"	v
oldPort	library\Zend\Uri\Http.php	/^        $oldPort     = $this->_port;$/;"	v
oldQuery	library\Zend\Uri\Http.php	/^        $oldQuery = $this->_query;$/;"	v
oldUsername	library\Zend\Uri\Http.php	/^        $oldUsername     = $this->_username;$/;"	v
password	library\Zend\Uri\Http.php	/^            $password = $this->_password;$/;"	v
password	library\Zend\Uri\Http.php	/^        $password = strlen($this->_password) > 0 ? ":$this->_password" : '';$/;"	v
path	library\Zend\Uri\Http.php	/^            $path = $this->_path;$/;"	v
pattern	library\Zend\Uri\Http.php	/^        $pattern = '\/^' . $this->_regex['path'] . '$\/';$/;"	v
pattern	library\Zend\Uri\Http.php	/^        $pattern = '\/^' . $this->_regex['uric'] . '*$\/';$/;"	v
pattern	library\Zend\Uri\Http.php	/^        $pattern = '~^(([^:@]*)(:([^@]*))?@)?((?(?=[[])[[][^]]+[]]|[^:]+))(:(.*))?$~';        $/;"	v
pattern	library\Zend\Uri\Http.php	/^        $pattern = '~^((\/\/)([^\/?#]*))([^?#]*)(\\?([^#]*))?(#(.*))?$~';$/;"	v
port	library\Zend\Uri\Http.php	/^            $port = $this->_port;$/;"	v
port	library\Zend\Uri\Http.php	/^        $port     = strlen($this->_port) > 0 ? ":$this->_port" : '';$/;"	v
querryArray	library\Zend\Uri\Http.php	/^        $querryArray = array();$/;"	v
query	library\Zend\Uri\Http.php	/^                $query = http_build_query($queryArray, '', '&');$/;"	v
query	library\Zend\Uri\Http.php	/^            $query = $this->_query;$/;"	v
query	library\Zend\Uri\Http.php	/^            $query = (string) $query;$/;"	v
query	library\Zend\Uri\Http.php	/^            $query = http_build_query($query, '', '&');$/;"	v
query	library\Zend\Uri\Http.php	/^        $query    = strlen($this->_query) > 0 ? "?$this->_query" : '';$/;"	v
query	library\Zend\Uri\Http.php	/^        $query = $this->getQuery();$/;"	v
queryParams	library\Zend\Uri\Http.php	/^        $queryParams = array_diff_key($this->getQueryAsArray(), array_fill_keys($queryParamKeys, 0));$/;"	v
queryParams	library\Zend\Uri\Http.php	/^        $queryParams = array_merge($this->getQueryAsArray(), $queryParams);$/;"	v
scheme	library\Zend\Uri\Http.php	/^        $scheme         = strtolower($uri[0]);$/;"	v
schemeHandler	library\Zend\Uri\Http.php	/^        $schemeHandler = new Zend_Uri_Http($scheme, $schemeSpecific);$/;"	v
schemeSpecific	library\Zend\Uri\Http.php	/^        $schemeSpecific = isset($uri[1]) === true ? $uri[1] : '';$/;"	v
status	library\Zend\Uri\Http.php	/^        $status  = @preg_match($pattern, $combo, $matches);$/;"	v
status	library\Zend\Uri\Http.php	/^        $status  = @preg_match($pattern, $fragment);$/;"	v
status	library\Zend\Uri\Http.php	/^        $status  = @preg_match($pattern, $path);$/;"	v
status	library\Zend\Uri\Http.php	/^        $status  = @preg_match($pattern, $query);$/;"	v
status	library\Zend\Uri\Http.php	/^        $status  = @preg_match($pattern, $schemeSpecific, $matches);$/;"	v
status	library\Zend\Uri\Http.php	/^        $status = @preg_match('\/^(?:' . $this->_regex['escaped'] . '|[' .$/;"	v
uri	library\Zend\Uri\Http.php	/^        $uri            = explode(':', $uri, 2);$/;"	v
username	library\Zend\Uri\Http.php	/^            $username = $this->_username;$/;"	v
validate	library\Zend\Uri\Http.php	/^        $validate = new Zend_Validate_Hostname(Zend_Validate_Hostname::ALLOW_ALL);$/;"	v
Zend_Validate	library\Zend\Validate.php	/^class Zend_Validate implements Zend_Validate_Interface$/;"	c
class	library\Zend\Validate.php	/^                    $class = $namespace . '_' . $className;$/;"	v
class	library\Zend\Validate.php	/^            $class = new ReflectionClass($className);$/;"	v
className	library\Zend\Validate.php	/^                        $className = $class;$/;"	v
className	library\Zend\Validate.php	/^        $className  = ucfirst($classBaseName);$/;"	v
file	library\Zend\Validate.php	/^                    $file  = str_replace('_', DIRECTORY_SEPARATOR, $class) . '.php';$/;"	v
keys	library\Zend\Validate.php	/^                    $keys    = array_keys($args);$/;"	v
messages	library\Zend\Validate.php	/^            $messages = $validator->getMessages();$/;"	v
namespace	library\Zend\Validate.php	/^            $namespace = array((string) $namespace);$/;"	v
namespaces	library\Zend\Validate.php	/^        $namespaces = array_merge((array) $namespaces, self::$_defaultNamespaces, array('Zend_Validate'));$/;"	v
numeric	library\Zend\Validate.php	/^                            $numeric = true;$/;"	v
numeric	library\Zend\Validate.php	/^                    $numeric = false;$/;"	v
object	library\Zend\Validate.php	/^                        $object = $class->newInstance($args);$/;"	v
object	library\Zend\Validate.php	/^                        $object = $class->newInstanceArgs($args);$/;"	v
object	library\Zend\Validate.php	/^                    $object = $class->newInstance();$/;"	v
result	library\Zend\Validate.php	/^            $result = false;$/;"	v
result	library\Zend\Validate.php	/^        $result = true;$/;"	v
validator	library\Zend\Validate.php	/^            $validator = $element['instance'];$/;"	v
keys	library\Zend\Validate\Abstract.php	/^            $keys = array_keys($this->_messageTemplates);$/;"	v
length	library\Zend\Validate\Abstract.php	/^        $length = self::getMessageLength();$/;"	v
message	library\Zend\Validate\Abstract.php	/^                $message = $translator->translate($message);$/;"	v
message	library\Zend\Validate\Abstract.php	/^                $message = $translator->translate($messageKey);$/;"	v
message	library\Zend\Validate\Abstract.php	/^            $message = str_replace("%$ident%", (string) $this->$property, $message);$/;"	v
message	library\Zend\Validate\Abstract.php	/^            $message = substr($message, 0, (self::getMessageLength() - 3)) . '...';$/;"	v
message	library\Zend\Validate\Abstract.php	/^        $message = $this->_messageTemplates[$messageKey];$/;"	v
message	library\Zend\Validate\Abstract.php	/^        $message = str_replace('%value%', (string) $value, $message);$/;"	v
messageKey	library\Zend\Validate\Abstract.php	/^            $messageKey = current($keys);$/;"	v
translator	library\Zend\Validate\Abstract.php	/^                $translator = Zend_Registry::get('Zend_Translate');$/;"	v
value	library\Zend\Validate\Abstract.php	/^                $value = $value->__toString();$/;"	v
value	library\Zend\Validate\Abstract.php	/^                $value = get_class($value) . ' object';$/;"	v
value	library\Zend\Validate\Abstract.php	/^            $value = $this->_value;$/;"	v
value	library\Zend\Validate\Abstract.php	/^            $value = (string)$value;$/;"	v
value	library\Zend\Validate\Abstract.php	/^            $value = str_repeat('*', strlen($value));$/;"	v
Zend_Validate_Alnum	library\Zend\Validate\Alnum.php	/^class Zend_Validate_Alnum extends Zend_Validate_Abstract$/;"	c
allowWhiteSpace	library\Zend\Validate\Alnum.php	/^                $allowWhiteSpace = $allowWhiteSpace['allowWhiteSpace'];$/;"	v
allowWhiteSpace	library\Zend\Validate\Alnum.php	/^                $allowWhiteSpace = false;$/;"	v
allowWhiteSpace	library\Zend\Validate\Alnum.php	/^            $allowWhiteSpace = $allowWhiteSpace->toArray();$/;"	v
Zend_Validate_Alpha	library\Zend\Validate\Alpha.php	/^class Zend_Validate_Alpha extends Zend_Validate_Abstract$/;"	c
allowWhiteSpace	library\Zend\Validate\Alpha.php	/^                $allowWhiteSpace = $allowWhiteSpace['allowWhiteSpace'];$/;"	v
allowWhiteSpace	library\Zend\Validate\Alpha.php	/^                $allowWhiteSpace = false;$/;"	v
allowWhiteSpace	library\Zend\Validate\Alpha.php	/^            $allowWhiteSpace = $allowWhiteSpace->toArray();$/;"	v
Zend_Validate_Barcode	library\Zend\Validate\Barcode.php	/^class Zend_Validate_Barcode extends Zend_Validate_Abstract$/;"	c
adapter	library\Zend\Validate\Barcode.php	/^                $adapter = $adapter['adapter'];$/;"	v
adapter	library\Zend\Validate\Barcode.php	/^            $adapter = $adapter->toArray();$/;"	v
adapter	library\Zend\Validate\Barcode.php	/^            $adapter = 'Zend_Validate_Barcode_' . $adapter;$/;"	v
adapter	library\Zend\Validate\Barcode.php	/^        $adapter       = $this->getAdapter();$/;"	v
adapter	library\Zend\Validate\Barcode.php	/^        $adapter = ucfirst(strtolower($adapter));$/;"	v
checksum	library\Zend\Validate\Barcode.php	/^                $checksum = $adapter['checksum'];$/;"	v
checksum	library\Zend\Validate\Barcode.php	/^        $checksum = null;$/;"	v
options	library\Zend\Validate\Barcode.php	/^                $options = $adapter['options'];$/;"	v
options	library\Zend\Validate\Barcode.php	/^        $options  = null;$/;"	v
result	library\Zend\Validate\Barcode.php	/^            $result = $adapter->checksum($value);$/;"	v
result	library\Zend\Validate\Barcode.php	/^        $result        = $adapter->checkLength($value);$/;"	v
result	library\Zend\Validate\Barcode.php	/^        $result = $adapter->checkChars($value);$/;"	v
temp	library\Zend\Validate\Barcode.php	/^                $temp = $this->_length;$/;"	v
barcode	library\Zend\Validate\Barcode\AdapterAbstract.php	/^        $barcode = substr($value, 0, -1);$/;"	v
calc	library\Zend\Validate\Barcode\AdapterAbstract.php	/^        $calc     = $sum % 10;$/;"	v
characters	library\Zend\Validate\Barcode\AdapterAbstract.php	/^        $characters = $this->getCharacters();$/;"	v
chars	library\Zend\Validate\Barcode\AdapterAbstract.php	/^            $chars = str_split($characters);$/;"	v
check	library\Zend\Validate\Barcode\AdapterAbstract.php	/^        $check = 0;$/;"	v
check	library\Zend\Validate\Barcode\AdapterAbstract.php	/^        $check = 10 - $check;$/;"	v
checksum	library\Zend\Validate\Barcode\AdapterAbstract.php	/^        $checksum = $this->getChecksum();$/;"	v
checksum	library\Zend\Validate\Barcode\AdapterAbstract.php	/^        $checksum = ($calc === 0) ? 0 : (10 - $calc);$/;"	v
checksum	library\Zend\Validate\Barcode\AdapterAbstract.php	/^        $checksum = substr($value, -1, 1);$/;"	v
count	library\Zend\Validate\Barcode\AdapterAbstract.php	/^            $count = $fixum % 2;$/;"	v
fixum	library\Zend\Validate\Barcode\AdapterAbstract.php	/^        $fixum  = strlen($value);$/;"	v
found	library\Zend\Validate\Barcode\AdapterAbstract.php	/^                    $found = true;$/;"	v
found	library\Zend\Validate\Barcode\AdapterAbstract.php	/^            $found = ($count == 0) ? true : false;$/;"	v
found	library\Zend\Validate\Barcode\AdapterAbstract.php	/^            $found = ($count == 1) ? true : false;$/;"	v
found	library\Zend\Validate\Barcode\AdapterAbstract.php	/^            $found = true;$/;"	v
found	library\Zend\Validate\Barcode\AdapterAbstract.php	/^        $found  = false;$/;"	v
length	library\Zend\Validate\Barcode\AdapterAbstract.php	/^        $length  = strlen($barcode) - 1;$/;"	v
length	library\Zend\Validate\Barcode\AdapterAbstract.php	/^        $length  = strlen($value) - 2;$/;"	v
length	library\Zend\Validate\Barcode\AdapterAbstract.php	/^        $length = $this->getLength();$/;"	v
sum	library\Zend\Validate\Barcode\AdapterAbstract.php	/^        $sum     = 0;$/;"	v
value	library\Zend\Validate\Barcode\AdapterAbstract.php	/^                $value = str_replace($char, '', $value);$/;"	v
value	library\Zend\Validate\Barcode\AdapterAbstract.php	/^                $value = str_replace(chr($x), '', $value);$/;"	v
values	library\Zend\Validate\Barcode\AdapterAbstract.php	/^        $values   = str_split(substr($value, 0, -1));$/;"	v
Zend_Validate_Barcode_Code25	library\Zend\Validate\Barcode\Code25.php	/^class Zend_Validate_Barcode_Code25 extends Zend_Validate_Barcode_AdapterAbstract$/;"	c
Zend_Validate_Barcode_Code25interleaved	library\Zend\Validate\Barcode\Code25interleaved.php	/^class Zend_Validate_Barcode_Code25interleaved extends Zend_Validate_Barcode_AdapterAbstract$/;"	c
Zend_Validate_Barcode_Code39	library\Zend\Validate\Barcode\Code39.php	/^class Zend_Validate_Barcode_Code39 extends Zend_Validate_Barcode_AdapterAbstract$/;"	c
checksum	library\Zend\Validate\Barcode\Code39.php	/^        $checksum = substr($value, -1, 1);$/;"	v
count	library\Zend\Validate\Barcode\Code39.php	/^        $count    = 0;$/;"	v
mod	library\Zend\Validate\Barcode\Code39.php	/^        $mod = $count % 43;$/;"	v
value	library\Zend\Validate\Barcode\Code39.php	/^        $value    = str_split(substr($value, 0, -1));$/;"	v
Zend_Validate_Barcode_Code39ext	library\Zend\Validate\Barcode\Code39ext.php	/^class Zend_Validate_Barcode_Code39ext extends Zend_Validate_Barcode_AdapterAbstract$/;"	c
Zend_Validate_Barcode_Code93	library\Zend\Validate\Barcode\Code93.php	/^class Zend_Validate_Barcode_Code93 extends Zend_Validate_Barcode_AdapterAbstract$/;"	c
check	library\Zend\Validate\Barcode\Code93.php	/^        $check   = array_search(($count % 47), $this->_check);$/;"	v
checksum	library\Zend\Validate\Barcode\Code93.php	/^        $checksum = substr($value, -2, 2);$/;"	v
count	library\Zend\Validate\Barcode\Code93.php	/^        $count    = 0;$/;"	v
count	library\Zend\Validate\Barcode\Code93.php	/^        $count   = 0;$/;"	v
length	library\Zend\Validate\Barcode\Code93.php	/^                $length = 15;$/;"	v
length	library\Zend\Validate\Barcode\Code93.php	/^                $length = 20;$/;"	v
length	library\Zend\Validate\Barcode\Code93.php	/^        $length   = count($value) % 20;$/;"	v
length	library\Zend\Validate\Barcode\Code93.php	/^        $length  = count($value) % 15;$/;"	v
value	library\Zend\Validate\Barcode\Code93.php	/^        $value    = str_split(substr($value, 0, -2));$/;"	v
Zend_Validate_Barcode_Code93ext	library\Zend\Validate\Barcode\Code93ext.php	/^class Zend_Validate_Barcode_Code93ext extends Zend_Validate_Barcode_AdapterAbstract$/;"	c
Zend_Validate_Barcode_Ean12	library\Zend\Validate\Barcode\Ean12.php	/^class Zend_Validate_Barcode_Ean12 extends Zend_Validate_Barcode_AdapterAbstract$/;"	c
Zend_Validate_Barcode_Ean13	library\Zend\Validate\Barcode\Ean13.php	/^class Zend_Validate_Barcode_Ean13 extends Zend_Validate_Barcode_AdapterAbstract$/;"	c
Zend_Validate_Barcode_Ean14	library\Zend\Validate\Barcode\Ean14.php	/^class Zend_Validate_Barcode_Ean14 extends Zend_Validate_Barcode_AdapterAbstract$/;"	c
Zend_Validate_Barcode_Ean18	library\Zend\Validate\Barcode\Ean18.php	/^class Zend_Validate_Barcode_Ean18 extends Zend_Validate_Barcode_AdapterAbstract$/;"	c
Zend_Validate_Barcode_Ean2	library\Zend\Validate\Barcode\Ean2.php	/^class Zend_Validate_Barcode_Ean2 extends Zend_Validate_Barcode_AdapterAbstract$/;"	c
Zend_Validate_Barcode_Ean5	library\Zend\Validate\Barcode\Ean5.php	/^class Zend_Validate_Barcode_Ean5 extends Zend_Validate_Barcode_AdapterAbstract$/;"	c
Zend_Validate_Barcode_Ean8	library\Zend\Validate\Barcode\Ean8.php	/^class Zend_Validate_Barcode_Ean8 extends Zend_Validate_Barcode_AdapterAbstract$/;"	c
Zend_Validate_Barcode_Gtin12	library\Zend\Validate\Barcode\Gtin12.php	/^class Zend_Validate_Barcode_Gtin12 extends Zend_Validate_Barcode_AdapterAbstract$/;"	c
Zend_Validate_Barcode_Gtin13	library\Zend\Validate\Barcode\Gtin13.php	/^class Zend_Validate_Barcode_Gtin13 extends Zend_Validate_Barcode_AdapterAbstract$/;"	c
Zend_Validate_Barcode_Gtin14	library\Zend\Validate\Barcode\Gtin14.php	/^class Zend_Validate_Barcode_Gtin14 extends Zend_Validate_Barcode_AdapterAbstract$/;"	c
Zend_Validate_Barcode_Identcode	library\Zend\Validate\Barcode\Identcode.php	/^class Zend_Validate_Barcode_Identcode extends Zend_Validate_Barcode_AdapterAbstract$/;"	c
Zend_Validate_Barcode_IntelligentMail	library\Zend\Validate\Barcode\Intelligentmail.php	/^class Zend_Validate_Barcode_IntelligentMail extends Zend_Validate_Barcode_AdapterAbstract$/;"	c
Zend_Validate_Barcode_Issn	library\Zend\Validate\Barcode\Issn.php	/^class Zend_Validate_Barcode_Issn extends Zend_Validate_Barcode_AdapterAbstract$/;"	c
check	library\Zend\Validate\Barcode\Issn.php	/^        $check    = 0;$/;"	v
check	library\Zend\Validate\Barcode\Issn.php	/^        $check  = 11 - $check;$/;"	v
checksum	library\Zend\Validate\Barcode\Issn.php	/^        $checksum = substr($value, -1, 1);$/;"	v
multi	library\Zend\Validate\Barcode\Issn.php	/^        $multi    = 8;$/;"	v
token	library\Zend\Validate\Barcode\Issn.php	/^                $token = 10;$/;"	v
values	library\Zend\Validate\Barcode\Issn.php	/^        $values   = str_split(substr($value, 0, -1));$/;"	v
Zend_Validate_Barcode_Itf14	library\Zend\Validate\Barcode\Itf14.php	/^class Zend_Validate_Barcode_Itf14 extends Zend_Validate_Barcode_AdapterAbstract$/;"	c
Zend_Validate_Barcode_Leitcode	library\Zend\Validate\Barcode\Leitcode.php	/^class Zend_Validate_Barcode_Leitcode extends Zend_Validate_Barcode_AdapterAbstract$/;"	c
Zend_Validate_Barcode_Planet	library\Zend\Validate\Barcode\Planet.php	/^class Zend_Validate_Barcode_Planet extends Zend_Validate_Barcode_AdapterAbstract$/;"	c
Zend_Validate_Barcode_Postnet	library\Zend\Validate\Barcode\Postnet.php	/^class Zend_Validate_Barcode_Postnet extends Zend_Validate_Barcode_AdapterAbstract$/;"	c
Zend_Validate_Barcode_Royalmail	library\Zend\Validate\Barcode\Royalmail.php	/^class Zend_Validate_Barcode_Royalmail extends Zend_Validate_Barcode_AdapterAbstract$/;"	c
checksum	library\Zend\Validate\Barcode\Royalmail.php	/^        $checksum = substr($value, -1, 1);$/;"	v
chkvalue	library\Zend\Validate\Barcode\Royalmail.php	/^        $chkvalue    = current(array_intersect($rowchkvalue, $colchkvalue));$/;"	v
colchkvalue	library\Zend\Validate\Barcode\Royalmail.php	/^        $colchkvalue = array_keys($this->_columns, $colvalue);$/;"	v
colvalue	library\Zend\Validate\Barcode\Royalmail.php	/^        $colvalue = 0;$/;"	v
rowchkvalue	library\Zend\Validate\Barcode\Royalmail.php	/^        $rowchkvalue = array_keys($this->_rows, $rowvalue);$/;"	v
rowvalue	library\Zend\Validate\Barcode\Royalmail.php	/^        $rowvalue = 0;$/;"	v
value	library\Zend\Validate\Barcode\Royalmail.php	/^                $value = substr($value, 0, -1);$/;"	v
value	library\Zend\Validate\Barcode\Royalmail.php	/^            $value = substr($value, 1);$/;"	v
values	library\Zend\Validate\Barcode\Royalmail.php	/^        $values   = str_split(substr($value, 0, -1));$/;"	v
Zend_Validate_Barcode_Sscc	library\Zend\Validate\Barcode\Sscc.php	/^class Zend_Validate_Barcode_Sscc extends Zend_Validate_Barcode_AdapterAbstract$/;"	c
Zend_Validate_Barcode_Upca	library\Zend\Validate\Barcode\Upca.php	/^class Zend_Validate_Barcode_Upca extends Zend_Validate_Barcode_AdapterAbstract$/;"	c
Zend_Validate_Barcode_Upce	library\Zend\Validate\Barcode\Upce.php	/^class Zend_Validate_Barcode_Upce extends Zend_Validate_Barcode_AdapterAbstract$/;"	c
Zend_Validate_Between	library\Zend\Validate\Between.php	/^class Zend_Validate_Between extends Zend_Validate_Abstract$/;"	c
options	library\Zend\Validate\Between.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Validate\Between.php	/^            $options = $temp;$/;"	v
options	library\Zend\Validate\Between.php	/^            $options = func_get_args();$/;"	v
Zend_Validate_Callback	library\Zend\Validate\Callback.php	/^class Zend_Validate_Callback extends Zend_Validate_Abstract$/;"	c
args	library\Zend\Validate\Callback.php	/^        $args     = func_get_args();$/;"	v
callback	library\Zend\Validate\Callback.php	/^        $callback = $this->getCallback();$/;"	v
options	library\Zend\Validate\Callback.php	/^        $options  = $this->getOptions();$/;"	v
options	library\Zend\Validate\Callback.php	/^        $options  = array_merge($args, $options);$/;"	v
Zend_Validate_Ccnum	library\Zend\Validate\Ccnum.php	/^class Zend_Validate_Ccnum extends Zend_Validate_Abstract$/;"	c
digit	library\Zend\Validate\Ccnum.php	/^            $digit = $weight * $valueFiltered[$i];$/;"	v
length	library\Zend\Validate\Ccnum.php	/^        $length = strlen($valueFiltered);$/;"	v
sum	library\Zend\Validate\Ccnum.php	/^        $sum    = 0;$/;"	v
valueFiltered	library\Zend\Validate\Ccnum.php	/^        $valueFiltered = self::$_filter->filter($value);$/;"	v
weight	library\Zend\Validate\Ccnum.php	/^            $weight = $weight % 2 + 1;$/;"	v
weight	library\Zend\Validate\Ccnum.php	/^        $weight = 2;$/;"	v
Zend_Validate_CreditCard	library\Zend\Validate\CreditCard.php	/^class Zend_Validate_CreditCard extends Zend_Validate_Abstract$/;"	c
callback	library\Zend\Validate\CreditCard.php	/^                $callback = new Zend_Validate_Callback($this->_service);$/;"	v
digit	library\Zend\Validate\CreditCard.php	/^            $digit = $weight * $value[$i];$/;"	v
foundl	library\Zend\Validate\CreditCard.php	/^                        $foundl = true;$/;"	v
foundl	library\Zend\Validate\CreditCard.php	/^        $foundl = false;$/;"	v
foundp	library\Zend\Validate\CreditCard.php	/^                    $foundp = true;$/;"	v
foundp	library\Zend\Validate\CreditCard.php	/^        $foundp = false;$/;"	v
length	library\Zend\Validate\CreditCard.php	/^        $length = strlen($value);$/;"	v
options	library\Zend\Validate\CreditCard.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Validate\CreditCard.php	/^            $options = $temp;$/;"	v
options	library\Zend\Validate\CreditCard.php	/^            $options = func_get_args();$/;"	v
sum	library\Zend\Validate\CreditCard.php	/^        $sum    = 0;$/;"	v
type	library\Zend\Validate\CreditCard.php	/^            $type = array($type);$/;"	v
types	library\Zend\Validate\CreditCard.php	/^        $types  = $this->getType();$/;"	v
weight	library\Zend\Validate\CreditCard.php	/^            $weight = $weight % 2 + 1;$/;"	v
weight	library\Zend\Validate\CreditCard.php	/^        $weight = 2;$/;"	v
Zend_Validate_Date	library\Zend\Validate\Date.php	/^class Zend_Validate_Date extends Zend_Validate_Abstract$/;"	c
options	library\Zend\Validate\Date.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Validate\Date.php	/^            $options = $temp;$/;"	v
options	library\Zend\Validate\Date.php	/^            $options = func_get_args();$/;"	v
parsed	library\Zend\Validate\Date.php	/^            $parsed = Zend_Locale_Format::getDate($value, array($/;"	v
db	library\Zend\Validate\Db\Abstract.php	/^            $db = $this->getAdapter();$/;"	v
options	library\Zend\Validate\Db\Abstract.php	/^            $options       = func_get_args();$/;"	v
options	library\Zend\Validate\Db\Abstract.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Validate\Db\Abstract.php	/^            $options = $temp;$/;"	v
result	library\Zend\Validate\Db\Abstract.php	/^        $result = $select->getAdapter()->fetchRow($/;"	v
select	library\Zend\Validate\Db\Abstract.php	/^            $select = new Zend_Db_Select($db);$/;"	v
select	library\Zend\Validate\Db\Abstract.php	/^        $select = $this->getSelect();$/;"	v
Zend_Validate_Db_NoRecordExists	library\Zend\Validate\Db\NoRecordExists.php	/^class Zend_Validate_Db_NoRecordExists extends Zend_Validate_Db_Abstract$/;"	c
result	library\Zend\Validate\Db\NoRecordExists.php	/^        $result = $this->_query($value);$/;"	v
valid	library\Zend\Validate\Db\NoRecordExists.php	/^            $valid = false;$/;"	v
valid	library\Zend\Validate\Db\NoRecordExists.php	/^        $valid = true;$/;"	v
Zend_Validate_Db_RecordExists	library\Zend\Validate\Db\RecordExists.php	/^class Zend_Validate_Db_RecordExists extends Zend_Validate_Db_Abstract$/;"	c
result	library\Zend\Validate\Db\RecordExists.php	/^        $result = $this->_query($value);$/;"	v
valid	library\Zend\Validate\Db\RecordExists.php	/^            $valid = false;$/;"	v
valid	library\Zend\Validate\Db\RecordExists.php	/^        $valid = true;$/;"	v
Zend_Validate_Digits	library\Zend\Validate\Digits.php	/^class Zend_Validate_Digits extends Zend_Validate_Abstract$/;"	c
Zend_Validate_EmailAddress	library\Zend\Validate\EmailAddress.php	/^class Zend_Validate_EmailAddress extends Zend_Validate_Abstract$/;"	c
atext	library\Zend\Validate\EmailAddress.php	/^        $atext = 'a-zA-Z0-9\\x21\\x23\\x24\\x25\\x26\\x27\\x2a\\x2b\\x2d\\x2f\\x3d\\x3f\\x5e\\x5f\\x60\\x7b\\x7c\\x7d\\x7e';$/;"	v
binaryHost	library\Zend\Validate\EmailAddress.php	/^                $binaryHost = "";$/;"	v
host	library\Zend\Validate\EmailAddress.php	/^                $host       = explode("\/", $subnetData);$/;"	v
host	library\Zend\Validate\EmailAddress.php	/^            $host = gethostbyname($host);$/;"	v
hostname	library\Zend\Validate\EmailAddress.php	/^            $hostname = $this->_validateHostnamePart();$/;"	v
hostname	library\Zend\Validate\EmailAddress.php	/^            $hostname = $this->_validateMXRecords();$/;"	v
hostname	library\Zend\Validate\EmailAddress.php	/^        $hostname = $this->_options['hostname']->setTranslator($this->getTranslator())$/;"	v
hostnameValidator	library\Zend\Validate\EmailAddress.php	/^            $hostnameValidator = new Zend_Validate_Hostname($allow);$/;"	v
ip	library\Zend\Validate\EmailAddress.php	/^        $ip  = array();$/;"	v
keys	library\Zend\Validate\EmailAddress.php	/^            $keys = array_keys($this->_messageTemplates);$/;"	v
length	library\Zend\Validate\EmailAddress.php	/^            $length = false;$/;"	v
length	library\Zend\Validate\EmailAddress.php	/^        $length  = true;$/;"	v
local	library\Zend\Validate\EmailAddress.php	/^        $local = $this->_validateLocalPart();$/;"	v
matches	library\Zend\Validate\EmailAddress.php	/^        $matches = array();$/;"	v
messageKeys	library\Zend\Validate\EmailAddress.php	/^            $messageKeys = current($keys);$/;"	v
messageKeys	library\Zend\Validate\EmailAddress.php	/^        $messageKeys = $messageKey;$/;"	v
mxHosts	library\Zend\Validate\EmailAddress.php	/^        $mxHosts = array();$/;"	v
noWsCtl	library\Zend\Validate\EmailAddress.php	/^            $noWsCtl = '\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f';$/;"	v
octet	library\Zend\Validate\EmailAddress.php	/^        $octet = explode('.',$host);$/;"	v
options	library\Zend\Validate\EmailAddress.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Validate\EmailAddress.php	/^            $options = $temp;$/;"	v
options	library\Zend\Validate\EmailAddress.php	/^            $options = func_get_args();$/;"	v
qtext	library\Zend\Validate\EmailAddress.php	/^            $qtext   = $noWsCtl . '\\x21\\x23-\\x5b\\x5d-\\x7e';$/;"	v
res	library\Zend\Validate\EmailAddress.php	/^                $res = $this->_isReserved($hostname);$/;"	v
reserved	library\Zend\Validate\EmailAddress.php	/^                    $reserved = false;$/;"	v
reserved	library\Zend\Validate\EmailAddress.php	/^            $reserved     = true;$/;"	v
result	library\Zend\Validate\EmailAddress.php	/^                $result = false;$/;"	v
result	library\Zend\Validate\EmailAddress.php	/^                $result = true;$/;"	v
result	library\Zend\Validate\EmailAddress.php	/^            $result = true;$/;"	v
result	library\Zend\Validate\EmailAddress.php	/^        $result = false;$/;"	v
result	library\Zend\Validate\EmailAddress.php	/^        $result = getmxrr($this->_hostname, $mxHosts);$/;"	v
segmentData	library\Zend\Validate\EmailAddress.php	/^                $segmentData = array($/;"	v
tmp	library\Zend\Validate\EmailAddress.php	/^                $tmp        = explode(".", $host[0]);$/;"	v
tmp	library\Zend\Validate\EmailAddress.php	/^        $tmp = explode(".", chunk_split($binary, 8, "."));$/;"	v
validAddress	library\Zend\Validate\EmailAddress.php	/^                    $validAddress = true;$/;"	v
validAddress	library\Zend\Validate\EmailAddress.php	/^            $validAddress = false;$/;"	v
ws	library\Zend\Validate\EmailAddress.php	/^            $ws      = '\\x20\\x09';$/;"	v
Zend_Validate_Exception	library\Zend\Validate\Exception.php	/^class Zend_Validate_Exception extends Zend_Exception$/;"	c
Zend_Validate_File_Count	library\Zend\Validate\File\Count.php	/^class Zend_Validate_File_Count extends Zend_Validate_Abstract$/;"	c
file	library\Zend\Validate\File\Count.php	/^            $file = array($file);$/;"	v
max	library\Zend\Validate\File\Count.php	/^            $max = $max['max'];$/;"	v
max	library\Zend\Validate\File\Count.php	/^        $max = (integer) $max;$/;"	v
min	library\Zend\Validate\File\Count.php	/^            $min = $min['min'];$/;"	v
min	library\Zend\Validate\File\Count.php	/^        $min = (integer) $min;$/;"	v
options	library\Zend\Validate\File\Count.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Validate\File\Count.php	/^            $options = array('max' => $options);$/;"	v
value	library\Zend\Validate\File\Count.php	/^            $value = $file['destination'] . DIRECTORY_SEPARATOR . $file['name'];$/;"	v
Zend_Validate_File_Crc32	library\Zend\Validate\File\Crc32.php	/^class Zend_Validate_File_Crc32 extends Zend_Validate_File_Hash$/;"	c
filehash	library\Zend\Validate\File\Crc32.php	/^        $filehash = hash_file('crc32', $value);$/;"	v
hashes	library\Zend\Validate\File\Crc32.php	/^        $hashes = array_unique(array_keys($this->_hash));$/;"	v
options	library\Zend\Validate\File\Crc32.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Validate\File\Crc32.php	/^            $options = array($options);$/;"	v
options	library\Zend\Validate\File\Crc32.php	/^            $options = array('hash1' => $options);$/;"	v
Zend_Validate_File_ExcludeExtension	library\Zend\Validate\File\ExcludeExtension.php	/^class Zend_Validate_File_ExcludeExtension extends Zend_Validate_File_Extension$/;"	c
extensions	library\Zend\Validate\File\ExcludeExtension.php	/^        $extensions = $this->getExtension();$/;"	v
found	library\Zend\Validate\File\ExcludeExtension.php	/^                    $found = true;$/;"	v
found	library\Zend\Validate\File\ExcludeExtension.php	/^            $found = false;$/;"	v
info	library\Zend\Validate\File\ExcludeExtension.php	/^            $info = pathinfo($value);$/;"	v
Zend_Validate_File_ExcludeMimeType	library\Zend\Validate\File\ExcludeMimeType.php	/^class Zend_Validate_File_ExcludeMimeType extends Zend_Validate_File_MimeType$/;"	c
const	library\Zend\Validate\File\ExcludeMimeType.php	/^            $const = defined('FILEINFO_MIME_TYPE') ? FILEINFO_MIME_TYPE : FILEINFO_MIME;$/;"	v
file	library\Zend\Validate\File\ExcludeMimeType.php	/^            $file = array($/;"	v
mime	library\Zend\Validate\File\ExcludeMimeType.php	/^                $mime = new finfo($const);$/;"	v
mime	library\Zend\Validate\File\ExcludeMimeType.php	/^                $mime = new finfo($const, $mimefile);$/;"	v
mimefile	library\Zend\Validate\File\ExcludeMimeType.php	/^        $mimefile = $this->getMagicFile();$/;"	v
mimetype	library\Zend\Validate\File\ExcludeMimeType.php	/^        $mimetype = $this->getMimeType(true);$/;"	v
types	library\Zend\Validate\File\ExcludeMimeType.php	/^        $types = array_merge($types, explode('-', $this->_type));$/;"	v
types	library\Zend\Validate\File\ExcludeMimeType.php	/^        $types = explode('\/', $this->_type);$/;"	v
Zend_Validate_File_Exists	library\Zend\Validate\File\Exists.php	/^class Zend_Validate_File_Exists extends Zend_Validate_Abstract$/;"	c
asArray	library\Zend\Validate\File\Exists.php	/^        $asArray   = (bool) $asArray;$/;"	v
check	library\Zend\Validate\File\Exists.php	/^            $check = true;$/;"	v
check	library\Zend\Validate\File\Exists.php	/^        $check = false;$/;"	v
directories	library\Zend\Validate\File\Exists.php	/^        $directories = $this->getDirectory(true);$/;"	v
directories	library\Zend\Validate\File\Exists.php	/^        $directories = array_unique($directories);$/;"	v
directory	library\Zend\Validate\File\Exists.php	/^            $directory = $directory->toArray();$/;"	v
directory	library\Zend\Validate\File\Exists.php	/^            $directory = explode(',', $directory);$/;"	v
directory	library\Zend\Validate\File\Exists.php	/^        $directory = (string) $this->_directory;$/;"	v
Zend_Validate_File_Extension	library\Zend\Validate\File\Extension.php	/^class Zend_Validate_File_Extension extends Zend_Validate_Abstract$/;"	c
case	library\Zend\Validate\File\Extension.php	/^            $case = func_get_arg(1);$/;"	v
extension	library\Zend\Validate\File\Extension.php	/^            $extension = explode(',', $extension);$/;"	v
extension	library\Zend\Validate\File\Extension.php	/^        $extension = explode(',', $this->_extension);$/;"	v
extensions	library\Zend\Validate\File\Extension.php	/^        $extensions = $this->getExtension();$/;"	v
extensions	library\Zend\Validate\File\Extension.php	/^        $extensions = array_unique($extensions);$/;"	v
info	library\Zend\Validate\File\Extension.php	/^            $info = pathinfo($value);$/;"	v
options	library\Zend\Validate\File\Extension.php	/^            $options = $options->toArray();$/;"	v
Zend_Validate_File_FilesSize	library\Zend\Validate\File\FilesSize.php	/^class Zend_Validate_File_FilesSize extends Zend_Validate_File_Size$/;"	c
argv	library\Zend\Validate\File\FilesSize.php	/^            $argv = func_get_args();$/;"	v
max	library\Zend\Validate\File\FilesSize.php	/^        $max  = $this->getMax(true);$/;"	v
min	library\Zend\Validate\File\FilesSize.php	/^        $min  = $this->getMin(true);$/;"	v
options	library\Zend\Validate\File\FilesSize.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Validate\File\FilesSize.php	/^            $options = array('max' => $options);$/;"	v
size	library\Zend\Validate\File\FilesSize.php	/^        $size = $this->_getSize();$/;"	v
value	library\Zend\Validate\File\FilesSize.php	/^            $value = array($value);$/;"	v
Zend_Validate_File_Hash	library\Zend\Validate\File\Hash.php	/^class Zend_Validate_File_Hash extends Zend_Validate_Abstract$/;"	c
algorithm	library\Zend\Validate\File\Hash.php	/^            $algorithm = $options['algorithm'];$/;"	v
algorithm	library\Zend\Validate\File\Hash.php	/^            $algorithm = 'crc32';$/;"	v
algos	library\Zend\Validate\File\Hash.php	/^        $algos  = array_unique(array_values($this->_hash));$/;"	v
filehash	library\Zend\Validate\File\Hash.php	/^            $filehash = hash_file($algorithm, $value);$/;"	v
hashes	library\Zend\Validate\File\Hash.php	/^        $hashes = array_unique(array_keys($this->_hash));$/;"	v
known	library\Zend\Validate\File\Hash.php	/^        $known = hash_algos();$/;"	v
options	library\Zend\Validate\File\Hash.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Validate\File\Hash.php	/^            $options = array($options);$/;"	v
options	library\Zend\Validate\File\Hash.php	/^            $options = array('hash1' => $options);$/;"	v
Zend_Validate_File_ImageSize	library\Zend\Validate\File\ImageSize.php	/^class Zend_Validate_File_ImageSize extends Zend_Validate_Abstract$/;"	c
argv	library\Zend\Validate\File\ImageSize.php	/^            $argv = func_get_args();$/;"	v
options	library\Zend\Validate\File\ImageSize.php	/^                $options = array('minwidth' => $options);$/;"	v
options	library\Zend\Validate\File\ImageSize.php	/^            $options = $options->toArray();$/;"	v
size	library\Zend\Validate\File\ImageSize.php	/^        $size = @getimagesize($value);$/;"	v
Zend_Validate_File_IsCompressed	library\Zend\Validate\File\IsCompressed.php	/^class Zend_Validate_File_IsCompressed extends Zend_Validate_File_MimeType$/;"	c
default	library\Zend\Validate\File\IsCompressed.php	/^            $default = array($/;"	v
errorType	library\Zend\Validate\File\IsCompressed.php	/^                $errorType = self::FALSE_TYPE;$/;"	v
errorType	library\Zend\Validate\File\IsCompressed.php	/^                $errorType = self::NOT_DETECTED;$/;"	v
errorType	library\Zend\Validate\File\IsCompressed.php	/^                $errorType = self::NOT_READABLE;$/;"	v
mimetype	library\Zend\Validate\File\IsCompressed.php	/^            $mimetype = $default;$/;"	v
mimetype	library\Zend\Validate\File\IsCompressed.php	/^            $mimetype = $mimetype->toArray();$/;"	v
temp	library\Zend\Validate\File\IsCompressed.php	/^            $temp = $mimetype;$/;"	v
temp	library\Zend\Validate\File\IsCompressed.php	/^        $temp    = array();$/;"	v
Zend_Validate_File_IsImage	library\Zend\Validate\File\IsImage.php	/^class Zend_Validate_File_IsImage extends Zend_Validate_File_MimeType$/;"	c
default	library\Zend\Validate\File\IsImage.php	/^        $default = array($/;"	v
errorType	library\Zend\Validate\File\IsImage.php	/^                $errorType = self::FALSE_TYPE;$/;"	v
errorType	library\Zend\Validate\File\IsImage.php	/^                $errorType = self::NOT_DETECTED;$/;"	v
errorType	library\Zend\Validate\File\IsImage.php	/^                $errorType = self::NOT_READABLE;$/;"	v
mimetype	library\Zend\Validate\File\IsImage.php	/^            $mimetype = $default;$/;"	v
mimetype	library\Zend\Validate\File\IsImage.php	/^            $mimetype = $mimetype->toArray();$/;"	v
temp	library\Zend\Validate\File\IsImage.php	/^            $temp = $mimetype;$/;"	v
temp	library\Zend\Validate\File\IsImage.php	/^        $temp    = array();$/;"	v
Zend_Validate_File_Md5	library\Zend\Validate\File\Md5.php	/^class Zend_Validate_File_Md5 extends Zend_Validate_File_Hash$/;"	c
filehash	library\Zend\Validate\File\Md5.php	/^        $filehash = hash_file('md5', $value);$/;"	v
hashes	library\Zend\Validate\File\Md5.php	/^        $hashes = array_unique(array_keys($this->_hash));$/;"	v
options	library\Zend\Validate\File\Md5.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Validate\File\Md5.php	/^            $options = (array) $options;$/;"	v
options	library\Zend\Validate\File\Md5.php	/^            $options = array('hash1' => $options);$/;"	v
Zend_Validate_File_MimeType	library\Zend\Validate\File\MimeType.php	/^class Zend_Validate_File_MimeType extends Zend_Validate_Abstract$/;"	c
asArray	library\Zend\Validate\File\MimeType.php	/^        $asArray   = (bool) $asArray;$/;"	v
const	library\Zend\Validate\File\MimeType.php	/^            $const = defined('FILEINFO_MIME_TYPE') ? FILEINFO_MIME_TYPE : FILEINFO_MIME;$/;"	v
file	library\Zend\Validate\File\MimeType.php	/^            $file = array($/;"	v
mimefile	library\Zend\Validate\File\MimeType.php	/^        $mimefile = $this->getMagicFile();$/;"	v
mimetype	library\Zend\Validate\File\MimeType.php	/^            $mimetype = $mimetype->toArray();$/;"	v
mimetype	library\Zend\Validate\File\MimeType.php	/^            $mimetype = explode(',', $mimetype);$/;"	v
mimetype	library\Zend\Validate\File\MimeType.php	/^        $mimetype = $this->getMimeType(true);$/;"	v
mimetype	library\Zend\Validate\File\MimeType.php	/^        $mimetype = (string) $this->_mimetype;$/;"	v
mimetypes	library\Zend\Validate\File\MimeType.php	/^        $mimetypes = $this->getMimeType(true);$/;"	v
mimetypes	library\Zend\Validate\File\MimeType.php	/^        $mimetypes = array_unique($mimetypes);$/;"	v
types	library\Zend\Validate\File\MimeType.php	/^        $types = array_merge($types, explode('-', $this->_type));$/;"	v
types	library\Zend\Validate\File\MimeType.php	/^        $types = array_merge($types, explode(';', $this->_type));$/;"	v
types	library\Zend\Validate\File\MimeType.php	/^        $types = explode('\/', $this->_type);$/;"	v
Zend_Validate_File_NotExists	library\Zend\Validate\File\NotExists.php	/^class Zend_Validate_File_NotExists extends Zend_Validate_File_Exists$/;"	c
check	library\Zend\Validate\File\NotExists.php	/^            $check = true;$/;"	v
directories	library\Zend\Validate\File\NotExists.php	/^        $directories = $this->getDirectory(true);$/;"	v
Zend_Validate_File_Sha1	library\Zend\Validate\File\Sha1.php	/^class Zend_Validate_File_Sha1 extends Zend_Validate_File_Hash$/;"	c
filehash	library\Zend\Validate\File\Sha1.php	/^        $filehash = hash_file('sha1', $value);$/;"	v
hashes	library\Zend\Validate\File\Sha1.php	/^        $hashes = array_unique(array_keys($this->_hash));$/;"	v
options	library\Zend\Validate\File\Sha1.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Validate\File\Sha1.php	/^            $options = (array) $options;$/;"	v
options	library\Zend\Validate\File\Sha1.php	/^            $options = array('hash1' => $options);$/;"	v
Zend_Validate_File_Size	library\Zend\Validate\File\Size.php	/^class Zend_Validate_File_Size extends Zend_Validate_Abstract$/;"	c
argv	library\Zend\Validate\File\Size.php	/^            $argv = func_get_args();$/;"	v
max	library\Zend\Validate\File\Size.php	/^            $max = $this->_toByteString($max);$/;"	v
max	library\Zend\Validate\File\Size.php	/^        $max = $this->_max;$/;"	v
max	library\Zend\Validate\File\Size.php	/^        $max = $this->getMax(true);$/;"	v
max	library\Zend\Validate\File\Size.php	/^        $max = (integer) $this->_fromByteString($max);$/;"	v
min	library\Zend\Validate\File\Size.php	/^            $min = $this->_toByteString($min);$/;"	v
min	library\Zend\Validate\File\Size.php	/^        $min = $this->_min;$/;"	v
min	library\Zend\Validate\File\Size.php	/^        $min = $this->getMin(true);$/;"	v
min	library\Zend\Validate\File\Size.php	/^        $min = (integer) $this->_fromByteString($min);$/;"	v
options	library\Zend\Validate\File\Size.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Validate\File\Size.php	/^            $options = array('max' => $options);$/;"	v
size	library\Zend\Validate\File\Size.php	/^        $size        = sprintf("%u", @filesize($value));$/;"	v
sizes	library\Zend\Validate\File\Size.php	/^        $sizes = array('B', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB');$/;"	v
type	library\Zend\Validate\File\Size.php	/^        $type  = trim(substr($size, -2, 1));$/;"	v
value	library\Zend\Validate\File\Size.php	/^            $value = substr($value, 0, -1);$/;"	v
value	library\Zend\Validate\File\Size.php	/^        $value = substr($size, 0, -1);$/;"	v
Zend_Validate_File_Upload	library\Zend\Validate\File\Upload.php	/^class Zend_Validate_File_Upload extends Zend_Validate_Abstract$/;"	c
files	library\Zend\Validate\File\Upload.php	/^            $files = $files->toArray();$/;"	v
return	library\Zend\Validate\File\Upload.php	/^            $return = array();$/;"	v
Zend_Validate_File_WordCount	library\Zend\Validate\File\WordCount.php	/^class Zend_Validate_File_WordCount extends Zend_Validate_File_Count$/;"	c
content	library\Zend\Validate\File\WordCount.php	/^        $content = file_get_contents($value);$/;"	v
Zend_Validate_Float	library\Zend\Validate\Float.php	/^class Zend_Validate_Float extends Zend_Validate_Abstract$/;"	c
locale	library\Zend\Validate\Float.php	/^                $locale = $locale['locale'];$/;"	v
locale	library\Zend\Validate\Float.php	/^                $locale = Zend_Registry::get('Zend_Locale');$/;"	v
locale	library\Zend\Validate\Float.php	/^                $locale = null;$/;"	v
locale	library\Zend\Validate\Float.php	/^            $locale = $locale->toArray();$/;"	v
Zend_Validate_GreaterThan	library\Zend\Validate\GreaterThan.php	/^class Zend_Validate_GreaterThan extends Zend_Validate_Abstract$/;"	c
min	library\Zend\Validate\GreaterThan.php	/^                $min = $min['min'];$/;"	v
min	library\Zend\Validate\GreaterThan.php	/^            $min = $min->toArray();$/;"	v
Zend_Validate_Hex	library\Zend\Validate\Hex.php	/^class Zend_Validate_Hex extends Zend_Validate_Abstract$/;"	c
Zend_Validate_Hostname	library\Zend\Validate\Hostname.php	/^class Zend_Validate_Hostname extends Zend_Validate_Abstract$/;"	c
allowLocal	library\Zend\Validate\Hostname.php	/^        $allowLocal = $this->_options['allow'] & self::ALLOW_LOCAL;$/;"	v
base	library\Zend\Validate\Hostname.php	/^            $base   = intval($key + 36 * $delta \/ ($delta + 38));$/;"	v
base	library\Zend\Validate\Hostname.php	/^        $base  = 72;$/;"	v
char	library\Zend\Validate\Hostname.php	/^        $char  = 0x80;$/;"	v
check	library\Zend\Validate\Hostname.php	/^                    $check = 0;$/;"	v
checked	library\Zend\Validate\Hostname.php	/^                                    $checked = true;$/;"	v
checked	library\Zend\Validate\Hostname.php	/^                        $checked = false;$/;"	v
delta	library\Zend\Validate\Hostname.php	/^                $delta = intval($delta \/ 35);$/;"	v
delta	library\Zend\Validate\Hostname.php	/^            $delta   = intval($init ? (($index - $old_index) \/ 700) : (($index - $old_index) \/ 2));$/;"	v
digit	library\Zend\Validate\Hostname.php	/^                $digit = ($hex - 48 < 10) ? $hex - 22$/;"	v
domainPart	library\Zend\Validate\Hostname.php	/^                            $domainPart = $this->decodePunycode(substr($domainPart, 4));$/;"	v
domainParts	library\Zend\Validate\Hostname.php	/^        $domainParts = explode('.', $value);$/;"	v
found	library\Zend\Validate\Hostname.php	/^        $found = preg_match('\/([^a-z0-9\\x2d]{1,10})$\/i', $encoded);$/;"	v
hex	library\Zend\Validate\Hostname.php	/^                $hex   = ord($encoded[$indexe++]);$/;"	v
index	library\Zend\Validate\Hostname.php	/^        $index = 0;$/;"	v
init	library\Zend\Validate\Hostname.php	/^            $init   = false;$/;"	v
init	library\Zend\Validate\Hostname.php	/^        $init  = true;$/;"	v
ipValidator	library\Zend\Validate\Hostname.php	/^            $ipValidator = new Zend_Validate_Ip();$/;"	v
length	library\Zend\Validate\Hostname.php	/^                                    $length = $this->_idnLength[strtoupper($this->_tld)];$/;"	v
length	library\Zend\Validate\Hostname.php	/^                                $length = 63;$/;"	v
lengthd	library\Zend\Validate\Hostname.php	/^        $lengthd = count($decoded);$/;"	v
lengthe	library\Zend\Validate\Hostname.php	/^        $lengthe = strlen($encoded);$/;"	v
matches	library\Zend\Validate\Hostname.php	/^                $matches = array();$/;"	v
options	library\Zend\Validate\Hostname.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Validate\Hostname.php	/^            $options = $temp;$/;"	v
options	library\Zend\Validate\Hostname.php	/^            $options = func_get_args();$/;"	v
origenc	library\Zend\Validate\Hostname.php	/^            $origenc = iconv_get_encoding('internal_encoding');$/;"	v
pos	library\Zend\Validate\Hostname.php	/^                $pos = (int) ($pos * (36 - $tag));$/;"	v
regexChars	library\Zend\Validate\Hostname.php	/^                    $regexChars = array(0 => '\/^[a-z0-9\\x2d]{1,63}$\/i');$/;"	v
regexLocal	library\Zend\Validate\Hostname.php	/^        $regexLocal = '\/^(([a-zA-Z0-9\\x2d]{1,63}\\x2e)*[a-zA-Z0-9\\x2d]{1,63}[\\x2e]{0,1}){1,254}$\/';$/;"	v
separator	library\Zend\Validate\Hostname.php	/^        $separator = strrpos($encoded, '-');$/;"	v
status	library\Zend\Validate\Hostname.php	/^                            $status = @preg_match($regexChar, $domainPart);$/;"	v
status	library\Zend\Validate\Hostname.php	/^                            $status = false;$/;"	v
status	library\Zend\Validate\Hostname.php	/^                        $status = false;$/;"	v
status	library\Zend\Validate\Hostname.php	/^                    $status = false;$/;"	v
status	library\Zend\Validate\Hostname.php	/^            $status = false;$/;"	v
status	library\Zend\Validate\Hostname.php	/^        $status = @preg_match($regexLocal, $value);$/;"	v
tag	library\Zend\Validate\Hostname.php	/^                $tag    = ($key <= $base) ? 1 : (($key >= $base + 26) ? 26 : ($key - $base));$/;"	v
value	library\Zend\Validate\Hostname.php	/^                $value = substr($value, 0, -1);$/;"	v
Zend_Validate_Iban	library\Zend\Validate\Iban.php	/^class Zend_Validate_Iban extends Zend_Validate_Abstract$/;"	c
format	library\Zend\Validate\Iban.php	/^        $format = str_replace($/;"	v
format	library\Zend\Validate\Iban.php	/^        $format = substr($value, 4) . substr($value, 0, 4);$/;"	v
len	library\Zend\Validate\Iban.php	/^        $len  = strlen($format);$/;"	v
locale	library\Zend\Validate\Iban.php	/^                $locale = $locale['locale'];$/;"	v
locale	library\Zend\Validate\Iban.php	/^                $locale = Zend_Registry::get('Zend_Locale');$/;"	v
locale	library\Zend\Validate\Iban.php	/^                $locale = null;$/;"	v
locale	library\Zend\Validate\Iban.php	/^            $locale = $locale->toArray();$/;"	v
locale	library\Zend\Validate\Iban.php	/^            $locale = Zend_Locale::findLocale($locale);$/;"	v
region	library\Zend\Validate\Iban.php	/^            $region = $region->getRegion();$/;"	v
region	library\Zend\Validate\Iban.php	/^            $region = new Zend_Locale($this->_locale);$/;"	v
region	library\Zend\Validate\Iban.php	/^            $region = substr($value, 0, 2);$/;"	v
temp	library\Zend\Validate\Iban.php	/^        $temp = intval(substr($format, 0, 1));$/;"	v
value	library\Zend\Validate\Iban.php	/^        $value = strtoupper($value);$/;"	v
Zend_Validate_Identical	library\Zend\Validate\Identical.php	/^class Zend_Validate_Identical extends Zend_Validate_Abstract$/;"	c
strict	library\Zend\Validate\Identical.php	/^        $strict = $this->getStrict();$/;"	v
token	library\Zend\Validate\Identical.php	/^            $token = $context[$this->getToken()];$/;"	v
token	library\Zend\Validate\Identical.php	/^            $token = $this->getToken();$/;"	v
token	library\Zend\Validate\Identical.php	/^            $token = $token->toArray();$/;"	v
Zend_Validate_InArray	library\Zend\Validate\InArray.php	/^class Zend_Validate_InArray extends Zend_Validate_Abstract$/;"	c
count	library\Zend\Validate\InArray.php	/^            $count = func_num_args();$/;"	v
iterator	library\Zend\Validate\InArray.php	/^            $iterator = new RecursiveIteratorIterator(new RecursiveArrayIterator($this->_haystack));$/;"	v
options	library\Zend\Validate\InArray.php	/^                    $options = $temp;$/;"	v
options	library\Zend\Validate\InArray.php	/^                    $options = array();$/;"	v
options	library\Zend\Validate\InArray.php	/^                $options = $temp;$/;"	v
options	library\Zend\Validate\InArray.php	/^            $options = $options->toArray();$/;"	v
temp	library\Zend\Validate\InArray.php	/^                $temp = func_get_arg(0);$/;"	v
temp	library\Zend\Validate\InArray.php	/^            $temp  = array();$/;"	v
Zend_Validate_Int	library\Zend\Validate\Int.php	/^class Zend_Validate_Int extends Zend_Validate_Abstract$/;"	c
locale	library\Zend\Validate\Int.php	/^                $locale = $locale['locale'];$/;"	v
locale	library\Zend\Validate\Int.php	/^                $locale = Zend_Registry::get('Zend_Locale');$/;"	v
locale	library\Zend\Validate\Int.php	/^                $locale = null;$/;"	v
locale	library\Zend\Validate\Int.php	/^            $locale        = localeconv();$/;"	v
locale	library\Zend\Validate\Int.php	/^            $locale = $locale->toArray();$/;"	v
valueFiltered	library\Zend\Validate\Int.php	/^            $valueFiltered = str_replace($locale['decimal_point'], '.', $value);$/;"	v
valueFiltered	library\Zend\Validate\Int.php	/^            $valueFiltered = str_replace($locale['thousands_sep'], '', $valueFiltered);$/;"	v
Zend_Validate_Ip	library\Zend\Validate\Ip.php	/^class Zend_Validate_Ip extends Zend_Validate_Abstract$/;"	c
colonCount	library\Zend\Validate\Ip.php	/^        $colonCount = substr_count($value, ':');$/;"	v
ip2long	library\Zend\Validate\Ip.php	/^        $ip2long = ip2long($value);$/;"	v
lastcolon	library\Zend\Validate\Ip.php	/^            $lastcolon = strrpos($value, ':');$/;"	v
options	library\Zend\Validate\Ip.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Validate\Ip.php	/^            $options = $temp;$/;"	v
options	library\Zend\Validate\Ip.php	/^            $options = func_get_args();$/;"	v
value	library\Zend\Validate\Ip.php	/^            $value = substr($value, 0, $lastcolon) . ':0:0';$/;"	v
Zend_Validate_Isbn	library\Zend\Validate\Isbn.php	/^class Zend_Validate_Isbn extends Zend_Validate_Abstract$/;"	c
checksum	library\Zend\Validate\Isbn.php	/^                    $checksum = '0';$/;"	v
checksum	library\Zend\Validate\Isbn.php	/^                    $checksum = 'X';$/;"	v
checksum	library\Zend\Validate\Isbn.php	/^                $checksum = 10 - ($sum % 10);$/;"	v
checksum	library\Zend\Validate\Isbn.php	/^                $checksum = 11 - ($sum % 11);$/;"	v
isbn10	library\Zend\Validate\Isbn.php	/^                $isbn10 = str_replace($this->_separator, '', $value);$/;"	v
isbn13	library\Zend\Validate\Isbn.php	/^                $isbn13 = str_replace($this->_separator, '', $value);$/;"	v
length	library\Zend\Validate\Isbn.php	/^                $length  = 10;$/;"	v
length	library\Zend\Validate\Isbn.php	/^                $length  = 13;$/;"	v
length	library\Zend\Validate\Isbn.php	/^                $length  = 17;$/;"	v
lengths	library\Zend\Validate\Isbn.php	/^        $lengths  = array();$/;"	v
options	library\Zend\Validate\Isbn.php	/^            $options = $options->toArray();$/;"	v
pattern	library\Zend\Validate\Isbn.php	/^                $pattern = "\/^[0-9]{1,7}[{$sep}]{1}[0-9]{1,7}[{$sep}]{1}[0-9]{1,7}[{$sep}]{1}[0-9X]{1}$\/";$/;"	v
pattern	library\Zend\Validate\Isbn.php	/^                $pattern = "\/^[0-9]{1,9}[{$sep}]{1}[0-9]{1,5}[{$sep}]{1}[0-9]{1,9}[{$sep}]{1}[0-9]{1,9}[{$sep}]{1}[0-9]{1}$\/";$/;"	v
pattern	library\Zend\Validate\Isbn.php	/^                $pattern = '\/^[0-9]{13}$\/';$/;"	v
pattern	library\Zend\Validate\Isbn.php	/^                $pattern = '\/^[0-9]{9}[0-9X]{1}$\/';$/;"	v
patterns	library\Zend\Validate\Isbn.php	/^        $patterns = array();$/;"	v
sep	library\Zend\Validate\Isbn.php	/^        $sep      = quotemeta($this->_separator);$/;"	v
sum	library\Zend\Validate\Isbn.php	/^                $sum    = 0;$/;"	v
value	library\Zend\Validate\Isbn.php	/^        $value = (string) $value;$/;"	v
Zend_Validate_LessThan	library\Zend\Validate\LessThan.php	/^class Zend_Validate_LessThan extends Zend_Validate_Abstract$/;"	c
max	library\Zend\Validate\LessThan.php	/^                $max = $max['max'];$/;"	v
max	library\Zend\Validate\LessThan.php	/^            $max = $max->toArray();$/;"	v
Zend_Validate_NotEmpty	library\Zend\Validate\NotEmpty.php	/^class Zend_Validate_NotEmpty extends Zend_Validate_Abstract$/;"	c
detected	library\Zend\Validate\NotEmpty.php	/^            $detected = 0;$/;"	v
object	library\Zend\Validate\NotEmpty.php	/^            $object = true;$/;"	v
object	library\Zend\Validate\NotEmpty.php	/^        $object  = false;$/;"	v
options	library\Zend\Validate\NotEmpty.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Validate\NotEmpty.php	/^            $options = $temp;$/;"	v
options	library\Zend\Validate\NotEmpty.php	/^            $options = func_get_args();$/;"	v
temp	library\Zend\Validate\NotEmpty.php	/^            $temp    = array();$/;"	v
type	library\Zend\Validate\NotEmpty.php	/^            $type = $detected;$/;"	v
type	library\Zend\Validate\NotEmpty.php	/^            $type = array_search($type, $this->_constants);$/;"	v
type	library\Zend\Validate\NotEmpty.php	/^        $type    = $this->getType();$/;"	v
Zend_Validate_PostCode	library\Zend\Validate\PostCode.php	/^class Zend_Validate_PostCode extends Zend_Validate_Abstract$/;"	c
format	library\Zend\Validate\PostCode.php	/^            $format = '\/^' . $format;$/;"	v
format	library\Zend\Validate\PostCode.php	/^        $format = $this->getFormat();$/;"	v
format	library\Zend\Validate\PostCode.php	/^        $format = Zend_Locale::getTranslation($/;"	v
locale	library\Zend\Validate\PostCode.php	/^        $locale        = new Zend_Locale($this->_locale);$/;"	v
options	library\Zend\Validate\PostCode.php	/^            $options = $options->toArray();$/;"	v
region	library\Zend\Validate\PostCode.php	/^        $region        = $locale->getRegion();$/;"	v
Zend_Validate_Regex	library\Zend\Validate\Regex.php	/^class Zend_Validate_Regex extends Zend_Validate_Abstract$/;"	c
pattern	library\Zend\Validate\Regex.php	/^                $pattern = $pattern['pattern'];$/;"	v
pattern	library\Zend\Validate\Regex.php	/^            $pattern = $pattern->toArray();$/;"	v
status	library\Zend\Validate\Regex.php	/^        $status         = @preg_match($this->_pattern, "Test");$/;"	v
status	library\Zend\Validate\Regex.php	/^        $status = @preg_match($this->_pattern, $value);$/;"	v
Zend_Validate_Sitemap_Changefreq	library\Zend\Validate\Sitemap\Changefreq.php	/^class Zend_Validate_Sitemap_Changefreq extends Zend_Validate_Abstract$/;"	c
Zend_Validate_Sitemap_Lastmod	library\Zend\Validate\Sitemap\Lastmod.php	/^class Zend_Validate_Sitemap_Lastmod extends Zend_Validate_Abstract$/;"	c
result	library\Zend\Validate\Sitemap\Lastmod.php	/^        $result = @preg_match(self::LASTMOD_REGEX, $value);$/;"	v
Zend_Validate_Sitemap_Loc	library\Zend\Validate\Sitemap\Loc.php	/^class Zend_Validate_Sitemap_Loc extends Zend_Validate_Abstract$/;"	c
result	library\Zend\Validate\Sitemap\Loc.php	/^        $result = Zend_Uri::check($value);$/;"	v
Zend_Validate_Sitemap_Priority	library\Zend\Validate\Sitemap\Priority.php	/^class Zend_Validate_Sitemap_Priority extends Zend_Validate_Abstract$/;"	c
value	library\Zend\Validate\Sitemap\Priority.php	/^        $value = (float) $value;$/;"	v
Zend_Validate_StringLength	library\Zend\Validate\StringLength.php	/^class Zend_Validate_StringLength extends Zend_Validate_Abstract$/;"	c
length	library\Zend\Validate\StringLength.php	/^            $length = iconv_strlen($value);$/;"	v
length	library\Zend\Validate\StringLength.php	/^            $length = iconv_strlen($value, $this->_encoding);$/;"	v
options	library\Zend\Validate\StringLength.php	/^            $options     = func_get_args();$/;"	v
options	library\Zend\Validate\StringLength.php	/^            $options = $options->toArray();$/;"	v
options	library\Zend\Validate\StringLength.php	/^            $options = $temp;$/;"	v
orig	library\Zend\Validate\StringLength.php	/^            $orig   = iconv_get_encoding('internal_encoding');$/;"	v
result	library\Zend\Validate\StringLength.php	/^            $result = iconv_set_encoding('internal_encoding', $encoding);$/;"	v
handle	library\Zend\Version.php	/^            $handle = fopen('http:\/\/framework.zend.com\/api\/zf-version', 'r');$/;"	v
version	library\Zend\Version.php	/^        $version = preg_replace('\/(\\d)pr(\\d?)\/', '$1a$2', $version);$/;"	v
version	library\Zend\Version.php	/^        $version = strtolower($version);$/;"	v
Zend_View	library\Zend\View.php	/^class Zend_View extends Zend_View_Abstract$/;"	c
args	library\Zend\View\Abstract.php	/^        $args = func_get_args();$/;"	v
buffer	library\Zend\View\Abstract.php	/^            $buffer = call_user_func(array($filter, 'filter'), $buffer);$/;"	v
class	library\Zend\View\Abstract.php	/^            $class = $this->getPluginLoader($type)->load($name);$/;"	v
classPrefix	library\Zend\View\Abstract.php	/^        $classPrefix = rtrim($classPrefix, '_') . '_';$/;"	v
dir	library\Zend\View\Abstract.php	/^            $dir  = rtrim($dir, '\/');$/;"	v
dir	library\Zend\View\Abstract.php	/^            $dir  = rtrim($dir, '\\\\');$/;"	v
dir	library\Zend\View\Abstract.php	/^        $dir = DIRECTORY_SEPARATOR . ucfirst($type) . DIRECTORY_SEPARATOR;$/;"	v
e	library\Zend\View\Abstract.php	/^                $e =  new Zend_View_Exception($/;"	v
e	library\Zend\View\Abstract.php	/^                $e = new Zend_View_Exception('Setting private or protected class members is not allowed');$/;"	v
e	library\Zend\View\Abstract.php	/^            $e = new Zend_View_Exception('Requested scripts may not include parent directory traversal ("..\/", "..\\\\" notation)');$/;"	v
e	library\Zend\View\Abstract.php	/^            $e = new Zend_View_Exception('View helper must be an object');$/;"	v
e	library\Zend\View\Abstract.php	/^            $e = new Zend_View_Exception('assign() expects a string or array, received ' . gettype($spec));$/;"	v
e	library\Zend\View\Abstract.php	/^            $e = new Zend_View_Exception('no view script directory set; unable to determine location for view script');$/;"	v
e	library\Zend\View\Abstract.php	/^            $e = new Zend_View_Exception(sprintf('Invalid plugin loader type "%s"', $type));$/;"	v
e	library\Zend\View\Abstract.php	/^            $e = new Zend_View_Exception(sprintf('Invalid plugin loader type "%s"; cannot retrieve', $type));$/;"	v
e	library\Zend\View\Abstract.php	/^        $e = new Zend_View_Exception($message);$/;"	v
e	library\Zend\View\Abstract.php	/^        $e = new Zend_View_Exception('Setting private or protected class members is not allowed');$/;"	v
error	library\Zend\View\Abstract.php	/^                    $error = true;$/;"	v
error	library\Zend\View\Abstract.php	/^            $error = false;$/;"	v
filter	library\Zend\View\Abstract.php	/^            $filter = $this->getFilter($name);$/;"	v
helper	library\Zend\View\Abstract.php	/^        $helper = $this->getHelper($name);$/;"	v
loader	library\Zend\View\Abstract.php	/^                    $loader = new Zend_Loader_PluginLoader(array($/;"	v
loader	library\Zend\View\Abstract.php	/^        $loader = $this->getPluginLoader($type);$/;"	v
message	library\Zend\View\Abstract.php	/^        $message = "script '$name' not found in path ("$/;"	v
name	library\Zend\View\Abstract.php	/^        $name = ucfirst($name);$/;"	v
pType	library\Zend\View\Abstract.php	/^            $pType = ucfirst($type);$/;"	v
path	library\Zend\View\Abstract.php	/^            $path = $this->_script($name);$/;"	v
path	library\Zend\View\Abstract.php	/^        $path        = rtrim($path, '\/');$/;"	v
path	library\Zend\View\Abstract.php	/^        $path        = rtrim($path, '\\\\');$/;"	v
pathPrefix	library\Zend\View\Abstract.php	/^            $pathPrefix = 'Zend\/View\/';$/;"	v
paths	library\Zend\View\Abstract.php	/^        $paths = $this->_path;$/;"	v
prefix	library\Zend\View\Abstract.php	/^                        $prefix => $pathPrefix$/;"	v
prefix	library\Zend\View\Abstract.php	/^                    $prefix = $config['filterPathPrefix'];$/;"	v
prefix	library\Zend\View\Abstract.php	/^                    $prefix = $config['helperPathPrefix'];$/;"	v
prefix	library\Zend\View\Abstract.php	/^                $prefix = $config['basePathPrefix'];$/;"	v
prefix	library\Zend\View\Abstract.php	/^                $prefix = 'Zend_View_Filter';$/;"	v
prefix	library\Zend\View\Abstract.php	/^                $prefix = 'Zend_View_Helper';$/;"	v
prefix	library\Zend\View\Abstract.php	/^            $prefix     = 'Zend_View_';$/;"	v
prefix	library\Zend\View\Abstract.php	/^            $prefix = 'Zend_View';$/;"	v
store	library\Zend\View\Abstract.php	/^                $store    = $this->_filterClass;$/;"	v
store	library\Zend\View\Abstract.php	/^                $store    = $this->_helper;$/;"	v
storeVar	library\Zend\View\Abstract.php	/^                $storeVar = '_filterClass';$/;"	v
storeVar	library\Zend\View\Abstract.php	/^                $storeVar = '_helper';$/;"	v
type	library\Zend\View\Abstract.php	/^        $type = strtolower($type);$/;"	v
vars	library\Zend\View\Abstract.php	/^        $vars   = get_object_vars($this);$/;"	v
Zend_View_Exception	library\Zend\View\Exception.php	/^class Zend_View_Exception extends Zend_Exception$/;"	c
Zend_View_Helper_Action	library\Zend\View\Helper\Action.php	/^class Zend_View_Helper_Action extends Zend_View_Helper_Abstract$/;"	c
e	library\Zend\View\Helper\Action.php	/^            $e = new Zend_View_Exception('Action helper depends on valid front controller instance');$/;"	v
e	library\Zend\View\Helper\Action.php	/^            $e = new Zend_View_Exception('Action view helper requires both a registered request and response object in the front controller instance');$/;"	v
front	library\Zend\View\Helper\Action.php	/^        $front   = Zend_Controller_Front::getInstance();$/;"	v
module	library\Zend\View\Helper\Action.php	/^            $module = $this->defaultModule;$/;"	v
modules	library\Zend\View\Helper\Action.php	/^        $modules = $front->getControllerDirectory();$/;"	v
params	library\Zend\View\Helper\Action.php	/^        $params = $this->request->getUserParams();$/;"	v
request	library\Zend\View\Helper\Action.php	/^        $request  = $front->getRequest();$/;"	v
response	library\Zend\View\Helper\Action.php	/^        $response = $front->getResponse();$/;"	v
return	library\Zend\View\Helper\Action.php	/^        $return = $this->response->getBody();$/;"	v
view	library\Zend\View\Helper\Action.php	/^        $view = clone $this->view;$/;"	v
viewRendererObj	library\Zend\View\Helper\Action.php	/^        $viewRendererObj = Zend_Controller_Action_HelperBroker::getStaticHelper('viewRenderer');$/;"	v
Zend_View_Helper_BaseUrl	library\Zend\View\Helper\BaseUrl.php	/^class Zend_View_Helper_BaseUrl extends Zend_View_Helper_Abstract$/;"	c
baseUrl	library\Zend\View\Helper\BaseUrl.php	/^            $baseUrl = $this->_removeScriptName($baseUrl);$/;"	v
baseUrl	library\Zend\View\Helper\BaseUrl.php	/^            $baseUrl = Zend_Controller_Front::getInstance()->getBaseUrl();$/;"	v
baseUrl	library\Zend\View\Helper\BaseUrl.php	/^        $baseUrl = $this->getBaseUrl();$/;"	v
file	library\Zend\View\Helper\BaseUrl.php	/^            $file = '\/' . ltrim($file, '\/\\\\');$/;"	v
url	library\Zend\View\Helper\BaseUrl.php	/^            $url = substr($url, 0, $pos);$/;"	v
Zend_View_Helper_Currency	library\Zend\View\Helper\Currency.php	/^class Zend_View_Helper_Currency extends Zend_View_Helper_Abstract$/;"	c
currency	library\Zend\View\Helper\Currency.php	/^                $currency = Zend_Registry::get('Zend_Currency');$/;"	v
currency	library\Zend\View\Helper\Currency.php	/^                $currency = array('locale' => $currency);$/;"	v
currency	library\Zend\View\Helper\Currency.php	/^            $currency = array('currency' => $currency);$/;"	v
currency	library\Zend\View\Helper\Currency.php	/^            $currency = new Zend_Currency($currency);$/;"	v
Zend_View_Helper_Cycle	library\Zend\View\Helper\Cycle.php	/^class Zend_View_Helper_Cycle implements Iterator$/;"	c
count	library\Zend\View\Helper\Cycle.php	/^        $count = count($this->_data[$this->_name]);$/;"	v
Zend_View_Helper_DeclareVars	library\Zend\View\Helper\DeclareVars.php	/^class Zend_View_Helper_DeclareVars extends Zend_View_Helper_Abstract$/;"	c
args	library\Zend\View\Helper\DeclareVars.php	/^        $args = func_get_args();$/;"	v
Zend_View_Helper_Doctype	library\Zend\View\Helper\Doctype.php	/^class Zend_View_Helper_Doctype extends Zend_View_Helper_Abstract$/;"	c
doctypes	library\Zend\View\Helper\Doctype.php	/^        $doctypes = $this->getDoctypes();$/;"	v
e	library\Zend\View\Helper\Doctype.php	/^                        $e = new Zend_View_Exception('The specified doctype is malformed');$/;"	v
type	library\Zend\View\Helper\Doctype.php	/^                        $type = self::CUSTOM;$/;"	v
type	library\Zend\View\Helper\Doctype.php	/^                        $type = self::CUSTOM_XHTML;$/;"	v
Zend_View_Helper_Fieldset	library\Zend\View\Helper\Fieldset.php	/^class Zend_View_Helper_Fieldset extends Zend_View_Helper_FormElement$/;"	c
id	library\Zend\View\Helper\Fieldset.php	/^            $id = ' id="' . $this->view->escape($id) . '"';$/;"	v
id	library\Zend\View\Helper\Fieldset.php	/^            $id = '';$/;"	v
info	library\Zend\View\Helper\Fieldset.php	/^        $info = $this->_getInfo($name, $content, $attribs);$/;"	v
legend	library\Zend\View\Helper\Fieldset.php	/^                $legend = '<legend>'$/;"	v
legend	library\Zend\View\Helper\Fieldset.php	/^        $legend = '';$/;"	v
legendString	library\Zend\View\Helper\Fieldset.php	/^            $legendString = trim($attribs['legend']);$/;"	v
xhtml	library\Zend\View\Helper\Fieldset.php	/^        $xhtml = '<fieldset'$/;"	v
Zend_View_Helper_Form	library\Zend\View\Helper\Form.php	/^class Zend_View_Helper_Form extends Zend_View_Helper_FormElement$/;"	c
id	library\Zend\View\Helper\Form.php	/^            $id = ' id="' . $this->view->escape($id) . '"';$/;"	v
id	library\Zend\View\Helper\Form.php	/^            $id = '';$/;"	v
info	library\Zend\View\Helper\Form.php	/^        $info = $this->_getInfo($name, $content, $attribs);$/;"	v
name	library\Zend\View\Helper\Form.php	/^            $name = ' name="' . $this->view->escape($name) . '"';$/;"	v
name	library\Zend\View\Helper\Form.php	/^            $name = '';$/;"	v
xhtml	library\Zend\View\Helper\Form.php	/^        $xhtml = '<form'$/;"	v
Zend_View_Helper_FormButton	library\Zend\View\Helper\FormButton.php	/^class Zend_View_Helper_FormButton extends Zend_View_Helper_FormElement$/;"	c
content	library\Zend\View\Helper\FormButton.php	/^            $content = $attribs['content'];$/;"	v
content	library\Zend\View\Helper\FormButton.php	/^            $content = $value;$/;"	v
content	library\Zend\View\Helper\FormButton.php	/^        $content = '';$/;"	v
content	library\Zend\View\Helper\FormButton.php	/^        $content = ($escape) ? $this->view->escape($content) : $content;$/;"	v
info	library\Zend\View\Helper\FormButton.php	/^        $info    = $this->_getInfo($name, $value, $attribs);$/;"	v
type	library\Zend\View\Helper\FormButton.php	/^                $type = $attribs['type'];$/;"	v
type	library\Zend\View\Helper\FormButton.php	/^        $type = 'button';$/;"	v
xhtml	library\Zend\View\Helper\FormButton.php	/^        $xhtml = '<button'$/;"	v
Zend_View_Helper_FormCheckbox	library\Zend\View\Helper\FormCheckbox.php	/^class Zend_View_Helper_FormCheckbox extends Zend_View_Helper_FormElement$/;"	c
checked	library\Zend\View\Helper\FormCheckbox.php	/^            $checked = false;$/;"	v
checked	library\Zend\View\Helper\FormCheckbox.php	/^            $checked = true;$/;"	v
checked	library\Zend\View\Helper\FormCheckbox.php	/^        $checked = false;$/;"	v
checkedOptions	library\Zend\View\Helper\FormCheckbox.php	/^        $checkedOptions = self::determineCheckboxInfo($value, $checked, $checkedOptions);$/;"	v
checkedString	library\Zend\View\Helper\FormCheckbox.php	/^            $checkedString = ' checked="checked"';$/;"	v
checkedString	library\Zend\View\Helper\FormCheckbox.php	/^        $checkedString = '';$/;"	v
checkedValue	library\Zend\View\Helper\FormCheckbox.php	/^                $checkedValue = (string) $checkedOptions['checkedValue'];$/;"	v
checkedValue	library\Zend\View\Helper\FormCheckbox.php	/^                $checkedValue = (string) array_shift($checkedOptions);$/;"	v
checkedValue	library\Zend\View\Helper\FormCheckbox.php	/^            $checkedValue   = self::$_defaultCheckedOptions['checkedValue'];$/;"	v
checkedValue	library\Zend\View\Helper\FormCheckbox.php	/^            $checkedValue = $value;$/;"	v
checkedValue	library\Zend\View\Helper\FormCheckbox.php	/^        $checkedValue   = null;$/;"	v
disabled	library\Zend\View\Helper\FormCheckbox.php	/^            $disabled = ' disabled="disabled"';$/;"	v
disabled	library\Zend\View\Helper\FormCheckbox.php	/^        $disabled = '';$/;"	v
endTag	library\Zend\View\Helper\FormCheckbox.php	/^            $endTag= '>';$/;"	v
endTag	library\Zend\View\Helper\FormCheckbox.php	/^        $endTag = ' \/>';$/;"	v
info	library\Zend\View\Helper\FormCheckbox.php	/^        $info = $this->_getInfo($name, $value, $attribs);$/;"	v
uncheckedValue	library\Zend\View\Helper\FormCheckbox.php	/^                $uncheckedValue = (string) $checkedOptions['uncheckedValue'];$/;"	v
uncheckedValue	library\Zend\View\Helper\FormCheckbox.php	/^                $uncheckedValue = (string) array_shift($checkedOptions);$/;"	v
uncheckedValue	library\Zend\View\Helper\FormCheckbox.php	/^            $uncheckedValue = self::$_defaultCheckedOptions['uncheckedValue'];$/;"	v
uncheckedValue	library\Zend\View\Helper\FormCheckbox.php	/^        $uncheckedValue = null;$/;"	v
xhtml	library\Zend\View\Helper\FormCheckbox.php	/^            $xhtml = $this->_hidden($name, $checkedOptions['uncheckedValue']);$/;"	v
xhtml	library\Zend\View\Helper\FormCheckbox.php	/^        $xhtml = '';$/;"	v
attribs	library\Zend\View\Helper\FormElement.php	/^                $attribs = $info['attribs'];$/;"	v
attribs	library\Zend\View\Helper\FormElement.php	/^        $attribs = (array)$attribs;$/;"	v
e	library\Zend\View\Helper\FormElement.php	/^            $e = new Zend_View_Exception('Invalid translator specified');$/;"	v
info	library\Zend\View\Helper\FormElement.php	/^        $info = array($/;"	v
options	library\Zend\View\Helper\FormElement.php	/^        $options = null, $listsep = null$/;"	v
Zend_View_Helper_FormErrors	library\Zend\View\Helper\FormErrors.php	/^class Zend_View_Helper_FormErrors extends Zend_View_Helper_FormElement$/;"	c
attribs	library\Zend\View\Helper\FormErrors.php	/^            $attribs = $this->_htmlAttribs($options);$/;"	v
escape	library\Zend\View\Helper\FormErrors.php	/^            $escape = (bool) $options['escape'];$/;"	v
escape	library\Zend\View\Helper\FormErrors.php	/^        $escape = true;$/;"	v
html	library\Zend\View\Helper\FormErrors.php	/^        $html  = $start$/;"	v
start	library\Zend\View\Helper\FormErrors.php	/^            $start   = sprintf($start, $attribs);$/;"	v
start	library\Zend\View\Helper\FormErrors.php	/^        $start = $this->getElementStart();$/;"	v
Zend_View_Helper_FormFile	library\Zend\View\Helper\FormFile.php	/^class Zend_View_Helper_FormFile extends Zend_View_Helper_FormElement$/;"	c
disabled	library\Zend\View\Helper\FormFile.php	/^            $disabled = ' disabled="disabled"';$/;"	v
disabled	library\Zend\View\Helper\FormFile.php	/^        $disabled = '';$/;"	v
endTag	library\Zend\View\Helper\FormFile.php	/^            $endTag= '>';$/;"	v
endTag	library\Zend\View\Helper\FormFile.php	/^        $endTag = ' \/>';$/;"	v
info	library\Zend\View\Helper\FormFile.php	/^        $info = $this->_getInfo($name, null, $attribs);$/;"	v
xhtml	library\Zend\View\Helper\FormFile.php	/^        $xhtml = '<input type="file"'$/;"	v
Zend_View_Helper_FormHidden	library\Zend\View\Helper\FormHidden.php	/^class Zend_View_Helper_FormHidden extends Zend_View_Helper_FormElement$/;"	c
attribs	library\Zend\View\Helper\FormHidden.php	/^                $attribs = array('id' => $id);$/;"	v
info	library\Zend\View\Helper\FormHidden.php	/^        $info = $this->_getInfo($name, $value, $attribs);$/;"	v
Zend_View_Helper_FormImage	library\Zend\View\Helper\FormImage.php	/^class Zend_View_Helper_FormImage extends Zend_View_Helper_FormElement$/;"	c
disabled	library\Zend\View\Helper\FormImage.php	/^            $disabled = ' disabled="disabled"';$/;"	v
disabled	library\Zend\View\Helper\FormImage.php	/^        $disabled = '';$/;"	v
endTag	library\Zend\View\Helper\FormImage.php	/^            $endTag= '>';$/;"	v
endTag	library\Zend\View\Helper\FormImage.php	/^        $endTag = ' \/>';$/;"	v
info	library\Zend\View\Helper\FormImage.php	/^        $info = $this->_getInfo($name, $value, $attribs);$/;"	v
src	library\Zend\View\Helper\FormImage.php	/^            $src = ' src="' . $this->view->escape($attribs['src']) . '"';$/;"	v
src	library\Zend\View\Helper\FormImage.php	/^            $src = ' src="' . $this->view->escape($value) . '"';$/;"	v
value	library\Zend\View\Helper\FormImage.php	/^            $value = ' value="' . $this->view->escape($value) . '"';$/;"	v
value	library\Zend\View\Helper\FormImage.php	/^            $value = '';$/;"	v
xhtml	library\Zend\View\Helper\FormImage.php	/^        $xhtml = '<input type="image"'$/;"	v
Zend_View_Helper_FormLabel	library\Zend\View\Helper\FormLabel.php	/^class Zend_View_Helper_FormLabel extends Zend_View_Helper_FormElement$/;"	c
for	library\Zend\View\Helper\FormLabel.php	/^        $for   = (empty($attribs['disableFor']) || !$attribs['disableFor'])$/;"	v
info	library\Zend\View\Helper\FormLabel.php	/^        $info = $this->_getInfo($name, $value, $attribs);$/;"	v
value	library\Zend\View\Helper\FormLabel.php	/^        $value = ($escape) ? $this->view->escape($value) : $value;$/;"	v
xhtml	library\Zend\View\Helper\FormLabel.php	/^        $xhtml = '<label'$/;"	v
Zend_View_Helper_FormMultiCheckbox	library\Zend\View\Helper\FormMultiCheckbox.php	/^class Zend_View_Helper_FormMultiCheckbox extends Zend_View_Helper_FormRadio$/;"	c
options	library\Zend\View\Helper\FormMultiCheckbox.php	/^        $options = null, $listsep = "<br \/>\\n")$/;"	v
Zend_View_Helper_FormNote	library\Zend\View\Helper\FormNote.php	/^class Zend_View_Helper_FormNote extends Zend_View_Helper_FormElement$/;"	c
info	library\Zend\View\Helper\FormNote.php	/^        $info = $this->_getInfo($name, $value);$/;"	v
Zend_View_Helper_FormPassword	library\Zend\View\Helper\FormPassword.php	/^class Zend_View_Helper_FormPassword extends Zend_View_Helper_FormElement$/;"	c
disabled	library\Zend\View\Helper\FormPassword.php	/^            $disabled = ' disabled="disabled"';$/;"	v
disabled	library\Zend\View\Helper\FormPassword.php	/^        $disabled = '';$/;"	v
endTag	library\Zend\View\Helper\FormPassword.php	/^            $endTag= '>';$/;"	v
endTag	library\Zend\View\Helper\FormPassword.php	/^        $endTag = ' \/>';$/;"	v
info	library\Zend\View\Helper\FormPassword.php	/^        $info = $this->_getInfo($name, $value, $attribs);$/;"	v
valueString	library\Zend\View\Helper\FormPassword.php	/^                $valueString = ' value="' . $this->view->escape($value) . '"';$/;"	v
valueString	library\Zend\View\Helper\FormPassword.php	/^        $valueString = ' value=""';$/;"	v
xhtml	library\Zend\View\Helper\FormPassword.php	/^        $xhtml = '<input type="password"'$/;"	v
Zend_View_Helper_FormRadio	library\Zend\View\Helper\FormRadio.php	/^class Zend_View_Helper_FormRadio extends Zend_View_Helper_FormElement$/;"	c
checked	library\Zend\View\Helper\FormRadio.php	/^                $checked = ' checked="checked"';$/;"	v
checked	library\Zend\View\Helper\FormRadio.php	/^            $checked = '';$/;"	v
disabled	library\Zend\View\Helper\FormRadio.php	/^                $disabled = ' disabled="disabled"';$/;"	v
disabled	library\Zend\View\Helper\FormRadio.php	/^            $disabled = '';$/;"	v
endTag	library\Zend\View\Helper\FormRadio.php	/^            $endTag= '>';$/;"	v
endTag	library\Zend\View\Helper\FormRadio.php	/^        $endTag = ' \/>';$/;"	v
filter	library\Zend\View\Helper\FormRadio.php	/^        $filter = new Zend_Filter_PregReplace($pattern, "");$/;"	v
info	library\Zend\View\Helper\FormRadio.php	/^        $info = $this->_getInfo($name, $value, $attribs, $options, $listsep);$/;"	v
keyLen	library\Zend\View\Helper\FormRadio.php	/^            $keyLen = strlen($key);$/;"	v
labelPlacement	library\Zend\View\Helper\FormRadio.php	/^                        $labelPlacement = $val;$/;"	v
labelPlacement	library\Zend\View\Helper\FormRadio.php	/^        $labelPlacement = 'append';$/;"	v
label_attribs	library\Zend\View\Helper\FormRadio.php	/^        $label_attribs = array();$/;"	v
list	library\Zend\View\Helper\FormRadio.php	/^        $list  = array();$/;"	v
name	library\Zend\View\Helper\FormRadio.php	/^        $name = $this->view->escape($name);$/;"	v
optId	library\Zend\View\Helper\FormRadio.php	/^            $optId = $id . '-' . $filter->filter($opt_value);$/;"	v
opt_label	library\Zend\View\Helper\FormRadio.php	/^                $opt_label = $this->view->escape($opt_label);$/;"	v
options	library\Zend\View\Helper\FormRadio.php	/^        $options = (array) $options;$/;"	v
options	library\Zend\View\Helper\FormRadio.php	/^        $options = null, $listsep = "<br \/>\\n")$/;"	v
pattern	library\Zend\View\Helper\FormRadio.php	/^        $pattern = @preg_match('\/\\pL\/u', 'a') $/;"	v
radio	library\Zend\View\Helper\FormRadio.php	/^            $radio = '<label'$/;"	v
tmp	library\Zend\View\Helper\FormRadio.php	/^                $tmp = substr($key, 5);$/;"	v
tmp	library\Zend\View\Helper\FormRadio.php	/^                $tmp = substr($key, 6);$/;"	v
tmp	library\Zend\View\Helper\FormRadio.php	/^            $tmp    = false;$/;"	v
val	library\Zend\View\Helper\FormRadio.php	/^                    $val = strtolower($val);$/;"	v
value	library\Zend\View\Helper\FormRadio.php	/^        $value = (array) $value;$/;"	v
xhtml	library\Zend\View\Helper\FormRadio.php	/^        $xhtml = '';$/;"	v
Zend_View_Helper_FormReset	library\Zend\View\Helper\FormReset.php	/^class Zend_View_Helper_FormReset extends Zend_View_Helper_FormElement$/;"	c
disabled	library\Zend\View\Helper\FormReset.php	/^            $disabled = ' disabled="disabled"';$/;"	v
disabled	library\Zend\View\Helper\FormReset.php	/^        $disabled = '';$/;"	v
endTag	library\Zend\View\Helper\FormReset.php	/^            $endTag = ' \/>';$/;"	v
endTag	library\Zend\View\Helper\FormReset.php	/^        $endTag = '>';$/;"	v
info	library\Zend\View\Helper\FormReset.php	/^        $info = $this->_getInfo($name, $value, $attribs);$/;"	v
xhtml	library\Zend\View\Helper\FormReset.php	/^        $xhtml = '<input type="reset"'$/;"	v
Zend_View_Helper_FormSelect	library\Zend\View\Helper\FormSelect.php	/^class Zend_View_Helper_FormSelect extends Zend_View_Helper_FormElement$/;"	c
disable	library\Zend\View\Helper\FormSelect.php	/^            $disable = array();$/;"	v
disabled	library\Zend\View\Helper\FormSelect.php	/^            $disabled = ' disabled="disabled"';$/;"	v
disabled	library\Zend\View\Helper\FormSelect.php	/^        $disabled = '';$/;"	v
info	library\Zend\View\Helper\FormSelect.php	/^        $info = $this->_getInfo($name, $value, $attribs, $options, $listsep);$/;"	v
list	library\Zend\View\Helper\FormSelect.php	/^        $list       = array();$/;"	v
multiple	library\Zend\View\Helper\FormSelect.php	/^                $multiple = ' multiple="multiple"';$/;"	v
multiple	library\Zend\View\Helper\FormSelect.php	/^                $multiple = '';$/;"	v
multiple	library\Zend\View\Helper\FormSelect.php	/^            $multiple = ' multiple="multiple"';$/;"	v
multiple	library\Zend\View\Helper\FormSelect.php	/^        $multiple = '';$/;"	v
opt	library\Zend\View\Helper\FormSelect.php	/^        $opt = '<option'$/;"	v
opt_disable	library\Zend\View\Helper\FormSelect.php	/^                    $opt_disable = ' disabled="disabled"';$/;"	v
opt_disable	library\Zend\View\Helper\FormSelect.php	/^                $opt_disable = '';$/;"	v
opt_id	library\Zend\View\Helper\FormSelect.php	/^                $opt_id = ' id="' . $this->view->escape($id) . '-optgroup-'$/;"	v
opt_value	library\Zend\View\Helper\FormSelect.php	/^                    $opt_value = $translator->translate($opt_value);$/;"	v
options	library\Zend\View\Helper\FormSelect.php	/^        $options = null, $listsep = "<br \/>\\n")$/;"	v
translator	library\Zend\View\Helper\FormSelect.php	/^        $translator = $this->getTranslator();$/;"	v
value	library\Zend\View\Helper\FormSelect.php	/^        $value = array_map('strval', (array) $value);$/;"	v
xhtml	library\Zend\View\Helper\FormSelect.php	/^        $xhtml = '<select'$/;"	v
Zend_View_Helper_FormSubmit	library\Zend\View\Helper\FormSubmit.php	/^class Zend_View_Helper_FormSubmit extends Zend_View_Helper_FormElement$/;"	c
disabled	library\Zend\View\Helper\FormSubmit.php	/^            $disabled = ' disabled="disabled"';$/;"	v
disabled	library\Zend\View\Helper\FormSubmit.php	/^        $disabled = '';$/;"	v
endTag	library\Zend\View\Helper\FormSubmit.php	/^            $endTag= '>';$/;"	v
endTag	library\Zend\View\Helper\FormSubmit.php	/^        $endTag = ' \/>';$/;"	v
id	library\Zend\View\Helper\FormSubmit.php	/^            $id = ' id="' . $this->view->escape($id) . '"';$/;"	v
info	library\Zend\View\Helper\FormSubmit.php	/^        $info = $this->_getInfo($name, $value, $attribs);$/;"	v
xhtml	library\Zend\View\Helper\FormSubmit.php	/^        $xhtml = '<input type="submit"'$/;"	v
Zend_View_Helper_FormText	library\Zend\View\Helper\FormText.php	/^class Zend_View_Helper_FormText extends Zend_View_Helper_FormElement$/;"	c
disabled	library\Zend\View\Helper\FormText.php	/^            $disabled = ' disabled="disabled"';$/;"	v
disabled	library\Zend\View\Helper\FormText.php	/^        $disabled = '';$/;"	v
endTag	library\Zend\View\Helper\FormText.php	/^            $endTag= '>';$/;"	v
endTag	library\Zend\View\Helper\FormText.php	/^        $endTag = ' \/>';$/;"	v
info	library\Zend\View\Helper\FormText.php	/^        $info = $this->_getInfo($name, $value, $attribs);$/;"	v
xhtml	library\Zend\View\Helper\FormText.php	/^        $xhtml = '<input type="text"'$/;"	v
Zend_View_Helper_FormTextarea	library\Zend\View\Helper\FormTextarea.php	/^class Zend_View_Helper_FormTextarea extends Zend_View_Helper_FormElement$/;"	c
disabled	library\Zend\View\Helper\FormTextarea.php	/^            $disabled = ' disabled="disabled"';$/;"	v
disabled	library\Zend\View\Helper\FormTextarea.php	/^        $disabled = '';$/;"	v
info	library\Zend\View\Helper\FormTextarea.php	/^        $info = $this->_getInfo($name, $value, $attribs);$/;"	v
xhtml	library\Zend\View\Helper\FormTextarea.php	/^        $xhtml = '<textarea name="' . $this->view->escape($name) . '"'$/;"	v
Zend_View_Helper_Gravatar	library\Zend\View\Helper\Gravatar.php	/^class Zend_View_Helper_Gravatar extends Zend_View_Helper_HtmlElement$/;"	c
attribs	library\Zend\View\Helper\Gravatar.php	/^        $attribs        = $this->getAttribs();$/;"	v
html	library\Zend\View\Helper\Gravatar.php	/^        $html = '<img'$/;"	v
method	library\Zend\View\Helper\Gravatar.php	/^            $method = 'set' . str_replace(' ', '', ucwords(str_replace('_', ' ', $key)));$/;"	v
src	library\Zend\View\Helper\Gravatar.php	/^        $src = $this->_getGravatarUrl()$/;"	v
Zend_View_Helper_HeadLink	library\Zend\View\Helper\HeadLink.php	/^class Zend_View_Helper_HeadLink extends Zend_View_Helper_Placeholder_Container_Standalone$/;"	c
action	library\Zend\View\Helper\HeadLink.php	/^            $action = $matches['action'];$/;"	v
argc	library\Zend\View\Helper\HeadLink.php	/^            $argc   = count($args);$/;"	v
attributes	library\Zend\View\Helper\HeadLink.php	/^        $attributes = (array) $item;$/;"	v
attributes	library\Zend\View\Helper\HeadLink.php	/^        $attributes = compact('rel', 'href', 'type', 'title', 'extras');$/;"	v
attributes	library\Zend\View\Helper\HeadLink.php	/^        $attributes = compact('rel', 'type', 'href', 'media', 'conditionalStylesheet', 'extras');$/;"	v
conditionalStylesheet	library\Zend\View\Helper\HeadLink.php	/^                $conditionalStylesheet = (string) $conditionalStylesheet;$/;"	v
conditionalStylesheet	library\Zend\View\Helper\HeadLink.php	/^                $conditionalStylesheet = null;$/;"	v
conditionalStylesheet	library\Zend\View\Helper\HeadLink.php	/^            $conditionalStylesheet = array_shift($args);$/;"	v
conditionalStylesheet	library\Zend\View\Helper\HeadLink.php	/^        $conditionalStylesheet = false;$/;"	v
data	library\Zend\View\Helper\HeadLink.php	/^        $data = (object) $attributes;$/;"	v
dataMethod	library\Zend\View\Helper\HeadLink.php	/^                $dataMethod = 'createData' . $type;$/;"	v
e	library\Zend\View\Helper\HeadLink.php	/^                $e =  new Zend_View_Exception(sprintf('%s requires at least one argument', $method));$/;"	v
e	library\Zend\View\Helper\HeadLink.php	/^            $e = new Zend_View_Exception('append() expects a data token; please use one of the custom append*() methods');$/;"	v
e	library\Zend\View\Helper\HeadLink.php	/^            $e = new Zend_View_Exception('offsetSet() expects a data token; please use one of the custom offsetSet*() methods');$/;"	v
e	library\Zend\View\Helper\HeadLink.php	/^            $e = new Zend_View_Exception('prepend() expects a data token; please use one of the custom prepend*() methods');$/;"	v
e	library\Zend\View\Helper\HeadLink.php	/^            $e = new Zend_View_Exception('set() expects a data token; please use one of the custom set*() methods');$/;"	v
e	library\Zend\View\Helper\HeadLink.php	/^            $e = new Zend_View_Exception(sprintf('Alternate tags require 3 arguments; %s provided', count($args)));$/;"	v
extras	library\Zend\View\Helper\HeadLink.php	/^            $extras = (array) $extras;$/;"	v
extras	library\Zend\View\Helper\HeadLink.php	/^            $extras = array_shift($args);$/;"	v
href	library\Zend\View\Helper\HeadLink.php	/^        $href                  = array_shift($args);$/;"	v
href	library\Zend\View\Helper\HeadLink.php	/^        $href  = (string) $href;$/;"	v
href	library\Zend\View\Helper\HeadLink.php	/^        $href  = array_shift($args);$/;"	v
indent	library\Zend\View\Helper\HeadLink.php	/^        $indent = (null !== $indent)$/;"	v
index	library\Zend\View\Helper\HeadLink.php	/^                    $index = array_shift($args);$/;"	v
index	library\Zend\View\Helper\HeadLink.php	/^            $index  = null;$/;"	v
intersection	library\Zend\View\Helper\HeadLink.php	/^        $intersection = array_intersect($this->_itemKeys, $keys);$/;"	v
item	library\Zend\View\Helper\HeadLink.php	/^                $item       = $this->$dataMethod($args);$/;"	v
item	library\Zend\View\Helper\HeadLink.php	/^                $item = $this->createData($args[0]);$/;"	v
item	library\Zend\View\Helper\HeadLink.php	/^            $item = $this->createData($attributes);$/;"	v
items	library\Zend\View\Helper\HeadLink.php	/^        $items = array();$/;"	v
keys	library\Zend\View\Helper\HeadLink.php	/^        $keys         = array_keys($vars);$/;"	v
link	library\Zend\View\Helper\HeadLink.php	/^            $link = '<!--[if ' . $attributes['conditionalStylesheet'] . ']> ' . $link . '<![endif]-->';$/;"	v
link	library\Zend\View\Helper\HeadLink.php	/^        $link       = '<link ';$/;"	v
media	library\Zend\View\Helper\HeadLink.php	/^                $media = (string) $media;$/;"	v
media	library\Zend\View\Helper\HeadLink.php	/^                $media = implode(',', $media);$/;"	v
media	library\Zend\View\Helper\HeadLink.php	/^            $media = array_shift($args);$/;"	v
media	library\Zend\View\Helper\HeadLink.php	/^        $media                 = 'screen';$/;"	v
rel	library\Zend\View\Helper\HeadLink.php	/^        $rel                   = 'stylesheet';$/;"	v
rel	library\Zend\View\Helper\HeadLink.php	/^        $rel   = 'alternate';$/;"	v
title	library\Zend\View\Helper\HeadLink.php	/^        $title = (string) $title;$/;"	v
title	library\Zend\View\Helper\HeadLink.php	/^        $title = array_shift($args);$/;"	v
type	library\Zend\View\Helper\HeadLink.php	/^            $type   = $matches['type'];$/;"	v
type	library\Zend\View\Helper\HeadLink.php	/^        $type                  = 'text\/css';$/;"	v
type	library\Zend\View\Helper\HeadLink.php	/^        $type  = (string) $type;$/;"	v
type	library\Zend\View\Helper\HeadLink.php	/^        $type  = array_shift($args);$/;"	v
vars	library\Zend\View\Helper\HeadLink.php	/^        $vars         = get_object_vars($value);$/;"	v
Zend_View_Helper_HeadMeta	library\Zend\View\Helper\HeadMeta.php	/^class Zend_View_Helper_HeadMeta extends Zend_View_Helper_Placeholder_Container_Standalone$/;"	c
action	library\Zend\View\Helper\HeadMeta.php	/^            $action = $matches['action'];$/;"	v
action	library\Zend\View\Helper\HeadMeta.php	/^            $action = strtolower($placement);$/;"	v
argc	library\Zend\View\Helper\HeadMeta.php	/^            $argc   = count($args);$/;"	v
container	library\Zend\View\Helper\HeadMeta.php	/^        $container = $this->getContainer();$/;"	v
data	library\Zend\View\Helper\HeadMeta.php	/^        $data            = new stdClass;$/;"	v
e	library\Zend\View\Helper\HeadMeta.php	/^                $e = new Zend_View_Exception('Too few arguments provided; requires key value, and content');$/;"	v
e	library\Zend\View\Helper\HeadMeta.php	/^                $e = new Zend_View_Exception(sprintf('Invalid type "%s" passed to _normalizeType', $type));$/;"	v
e	library\Zend\View\Helper\HeadMeta.php	/^            $e =  new Zend_View_Exception('Invalid value passed to offsetSet; please use offsetSetName() or offsetSetHttpEquiv()');$/;"	v
e	library\Zend\View\Helper\HeadMeta.php	/^            $e = new Zend_View_Exception('Invalid index passed to offsetUnset()');$/;"	v
e	library\Zend\View\Helper\HeadMeta.php	/^            $e = new Zend_View_Exception('Invalid value passed to append; please use appendMeta()');$/;"	v
e	library\Zend\View\Helper\HeadMeta.php	/^            $e = new Zend_View_Exception('Invalid value passed to prepend; please use prependMeta()');$/;"	v
e	library\Zend\View\Helper\HeadMeta.php	/^            $e = new Zend_View_Exception('Invalid value passed to set; please use setMeta()');$/;"	v
e	library\Zend\View\Helper\HeadMeta.php	/^            $e = new Zend_View_Exception(sprintf('Invalid type "%s" provided for meta', $item->type));$/;"	v
indent	library\Zend\View\Helper\HeadMeta.php	/^        $indent = (null !== $indent)$/;"	v
index	library\Zend\View\Helper\HeadMeta.php	/^                    $index = array_shift($args);$/;"	v
index	library\Zend\View\Helper\HeadMeta.php	/^            $index  = null;$/;"	v
item	library\Zend\View\Helper\HeadMeta.php	/^            $item   = $this->createData($keyType, $keyValue, $content, $modifiers);$/;"	v
item	library\Zend\View\Helper\HeadMeta.php	/^            $item  = $this->createData($type, $args[0], $args[1], $args[2]);$/;"	v
item	library\Zend\View\Helper\HeadMeta.php	/^        $item = new stdClass;$/;"	v
items	library\Zend\View\Helper\HeadMeta.php	/^        $items = array();$/;"	v
meta	library\Zend\View\Helper\HeadMeta.php	/^        $meta = sprintf($/;"	v
modifiersString	library\Zend\View\Helper\HeadMeta.php	/^        $modifiersString = '';$/;"	v
tpl	library\Zend\View\Helper\HeadMeta.php	/^                $tpl = '<meta %s="%s" content="%s" %s>';$/;"	v
tpl	library\Zend\View\Helper\HeadMeta.php	/^                $tpl = '<meta %s="%s" content="%s" %s\/>';$/;"	v
tpl	library\Zend\View\Helper\HeadMeta.php	/^                $tpl = ($this->view->doctype()->isXhtml())$/;"	v
tpl	library\Zend\View\Helper\HeadMeta.php	/^            $tpl = '<meta %s="%s" content="%s" %s\/>';$/;"	v
type	library\Zend\View\Helper\HeadMeta.php	/^            $type   = $this->_normalizeType($matches['type']);$/;"	v
type	library\Zend\View\Helper\HeadMeta.php	/^        $type = $item->type;$/;"	v
Zend_View_Helper_HeadScript	library\Zend\View\Helper\HeadScript.php	/^class Zend_View_Helper_HeadScript extends Zend_View_Helper_Placeholder_Container_Standalone$/;"	c
action	library\Zend\View\Helper\HeadScript.php	/^                    $action = $placement . $action;$/;"	v
action	library\Zend\View\Helper\HeadScript.php	/^                    $action = 'append' . $action;$/;"	v
action	library\Zend\View\Helper\HeadScript.php	/^                $action = 'appendScript';$/;"	v
action	library\Zend\View\Helper\HeadScript.php	/^                $action = strtolower($this->_captureType) . 'Script';$/;"	v
action	library\Zend\View\Helper\HeadScript.php	/^            $action    = ucfirst(strtolower($mode));$/;"	v
action	library\Zend\View\Helper\HeadScript.php	/^            $action  = $matches['action'];$/;"	v
attrString	library\Zend\View\Helper\HeadScript.php	/^        $attrString = '';$/;"	v
attrs	library\Zend\View\Helper\HeadScript.php	/^                $attrs = (array) $args[2];$/;"	v
attrs	library\Zend\View\Helper\HeadScript.php	/^            $attrs   = array();$/;"	v
attrs	library\Zend\View\Helper\HeadScript.php	/^        $attrs                     = $this->_captureScriptAttrs;$/;"	v
content	library\Zend\View\Helper\HeadScript.php	/^            $content = $args[0];$/;"	v
content	library\Zend\View\Helper\HeadScript.php	/^        $content                   = ob_get_clean();$/;"	v
data	library\Zend\View\Helper\HeadScript.php	/^        $data             = new stdClass();$/;"	v
e	library\Zend\View\Helper\HeadScript.php	/^                    $e = new Zend_View_Exception(sprintf('Method "%s" requires at least two arguments, an index and source', $method));$/;"	v
e	library\Zend\View\Helper\HeadScript.php	/^                $e = new Zend_View_Exception(sprintf('Method "%s" requires at least one argument', $method));$/;"	v
e	library\Zend\View\Helper\HeadScript.php	/^            $e = new Zend_View_Exception('Invalid argument passed to append(); please use one of the helper methods, appendScript() or appendFile()');$/;"	v
e	library\Zend\View\Helper\HeadScript.php	/^            $e = new Zend_View_Exception('Invalid argument passed to offsetSet(); please use one of the helper methods, offsetSetScript() or offsetSetFile()');$/;"	v
e	library\Zend\View\Helper\HeadScript.php	/^            $e = new Zend_View_Exception('Invalid argument passed to prepend(); please use one of the helper methods, prependScript() or prependFile()');$/;"	v
e	library\Zend\View\Helper\HeadScript.php	/^            $e = new Zend_View_Exception('Invalid argument passed to set(); please use one of the helper methods, setScript() or setFile()');$/;"	v
e	library\Zend\View\Helper\HeadScript.php	/^            $e = new Zend_View_Helper_Placeholder_Container_Exception('Cannot nest headScript captures');$/;"	v
escapeEnd	library\Zend\View\Helper\HeadScript.php	/^        $escapeEnd   = ($useCdata) ? '\/\/]]>'       : '\/\/-->';$/;"	v
escapeStart	library\Zend\View\Helper\HeadScript.php	/^        $escapeStart = ($useCdata) ? '\/\/<![CDATA[' : '\/\/<!--';$/;"	v
html	library\Zend\View\Helper\HeadScript.php	/^            $html = $indent . $html;$/;"	v
html	library\Zend\View\Helper\HeadScript.php	/^            $html = $indent . '<!--[if ' . $item->attributes['conditional'] . ']> ' . $html . '<![endif]-->';$/;"	v
html	library\Zend\View\Helper\HeadScript.php	/^        $html  = '<script type="' . $type . '"' . $attrString . '>';$/;"	v
indent	library\Zend\View\Helper\HeadScript.php	/^        $indent = (null !== $indent)$/;"	v
index	library\Zend\View\Helper\HeadScript.php	/^                $index = array_shift($args);$/;"	v
item	library\Zend\View\Helper\HeadScript.php	/^                        $item = $this->createData($type, $attrs);$/;"	v
item	library\Zend\View\Helper\HeadScript.php	/^                    $item = $this->createData($type, $attrs, $content);$/;"	v
items	library\Zend\View\Helper\HeadScript.php	/^        $items = array();$/;"	v
mode	library\Zend\View\Helper\HeadScript.php	/^            $mode    = strtolower($matches['mode']);$/;"	v
placement	library\Zend\View\Helper\HeadScript.php	/^            $placement = strtolower($placement);$/;"	v
return	library\Zend\View\Helper\HeadScript.php	/^        $return = implode($this->getSeparator(), $items);$/;"	v
type	library\Zend\View\Helper\HeadScript.php	/^                $type = (string) $args[1];$/;"	v
type	library\Zend\View\Helper\HeadScript.php	/^            $type    = 'text\/javascript';$/;"	v
type	library\Zend\View\Helper\HeadScript.php	/^        $type                      = $this->_captureScriptType;$/;"	v
type	library\Zend\View\Helper\HeadScript.php	/^        $type = ($this->_autoEscape) ? $this->_escape($item->type) : $item->type;$/;"	v
useCdata	library\Zend\View\Helper\HeadScript.php	/^            $useCdata = $this->useCdata ? true : false;$/;"	v
useCdata	library\Zend\View\Helper\HeadScript.php	/^            $useCdata = $this->view->doctype()->isXhtml() ? true : false;$/;"	v
value	library\Zend\View\Helper\HeadScript.php	/^                    $value = 'defer';$/;"	v
Zend_View_Helper_HeadStyle	library\Zend\View\Helper\HeadStyle.php	/^class Zend_View_Helper_HeadStyle extends Zend_View_Helper_Placeholder_Container_Standalone$/;"	c
action	library\Zend\View\Helper\HeadStyle.php	/^                    $action = 'appendStyle';$/;"	v
action	library\Zend\View\Helper\HeadStyle.php	/^                    $action = 'prependStyle';$/;"	v
action	library\Zend\View\Helper\HeadStyle.php	/^                    $action = 'setStyle';$/;"	v
action	library\Zend\View\Helper\HeadStyle.php	/^            $action = $matches['action'];$/;"	v
argc	library\Zend\View\Helper\HeadStyle.php	/^            $argc   = count($args);$/;"	v
attrString	library\Zend\View\Helper\HeadStyle.php	/^        $attrString = '';$/;"	v
attrs	library\Zend\View\Helper\HeadStyle.php	/^                $attrs = (array) $args[1];$/;"	v
attrs	library\Zend\View\Helper\HeadStyle.php	/^            $attrs   = array();$/;"	v
attrs	library\Zend\View\Helper\HeadStyle.php	/^        $attrs               = $this->_captureAttrs;$/;"	v
content	library\Zend\View\Helper\HeadStyle.php	/^            $content = $args[0];$/;"	v
content	library\Zend\View\Helper\HeadStyle.php	/^        $content             = ob_get_clean();$/;"	v
data	library\Zend\View\Helper\HeadStyle.php	/^        $data = new stdClass();$/;"	v
e	library\Zend\View\Helper\HeadStyle.php	/^                $e = new Zend_View_Exception(sprintf('Method "%s" requires minimally content for the stylesheet', $method));$/;"	v
e	library\Zend\View\Helper\HeadStyle.php	/^            $e = new Zend_View_Exception('Invalid value passed to append; please use appendStyle()');$/;"	v
e	library\Zend\View\Helper\HeadStyle.php	/^            $e = new Zend_View_Exception('Invalid value passed to offsetSet; please use offsetSetStyle()');$/;"	v
e	library\Zend\View\Helper\HeadStyle.php	/^            $e = new Zend_View_Exception('Invalid value passed to prepend; please use prependStyle()');$/;"	v
e	library\Zend\View\Helper\HeadStyle.php	/^            $e = new Zend_View_Exception('Invalid value passed to set; please use setStyle()');$/;"	v
e	library\Zend\View\Helper\HeadStyle.php	/^            $e = new Zend_View_Helper_Placeholder_Container_Exception('Cannot nest headStyle captures');$/;"	v
enc	library\Zend\View\Helper\HeadStyle.php	/^                $enc = $this->view->getEncoding();$/;"	v
enc	library\Zend\View\Helper\HeadStyle.php	/^            $enc = 'UTF-8';$/;"	v
escapeEnd	library\Zend\View\Helper\HeadStyle.php	/^            $escapeEnd = null;$/;"	v
escapeEnd	library\Zend\View\Helper\HeadStyle.php	/^        $escapeEnd = $indent . '-->'. PHP_EOL;$/;"	v
escapeStart	library\Zend\View\Helper\HeadStyle.php	/^            $escapeStart = null;$/;"	v
escapeStart	library\Zend\View\Helper\HeadStyle.php	/^        $escapeStart = $indent . '<!--'. PHP_EOL;$/;"	v
html	library\Zend\View\Helper\HeadStyle.php	/^            $html = '<!--[if ' . $item->attributes['conditional'] . ']> ' . $html . '<![endif]-->';$/;"	v
html	library\Zend\View\Helper\HeadStyle.php	/^        $html = '<style type="text\/css"' . $attrString . '>' . PHP_EOL$/;"	v
indent	library\Zend\View\Helper\HeadStyle.php	/^        $indent = (null !== $indent)$/;"	v
index	library\Zend\View\Helper\HeadStyle.php	/^                    $index = array_shift($args);$/;"	v
index	library\Zend\View\Helper\HeadStyle.php	/^            $index  = null;$/;"	v
item	library\Zend\View\Helper\HeadStyle.php	/^            $item = $this->createData($content, $attrs);$/;"	v
items	library\Zend\View\Helper\HeadStyle.php	/^        $items = array();$/;"	v
media_types	library\Zend\View\Helper\HeadStyle.php	/^                        $media_types = explode(',', $value);$/;"	v
return	library\Zend\View\Helper\HeadStyle.php	/^        $return = $indent . implode($this->getSeparator() . $indent, $items);$/;"	v
return	library\Zend\View\Helper\HeadStyle.php	/^        $return = preg_replace("\/(\\r\\n?|\\n)\/", '$1' . $indent, $return);$/;"	v
type	library\Zend\View\Helper\HeadStyle.php	/^                            $type = trim($type);$/;"	v
value	library\Zend\View\Helper\HeadStyle.php	/^                        $value = '';$/;"	v
value	library\Zend\View\Helper\HeadStyle.php	/^                        $value = substr($value, 0, -1);$/;"	v
Zend_View_Helper_HeadTitle	library\Zend\View\Helper\HeadTitle.php	/^class Zend_View_Helper_HeadTitle extends Zend_View_Helper_Placeholder_Container_Standalone$/;"	c
e	library\Zend\View\Helper\HeadTitle.php	/^            $e = new Zend_View_Exception("You must set an instance of Zend_Translate or Zend_Translate_Adapter");$/;"	v
indent	library\Zend\View\Helper\HeadTitle.php	/^        $indent = (null !== $indent)$/;"	v
items	library\Zend\View\Helper\HeadTitle.php	/^        $items = array();$/;"	v
output	library\Zend\View\Helper\HeadTitle.php	/^        $output = '';$/;"	v
output	library\Zend\View\Helper\HeadTitle.php	/^        $output = ($this->_autoEscape) ? $this->_escape($output) : $output;$/;"	v
separator	library\Zend\View\Helper\HeadTitle.php	/^        $separator = $this->getSeparator();$/;"	v
setType	library\Zend\View\Helper\HeadTitle.php	/^            $setType = (null === $this->getDefaultAttachOrder())$/;"	v
title	library\Zend\View\Helper\HeadTitle.php	/^        $title = (string) $title;$/;"	v
doctype	library\Zend\View\Helper\HtmlElement.php	/^        $doctype = $this->view->doctype();$/;"	v
key	library\Zend\View\Helper\HtmlElement.php	/^            $key = $this->view->escape($key);$/;"	v
val	library\Zend\View\Helper\HtmlElement.php	/^                    $val = Zend_Json::encode($val);$/;"	v
val	library\Zend\View\Helper\HtmlElement.php	/^                    $val = implode(' ', $val);$/;"	v
val	library\Zend\View\Helper\HtmlElement.php	/^                $val = $this->_normalizeId($val);$/;"	v
val	library\Zend\View\Helper\HtmlElement.php	/^                $val = $this->view->escape($val);$/;"	v
val	library\Zend\View\Helper\HtmlElement.php	/^                $val = preg_replace('\/"([^"]*)":\/', '$1:', $val);$/;"	v
value	library\Zend\View\Helper\HtmlElement.php	/^                $value = substr($value, 0, strlen($value) - 2);$/;"	v
value	library\Zend\View\Helper\HtmlElement.php	/^            $value = str_replace('[', '-', $value);$/;"	v
value	library\Zend\View\Helper\HtmlElement.php	/^            $value = str_replace('][', '-', $value);$/;"	v
value	library\Zend\View\Helper\HtmlElement.php	/^            $value = trim($value, ']');$/;"	v
xhtml	library\Zend\View\Helper\HtmlElement.php	/^        $xhtml = '';$/;"	v
Zend_View_Helper_HtmlFlash	library\Zend\View\Helper\HtmlFlash.php	/^class Zend_View_Helper_HtmlFlash extends Zend_View_Helper_HtmlObject$/;"	c
params	library\Zend\View\Helper\HtmlFlash.php	/^        $params = array_merge(array('movie'   => $data,$/;"	v
Zend_View_Helper_HtmlList	library\Zend\View\Helper\HtmlList.php	/^class Zend_View_Helper_HtmlList extends Zend_View_Helper_FormElement$/;"	c
attribs	library\Zend\View\Helper\HtmlList.php	/^            $attribs = $this->_htmlAttribs($attribs);$/;"	v
attribs	library\Zend\View\Helper\HtmlList.php	/^            $attribs = '';$/;"	v
e	library\Zend\View\Helper\HtmlList.php	/^            $e = new Zend_View_Exception('First param must be an array');$/;"	v
item	library\Zend\View\Helper\HtmlList.php	/^                    $item = $this->view->escape($item);$/;"	v
list	library\Zend\View\Helper\HtmlList.php	/^                    $list = substr($list, 0, strlen($list) - 6)$/;"	v
list	library\Zend\View\Helper\HtmlList.php	/^        $list = '';$/;"	v
tag	library\Zend\View\Helper\HtmlList.php	/^            $tag = 'ol';$/;"	v
tag	library\Zend\View\Helper\HtmlList.php	/^        $tag = 'ul';$/;"	v
Zend_View_Helper_HtmlObject	library\Zend\View\Helper\HtmlObject.php	/^class Zend_View_Helper_HtmlObject extends Zend_View_Helper_HtmlElement$/;"	c
attribs	library\Zend\View\Helper\HtmlObject.php	/^        $attribs = array_merge(array('data' => $data,$/;"	v
closingBracket	library\Zend\View\Helper\HtmlObject.php	/^        $closingBracket = $this->getClosingBracket();$/;"	v
content	library\Zend\View\Helper\HtmlObject.php	/^            $content = implode(self::EOL, $content);$/;"	v
options	library\Zend\View\Helper\HtmlObject.php	/^                $options = array('value' => $options);$/;"	v
options	library\Zend\View\Helper\HtmlObject.php	/^            $options = array_merge(array('name' => $param), $options);$/;"	v
paramHtml	library\Zend\View\Helper\HtmlObject.php	/^        $paramHtml = array();$/;"	v
xhtml	library\Zend\View\Helper\HtmlObject.php	/^        $xhtml = '<object' . $this->_htmlAttribs($attribs) . '>' . self::EOL$/;"	v
Zend_View_Helper_HtmlPage	library\Zend\View\Helper\HtmlPage.php	/^class Zend_View_Helper_HtmlPage extends Zend_View_Helper_HtmlObject$/;"	c
attribs	library\Zend\View\Helper\HtmlPage.php	/^        $attribs = array_merge($this->_attribs, $attribs);$/;"	v
params	library\Zend\View\Helper\HtmlPage.php	/^        $params = array_merge(array('data' => $data), $params);$/;"	v
Zend_View_Helper_HtmlQuicktime	library\Zend\View\Helper\HtmlQuicktime.php	/^class Zend_View_Helper_HtmlQuicktime extends Zend_View_Helper_HtmlObject$/;"	c
attribs	library\Zend\View\Helper\HtmlQuicktime.php	/^        $attribs = array_merge($this->_attribs, $attribs);$/;"	v
params	library\Zend\View\Helper\HtmlQuicktime.php	/^        $params = array_merge(array('src' => $data), $params);$/;"	v
Zend_View_Helper_InlineScript	library\Zend\View\Helper\InlineScript.php	/^class Zend_View_Helper_InlineScript extends Zend_View_Helper_HeadScript$/;"	c
Zend_View_Helper_Json	library\Zend\View\Helper\Json.php	/^class Zend_View_Helper_Json extends Zend_View_Helper_Abstract$/;"	c
data	library\Zend\View\Helper\Json.php	/^        $data = Zend_Json::encode($data, null, $options);$/;"	v
keepLayouts	library\Zend\View\Helper\Json.php	/^            $keepLayouts = (array_key_exists('keepLayouts', $keepLayouts))$/;"	v
layout	library\Zend\View\Helper\Json.php	/^            $layout = Zend_Layout::getMvcInstance();$/;"	v
options	library\Zend\View\Helper\Json.php	/^            $options     = $keepLayouts;$/;"	v
options	library\Zend\View\Helper\Json.php	/^        $options = array();$/;"	v
response	library\Zend\View\Helper\Json.php	/^        $response = Zend_Controller_Front::getInstance()->getResponse();$/;"	v
Zend_View_Helper_Layout	library\Zend\View\Helper\Layout.php	/^class Zend_View_Helper_Layout extends Zend_View_Helper_Abstract$/;"	c
Zend_View_Helper_Navigation	library\Zend\View\Helper\Navigation.php	/^class Zend_View_Helper_Navigation$/;"	c
e	library\Zend\View\Helper\Navigation.php	/^                $e = new Zend_View_Exception(sprintf($/;"	v
helper	library\Zend\View\Helper\Navigation.php	/^                $helper = $this->view->getHelper($proxy);$/;"	v
helper	library\Zend\View\Helper\Navigation.php	/^            $helper = $this->view->getHelper($proxy);$/;"	v
helper	library\Zend\View\Helper\Navigation.php	/^        $helper = $this->findHelper($this->getDefaultProxy());$/;"	v
Zend_View_Helper_Navigation_Breadcrumbs	library\Zend\View\Helper\Navigation\Breadcrumbs.php	/^class Zend_View_Helper_Navigation_Breadcrumbs$/;"	c
active	library\Zend\View\Helper\Navigation\Breadcrumbs.php	/^                $active = $parent;$/;"	v
active	library\Zend\View\Helper\Navigation\Breadcrumbs.php	/^            $active = $active['page'];$/;"	v
active	library\Zend\View\Helper\Navigation\Breadcrumbs.php	/^            $active = $parent;$/;"	v
active	library\Zend\View\Helper\Navigation\Breadcrumbs.php	/^        $active = $active['page'];$/;"	v
container	library\Zend\View\Helper\Navigation\Breadcrumbs.php	/^            $container = $this->getContainer();$/;"	v
e	library\Zend\View\Helper\Navigation\Breadcrumbs.php	/^                $e = new Zend_View_Exception($/;"	v
e	library\Zend\View\Helper\Navigation\Breadcrumbs.php	/^            $e = new Zend_View_Exception($/;"	v
html	library\Zend\View\Helper\Navigation\Breadcrumbs.php	/^                $html = $t->translate($html);$/;"	v
html	library\Zend\View\Helper\Navigation\Breadcrumbs.php	/^                $html = $this->htmlify($parent)$/;"	v
html	library\Zend\View\Helper\Navigation\Breadcrumbs.php	/^            $html = $active->getLabel();$/;"	v
html	library\Zend\View\Helper\Navigation\Breadcrumbs.php	/^            $html = $this->htmlify($active);$/;"	v
html	library\Zend\View\Helper\Navigation\Breadcrumbs.php	/^            $html = $this->view->escape($html);$/;"	v
model	library\Zend\View\Helper\Navigation\Breadcrumbs.php	/^        $model = array('pages' => array());$/;"	v
partial	library\Zend\View\Helper\Navigation\Breadcrumbs.php	/^                                  $partial = null)$/;"	v
partial	library\Zend\View\Helper\Navigation\Breadcrumbs.php	/^            $partial = $this->getPartial();$/;"	v
accept	library\Zend\View\Helper\Navigation\HelperAbstract.php	/^                $accept = $this->accept($parent, true);$/;"	v
accept	library\Zend\View\Helper\Navigation\HelperAbstract.php	/^            $accept = false;$/;"	v
accept	library\Zend\View\Helper\Navigation\HelperAbstract.php	/^        $accept = true;$/;"	v
attribs	library\Zend\View\Helper\Navigation\HelperAbstract.php	/^        $attribs = array($/;"	v
currDepth	library\Zend\View\Helper\Navigation\HelperAbstract.php	/^            $currDepth = $iterator->getDepth();$/;"	v
e	library\Zend\View\Helper\Navigation\HelperAbstract.php	/^            $e = new Zend_View_Exception(sprintf($/;"	v
found	library\Zend\View\Helper\Navigation\HelperAbstract.php	/^                    $found = null;$/;"	v
found	library\Zend\View\Helper\Navigation\HelperAbstract.php	/^                $found = $found->getParent();$/;"	v
found	library\Zend\View\Helper\Navigation\HelperAbstract.php	/^                $found = $page;$/;"	v
found	library\Zend\View\Helper\Navigation\HelperAbstract.php	/^        $found  = null;$/;"	v
foundDepth	library\Zend\View\Helper\Navigation\HelperAbstract.php	/^                $foundDepth = $currDepth;$/;"	v
foundDepth	library\Zend\View\Helper\Navigation\HelperAbstract.php	/^        $foundDepth = -1;$/;"	v
indent	library\Zend\View\Helper\Navigation\HelperAbstract.php	/^            $indent = str_repeat(' ', $indent);$/;"	v
iterator	library\Zend\View\Helper\Navigation\HelperAbstract.php	/^        $iterator = new RecursiveIteratorIterator($container,$/;"	v
label	library\Zend\View\Helper\Navigation\HelperAbstract.php	/^                $label = $t->translate($label);$/;"	v
label	library\Zend\View\Helper\Navigation\HelperAbstract.php	/^        $label = $page->getLabel();$/;"	v
maxDepth	library\Zend\View\Helper\Navigation\HelperAbstract.php	/^                               $maxDepth = -1)$/;"	v
maxDepth	library\Zend\View\Helper\Navigation\HelperAbstract.php	/^            $maxDepth = $this->getMaxDepth();$/;"	v
minDepth	library\Zend\View\Helper\Navigation\HelperAbstract.php	/^                               $minDepth = null,$/;"	v
minDepth	library\Zend\View\Helper\Navigation\HelperAbstract.php	/^            $minDepth = $this->getMinDepth();$/;"	v
msg	library\Zend\View\Helper\Navigation\HelperAbstract.php	/^            $msg = get_class($e) . ': ' . $e->getMessage();$/;"	v
nav	library\Zend\View\Helper\Navigation\HelperAbstract.php	/^                $nav = Zend_Registry::get('Zend_Navigation');$/;"	v
parent	library\Zend\View\Helper\Navigation\HelperAbstract.php	/^            $parent = $page->getParent();$/;"	v
prefix	library\Zend\View\Helper\Navigation\HelperAbstract.php	/^        $prefix = get_class($this);$/;"	v
prefix	library\Zend\View\Helper\Navigation\HelperAbstract.php	/^        $prefix = strtolower(trim(substr($prefix, strrpos($prefix, '_')), '_'));$/;"	v
privilege	library\Zend\View\Helper\Navigation\HelperAbstract.php	/^        $privilege = $page->getPrivilege();$/;"	v
resource	library\Zend\View\Helper\Navigation\HelperAbstract.php	/^        $resource = $page->getResource();$/;"	v
role	library\Zend\View\Helper\Navigation\HelperAbstract.php	/^        $role = $this->getRole();$/;"	v
title	library\Zend\View\Helper\Navigation\HelperAbstract.php	/^                $title = $t->translate($title);$/;"	v
title	library\Zend\View\Helper\Navigation\HelperAbstract.php	/^        $title = $page->getTitle();$/;"	v
Zend_View_Helper_Navigation_Links	library\Zend\View\Helper\Navigation\Links.php	/^class Zend_View_Helper_Navigation_Links$/;"	c
active	library\Zend\View\Helper\Navigation\Links.php	/^            $active = $active['page'];$/;"	v
attrib	library\Zend\View\Helper\Navigation\Links.php	/^            $attrib  => $relation,$/;"	v
attribs	library\Zend\View\Helper\Navigation\Links.php	/^        $attribs = array($/;"	v
break	library\Zend\View\Helper\Navigation\Links.php	/^                $break = true;$/;"	v
break	library\Zend\View\Helper\Navigation\Links.php	/^        $break = false;$/;"	v
container	library\Zend\View\Helper\Navigation\Links.php	/^            $container = $this->getContainer();$/;"	v
e	library\Zend\View\Helper\Navigation\Links.php	/^            $e = new Zend_View_Exception(sprintf($/;"	v
flag	library\Zend\View\Helper\Navigation\Links.php	/^                                     $flag = null)$/;"	v
flag	library\Zend\View\Helper\Navigation\Links.php	/^            $flag = self::RENDER_ALL;$/;"	v
found	library\Zend\View\Helper\Navigation\Links.php	/^                        $found = $parent;$/;"	v
found	library\Zend\View\Helper\Navigation\Links.php	/^                        $found = array($found);$/;"	v
found	library\Zend\View\Helper\Navigation\Links.php	/^                $found = $intermediate;$/;"	v
found	library\Zend\View\Helper\Navigation\Links.php	/^                $found = $parent;$/;"	v
found	library\Zend\View\Helper\Navigation\Links.php	/^                $found = $prev;$/;"	v
found	library\Zend\View\Helper\Navigation\Links.php	/^            $found = $found->current();$/;"	v
found	library\Zend\View\Helper\Navigation\Links.php	/^            $found = $this->$method($page);$/;"	v
found	library\Zend\View\Helper\Navigation\Links.php	/^            $found = null;$/;"	v
found	library\Zend\View\Helper\Navigation\Links.php	/^        $found = $this->_findRoot($page);$/;"	v
found	library\Zend\View\Helper\Navigation\Links.php	/^        $found = array();$/;"	v
found	library\Zend\View\Helper\Navigation\Links.php	/^        $found = null;$/;"	v
indent	library\Zend\View\Helper\Navigation\Links.php	/^        $indent = $this->getIndent();$/;"	v
iterator	library\Zend\View\Helper\Navigation\Links.php	/^        $iterator = new RecursiveIteratorIterator($/;"	v
iterator	library\Zend\View\Helper\Navigation\Links.php	/^        $iterator = new RecursiveIteratorIterator($this->_findRoot($page),$/;"	v
meth	library\Zend\View\Helper\Navigation\Links.php	/^            $meth = 'getDefined' . ucfirst($rel);$/;"	v
method	library\Zend\View\Helper\Navigation\Links.php	/^        $method = 'get' . ucfirst($rel);$/;"	v
method	library\Zend\View\Helper\Navigation\Links.php	/^        $method = 'search' . ucfirst($rel) . ucfirst($type);$/;"	v
native	library\Zend\View\Helper\Navigation\Links.php	/^        $native = array_values(self::$_RELATIONS);$/;"	v
output	library\Zend\View\Helper\Navigation\Links.php	/^        $output = '';$/;"	v
page	library\Zend\View\Helper\Navigation\Links.php	/^                    $page = Zend_Navigation_Page::factory($mixed);$/;"	v
page	library\Zend\View\Helper\Navigation\Links.php	/^                $page = $parent;$/;"	v
pages	library\Zend\View\Helper\Navigation\Links.php	/^                $pages = array();$/;"	v
prev	library\Zend\View\Helper\Navigation\Links.php	/^            $prev = $intermediate;$/;"	v
prev	library\Zend\View\Helper\Navigation\Links.php	/^        $prev = null;$/;"	v
relFlag	library\Zend\View\Helper\Navigation\Links.php	/^                    $relFlag = self::RENDER_CUSTOM;$/;"	v
result	library\Zend\View\Helper\Navigation\Links.php	/^                    $result = array($result);$/;"	v
result	library\Zend\View\Helper\Navigation\Links.php	/^            $result = $this->_findFromSearch($page, $rel, $type);$/;"	v
result	library\Zend\View\Helper\Navigation\Links.php	/^        $result = $this->findAllRelations($active, $this->getRenderFlag());$/;"	v
result	library\Zend\View\Helper\Navigation\Links.php	/^        $result = array('rel' => array(), 'rev' => array());$/;"	v
root	library\Zend\View\Helper\Navigation\Links.php	/^                $root = $this->_findRoot($page);$/;"	v
root	library\Zend\View\Helper\Navigation\Links.php	/^            $root = $parent;$/;"	v
root	library\Zend\View\Helper\Navigation\Links.php	/^        $root = $page;$/;"	v
root	library\Zend\View\Helper\Navigation\Links.php	/^        $root = $this->_findRoot($page);$/;"	v
start	library\Zend\View\Helper\Navigation\Links.php	/^            $start = array($start);$/;"	v
start	library\Zend\View\Helper\Navigation\Links.php	/^        $start = $this->findRelation($page, 'rel', 'start');$/;"	v
types	library\Zend\View\Helper\Navigation\Links.php	/^            $types = array_merge($native, array_diff($page->$meth(), $native));$/;"	v
Zend_View_Helper_Navigation_Menu	library\Zend\View\Helper\Navigation\Menu.php	/^class Zend_View_Helper_Navigation_Menu$/;"	c
accept	library\Zend\View\Helper\Navigation\Menu.php	/^                            $accept = true;$/;"	v
accept	library\Zend\View\Helper\Navigation\Menu.php	/^                        $accept = true;$/;"	v
accept	library\Zend\View\Helper\Navigation\Menu.php	/^                $accept = false;$/;"	v
attribs	library\Zend\View\Helper\Navigation\Menu.php	/^        $attribs = array($/;"	v
container	library\Zend\View\Helper\Navigation\Menu.php	/^            $container = $this->getContainer();$/;"	v
depth	library\Zend\View\Helper\Navigation\Menu.php	/^            $depth = $iterator->getDepth();$/;"	v
e	library\Zend\View\Helper\Navigation\Menu.php	/^                $e = new Zend_View_Exception($/;"	v
e	library\Zend\View\Helper\Navigation\Menu.php	/^            $e = new Zend_View_Exception($/;"	v
element	library\Zend\View\Helper\Navigation\Menu.php	/^            $element = 'a';$/;"	v
element	library\Zend\View\Helper\Navigation\Menu.php	/^            $element = 'span';$/;"	v
foundDepth	library\Zend\View\Helper\Navigation\Menu.php	/^            $foundDepth = $found['depth'];$/;"	v
foundPage	library\Zend\View\Helper\Navigation\Menu.php	/^            $foundPage = $found['page'];$/;"	v
foundPage	library\Zend\View\Helper\Navigation\Menu.php	/^            $foundPage = null;$/;"	v
html	library\Zend\View\Helper\Navigation\Menu.php	/^            $html = $this->_renderDeepestMenu($container,$/;"	v
html	library\Zend\View\Helper\Navigation\Menu.php	/^            $html = $this->_renderMenu($container,$/;"	v
html	library\Zend\View\Helper\Navigation\Menu.php	/^            $html = rtrim($html, self::EOL);$/;"	v
html	library\Zend\View\Helper\Navigation\Menu.php	/^        $html = $indent . '<ul' . $ulClass . '>' . self::EOL;$/;"	v
html	library\Zend\View\Helper\Navigation\Menu.php	/^        $html = '';$/;"	v
ind	library\Zend\View\Helper\Navigation\Menu.php	/^                    $ind = $indent . str_repeat('        ', $i);$/;"	v
indent	library\Zend\View\Helper\Navigation\Menu.php	/^                                  $indent = null)$/;"	v
isActive	library\Zend\View\Helper\Navigation\Menu.php	/^            $isActive = $page->isActive(true);$/;"	v
iterator	library\Zend\View\Helper\Navigation\Menu.php	/^        $iterator = new RecursiveIteratorIterator($container,$/;"	v
label	library\Zend\View\Helper\Navigation\Menu.php	/^                $label = $t->translate($label);$/;"	v
label	library\Zend\View\Helper\Navigation\Menu.php	/^        $label = $page->getLabel();$/;"	v
liClass	library\Zend\View\Helper\Navigation\Menu.php	/^            $liClass = $isActive ? ' class="active"' : '';$/;"	v
liClass	library\Zend\View\Helper\Navigation\Menu.php	/^            $liClass = $subPage->isActive(true) ? ' class="active"' : '';$/;"	v
model	library\Zend\View\Helper\Navigation\Menu.php	/^        $model = array($/;"	v
myIndent	library\Zend\View\Helper\Navigation\Menu.php	/^                $myIndent = $indent . str_repeat('        ', $i-1);$/;"	v
myIndent	library\Zend\View\Helper\Navigation\Menu.php	/^            $myIndent = $indent . str_repeat('        ', $depth);$/;"	v
options	library\Zend\View\Helper\Navigation\Menu.php	/^        $options = $this->_normalizeOptions($options);$/;"	v
partial	library\Zend\View\Helper\Navigation\Menu.php	/^                                  $partial = null)$/;"	v
partial	library\Zend\View\Helper\Navigation\Menu.php	/^            $partial = $this->getPartial();$/;"	v
prevDepth	library\Zend\View\Helper\Navigation\Menu.php	/^            $prevDepth = $depth;$/;"	v
prevDepth	library\Zend\View\Helper\Navigation\Menu.php	/^        $prevDepth = -1;$/;"	v
title	library\Zend\View\Helper\Navigation\Menu.php	/^                $title = $t->translate($title);$/;"	v
title	library\Zend\View\Helper\Navigation\Menu.php	/^        $title = $page->getTitle();$/;"	v
ulClass	library\Zend\View\Helper\Navigation\Menu.php	/^                                  $ulClass = null,$/;"	v
ulClass	library\Zend\View\Helper\Navigation\Menu.php	/^                    $ulClass = ' class="' . $ulClass . '"';$/;"	v
ulClass	library\Zend\View\Helper\Navigation\Menu.php	/^                    $ulClass = '';$/;"	v
ulClass	library\Zend\View\Helper\Navigation\Menu.php	/^        $ulClass = $ulClass ? ' class="' . $ulClass . '"' : '';$/;"	v
Zend_View_Helper_Navigation_Sitemap	library\Zend\View\Helper\Navigation\Sitemap.php	/^class Zend_View_Helper_Navigation_Sitemap$/;"	c
changefreq	library\Zend\View\Helper\Navigation\Sitemap.php	/^                $changefreq = $page->changefreq;$/;"	v
changefreqValidator	library\Zend\View\Helper\Navigation\Sitemap.php	/^            $changefreqValidator = new Zend_Validate_Sitemap_Changefreq();$/;"	v
container	library\Zend\View\Helper\Navigation\Sitemap.php	/^            $container = $this->getContainer();$/;"	v
dom	library\Zend\View\Helper\Navigation\Sitemap.php	/^        $dom = $this->getDomSitemap($container);$/;"	v
dom	library\Zend\View\Helper\Navigation\Sitemap.php	/^        $dom = new DOMDocument('1.0', 'UTF-8');$/;"	v
e	library\Zend\View\Helper\Navigation\Sitemap.php	/^                $e = new Zend_View_Exception(sprintf($/;"	v
e	library\Zend\View\Helper\Navigation\Sitemap.php	/^            $e = new Zend_Uri_Exception(sprintf($/;"	v
enc	library\Zend\View\Helper\Navigation\Sitemap.php	/^            $enc = $this->view->getEncoding();$/;"	v
enc	library\Zend\View\Helper\Navigation\Sitemap.php	/^        $enc = 'UTF-8';$/;"	v
href	library\Zend\View\Helper\Navigation\Sitemap.php	/^        $href = $page->getHref();$/;"	v
iterator	library\Zend\View\Helper\Navigation\Sitemap.php	/^        $iterator = new RecursiveIteratorIterator($container,$/;"	v
lastmod	library\Zend\View\Helper\Navigation\Sitemap.php	/^                    $lastmod = date('c', $lastmod);$/;"	v
lastmod	library\Zend\View\Helper\Navigation\Sitemap.php	/^                $lastmod = strtotime((string) $page->lastmod);$/;"	v
lastmodValidator	library\Zend\View\Helper\Navigation\Sitemap.php	/^            $lastmodValidator    = new Zend_Validate_Sitemap_Lastmod();$/;"	v
locValidator	library\Zend\View\Helper\Navigation\Sitemap.php	/^            $locValidator        = new Zend_Validate_Sitemap_Loc();$/;"	v
maxDepth	library\Zend\View\Helper\Navigation\Sitemap.php	/^        $maxDepth = $this->getMaxDepth();$/;"	v
minDepth	library\Zend\View\Helper\Navigation\Sitemap.php	/^            $minDepth = 0;$/;"	v
minDepth	library\Zend\View\Helper\Navigation\Sitemap.php	/^        $minDepth = $this->getMinDepth();$/;"	v
priority	library\Zend\View\Helper\Navigation\Sitemap.php	/^                $priority = $page->priority;$/;"	v
priorityValidator	library\Zend\View\Helper\Navigation\Sitemap.php	/^            $priorityValidator   = new Zend_Validate_Sitemap_Priority();$/;"	v
string	library\Zend\View\Helper\Navigation\Sitemap.php	/^            $string = preg_replace('\/&(?!(?:#\\d++|[a-z]++);)\/ui', '&amp;', $string);$/;"	v
string	library\Zend\View\Helper\Navigation\Sitemap.php	/^            $string = str_replace(array('<', '>', '\\'', '"'), array('&lt;', '&gt;', '&#39;', '&quot;'), $string);$/;"	v
uri	library\Zend\View\Helper\Navigation\Sitemap.php	/^        $uri = Zend_Uri::factory($serverUrl);$/;"	v
url	library\Zend\View\Helper\Navigation\Sitemap.php	/^            $url = $this->getServerUrl() . $href;$/;"	v
url	library\Zend\View\Helper\Navigation\Sitemap.php	/^            $url = $this->getServerUrl()$/;"	v
url	library\Zend\View\Helper\Navigation\Sitemap.php	/^            $url = (string) $href;$/;"	v
urlNode	library\Zend\View\Helper\Navigation\Sitemap.php	/^            $urlNode = $dom->createElementNS(self::SITEMAP_NS, 'url');$/;"	v
urlSet	library\Zend\View\Helper\Navigation\Sitemap.php	/^        $urlSet = $dom->createElementNS(self::SITEMAP_NS, 'urlset');$/;"	v
xml	library\Zend\View\Helper\Navigation\Sitemap.php	/^        $xml = $this->getUseXmlDeclaration() ?$/;"	v
Zend_View_Helper_PaginationControl	library\Zend\View\Helper\PaginationControl.php	/^class Zend_View_Helper_PaginationControl$/;"	c
e	library\Zend\View\Helper\PaginationControl.php	/^                $e = new Zend_View_Exception('A view partial supplied as an array must contain two values: the filename and its module');$/;"	v
e	library\Zend\View\Helper\PaginationControl.php	/^                $e = new Zend_View_Exception('No paginator instance provided or incorrect type');$/;"	v
e	library\Zend\View\Helper\PaginationControl.php	/^                $e = new Zend_View_Exception('No view partial provided and no default set');$/;"	v
pages	library\Zend\View\Helper\PaginationControl.php	/^            $pages = array_merge($pages, (array) $params);$/;"	v
pages	library\Zend\View\Helper\PaginationControl.php	/^        $pages = get_object_vars($paginator->getPages($scrollingStyle));$/;"	v
paginator	library\Zend\View\Helper\PaginationControl.php	/^                $paginator = $this->view->paginator;$/;"	v
partial	library\Zend\View\Helper\PaginationControl.php	/^            $partial = $partial[0];$/;"	v
partial	library\Zend\View\Helper\PaginationControl.php	/^            $partial = self::$_defaultViewPartial;$/;"	v
Zend_View_Helper_Partial	library\Zend\View\Helper\Partial.php	/^class Zend_View_Helper_Partial extends Zend_View_Helper_Abstract$/;"	c
e	library\Zend\View\Helper\Partial.php	/^                $e = new Zend_View_Helper_Partial_Exception('Cannot render partial; module does not exist');$/;"	v
model	library\Zend\View\Helper\Partial.php	/^            $model = $module;$/;"	v
moduleDir	library\Zend\View\Helper\Partial.php	/^            $moduleDir = Zend_Controller_Front::getInstance()->getControllerDirectory($module);$/;"	v
view	library\Zend\View\Helper\Partial.php	/^        $view = $this->cloneView();$/;"	v
view	library\Zend\View\Helper\Partial.php	/^        $view = clone $this->view;$/;"	v
viewsDir	library\Zend\View\Helper\Partial.php	/^            $viewsDir = dirname($moduleDir) . '\/views';$/;"	v
Zend_View_Helper_PartialLoop	library\Zend\View\Helper\PartialLoop.php	/^class Zend_View_Helper_PartialLoop extends Zend_View_Helper_Partial$/;"	c
content	library\Zend\View\Helper\PartialLoop.php	/^        $content = '';$/;"	v
e	library\Zend\View\Helper\PartialLoop.php	/^            $e = new Zend_View_Helper_Partial_Exception('PartialLoop helper requires iterable data');$/;"	v
model	library\Zend\View\Helper\PartialLoop.php	/^            $model  = $module;$/;"	v
model	library\Zend\View\Helper\PartialLoop.php	/^            $model = $model->toArray();$/;"	v
module	library\Zend\View\Helper\PartialLoop.php	/^            $module = null;$/;"	v
Zend_View_Helper_Partial_Exception	library\Zend\View\Helper\Partial\Exception.php	/^class Zend_View_Helper_Partial_Exception extends Zend_View_Exception$/;"	c
Zend_View_Helper_Placeholder	library\Zend\View\Helper\Placeholder.php	/^class Zend_View_Helper_Placeholder extends Zend_View_Helper_Abstract$/;"	c
name	library\Zend\View\Helper\Placeholder.php	/^        $name = (string) $name;$/;"	v
Zend_View_Helper_Placeholder_Container	library\Zend\View\Helper\Placeholder\Container.php	/^class Zend_View_Helper_Placeholder_Container extends Zend_View_Helper_Placeholder_Container_Abstract$/;"	c
array	library\Zend\View\Helper\Placeholder\Container\Abstract.php	/^                    $array  = array($key => $data);$/;"	v
array	library\Zend\View\Helper\Placeholder\Container\Abstract.php	/^        $array = $this->getArrayCopy();$/;"	v
data	library\Zend\View\Helper\Placeholder\Container\Abstract.php	/^        $data               = ob_get_clean();$/;"	v
e	library\Zend\View\Helper\Placeholder\Container\Abstract.php	/^            $e = new Zend_View_Helper_Placeholder_Container_Exception('Cannot nest placeholder captures for the same placeholder');$/;"	v
final	library\Zend\View\Helper\Placeholder\Container\Abstract.php	/^                    $final  = $array + $values;$/;"	v
indent	library\Zend\View\Helper\Placeholder\Container\Abstract.php	/^            $indent = str_repeat(' ', $indent);$/;"	v
indent	library\Zend\View\Helper\Placeholder\Container\Abstract.php	/^        $indent = ($indent !== null)$/;"	v
items	library\Zend\View\Helper\Placeholder\Container\Abstract.php	/^        $items  = $this->getArrayCopy();$/;"	v
key	library\Zend\View\Helper\Placeholder\Container\Abstract.php	/^            $key  = array_shift($keys);$/;"	v
key	library\Zend\View\Helper\Placeholder\Container\Abstract.php	/^            $key = $this->_captureKey;$/;"	v
key	library\Zend\View\Helper\Placeholder\Container\Abstract.php	/^        $key                = null;$/;"	v
keys	library\Zend\View\Helper\Placeholder\Container\Abstract.php	/^            $keys = $this->getKeys();$/;"	v
keys	library\Zend\View\Helper\Placeholder\Container\Abstract.php	/^        $keys = $this->getKeys();$/;"	v
return	library\Zend\View\Helper\Placeholder\Container\Abstract.php	/^        $return = $indent$/;"	v
return	library\Zend\View\Helper\Placeholder\Container\Abstract.php	/^        $return = preg_replace("\/(\\r\\n?|\\n)\/", '$1' . $indent, $return);$/;"	v
values	library\Zend\View\Helper\Placeholder\Container\Abstract.php	/^                    $values = $this->getArrayCopy();$/;"	v
values	library\Zend\View\Helper\Placeholder\Container\Abstract.php	/^        $values = $this->getArrayCopy();$/;"	v
Zend_View_Helper_Placeholder_Container_Exception	library\Zend\View\Helper\Placeholder\Container\Exception.php	/^class Zend_View_Helper_Placeholder_Container_Exception extends Zend_View_Exception$/;"	c
container	library\Zend\View\Helper\Placeholder\Container\Standalone.php	/^        $container = $this->getContainer();$/;"	v
e	library\Zend\View\Helper\Placeholder\Container\Standalone.php	/^        $e = new Zend_View_Exception('Method "' . $method . '" does not exist');$/;"	v
enc	library\Zend\View\Helper\Placeholder\Container\Standalone.php	/^            $enc = $this->view->getEncoding();$/;"	v
enc	library\Zend\View\Helper\Placeholder\Container\Standalone.php	/^        $enc = 'UTF-8';$/;"	v
return	library\Zend\View\Helper\Placeholder\Container\Standalone.php	/^            $return = call_user_func_array(array($container, $method), $args);$/;"	v
Zend_View_Helper_Placeholder_Registry	library\Zend\View\Helper\Placeholder\Registry.php	/^class Zend_View_Helper_Placeholder_Registry$/;"	c
container	library\Zend\View\Helper\Placeholder\Registry.php	/^        $container = $this->createContainer($key);$/;"	v
e	library\Zend\View\Helper\Placeholder\Registry.php	/^            $e = new Zend_View_Helper_Placeholder_Registry_Exception('Invalid Container class specified');$/;"	v
key	library\Zend\View\Helper\Placeholder\Registry.php	/^        $key = (string) $key;$/;"	v
reflection	library\Zend\View\Helper\Placeholder\Registry.php	/^        $reflection = new ReflectionClass($name);$/;"	v
registry	library\Zend\View\Helper\Placeholder\Registry.php	/^            $registry = Zend_Registry::get(self::REGISTRY_KEY);$/;"	v
registry	library\Zend\View\Helper\Placeholder\Registry.php	/^            $registry = new self();$/;"	v
return	library\Zend\View\Helper\Placeholder\Registry.php	/^        $return =  array_key_exists($key, $this->_items);$/;"	v
Zend_View_Helper_Placeholder_Registry_Exception	library\Zend\View\Helper\Placeholder\Registry\Exception.php	/^class Zend_View_Helper_Placeholder_Registry_Exception extends Zend_View_Exception$/;"	c
Zend_View_Helper_RenderToPlaceholder	library\Zend\View\Helper\RenderToPlaceholder.php	/^class Zend_View_Helper_RenderToPlaceholder extends Zend_View_Helper_Abstract$/;"	c
Zend_View_Helper_ServerUrl	library\Zend\View\Helper\ServerUrl.php	/^class Zend_View_Helper_ServerUrl$/;"	c
name	library\Zend\View\Helper\ServerUrl.php	/^            $name = $_SERVER['SERVER_NAME'];$/;"	v
path	library\Zend\View\Helper\ServerUrl.php	/^            $path = $_SERVER['REQUEST_URI'];$/;"	v
path	library\Zend\View\Helper\ServerUrl.php	/^            $path = $requestUri;$/;"	v
path	library\Zend\View\Helper\ServerUrl.php	/^            $path = '';$/;"	v
port	library\Zend\View\Helper\ServerUrl.php	/^            $port = $_SERVER['SERVER_PORT'];$/;"	v
scheme	library\Zend\View\Helper\ServerUrl.php	/^                $scheme = 'https';$/;"	v
scheme	library\Zend\View\Helper\ServerUrl.php	/^            $scheme = 'http';$/;"	v
Zend_View_Helper_TinySrc	library\Zend\View\Helper\TinySrc.php	/^class Zend_View_Helper_TinySrc extends Zend_View_Helper_HtmlElement$/;"	c
defaultOptions	library\Zend\View\Helper\TinySrc.php	/^        $defaultOptions = $this->_defaultOptions;$/;"	v
dimensions	library\Zend\View\Helper\TinySrc.php	/^        $dimensions = '\/' . $options['width'];$/;"	v
format	library\Zend\View\Helper\TinySrc.php	/^        $format = strtolower($format);$/;"	v
options	library\Zend\View\Helper\TinySrc.php	/^        $options = array_merge($defaultOptions, $options);$/;"	v
src	library\Zend\View\Helper\TinySrc.php	/^        $src = self::TINYSRC_BASE$/;"	v
tag	library\Zend\View\Helper\TinySrc.php	/^        $tag = '<img' . $this->_htmlAttribs($options) . $this->getClosingBracket();$/;"	v
url	library\Zend\View\Helper\TinySrc.php	/^        $url = '\/' . $this->_mergeBaseUrl($options) . ltrim($image, '\/');$/;"	v
Zend_View_Helper_Translate	library\Zend\View\Helper\Translate.php	/^class Zend_View_Helper_Translate extends Zend_View_Helper_Abstract$/;"	c
count	library\Zend\View\Helper\Translate.php	/^        $count  = count($options);$/;"	v
e	library\Zend\View\Helper\Translate.php	/^            $e = new Zend_View_Exception('You must set an instance of Zend_Translate or Zend_Translate_Adapter');$/;"	v
locale	library\Zend\View\Helper\Translate.php	/^                $locale = array_pop($options);$/;"	v
locale	library\Zend\View\Helper\Translate.php	/^        $locale = null;$/;"	v
messageid	library\Zend\View\Helper\Translate.php	/^            $messageid = $translate->translate($messageid, $locale);$/;"	v
options	library\Zend\View\Helper\Translate.php	/^            $options = $options[0];$/;"	v
options	library\Zend\View\Helper\Translate.php	/^        $options   = func_get_args();$/;"	v
translate	library\Zend\View\Helper\Translate.php	/^        $translate = $this->getTranslator();$/;"	v
Zend_View_Helper_Url	library\Zend\View\Helper\Url.php	/^class Zend_View_Helper_Url extends Zend_View_Helper_Abstract$/;"	c
router	library\Zend\View\Helper\Url.php	/^        $router = Zend_Controller_Front::getInstance()->getRouter();$/;"	v
Zend_View_Helper_UserAgent	library\Zend\View\Helper\UserAgent.php	/^class Zend_View_Helper_UserAgent extends Zend_View_Helper_Abstract$/;"	c
Zend_View_Stream	library\Zend\View\Stream.php	/^class Zend_View_Stream$/;"	c
path	library\Zend\View\Stream.php	/^        $path        = str_replace('zend.view:\/\/', '', $path);$/;"	v
ret	library\Zend\View\Stream.php	/^        $ret = substr($this->_data, $this->_pos, $count);$/;"	v
Zend_Wildfire_Channel_HttpHeaders	library\Zend\Wildfire\Channel\HttpHeaders.php	/^class Zend_Wildfire_Channel_HttpHeaders extends Zend_Controller_Plugin_Abstract implements Zend_Wildfire_Channel_Interface$/;"	c
controller	library\Zend\Wildfire\Channel\HttpHeaders.php	/^            $controller = Zend_Controller_Front::getInstance();$/;"	v
controller	library\Zend\Wildfire\Channel\HttpHeaders.php	/^        $controller = Zend_Controller_Front::getInstance();$/;"	v
payload	library\Zend\Wildfire\Channel\HttpHeaders.php	/^            $payload = $protocol->getPayload($this);$/;"	v
previous	library\Zend\Wildfire\Channel\HttpHeaders.php	/^        $previous = self::$_controllerPluginStackIndex;$/;"	v
response	library\Zend\Wildfire\Channel\HttpHeaders.php	/^            $response = Zend_Controller_Front::getInstance()->getResponse();$/;"	v
Zend_Wildfire_Exception	library\Zend\Wildfire\Exception.php	/^class Zend_Wildfire_Exception extends Zend_Exception$/;"	c
Zend_Wildfire_Plugin_FirePhp	library\Zend\Wildfire\Plugin\FirePhp.php	/^class Zend_Wildfire_Plugin_FirePhp implements Zend_Wildfire_Plugin_Interface$/;"	c
eTrace	library\Zend\Wildfire\Plugin\FirePhp.php	/^            $eTrace = $var->getTrace();$/;"	v
eTrace	library\Zend\Wildfire\Plugin\FirePhp.php	/^            $eTrace = array_splice($eTrace, 0, $options['maxTraceDepth']);$/;"	v
firephp	library\Zend\Wildfire\Plugin\FirePhp.php	/^        $firephp = self::getInstance();$/;"	v
label	library\Zend\Wildfire\Plugin\FirePhp.php	/^                $label = $var;$/;"	v
label	library\Zend\Wildfire\Plugin\FirePhp.php	/^            $label = $var->getLabel();$/;"	v
members	library\Zend\Wildfire\Plugin\FirePhp.php	/^            $members = (array)$object;$/;"	v
meta	library\Zend\Wildfire\Plugin\FirePhp.php	/^        $meta = array();$/;"	v
name	library\Zend\Wildfire\Plugin\FirePhp.php	/^                    $name = $parts[2];$/;"	v
name	library\Zend\Wildfire\Plugin\FirePhp.php	/^                    $name = 'private:'.$name;$/;"	v
name	library\Zend\Wildfire\Plugin\FirePhp.php	/^                    $name = 'protected:'.$name;$/;"	v
name	library\Zend\Wildfire\Plugin\FirePhp.php	/^                    $name = 'public:'.$name;$/;"	v
name	library\Zend\Wildfire\Plugin\FirePhp.php	/^                    $name = 'static:'.$name;$/;"	v
name	library\Zend\Wildfire\Plugin\FirePhp.php	/^                    $name = 'undeclared:'.$name;$/;"	v
name	library\Zend\Wildfire\Plugin\FirePhp.php	/^                $name = $raw_name = $just_name;$/;"	v
options	library\Zend\Wildfire\Plugin\FirePhp.php	/^            $options = $var->getOptions();$/;"	v
options	library\Zend\Wildfire\Plugin\FirePhp.php	/^        $options = array_merge($firephp->getOptions(), $options);$/;"	v
parts	library\Zend\Wildfire\Plugin\FirePhp.php	/^                    $parts = explode("\\0", $name);$/;"	v
previous	library\Zend\Wildfire\Plugin\FirePhp.php	/^        $previous = $this->_enabled;$/;"	v
previous	library\Zend\Wildfire\Plugin\FirePhp.php	/^      $previous = $this->_options[$key];$/;"	v
properties	library\Zend\Wildfire\Plugin\FirePhp.php	/^            $properties = array();$/;"	v
raw_name	library\Zend\Wildfire\Plugin\FirePhp.php	/^                    $raw_name = "\\0".$class."\\0".$raw_name;$/;"	v
raw_name	library\Zend\Wildfire\Plugin\FirePhp.php	/^                    $raw_name = "\\0".'*'."\\0".$raw_name;$/;"	v
reflectionClass	library\Zend\Wildfire\Plugin\FirePhp.php	/^            $reflectionClass = new ReflectionClass($class);$/;"	v
return	library\Zend\Wildfire\Plugin\FirePhp.php	/^        $return = array();$/;"	v
skipFinalEncode	library\Zend\Wildfire\Plugin\FirePhp.php	/^            $skipFinalEncode = true;$/;"	v
skipFinalEncode	library\Zend\Wildfire\Plugin\FirePhp.php	/^          $skipFinalEncode = true;$/;"	v
skipFinalEncode	library\Zend\Wildfire\Plugin\FirePhp.php	/^        $skipFinalEncode = false;$/;"	v
style	library\Zend\Wildfire\Plugin\FirePhp.php	/^            $style = $var->getStyle();$/;"	v
trace	library\Zend\Wildfire\Plugin\FirePhp.php	/^                    $trace = $firephp->_getStackTrace(array_merge($options,$/;"	v
trace	library\Zend\Wildfire\Plugin\FirePhp.php	/^                $trace = $firephp->_getStackTrace(array_merge($options,$/;"	v
trace	library\Zend\Wildfire\Plugin\FirePhp.php	/^                $trace = array_splice($trace, 2);$/;"	v
trace	library\Zend\Wildfire\Plugin\FirePhp.php	/^        $trace = array_splice($trace, $options['traceOffset']);$/;"	v
trace	library\Zend\Wildfire\Plugin\FirePhp.php	/^        $trace = debug_backtrace();$/;"	v
trace	library\Zend\Wildfire\Plugin\FirePhp.php	/^        $trace = null;$/;"	v
value	library\Zend\Wildfire\Plugin\FirePhp.php	/^                  $value = $this->_encodeObject($data['data']);$/;"	v
value	library\Zend\Wildfire\Plugin\FirePhp.php	/^                $value = $data['data'];$/;"	v
var	library\Zend\Wildfire\Plugin\FirePhp.php	/^                $var = null;$/;"	v
var	library\Zend\Wildfire\Plugin\FirePhp.php	/^            $var = $var->getMessage();$/;"	v
var	library\Zend\Wildfire\Plugin\FirePhp.php	/^            $var = array('Class'=>$trace[0]['class'],$/;"	v
var	library\Zend\Wildfire\Plugin\FirePhp.php	/^            $var = array('Class'=>get_class($var),$/;"	v
var	library\Zend\Wildfire\Plugin\FirePhp.php	/^          $var = $firephp->_encodeTable($var);$/;"	v
Zend_Wildfire_Plugin_FirePhp_Message	library\Zend\Wildfire\Plugin\FirePhp\Message.php	/^class Zend_Wildfire_Plugin_FirePhp_Message$/;"	c
__construct	library\Zend\Wildfire\Plugin\FirePhp\Message.php	/^    function __construct($style, $message)$/;"	f
previous	library\Zend\Wildfire\Plugin\FirePhp\Message.php	/^        $previous = $this->_buffered;$/;"	v
previous	library\Zend\Wildfire\Plugin\FirePhp\Message.php	/^        $previous = $this->_destroy;$/;"	v
previous	library\Zend\Wildfire\Plugin\FirePhp\Message.php	/^      $previous = $this->_options[$key];$/;"	v
Zend_Wildfire_Plugin_FirePhp_TableMessage	library\Zend\Wildfire\Plugin\FirePhp\TableMessage.php	/^class Zend_Wildfire_Plugin_FirePhp_TableMessage extends Zend_Wildfire_Plugin_FirePhp_Message$/;"	c
__construct	library\Zend\Wildfire\Plugin\FirePhp\TableMessage.php	/^    function __construct($label)$/;"	f
count	library\Zend\Wildfire\Plugin\FirePhp\TableMessage.php	/^        $count = $this->getRowCount();$/;"	v
table	library\Zend\Wildfire\Plugin\FirePhp\TableMessage.php	/^        $table = $this->_rows;$/;"	v
Zend_Wildfire_Protocol_JsonStream	library\Zend\Wildfire\Protocol\JsonStream.php	/^class Zend_Wildfire_Protocol_JsonStream$/;"	c
message_index	library\Zend\Wildfire\Protocol\JsonStream.php	/^        $message_index = 1;$/;"	v
msg	library\Zend\Wildfire\Protocol\JsonStream.php	/^                                $msg = (($i==0)?strlen($message):'')$/;"	v
msg	library\Zend\Wildfire\Protocol\JsonStream.php	/^                                $msg = strlen($part) . '|' . $part . '|';$/;"	v
msg	library\Zend\Wildfire\Protocol\JsonStream.php	/^                            $msg = '';$/;"	v
part	library\Zend\Wildfire\Protocol\JsonStream.php	/^                        $part = $parts[$i];$/;"	v
parts	library\Zend\Wildfire\Protocol\JsonStream.php	/^                    $parts = explode("\\n",chunk_split($message, 5000, "\\n"));$/;"	v
payload	library\Zend\Wildfire\Protocol\JsonStream.php	/^        $payload = array();$/;"	v
plugin_index	library\Zend\Wildfire\Protocol\JsonStream.php	/^        $plugin_index = 1;$/;"	v
present	library\Zend\Wildfire\Protocol\JsonStream.php	/^            $present = true;$/;"	v
present	library\Zend\Wildfire\Protocol\JsonStream.php	/^        $present = false;$/;"	v
protocol_index	library\Zend\Wildfire\Protocol\JsonStream.php	/^        $protocol_index = 1;$/;"	v
structure_index	library\Zend\Wildfire\Protocol\JsonStream.php	/^        $structure_index = 1;$/;"	v
uri	library\Zend\Wildfire\Protocol\JsonStream.php	/^        $uri = $plugin->getUri();$/;"	v
Zend_XmlRpc_Client	library\Zend\XmlRpc\Client.php	/^class Zend_XmlRpc_Client$/;"	c
fault	library\Zend\XmlRpc\Client.php	/^            $fault = $this->_lastResponse->getFault();$/;"	v
http	library\Zend\XmlRpc\Client.php	/^        $http = $this->getHttpClient();$/;"	v
httpResponse	library\Zend\XmlRpc\Client.php	/^        $httpResponse = $http->request(Zend_Http_Client::POST);$/;"	v
params	library\Zend\XmlRpc\Client.php	/^                    $params = array($params);$/;"	v
proxy	library\Zend\XmlRpc\Client.php	/^            $proxy = new Zend_XmlRpc_Client_ServerProxy($this, $namespace);$/;"	v
request	library\Zend\XmlRpc\Client.php	/^        $request = $this->_createRequest($method, $params);$/;"	v
response	library\Zend\XmlRpc\Client.php	/^            $response = new Zend_XmlRpc_Response();$/;"	v
signatures	library\Zend\XmlRpc\Client.php	/^                $signatures = $this->getIntrospector()->getMethodSignature($method);$/;"	v
success	library\Zend\XmlRpc\Client.php	/^                $success = false;$/;"	v
success	library\Zend\XmlRpc\Client.php	/^            $success = true;$/;"	v
type	library\Zend\XmlRpc\Client.php	/^                        $type = $signatures[0]['parameters'][$key];$/;"	v
type	library\Zend\XmlRpc\Client.php	/^                        $type = Zend_XmlRpc_Value::AUTO_DETECT_TYPE;$/;"	v
type	library\Zend\XmlRpc\Client.php	/^                        $type = Zend_XmlRpc_Value::getXmlRpcTypeByValue($param);$/;"	v
type	library\Zend\XmlRpc\Client.php	/^                        $type = null;$/;"	v
validTypes	library\Zend\XmlRpc\Client.php	/^                $validTypes = array($/;"	v
xml	library\Zend\XmlRpc\Client.php	/^        $xml = $this->_lastRequest->__toString();$/;"	v
Zend_XmlRpc_Client_Exception	library\Zend\XmlRpc\Client\Exception.php	/^class Zend_XmlRpc_Client_Exception extends Zend_XmlRpc_Exception$/;"	c
Zend_XmlRpc_Client_FaultException	library\Zend\XmlRpc\Client\FaultException.php	/^class Zend_XmlRpc_Client_FaultException extends Zend_XmlRpc_Client_Exception$/;"	c
Zend_XmlRpc_Client_HttpException	library\Zend\XmlRpc\Client\HttpException.php	/^class Zend_XmlRpc_Client_HttpException extends Zend_XmlRpc_Client_Exception$/;"	c
Zend_XmlRpc_Client_IntrospectException	library\Zend\XmlRpc\Client\IntrospectException.php	/^class Zend_XmlRpc_Client_IntrospectException extends Zend_XmlRpc_Client_Exception$/;"	c
Zend_XmlRpc_Client_ServerIntrospection	library\Zend\XmlRpc\Client\ServerIntrospection.php	/^class Zend_XmlRpc_Client_ServerIntrospection$/;"	c
error	library\Zend\XmlRpc\Client\ServerIntrospection.php	/^            $error = "Multicall return is malformed.  Expected array, got $type";$/;"	v
error	library\Zend\XmlRpc\Client\ServerIntrospection.php	/^            $error = 'Bad number of signatures received from multicall';$/;"	v
error	library\Zend\XmlRpc\Client\ServerIntrospection.php	/^            $error = 'Invalid signature for method "' . $method . '"';$/;"	v
methods	library\Zend\XmlRpc\Client\ServerIntrospection.php	/^            $methods = $this->listMethods();$/;"	v
methods	library\Zend\XmlRpc\Client\ServerIntrospection.php	/^        $methods = $this->listMethods();$/;"	v
multicallParams	library\Zend\XmlRpc\Client\ServerIntrospection.php	/^        $multicallParams = array();$/;"	v
serverSignatures	library\Zend\XmlRpc\Client\ServerIntrospection.php	/^        $serverSignatures = $this->_system->multicall($multicallParams);$/;"	v
signature	library\Zend\XmlRpc\Client\ServerIntrospection.php	/^        $signature = $this->_system->methodSignature($method);$/;"	v
signatures	library\Zend\XmlRpc\Client\ServerIntrospection.php	/^            $signatures = $this->getSignatureForEachMethodByLooping($methods);$/;"	v
signatures	library\Zend\XmlRpc\Client\ServerIntrospection.php	/^            $signatures = $this->getSignatureForEachMethodByMulticall($methods);$/;"	v
signatures	library\Zend\XmlRpc\Client\ServerIntrospection.php	/^        $signatures = array();$/;"	v
type	library\Zend\XmlRpc\Client\ServerIntrospection.php	/^            $type = gettype($serverSignatures);$/;"	v
Zend_XmlRpc_Client_ServerProxy	library\Zend\XmlRpc\Client\ServerProxy.php	/^class Zend_XmlRpc_Client_ServerProxy$/;"	c
method	library\Zend\XmlRpc\Client\ServerProxy.php	/^        $method = ltrim("$this->_namespace.$method", '.');$/;"	v
namespace	library\Zend\XmlRpc\Client\ServerProxy.php	/^        $namespace = ltrim("$this->_namespace.$namespace", '.');$/;"	v
Zend_XmlRpc_Exception	library\Zend\XmlRpc\Exception.php	/^class Zend_XmlRpc_Exception extends Zend_Exception$/;"	c
Zend_XmlRpc_Fault	library\Zend\XmlRpc\Fault.php	/^class Zend_XmlRpc_Fault$/;"	c
code	library\Zend\XmlRpc\Fault.php	/^            $code = $struct['faultCode'];$/;"	v
code	library\Zend\XmlRpc\Fault.php	/^            $code = '404';$/;"	v
code	library\Zend\XmlRpc\Fault.php	/^        $code = $this->getCode();$/;"	v
fault	library\Zend\XmlRpc\Fault.php	/^        $fault = new self();$/;"	v
faultStruct	library\Zend\XmlRpc\Fault.php	/^        $faultStruct = array($/;"	v
generator	library\Zend\XmlRpc\Fault.php	/^        $generator = Zend_XmlRpc_Value::getGenerator();$/;"	v
isFault	library\Zend\XmlRpc\Fault.php	/^            $isFault = $fault->loadXml($xml);$/;"	v
isFault	library\Zend\XmlRpc\Fault.php	/^            $isFault = false;$/;"	v
message	library\Zend\XmlRpc\Fault.php	/^                $message = $this->_internal[$code];$/;"	v
message	library\Zend\XmlRpc\Fault.php	/^                $message = 'Unknown Error';$/;"	v
message	library\Zend\XmlRpc\Fault.php	/^            $message = $struct['faultString'];$/;"	v
message	library\Zend\XmlRpc\Fault.php	/^            $message = $this->_internal[$code];$/;"	v
message	library\Zend\XmlRpc\Fault.php	/^            $message = 'Unknown error';$/;"	v
struct	library\Zend\XmlRpc\Fault.php	/^        $struct    = $struct->getValue();$/;"	v
struct	library\Zend\XmlRpc\Fault.php	/^        $struct    = Zend_XmlRpc_Value::getXmlRpcValue($structXml, Zend_XmlRpc_Value::XML_STRING);$/;"	v
structXml	library\Zend\XmlRpc\Fault.php	/^        $structXml = $xml->fault->value->asXML();$/;"	v
value	library\Zend\XmlRpc\Fault.php	/^        $value = Zend_XmlRpc_Value::getXmlRpcValue($faultStruct);$/;"	v
xml	library\Zend\XmlRpc\Fault.php	/^            $xml = @new SimpleXMLElement($fault);$/;"	v
Zend_XmlRpc_Generator_DomDocument	library\Zend\XmlRpc\Generator\DomDocument.php	/^class Zend_XmlRpc_Generator_DomDocument extends Zend_XmlRpc_Generator_GeneratorAbstract$/;"	c
newElement	library\Zend\XmlRpc\Generator\DomDocument.php	/^        $newElement = $this->_dom->createElement($name);$/;"	v
xml	library\Zend\XmlRpc\Generator\GeneratorAbstract.php	/^        $xml = $this->saveXml();$/;"	v
Zend_XmlRpc_Generator_XmlWriter	library\Zend\XmlRpc\Generator\XmlWriter.php	/^class Zend_XmlRpc_Generator_XmlWriter extends Zend_XmlRpc_Generator_GeneratorAbstract$/;"	c
Zend_XmlRpc_Request	library\Zend\XmlRpc\Request.php	/^class Zend_XmlRpc_Request$/;"	c
argc	library\Zend\XmlRpc\Request.php	/^        $argc = func_num_args();$/;"	v
args	library\Zend\XmlRpc\Request.php	/^        $args   = $this->_getXmlRpcParams();$/;"	v
argv	library\Zend\XmlRpc\Request.php	/^            $argv  = array();$/;"	v
argv	library\Zend\XmlRpc\Request.php	/^        $argv = func_get_args();$/;"	v
generator	library\Zend\XmlRpc\Request.php	/^        $generator = Zend_XmlRpc_Value::getGenerator();$/;"	v
method	library\Zend\XmlRpc\Request.php	/^        $method = $this->getMethod();$/;"	v
param	library\Zend\XmlRpc\Request.php	/^                    $param   = Zend_XmlRpc_Value::getXmlRpcValue($param->value, Zend_XmlRpc_Value::XML_STRING);$/;"	v
params	library\Zend\XmlRpc\Request.php	/^            $params     = array();$/;"	v
params	library\Zend\XmlRpc\Request.php	/^        $params = array();$/;"	v
type	library\Zend\XmlRpc\Request.php	/^                        $type        = $xmlRpcValue->getType();$/;"	v
type	library\Zend\XmlRpc\Request.php	/^                        $type = $arg->getType();$/;"	v
type	library\Zend\XmlRpc\Request.php	/^                $type        = $xmlRpcValue->getType();$/;"	v
type	library\Zend\XmlRpc\Request.php	/^                $type  = isset($param['type']) ? $param['type'] : Zend_XmlRpc_Value::AUTO_DETECT_TYPE;$/;"	v
type	library\Zend\XmlRpc\Request.php	/^                $type = $arg->getType();$/;"	v
type	library\Zend\XmlRpc\Request.php	/^                $type = $value->getType();$/;"	v
types	library\Zend\XmlRpc\Request.php	/^            $types      = array();$/;"	v
types	library\Zend\XmlRpc\Request.php	/^            $types = array();$/;"	v
value	library\Zend\XmlRpc\Request.php	/^                    $value = Zend_XmlRpc_Value::getXmlRpcValue($value, $type);$/;"	v
value	library\Zend\XmlRpc\Request.php	/^                $value = $param['value'];$/;"	v
wellFormed	library\Zend\XmlRpc\Request.php	/^                    $wellFormed = false;$/;"	v
wellFormed	library\Zend\XmlRpc\Request.php	/^            $wellFormed = true;$/;"	v
xml	library\Zend\XmlRpc\Request.php	/^            $xml = new SimpleXMLElement($request);$/;"	v
xmlRpcParams	library\Zend\XmlRpc\Request.php	/^                $xmlRpcParams  = array();$/;"	v
xmlRpcParams	library\Zend\XmlRpc\Request.php	/^        $xmlRpcParams  = array();$/;"	v
xmlRpcValue	library\Zend\XmlRpc\Request.php	/^                        $xmlRpcValue = Zend_XmlRpc_Value::getXmlRpcValue($arg);$/;"	v
xmlRpcValue	library\Zend\XmlRpc\Request.php	/^                    $xmlRpcValue = Zend_XmlRpc_Value::getXmlRpcValue($arg['value']);$/;"	v
xmlRpcValue	library\Zend\XmlRpc\Request.php	/^                $xmlRpcValue = Zend_XmlRpc_Value::getXmlRpcValue($arg);$/;"	v
xmlRpcValue	library\Zend\XmlRpc\Request.php	/^                $xmlRpcValue = Zend_XmlRpc_Value::getXmlRpcValue($value);$/;"	v
Zend_XmlRpc_Request_Http	library\Zend\XmlRpc\Request\Http.php	/^class Zend_XmlRpc_Request_Http extends Zend_XmlRpc_Request$/;"	c
header	library\Zend\XmlRpc\Request\Http.php	/^                    $header = str_replace(' ', '-', ucwords(strtolower(str_replace('_', ' ', substr($key, 5)))));$/;"	v
request	library\Zend\XmlRpc\Request\Http.php	/^        $request = '';$/;"	v
xml	library\Zend\XmlRpc\Request\Http.php	/^        $xml = @file_get_contents('php:\/\/input');$/;"	v
Zend_XmlRpc_Request_Stdin	library\Zend\XmlRpc\Request\Stdin.php	/^class Zend_XmlRpc_Request_Stdin extends Zend_XmlRpc_Request$/;"	c
fh	library\Zend\XmlRpc\Request\Stdin.php	/^        $fh = fopen('php:\/\/stdin', 'r');$/;"	v
xml	library\Zend\XmlRpc\Request\Stdin.php	/^        $xml = '';$/;"	v
Zend_XmlRpc_Response	library\Zend\XmlRpc\Response.php	/^class Zend_XmlRpc_Response$/;"	c
generator	library\Zend\XmlRpc\Response.php	/^        $generator = Zend_XmlRpc_Value::getGenerator();$/;"	v
useInternalXmlErrors	library\Zend\XmlRpc\Response.php	/^            $useInternalXmlErrors = libxml_use_internal_errors(true);$/;"	v
value	library\Zend\XmlRpc\Response.php	/^            $value = Zend_XmlRpc_Value::getXmlRpcValue($valueXml, Zend_XmlRpc_Value::XML_STRING);$/;"	v
value	library\Zend\XmlRpc\Response.php	/^        $value = $this->_getXmlRpcReturn();$/;"	v
valueXml	library\Zend\XmlRpc\Response.php	/^            $valueXml = $xml->params->param->value->asXML();$/;"	v
xml	library\Zend\XmlRpc\Response.php	/^            $xml = new SimpleXMLElement($response);$/;"	v
Zend_XmlRpc_Response_Http	library\Zend\XmlRpc\Response\Http.php	/^class Zend_XmlRpc_Response_Http extends Zend_XmlRpc_Response$/;"	c
Zend_XmlRpc_Server	library\Zend\XmlRpc\Server.php	/^class Zend_XmlRpc_Server extends Zend_Server_Abstract$/;"	c
argv	library\Zend\XmlRpc\Server.php	/^            $argv = array_slice($argv, 2);$/;"	v
argv	library\Zend\XmlRpc\Server.php	/^            $argv = func_get_args();$/;"	v
argv	library\Zend\XmlRpc\Server.php	/^        $argv     = $info->getInvokeArguments();$/;"	v
argv	library\Zend\XmlRpc\Server.php	/^        $argv = null;$/;"	v
definition	library\Zend\XmlRpc\Server.php	/^            $definition = $definition->getMethods();$/;"	v
dispatchable	library\Zend\XmlRpc\Server.php	/^        $dispatchable = Zend_Server_Reflection::reflectClass($class, $argv, $namespace);$/;"	v
fault	library\Zend\XmlRpc\Server.php	/^                $fault = 'Unknown Error';$/;"	v
fault	library\Zend\XmlRpc\Server.php	/^            $fault = (string) $fault;$/;"	v
fault	library\Zend\XmlRpc\Server.php	/^            $fault = new Zend_XmlRpc_Server_Exception($fault, $code);$/;"	v
function	library\Zend\XmlRpc\Server.php	/^        $function = (array) $function;$/;"	v
info	library\Zend\XmlRpc\Server.php	/^        $info     = $this->_table->getMethod($method);$/;"	v
matched	library\Zend\XmlRpc\Server.php	/^                $matched = true;$/;"	v
matched	library\Zend\XmlRpc\Server.php	/^        $matched    = false;$/;"	v
method	library\Zend\XmlRpc\Server.php	/^        $method = $request->getMethod();$/;"	v
params	library\Zend\XmlRpc\Server.php	/^            $params = array_merge($params, $argv);$/;"	v
params	library\Zend\XmlRpc\Server.php	/^        $params   = $request->getParams();$/;"	v
paramsLen	library\Zend\XmlRpc\Server.php	/^        $paramsLen  = count($params);$/;"	v
reflection	library\Zend\XmlRpc\Server.php	/^            $reflection = Zend_Server_Reflection::reflectFunction($func, $argv, $namespace);$/;"	v
request	library\Zend\XmlRpc\Server.php	/^            $request = new $request();$/;"	v
request	library\Zend\XmlRpc\Server.php	/^            $request = new Zend_XmlRpc_Request_Http();$/;"	v
response	library\Zend\XmlRpc\Server.php	/^                $response = $this->_handle($request);$/;"	v
response	library\Zend\XmlRpc\Server.php	/^                $response = $this->fault($e);$/;"	v
response	library\Zend\XmlRpc\Server.php	/^            $response = $request->getFault();$/;"	v
responseClass	library\Zend\XmlRpc\Server.php	/^        $responseClass = $this->getResponseClass();$/;"	v
return	library\Zend\XmlRpc\Server.php	/^        $return        = $this->_dispatch($info, $params);$/;"	v
sigCalled	library\Zend\XmlRpc\Server.php	/^        $sigCalled  = $request->getTypes();$/;"	v
sigLength	library\Zend\XmlRpc\Server.php	/^        $sigLength  = count($sigCalled);$/;"	v
sigParams	library\Zend\XmlRpc\Server.php	/^            $sigParams = $signature->getParameters();$/;"	v
signatures	library\Zend\XmlRpc\Server.php	/^        $signatures = $info->getPrototypes();$/;"	v
system	library\Zend\XmlRpc\Server.php	/^        $system = $this->getSystem();$/;"	v
system	library\Zend\XmlRpc\Server.php	/^        $system = new Zend_XmlRpc_Server_System($this);$/;"	v
type	library\Zend\XmlRpc\Server.php	/^                $type = get_class($definition);$/;"	v
type	library\Zend\XmlRpc\Server.php	/^                $type = gettype($definition);$/;"	v
xmlRpcValue	library\Zend\XmlRpc\Server.php	/^                $xmlRpcValue = Zend_XmlRpc_Value::getXmlRpcValue($params[$i]);$/;"	v
Zend_XmlRpc_Server_Cache	library\Zend\XmlRpc\Server\Cache.php	/^class Zend_XmlRpc_Server_Cache extends Zend_Server_Cache$/;"	c
Zend_XmlRpc_Server_Exception	library\Zend\XmlRpc\Server\Exception.php	/^class Zend_XmlRpc_Server_Exception extends Zend_XmlRpc_Exception$/;"	c
Zend_XmlRpc_Server_Fault	library\Zend\XmlRpc\Server\Fault.php	/^class Zend_XmlRpc_Server_Fault extends Zend_XmlRpc_Fault$/;"	c
classes	library\Zend\XmlRpc\Server\Fault.php	/^            $classes = (array) $classes;$/;"	v
code	library\Zend\XmlRpc\Server\Fault.php	/^                $code    = $e->getCode();$/;"	v
code	library\Zend\XmlRpc\Server\Fault.php	/^        $code             = 404;$/;"	v
exceptionClass	library\Zend\XmlRpc\Server\Fault.php	/^        $exceptionClass   = get_class($e);$/;"	v
message	library\Zend\XmlRpc\Server\Fault.php	/^                $message = $e->getMessage();$/;"	v
message	library\Zend\XmlRpc\Server\Fault.php	/^        $message          = 'Unknown error';$/;"	v
Zend_XmlRpc_Server_System	library\Zend\XmlRpc\Server\System.php	/^class Zend_XmlRpc_Server_System$/;"	c
fault	library\Zend\XmlRpc\Server\System.php	/^                        $fault = $response;$/;"	v
fault	library\Zend\XmlRpc\Server\System.php	/^                    $fault = $this->_server->fault($e);$/;"	v
fault	library\Zend\XmlRpc\Server\System.php	/^                    $fault = $this->_server->fault('Recursive system.multicall forbidden', 605);$/;"	v
fault	library\Zend\XmlRpc\Server\System.php	/^                $fault = $this->_server->fault('Missing methodName: ' . var_export($methods, 1), 602);$/;"	v
fault	library\Zend\XmlRpc\Server\System.php	/^                $fault = $this->_server->fault('Missing params', 603);$/;"	v
fault	library\Zend\XmlRpc\Server\System.php	/^                $fault = $this->_server->fault('Params must be an array', 604);$/;"	v
fault	library\Zend\XmlRpc\Server\System.php	/^                $fault = $this->_server->fault('system.multicall expects each method to be a struct', 601);$/;"	v
fault	library\Zend\XmlRpc\Server\System.php	/^            $fault = false;$/;"	v
method	library\Zend\XmlRpc\Server\System.php	/^        $method = $table->getMethod($method)->toArray();$/;"	v
request	library\Zend\XmlRpc\Server\System.php	/^                    $request = new Zend_XmlRpc_Request();$/;"	v
response	library\Zend\XmlRpc\Server\System.php	/^                    $response = $this->_server->handle($request);$/;"	v
responses	library\Zend\XmlRpc\Server\System.php	/^        $responses = array();$/;"	v
table	library\Zend\XmlRpc\Server\System.php	/^        $table = $this->_server->getDispatchTable()->getMethods();$/;"	v
table	library\Zend\XmlRpc\Server\System.php	/^        $table = $this->_server->getDispatchTable();$/;"	v
data	library\Zend\XmlRpc\Value.php	/^                        $data = $value;$/;"	v
data	library\Zend\XmlRpc\Value.php	/^                $data = null;$/;"	v
generator	library\Zend\XmlRpc\Value.php	/^        $generator = self::getGenerator();$/;"	v
namespaceXml	library\Zend\XmlRpc\Value.php	/^                $namespaceXml = $xml->children($namespaceUri);$/;"	v
namespaces	library\Zend\XmlRpc\Value.php	/^            $namespaces = array('ex' => 'http:\/\/ws.apache.org\/xmlrpc\/namespaces\/extensions');$/;"	v
newGenerator	library\Zend\XmlRpc\Value.php	/^        $newGenerator = new $generator($encoding);$/;"	v
type	library\Zend\XmlRpc\Value.php	/^                    $type = $namespaceName . ':' . $type;$/;"	v
type	library\Zend\XmlRpc\Value.php	/^            $type = self::XMLRPC_TYPE_STRING;$/;"	v
values	library\Zend\XmlRpc\Value.php	/^                $values = array();$/;"	v
xml	library\Zend\XmlRpc\Value.php	/^            $xml = new SimpleXMLElement($xml);$/;"	v
xmlrpcValue	library\Zend\XmlRpc\Value.php	/^                $xmlrpcValue = new Zend_XmlRpc_Value_Array($values);$/;"	v
xmlrpcValue	library\Zend\XmlRpc\Value.php	/^                $xmlrpcValue = new Zend_XmlRpc_Value_Base64($value, true);$/;"	v
xmlrpcValue	library\Zend\XmlRpc\Value.php	/^                $xmlrpcValue = new Zend_XmlRpc_Value_BigInteger($value);$/;"	v
xmlrpcValue	library\Zend\XmlRpc\Value.php	/^                $xmlrpcValue = new Zend_XmlRpc_Value_Boolean($value);$/;"	v
xmlrpcValue	library\Zend\XmlRpc\Value.php	/^                $xmlrpcValue = new Zend_XmlRpc_Value_DateTime($value);$/;"	v
xmlrpcValue	library\Zend\XmlRpc\Value.php	/^                $xmlrpcValue = new Zend_XmlRpc_Value_Double($value);$/;"	v
xmlrpcValue	library\Zend\XmlRpc\Value.php	/^                $xmlrpcValue = new Zend_XmlRpc_Value_Integer($value);$/;"	v
xmlrpcValue	library\Zend\XmlRpc\Value.php	/^                $xmlrpcValue = new Zend_XmlRpc_Value_Nil();$/;"	v
xmlrpcValue	library\Zend\XmlRpc\Value.php	/^                $xmlrpcValue = new Zend_XmlRpc_Value_String($value);$/;"	v
xmlrpcValue	library\Zend\XmlRpc\Value.php	/^                $xmlrpcValue = new Zend_XmlRpc_Value_Struct($values);$/;"	v
Zend_XmlRpc_Value_Array	library\Zend\XmlRpc\Value\Array.php	/^class Zend_XmlRpc_Value_Array extends Zend_XmlRpc_Value_Collection$/;"	c
generator	library\Zend\XmlRpc\Value\Array.php	/^        $generator = $this->getGenerator();$/;"	v
Zend_XmlRpc_Value_Base64	library\Zend\XmlRpc\Value\Base64.php	/^class Zend_XmlRpc_Value_Base64 extends Zend_XmlRpc_Value_Scalar$/;"	c
value	library\Zend\XmlRpc\Value\Base64.php	/^            $value = base64_encode($value);     \/\/ We encode it in base64$/;"	v
value	library\Zend\XmlRpc\Value\Base64.php	/^        $value = (string)$value;    \/\/ Make sure this value is string$/;"	v
Zend_XmlRpc_Value_BigInteger	library\Zend\XmlRpc\Value\BigInteger.php	/^class Zend_XmlRpc_Value_BigInteger extends Zend_XmlRpc_Value_Integer$/;"	c
integer	library\Zend\XmlRpc\Value\BigInteger.php	/^        $integer = new Zend_Crypt_Math_BigInteger;$/;"	v
Zend_XmlRpc_Value_Boolean	library\Zend\XmlRpc\Value\Boolean.php	/^class Zend_XmlRpc_Value_Boolean extends Zend_XmlRpc_Value_Scalar$/;"	c
value	library\Zend\XmlRpc\Value\Collection.php	/^                $value = self::getXmlRpcValue($value, self::AUTO_DETECT_TYPE);$/;"	v
values	library\Zend\XmlRpc\Value\Collection.php	/^        $values = (array)$this->_value;$/;"	v
values	library\Zend\XmlRpc\Value\Collection.php	/^        $values = (array)$value;   \/\/ Make sure that the value is an array$/;"	v
Zend_XmlRpc_Value_DateTime	library\Zend\XmlRpc\Value\DateTime.php	/^class Zend_XmlRpc_Value_DateTime extends Zend_XmlRpc_Value_Scalar$/;"	c
timestamp	library\Zend\XmlRpc\Value\DateTime.php	/^            $timestamp = new DateTime($value);$/;"	v
Zend_XmlRpc_Value_Double	library\Zend\XmlRpc\Value\Double.php	/^class Zend_XmlRpc_Value_Double extends Zend_XmlRpc_Value_Scalar$/;"	c
formatString	library\Zend\XmlRpc\Value\Double.php	/^        $formatString = '%1.' . $precision . 'F';$/;"	v
precision	library\Zend\XmlRpc\Value\Double.php	/^        $precision = (int)ini_get('precision');$/;"	v
Zend_XmlRpc_Value_Exception	library\Zend\XmlRpc\Value\Exception.php	/^class Zend_XmlRpc_Value_Exception extends Zend_XmlRpc_Exception$/;"	c
Zend_XmlRpc_Value_Integer	library\Zend\XmlRpc\Value\Integer.php	/^class Zend_XmlRpc_Value_Integer extends Zend_XmlRpc_Value_Scalar$/;"	c
Zend_XmlRpc_Value_Nil	library\Zend\XmlRpc\Value\Nil.php	/^class Zend_XmlRpc_Value_Nil extends Zend_XmlRpc_Value_Scalar$/;"	c
generator	library\Zend\XmlRpc\Value\Scalar.php	/^        $generator = $this->getGenerator();$/;"	v
Zend_XmlRpc_Value_String	library\Zend\XmlRpc\Value\String.php	/^class Zend_XmlRpc_Value_String extends Zend_XmlRpc_Value_Scalar$/;"	c
Zend_XmlRpc_Value_Struct	library\Zend\XmlRpc\Value\Struct.php	/^class Zend_XmlRpc_Value_Struct extends Zend_XmlRpc_Value_Collection$/;"	c
generator	library\Zend\XmlRpc\Value\Struct.php	/^        $generator = $this->getGenerator();$/;"	v
application	public\index.php	/^$application = new Zend_Application($/;"	v
change_child_status	public\js\home.js	/^function change_child_status(child){$/;"	f
change_header_list	public\js\home.js	/^function change_header_list(self, child){$/;"	f
change_self_status	public\js\home.js	/^function change_self_status(self){$/;"	f
header_nav_hover	public\js\home.js	/^function header_nav_hover(obj){$/;"	f
header_nav_out	public\js\home.js	/^function header_nav_out(obj){$/;"	f
hide_account_list	public\js\home.js	/^function hide_account_list(obj){$/;"	f
hide_apps_list	public\js\home.js	/^function hide_apps_list(obj){$/;"	f
hide_message_list	public\js\home.js	/^function hide_message_list(obj){$/;"	f
show_account_list	public\js\home.js	/^function show_account_list(obj){$/;"	f
show_apps_list	public\js\home.js	/^function show_apps_list(obj){$/;"	f
show_message_list	public\js\home.js	/^function show_message_list(obj){$/;"	f
IndexControllerTest	tests\application\controllers\IndexControllerTest.php	/^class IndexControllerTest extends Zend_Test_PHPUnit_ControllerTestCase$/;"	c
params	tests\application\controllers\IndexControllerTest.php	/^        $params = array('action' => 'index', 'controller' => 'Index', 'module' => 'default');$/;"	v
url	tests\application\controllers\IndexControllerTest.php	/^        $url = $this->url($urlParams);$/;"	v
urlParams	tests\application\controllers\IndexControllerTest.php	/^        $urlParams = $this->urlizeOptions($params);$/;"	v
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_PROGRAM_VERSION	5.6	//
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
